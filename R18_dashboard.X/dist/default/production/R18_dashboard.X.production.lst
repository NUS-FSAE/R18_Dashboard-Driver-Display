

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Mar 21 12:55:30 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 1.42
    75                           ; Generated 13/04/2017 GMT
    76                           ; 
    77                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F46K80 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK0
   110  006168                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for main@F15405
   114  006168  0000               	dw	0
   115  00616A  0001               	dw	1
   116  00616C  0000               	dw	0
   117  00616E  0000               	dw	0
   118  006170  0000               	dw	0
   119  006172  0000               	dw	0
   120  006174  0000               	dw	0
   121  006176  0000               	dw	0
   122  006178  0000               	dw	0
   123  00617A  0000               	dw	0
   124  00617C  0000               	dw	0
   125  0000                     _BRGCON3	set	3653
   126  0000                     _BRGCON2	set	3652
   127  0000                     _BRGCON1	set	3651
   128  0000                     _RXF5SIDL	set	3829
   129  0000                     _RXF5SIDH	set	3828
   130  0000                     _RXF5EIDL	set	3831
   131  0000                     _RXF5EIDH	set	3830
   132  0000                     _RXF4SIDL	set	3825
   133  0000                     _RXF4SIDH	set	3824
   134  0000                     _RXF4EIDL	set	3827
   135  0000                     _RXF4EIDH	set	3826
   136  0000                     _RXF3SIDL	set	3821
   137  0000                     _RXF3SIDH	set	3820
   138  0000                     _RXF3EIDL	set	3823
   139  0000                     _RXF3EIDH	set	3822
   140  0000                     _RXF2SIDL	set	3817
   141  0000                     _RXF2SIDH	set	3816
   142  0000                     _RXF2EIDL	set	3819
   143  0000                     _RXF2EIDH	set	3818
   144  0000                     _RXF1SIDL	set	3813
   145  0000                     _RXF1SIDH	set	3812
   146  0000                     _RXF1EIDL	set	3815
   147  0000                     _RXF1EIDH	set	3814
   148  0000                     _RXF0SIDL	set	3809
   149  0000                     _RXF0SIDH	set	3808
   150  0000                     _RXF0EIDL	set	3811
   151  0000                     _RXF0EIDH	set	3810
   152  0000                     _RXM1SIDL	set	3837
   153  0000                     _RXM1SIDH	set	3836
   154  0000                     _RXM1EIDL	set	3839
   155  0000                     _RXM1EIDH	set	3838
   156  0000                     _RXM0SIDL	set	3833
   157  0000                     _RXM0SIDH	set	3832
   158  0000                     _RXM0EIDL	set	3835
   159  0000                     _RXM0EIDH	set	3834
   160  0000                     _RXB1D7	set	3901
   161  0000                     _RXB1D6	set	3900
   162  0000                     _RXB1D5	set	3899
   163  0000                     _RXB1D4	set	3898
   164  0000                     _RXB1D3	set	3897
   165  0000                     _RXB1D2	set	3896
   166  0000                     _RXB1D1	set	3895
   167  0000                     _RXB1D0	set	3894
   168  0000                     _RXB1DLC	set	3893
   169  0000                     _RXB1SIDH	set	3889
   170  0000                     _RXB1EIDL	set	3892
   171  0000                     _RXB1EIDH	set	3891
   172  0000                     _RXB1SIDL	set	3890
   173  0000                     _RXB1CONbits	set	3888
   174  0000                     _TXB2D7	set	3853
   175  0000                     _TXB2D6	set	3852
   176  0000                     _TXB2D5	set	3851
   177  0000                     _TXB2D4	set	3850
   178  0000                     _TXB2D3	set	3849
   179  0000                     _TXB2D2	set	3848
   180  0000                     _TXB2D1	set	3847
   181  0000                     _TXB2D0	set	3846
   182  0000                     _TXB2DLC	set	3845
   183  0000                     _TXB2SIDL	set	3842
   184  0000                     _TXB2SIDH	set	3841
   185  0000                     _TXB2EIDL	set	3844
   186  0000                     _TXB2EIDH	set	3843
   187  0000                     _TXB2CONbits	set	3840
   188  0000                     _TXB1D7	set	3869
   189  0000                     _TXB1D6	set	3868
   190  0000                     _TXB1D5	set	3867
   191  0000                     _TXB1D4	set	3866
   192  0000                     _TXB1D3	set	3865
   193  0000                     _TXB1D2	set	3864
   194  0000                     _TXB1D1	set	3863
   195  0000                     _TXB1D0	set	3862
   196  0000                     _TXB1DLC	set	3861
   197  0000                     _TXB1SIDL	set	3858
   198  0000                     _TXB1SIDH	set	3857
   199  0000                     _TXB1EIDL	set	3860
   200  0000                     _TXB1EIDH	set	3859
   201  0000                     _TXB1CONbits	set	3856
   202  0000                     _TXB0D7	set	3885
   203  0000                     _TXB0D6	set	3884
   204  0000                     _TXB0D5	set	3883
   205  0000                     _TXB0D4	set	3882
   206  0000                     _TXB0D3	set	3881
   207  0000                     _TXB0D2	set	3880
   208  0000                     _TXB0D1	set	3879
   209  0000                     _TXB0D0	set	3878
   210  0000                     _TXB0DLC	set	3877
   211  0000                     _TXB0SIDL	set	3874
   212  0000                     _TXB0SIDH	set	3873
   213  0000                     _TXB0EIDL	set	3876
   214  0000                     _TXB0EIDH	set	3875
   215  0000                     _TXB0CONbits	set	3872
   216  0000                     _WPUB	set	3931
   217  0000                     _ANCON1	set	3932
   218  0000                     _ANCON0	set	3933
   219  0000                     _LATBbits	set	3978
   220  0000                     _CIOCONbits	set	3952
   221  0000                     _PORTDbits	set	3971
   222  0000                     _PORTAbits	set	3968
   223  0000                     _LATAbits	set	3977
   224  0000                     _T0CONbits	set	4053
   225  0000                     _TMR0L	set	4054
   226  0000                     _TMR0H	set	4055
   227  0000                     _T0CON	set	4053
   228  0000                     _REFOCON	set	3994
   229  0000                     _OSCTUNE	set	3995
   230  0000                     _OSCCON2	set	4050
   231  0000                     _OSCCON	set	4051
   232  0000                     _INTCONbits	set	4082
   233  0000                     _RCONbits	set	4048
   234  0000                     _COMSTATbits	set	3953
   235  0000                     _RXB0D7	set	3949
   236  0000                     _RXB0D6	set	3948
   237  0000                     _RXB0D5	set	3947
   238  0000                     _RXB0D4	set	3946
   239  0000                     _RXB0D3	set	3945
   240  0000                     _RXB0D2	set	3944
   241  0000                     _RXB0D1	set	3943
   242  0000                     _RXB0D0	set	3942
   243  0000                     _RXB0DLC	set	3941
   244  0000                     _RXB0SIDH	set	3937
   245  0000                     _RXB0EIDL	set	3940
   246  0000                     _RXB0EIDH	set	3939
   247  0000                     _RXB0SIDL	set	3938
   248  0000                     _RXB0CONbits	set	3936
   249  0000                     _PIE5bits	set	3958
   250  0000                     _PIR5bits	set	3959
   251  0000                     _ECANCON	set	3954
   252  0000                     _CANSTAT	set	3950
   253  0000                     _CANCON	set	3951
   254  0000                     _SSPSTATbits	set	4039
   255  0000                     _SSPCON1bits	set	4038
   256  0000                     _SSPADD	set	4040
   257  0000                     _SSPCON1	set	4038
   258  0000                     _SSPSTAT	set	4039
   259  0000                     _TRISD	set	3989
   260  0000                     _TRISC	set	3988
   261  0000                     _TRISB	set	3987
   262  0000                     _TRISA	set	3986
   263  0000                     _TRISE	set	3990
   264  0000                     _LATC	set	3979
   265  0000                     _LATB	set	3978
   266  0000                     _LATA	set	3977
   267  0000                     _LATD	set	3980
   268  0000                     _LATE	set	3981
   269  0000                     _T1GCONbits	set	4010
   270  0000                     _T1CONbits	set	4045
   271  0000                     _PIE1bits	set	3997
   272  0000                     _PIR1bits	set	3998
   273  0000                     _TMR1L	set	4046
   274  0000                     _TMR1H	set	4047
   275  0000                     _T1GCON	set	4010
   276  0000                     _T1CON	set	4045
   277  0000                     _LATCbits	set	3979
   278  0000                     _SSPBUF	set	4041
   279  0000                     _LATDbits	set	3980
   280                           
   281                           	psect	smallconst
   282  000F00                     __psmallconst:
   283                           	opt stack 0
   284  000F00  00                 	db	0
   285  000F01                     STR_2:
   286  000F01  47                 	db	71	;'G'
   287  000F02  61                 	db	97	;'a'
   288  000F03  69                 	db	105	;'i'
   289  000F04  6E                 	db	110	;'n'
   290  000F05  2F                 	db	47
   291  000F06  4C                 	db	76	;'L'
   292  000F07  6F                 	db	111	;'o'
   293  000F08  73                 	db	115	;'s'
   294  000F09  73                 	db	115	;'s'
   295  000F0A  00                 	db	0
   296  000F0B                     STR_6:
   297  000F0B  4F                 	db	79	;'O'
   298  000F0C  69                 	db	105	;'i'
   299  000F0D  6C                 	db	108	;'l'
   300  000F0E  20                 	db	32
   301  000F0F  54                 	db	84	;'T'
   302  000F10  65                 	db	101	;'e'
   303  000F11  6D                 	db	109	;'m'
   304  000F12  70                 	db	112	;'p'
   305  000F13  00                 	db	0
   306  000F14                     STR_3:
   307  000F14  43                 	db	67	;'C'
   308  000F15  6F                 	db	111	;'o'
   309  000F16  6F                 	db	111	;'o'
   310  000F17  6C                 	db	108	;'l'
   311  000F18  61                 	db	97	;'a'
   312  000F19  6E                 	db	110	;'n'
   313  000F1A  74                 	db	116	;'t'
   314  000F1B  00                 	db	0
   315  000F1C                     STR_14:
   316  000F1C  4C                 	db	76	;'L'
   317  000F1D  61                 	db	97	;'a'
   318  000F1E  75                 	db	117	;'u'
   319  000F1F  6E                 	db	110	;'n'
   320  000F20  63                 	db	99	;'c'
   321  000F21  68                 	db	104	;'h'
   322  000F22  00                 	db	0
   323  000F23                     STR_16:
   324  000F23  43                 	db	67	;'C'
   325  000F24  6C                 	db	108	;'l'
   326  000F25  75                 	db	117	;'u'
   327  000F26  74                 	db	116	;'t'
   328  000F27  63                 	db	99	;'c'
   329  000F28  68                 	db	104	;'h'
   330  000F29  00                 	db	0
   331  000F2A                     STR_18:
   332  000F2A  52                 	db	82	;'R'
   333  000F2B  61                 	db	97	;'a'
   334  000F2C  64                 	db	100	;'d'
   335  000F2D  69                 	db	105	;'i'
   336  000F2E  6F                 	db	111	;'o'
   337  000F2F  00                 	db	0
   338  000F30                     STR_15:
   339  000F30  41                 	db	65	;'A'
   340  000F31  75                 	db	117	;'u'
   341  000F32  74                 	db	116	;'t'
   342  000F33  6F                 	db	111	;'o'
   343  000F34  00                 	db	0
   344  000F35                     STR_9:
   345  000F35  42                 	db	66	;'B'
   346  000F36  69                 	db	105	;'i'
   347  000F37  61                 	db	97	;'a'
   348  000F38  73                 	db	115	;'s'
   349  000F39  00                 	db	0
   350  000F3A                     STR_1:
   351  000F3A  4B                 	db	75	;'K'
   352  000F3B  50                 	db	80	;'P'
   353  000F3C  48                 	db	72	;'H'
   354  000F3D  00                 	db	0
   355  000F3E                     STR_37:
   356  000F3E  52                 	db	82	;'R'
   357  000F3F  50                 	db	80	;'P'
   358  000F40  4D                 	db	77	;'M'
   359  000F41  00                 	db	0
   360  000F42                     STR_19:
   361  000F42  4C                 	db	76	;'L'
   362  000F43  41                 	db	65	;'A'
   363  000F44  50                 	db	80	;'P'
   364  000F45  00                 	db	0
   365  000F46                     STR_17:
   366  000F46  44                 	db	68	;'D'
   367  000F47  52                 	db	82	;'R'
   368  000F48  53                 	db	83	;'S'
   369  000F49  00                 	db	0
   370  000F4A                     STR_32:
   371  000F4A  31                 	db	49	;'1'
   372  000F4B  30                 	db	48	;'0'
   373  000F4C  00                 	db	0
   374  000F4D                     STR_33:
   375  000F4D  31                 	db	49	;'1'
   376  000F4E  31                 	db	49	;'1'
   377  000F4F  00                 	db	0
   378  000F50                     STR_34:
   379  000F50  31                 	db	49	;'1'
   380  000F51  32                 	db	50	;'2'
   381  000F52  00                 	db	0
   382  000F53                     STR_12:
   383  000F53  54                 	db	84	;'T'
   384  000F54  50                 	db	80	;'P'
   385  000F55  00                 	db	0
   386  000F56                     STR_10:
   387  000F56  25                 	db	37
   388  000F57  00                 	db	0
   389  000F58                     STR_20:
   390  000F58  2B                 	db	43
   391  000F59  00                 	db	0
   392  000F5A                     STR_21:
   393  000F5A  2D                 	db	45
   394  000F5B  00                 	db	0
   395  000F5C                     STR_22:
   396  000F5C  2E                 	db	46
   397  000F5D  00                 	db	0
   398  000F5E                     STR_25:
   399  000F5E  33                 	db	51	;'3'
   400  000F5F  00                 	db	0
   401  000F60                     STR_26:
   402  000F60  34                 	db	52	;'4'
   403  000F61  00                 	db	0
   404  000F62                     STR_27:
   405  000F62  35                 	db	53	;'5'
   406  000F63  00                 	db	0
   407  000F64                     STR_28:
   408  000F64  36                 	db	54	;'6'
   409  000F65  00                 	db	0
   410  000F66                     STR_29:
   411  000F66  37                 	db	55	;'7'
   412  000F67  00                 	db	0
   413  000F68                     STR_30:
   414  000F68  38                 	db	56	;'8'
   415  000F69  00                 	db	0
   416  000F6A                     STR_31:
   417  000F6A  39                 	db	57	;'9'
   418  000F6B  00                 	db	0
   419  000F6C                     STR_5:
   420  000F6C  43                 	db	67	;'C'
   421  000F6D  00                 	db	0
   422  000F6E                     STR_11:
   423  000F6E  56                 	db	86	;'V'
   424  000F6F  00                 	db	0
   425  000F70                     STR_36:
   426  000F70  6B                 	db	107	;'k'
   427  000F71  00                 	db	0
   428  0000                     
   429                           ; #config settings
   430  000F72  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	cinit
   433  005DFE                     __pcinit:
   434                           	opt stack 0
   435  005DFE                     start_initialization:
   436                           	opt stack 0
   437  005DFE                     __initialization:
   438                           	opt stack 0
   439                           
   440                           ; Initialize objects allocated to BANK0 (22 bytes)
   441                           ; load TBLPTR registers with __pidataBANK0
   442  005DFE  0E68               	movlw	low __pidataBANK0
   443  005E00  6EF6               	movwf	tblptrl,c
   444  005E02  0E61               	movlw	high __pidataBANK0
   445  005E04  6EF7               	movwf	tblptrh,c
   446  005E06  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   447  005E08  6EF8               	movwf	tblptru,c
   448  005E0A  EE00  F0C9         	lfsr	0,__pdataBANK0
   449  005E0E  EE10 F016          	lfsr	1,22
   450  005E12                     copy_data0:
   451  005E12  0009               	tblrd		*+
   452  005E14  CFF5 FFEE          	movff	tablat,postinc0
   453  005E18  50E5               	movf	postdec1,w,c
   454  005E1A  50E1               	movf	fsr1l,w,c
   455  005E1C  E1FA               	bnz	copy_data0
   456                           
   457                           ; Clear objects allocated to BANK0 (35 bytes)
   458  005E1E  EE00  F0A6         	lfsr	0,__pbssBANK0
   459  005E22  0E23               	movlw	35
   460  005E24                     clear_0:
   461  005E24  6AEE               	clrf	postinc0,c
   462  005E26  06E8               	decf	wreg,f,c
   463  005E28  E1FD               	bnz	clear_0
   464                           
   465                           ; Clear objects allocated to COMRAM (13 bytes)
   466  005E2A  EE00  F042         	lfsr	0,__pbssCOMRAM
   467  005E2E  0E0D               	movlw	13
   468  005E30                     clear_1:
   469  005E30  6AEE               	clrf	postinc0,c
   470  005E32  06E8               	decf	wreg,f,c
   471  005E34  E1FD               	bnz	clear_1
   472  005E36                     end_of_initialization:
   473                           	opt stack 0
   474  005E36                     __end_of__initialization:
   475                           	opt stack 0
   476  005E36  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   477  005E38  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   478  005E3A  0100               	movlb	0
   479  005E3C  EF25  F020         	goto	_main	;jump to C main() function
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           postdec1	equ	0xFE5
   487                           fsr1l	equ	0xFE1
   488                           
   489                           	psect	bssCOMRAM
   490  000042                     __pbssCOMRAM:
   491                           	opt stack 0
   492  000042                     _timer0ReloadVal:
   493                           	opt stack 0
   494  000042                     	ds	2
   495  000044                     _TMR0_InterruptHandler:
   496                           	opt stack 0
   497  000044                     	ds	2
   498  000046                     _TMR1_InterruptHandler:
   499                           	opt stack 0
   500  000046                     	ds	2
   501  000048                     _timer1ReloadVal:
   502                           	opt stack 0
   503  000048                     	ds	2
   504  00004A                     _cmd_offset:
   505                           	opt stack 0
   506  00004A                     	ds	2
   507  00004C                     _dli:
   508                           	opt stack 0
   509  00004C                     	ds	2
   510  00004E                     _up_blink:
   511                           	opt stack 0
   512  00004E                     	ds	1
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522                           	psect	bssBANK0
   523  0000A6                     __pbssBANK0:
   524                           	opt stack 0
   525  0000A6                     main@F15413:
   526                           	opt stack 0
   527  0000A6                     	ds	20
   528  0000BA                     _refresh_screen:
   529                           	opt stack 0
   530  0000BA                     	ds	1
   531  0000BB                     _canMessage:
   532                           	opt stack 0
   533  0000BB                     	ds	14
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           	psect	dataBANK0
   544  0000C9                     __pdataBANK0:
   545                           	opt stack 0
   546  0000C9                     main@F15405:
   547                           	opt stack 0
   548  0000C9                     	ds	22
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	cstackBANK0
   559  000060                     __pcstackBANK0:
   560                           	opt stack 0
   561  000060                     ??_main:
   562                           
   563                           ; 1 bytes @ 0x0
   564  000060                     	ds	2
   565  000062                     main@message:
   566                           	opt stack 0
   567                           
   568                           ; 20 bytes @ 0x2
   569  000062                     	ds	20
   570  000076                     main@launch:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x16
   574  000076                     	ds	1
   575  000077                     main@autoShift:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x17
   579  000077                     	ds	1
   580  000078                     main@clutch:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x18
   584  000078                     	ds	1
   585  000079                     main@drs:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x19
   589  000079                     	ds	1
   590  00007A                     main@oilP:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x1A
   594  00007A                     	ds	2
   595  00007C                     main@fuelP:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x1C
   599  00007C                     	ds	2
   600  00007E                     main@bias:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x1E
   604  00007E                     	ds	2
   605  000080                     main@radio:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x20
   609  000080                     	ds	1
   610  000081                     main@timer_started:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x21
   614  000081                     	ds	1
   615  000082                     main@tp:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x22
   619  000082                     	ds	2
   620  000084                     main@speed:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x24
   624  000084                     	ds	2
   625  000086                     main@gear:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x26
   629  000086                     	ds	2
   630  000088                     main@engTemp:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x28
   634  000088                     	ds	2
   635  00008A                     main@oilTemp:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x2A
   639  00008A                     	ds	2
   640  00008C                     main@battVolts:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x2C
   644  00008C                     	ds	2
   645  00008E                     main@rpm:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x2E
   649  00008E                     	ds	2
   650  000090                     main@lap_time:
   651                           	opt stack 0
   652                           
   653                           ; 22 bytes @ 0x30
   654  000090                     	ds	22
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	cstackCOMRAM
   665  000001                     __pcstackCOMRAM:
   666                           	opt stack 0
   667  000001                     ??_LED_blink:
   668  000001                     
   669                           ; 1 bytes @ 0x0
   670  000001                     	ds	1
   671  000002                     ??_INTERRUPT_InterruptManager:
   672                           
   673                           ; 1 bytes @ 0x1
   674  000002                     	ds	14
   675  000010                     ??_cmd_incrementn:
   676  000010                     ??_ECAN_Initialize:
   677  000010                     ??_wait2secs:
   678  000010                     ?_strlen:
   679                           	opt stack 0
   680  000010                     ?___wmul:
   681                           	opt stack 0
   682  000010                     ?___awdiv:
   683                           	opt stack 0
   684  000010                     ?_convertReg2ExtendedCANid:
   685                           	opt stack 0
   686  000010                     ?_convertReg2StandardCANid:
   687                           	opt stack 0
   688  000010                     SPI_Exchange8bit@data:
   689                           	opt stack 0
   690  000010                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   691                           	opt stack 0
   692  000010                     convertReg2StandardCANid@tempRXBn_SIDL:
   693                           	opt stack 0
   694  000010                     TMR1_SetInterruptHandler@InterruptHandler:
   695                           	opt stack 0
   696  000010                     TMR0_SetInterruptHandler@InterruptHandler:
   697                           	opt stack 0
   698  000010                     ___wmul@multiplier:
   699                           	opt stack 0
   700  000010                     ___awdiv@dividend:
   701                           	opt stack 0
   702  000010                     strlen@s:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0xF
   706  000010                     	ds	1
   707  000011                     ?_rd16:
   708                           	opt stack 0
   709  000011                     host_command@command:
   710                           	opt stack 0
   711  000011                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   712                           	opt stack 0
   713  000011                     wr8@addr:
   714                           	opt stack 0
   715  000011                     wr16@addr:
   716                           	opt stack 0
   717  000011                     wr32@addr:
   718                           	opt stack 0
   719  000011                     rd16@addr:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x10
   723  000011                     	ds	1
   724  000012                     ??_strlen:
   725  000012                     ??_TMR0_Initialize:
   726  000012                     ??_TMR1_Initialize:
   727  000012                     cmd_incrementn@n:
   728                           	opt stack 0
   729  000012                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   730                           	opt stack 0
   731  000012                     ___wmul@multiplicand:
   732                           	opt stack 0
   733  000012                     ___awdiv@divisor:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x11
   737  000012                     	ds	2
   738  000014                     ??_convertReg2ExtendedCANid:
   739  000014                     ??_convertReg2StandardCANid:
   740  000014                     ??_rd16:
   741  000014                     wr8@value:
   742                           	opt stack 0
   743  000014                     ___awdiv@counter:
   744                           	opt stack 0
   745  000014                     wr16@value:
   746                           	opt stack 0
   747  000014                     ___wmul@product:
   748                           	opt stack 0
   749  000014                     strlen@cp:
   750                           	opt stack 0
   751  000014                     wr32@value:
   752                           	opt stack 0
   753                           
   754                           ; 4 bytes @ 0x13
   755  000014                     	ds	1
   756  000015                     ??_wr8:
   757  000015                     ___awdiv@sign:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x14
   761  000015                     	ds	1
   762  000016                     ??_wr16:
   763  000016                     convertReg2StandardCANid@tempRXBn_SIDH:
   764                           	opt stack 0
   765  000016                     ___awdiv@quotient:
   766                           	opt stack 0
   767  000016                     wr8s@addr:
   768                           	opt stack 0
   769                           
   770                           ; 3 bytes @ 0x15
   771  000016                     	ds	1
   772  000017                     rd16@temp:
   773                           	opt stack 0
   774  000017                     convertReg2StandardCANid@returnValue:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x16
   778  000017                     	ds	1
   779  000018                     ??_wr32:
   780  000018                     ?___awmod:
   781                           	opt stack 0
   782  000018                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   783                           	opt stack 0
   784  000018                     ___awmod@dividend:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x17
   788  000018                     	ds	1
   789  000019                     wr8s@s:
   790                           	opt stack 0
   791  000019                     convertReg2ExtendedCANid@returnValue:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x18
   795  000019                     	ds	1
   796  00001A                     ___awmod@divisor:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x19
   800  00001A                     	ds	1
   801  00001B                     ??_wr8s:
   802  00001B                     convertReg2StandardCANid@ConvertedID:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x1A
   806  00001B                     	ds	1
   807  00001C                     ??_FT800_Init:
   808  00001C                     ___awmod@counter:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x1B
   812  00001C                     	ds	1
   813  00001D                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   814                           	opt stack 0
   815  00001D                     ___awmod@sign:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x1C
   819  00001D                     	ds	1
   820  00001E                     wr8s@l:
   821                           	opt stack 0
   822  00001E                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   823                           	opt stack 0
   824  00001E                     cmd@command:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x1D
   828  00001E                     	ds	1
   829  00001F                     wr8s@i:
   830                           	opt stack 0
   831  00001F                     convertReg2ExtendedCANid@ConvertedID:
   832                           	opt stack 0
   833                           
   834                           ; 4 bytes @ 0x1E
   835  00001F                     	ds	3
   836  000022                     ??_cmd:
   837                           
   838                           ; 1 bytes @ 0x21
   839  000022                     	ds	1
   840  000023                     CAN_receive@tempCanMsg:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x22
   844  000023                     	ds	2
   845  000025                     ??_display_labels:
   846  000025                     CAN_receive@returnValue:
   847                           	opt stack 0
   848  000025                     display_status@autoShift:
   849                           	opt stack 0
   850  000025                     display_laptime@current_int:
   851                           	opt stack 0
   852  000025                     display_waterTemp@temp:
   853                           	opt stack 0
   854  000025                     display_oilTemp@temp:
   855                           	opt stack 0
   856  000025                     display_battery@volts:
   857                           	opt stack 0
   858  000025                     display_tp@tp:
   859                           	opt stack 0
   860  000025                     display_speed@speed:
   861                           	opt stack 0
   862  000025                     display_brake_bias@bias:
   863                           	opt stack 0
   864  000025                     display_rpm@rpm:
   865                           	opt stack 0
   866  000025                     display_gear@gear:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x24
   870  000025                     	ds	1
   871  000026                     display_status@clutch:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x25
   875  000026                     	ds	1
   876  000027                     ??_display_rpm:
   877  000027                     ??_display_speed:
   878  000027                     ??_display_waterTemp:
   879  000027                     ??_display_oilTemp:
   880  000027                     ??_display_gear:
   881  000027                     ??_display_battery:
   882  000027                     ??_display_tp:
   883  000027                     ??_display_brake_bias:
   884  000027                     display_status@drs:
   885                           	opt stack 0
   886  000027                     display_laptime@current_dec:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x26
   890  000027                     	ds	1
   891  000028                     display_status@radio:
   892                           	opt stack 0
   893  000028                     display_labels@y_start:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x27
   897  000028                     	ds	1
   898  000029                     ??_display_status:
   899  000029                     display_laptime@best_int:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x28
   903  000029                     	ds	1
   904  00002A                     display_rpm@val:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x29
   908  00002A                     	ds	1
   909  00002B                     display_laptime@best_dec:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x2A
   913  00002B                     	ds	1
   914  00002C                     display_status@launch:
   915                           	opt stack 0
   916  00002C                     display_rpm@second_digit:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x2B
   920  00002C                     	ds	1
   921  00002D                     display_laptime@last_int:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x2C
   925  00002D                     	ds	1
   926  00002E                     display_rpm@first_digit:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x2D
   930  00002E                     	ds	1
   931  00002F                     display_laptime@last_dec:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x2E
   935  00002F                     	ds	1
   936  000030                     display@rpm:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x2F
   940  000030                     	ds	1
   941  000031                     display_laptime@lap:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x30
   945  000031                     	ds	1
   946  000032                     display@oilP:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x31
   950  000032                     	ds	1
   951  000033                     display_laptime@best_lap:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x32
   955  000033                     	ds	1
   956  000034                     display@fuelP:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x33
   960  000034                     	ds	1
   961  000035                     ??_display_laptime:
   962                           
   963                           ; 1 bytes @ 0x34
   964  000035                     	ds	1
   965  000036                     display@tp:
   966                           	opt stack 0
   967                           
   968                           ; 2 bytes @ 0x35
   969  000036                     	ds	2
   970  000038                     display@speed:
   971                           	opt stack 0
   972  000038                     display_laptime@time_difference_decimal:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x37
   976  000038                     	ds	2
   977  00003A                     display@gear:
   978                           	opt stack 0
   979  00003A                     display_laptime@time_difference_integer:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x39
   983  00003A                     	ds	2
   984  00003C                     display@engTemp:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x3B
   988  00003C                     	ds	2
   989  00003E                     display@oilTemp:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x3D
   993  00003E                     	ds	2
   994  000040                     display@battVolts:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x3F
   998  000040                     	ds	2
   999  000042                     tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           postdec1	equ	0xFE5
  1006                           fsr1l	equ	0xFE1
  1007                           
  1008                           ; 1 bytes @ 0x41
  1009 ;;
  1010 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1011 ;;
  1012 ;; *************** function _main *****************
  1013 ;; Defined at:
  1014 ;;		line 42 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  lap_time       22   48[BANK0 ] struct .
  1019 ;;  message        20    2[BANK0 ] unsigned char [20]
  1020 ;;  rpm             2   46[BANK0 ] int 
  1021 ;;  battVolts       2   44[BANK0 ] int 
  1022 ;;  oilTemp         2   42[BANK0 ] int 
  1023 ;;  engTemp         2   40[BANK0 ] int 
  1024 ;;  gear            2   38[BANK0 ] int 
  1025 ;;  speed           2   36[BANK0 ] int 
  1026 ;;  tp              2   34[BANK0 ] int 
  1027 ;;  bias            2   30[BANK0 ] int 
  1028 ;;  fuelP           2   28[BANK0 ] int 
  1029 ;;  oilP            2   26[BANK0 ] int 
  1030 ;;  timer_starte    1   33[BANK0 ] unsigned char 
  1031 ;;  radio           1   32[BANK0 ] unsigned char 
  1032 ;;  drs             1   25[BANK0 ] unsigned char 
  1033 ;;  clutch          1   24[BANK0 ] unsigned char 
  1034 ;;  autoShift       1   23[BANK0 ] unsigned char 
  1035 ;;  launch          1   22[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;Total ram usage:       70 bytes
  1050 ;; Hardware stack levels required when called:    9
  1051 ;; This function calls:
  1052 ;;		_CAN_receive
  1053 ;;		_FT800_Init
  1054 ;;		_SYSTEM_Initialize
  1055 ;;		_TMR0_SetInterruptHandler
  1056 ;;		_TMR0_StartTimer
  1057 ;;		_TMR0_StopTimer
  1058 ;;		_TMR1_Reload
  1059 ;;		_TMR1_SetInterruptHandler
  1060 ;;		___awdiv
  1061 ;;		___awmod
  1062 ;;		_display
  1063 ;;		_display_battery
  1064 ;;		_display_bottom_section
  1065 ;;		_display_brake_bias
  1066 ;;		_display_end
  1067 ;;		_display_gear
  1068 ;;		_display_labels
  1069 ;;		_display_laptime
  1070 ;;		_display_oilTemp
  1071 ;;		_display_rpm
  1072 ;;		_display_speed
  1073 ;;		_display_start
  1074 ;;		_display_status
  1075 ;;		_display_tp
  1076 ;;		_display_waterTemp
  1077 ;;		_wait2secs
  1078 ;; This function is called by:
  1079 ;;		Startup code after reset
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text0
  1084  00404A                     __ptext0:
  1085                           	opt stack 0
  1086  00404A                     _main:
  1087                           	opt stack 22
  1088                           
  1089                           ;main.c: 43: Lap_time lap_time= {0,1,0,0,0,0,0,0,0,0,0};
  1090                           
  1091                           ;incstack = 0
  1092  00404A  EE20  F0C9         	lfsr	2,main@F15405
  1093  00404E  EE10  F090         	lfsr	1,main@lap_time
  1094  004052  0E15               	movlw	21
  1095  004054                     u1481:
  1096  004054  CFDB FFE3          	movff	plusw2,plusw1
  1097  004058  06E8               	decf	wreg,f,c
  1098  00405A  E2FC               	bc	u1481
  1099                           
  1100                           ;main.c: 44: bool timer_started = 0;
  1101  00405C  0E00               	movlw	0
  1102  00405E  0100               	movlb	0	; () banked
  1103  004060  6F81               	movwf	main@timer_started& (0+255),b
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 45: bool launch, autoShift, clutch, drs, radio = 0;
  1107  004062  0E00               	movlw	0
  1108  004064  0100               	movlb	0	; () banked
  1109  004066  6F80               	movwf	main@radio& (0+255),b
  1110                           
  1111                           ;main.c: 46: char message[20] = {'\0'};
  1112  004068  EE20  F0A6         	lfsr	2,main@F15413
  1113  00406C  EE10  F062         	lfsr	1,main@message
  1114  004070  0E13               	movlw	19
  1115  004072                     u1491:
  1116  004072  CFDB FFE3          	movff	plusw2,plusw1
  1117  004076  06E8               	decf	wreg,f,c
  1118  004078  E2FC               	bc	u1491
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 47: int rpm = 0, oilP = 0, fuelP = 0, tp = 0, speed = 0, gear = 0, engTemp = 0,
      +                           oilTemp = 0, battVolts = 0, bias = 0;
  1122  00407A  0E00               	movlw	0
  1123  00407C  0100               	movlb	0	; () banked
  1124  00407E  6F8F               	movwf	(main@rpm+1)& (0+255),b
  1125  004080  0E00               	movlw	0
  1126  004082  6F8E               	movwf	main@rpm& (0+255),b
  1127                           
  1128                           ; BSR set to: 0
  1129  004084  0E00               	movlw	0
  1130  004086  0100               	movlb	0	; () banked
  1131  004088  6F7B               	movwf	(main@oilP+1)& (0+255),b
  1132  00408A  0E00               	movlw	0
  1133  00408C  6F7A               	movwf	main@oilP& (0+255),b
  1134                           
  1135                           ; BSR set to: 0
  1136  00408E  0E00               	movlw	0
  1137  004090  0100               	movlb	0	; () banked
  1138  004092  6F7D               	movwf	(main@fuelP+1)& (0+255),b
  1139  004094  0E00               	movlw	0
  1140  004096  6F7C               	movwf	main@fuelP& (0+255),b
  1141                           
  1142                           ; BSR set to: 0
  1143  004098  0E00               	movlw	0
  1144  00409A  0100               	movlb	0	; () banked
  1145  00409C  6F83               	movwf	(main@tp+1)& (0+255),b
  1146  00409E  0E00               	movlw	0
  1147  0040A0  6F82               	movwf	main@tp& (0+255),b
  1148                           
  1149                           ; BSR set to: 0
  1150  0040A2  0E00               	movlw	0
  1151  0040A4  0100               	movlb	0	; () banked
  1152  0040A6  6F85               	movwf	(main@speed+1)& (0+255),b
  1153  0040A8  0E00               	movlw	0
  1154  0040AA  6F84               	movwf	main@speed& (0+255),b
  1155                           
  1156                           ; BSR set to: 0
  1157  0040AC  0E00               	movlw	0
  1158  0040AE  0100               	movlb	0	; () banked
  1159  0040B0  6F87               	movwf	(main@gear+1)& (0+255),b
  1160  0040B2  0E00               	movlw	0
  1161  0040B4  6F86               	movwf	main@gear& (0+255),b
  1162                           
  1163                           ; BSR set to: 0
  1164  0040B6  0E00               	movlw	0
  1165  0040B8  0100               	movlb	0	; () banked
  1166  0040BA  6F89               	movwf	(main@engTemp+1)& (0+255),b
  1167  0040BC  0E00               	movlw	0
  1168  0040BE  6F88               	movwf	main@engTemp& (0+255),b
  1169                           
  1170                           ; BSR set to: 0
  1171  0040C0  0E00               	movlw	0
  1172  0040C2  0100               	movlb	0	; () banked
  1173  0040C4  6F8B               	movwf	(main@oilTemp+1)& (0+255),b
  1174  0040C6  0E00               	movlw	0
  1175  0040C8  6F8A               	movwf	main@oilTemp& (0+255),b
  1176                           
  1177                           ; BSR set to: 0
  1178  0040CA  0E00               	movlw	0
  1179  0040CC  0100               	movlb	0	; () banked
  1180  0040CE  6F8D               	movwf	(main@battVolts+1)& (0+255),b
  1181  0040D0  0E00               	movlw	0
  1182  0040D2  6F8C               	movwf	main@battVolts& (0+255),b
  1183                           
  1184                           ; BSR set to: 0
  1185  0040D4  0E00               	movlw	0
  1186  0040D6  0100               	movlb	0	; () banked
  1187  0040D8  6F7F               	movwf	(main@bias+1)& (0+255),b
  1188  0040DA  0E00               	movlw	0
  1189  0040DC  6F7E               	movwf	main@bias& (0+255),b
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;main.c: 48: wait2secs();
  1193  0040DE  EC9A  F030         	call	_wait2secs	;wreg free
  1194                           
  1195                           ;main.c: 51: SYSTEM_Initialize();
  1196  0040E2  EC6E  F030         	call	_SYSTEM_Initialize	;wreg free
  1197                           
  1198                           ;main.c: 54: CIOCONbits.CLKSEL = 1;
  1199  0040E6  8070               	bsf	3952,0,c	;volatile
  1200                           
  1201                           ;main.c: 55: CIOCONbits.ENDRHI = 1;
  1202  0040E8  8A70               	bsf	3952,5,c	;volatile
  1203                           
  1204                           ;main.c: 56: CIOCONbits.TX2SRC = 0;
  1205  0040EA  9E70               	bcf	3952,7,c	;volatile
  1206                           
  1207                           ;main.c: 57: CIOCONbits.TX2EN = 1;
  1208  0040EC  8C70               	bsf	3952,6,c	;volatile
  1209                           
  1210                           ;main.c: 58: RXB0CONbits.RXM0 = 1;
  1211  0040EE  8A60               	bsf	3936,5,c	;volatile
  1212                           
  1213                           ;main.c: 59: RXB0CONbits.RXM1 = 0;
  1214  0040F0  9C60               	bcf	3936,6,c	;volatile
  1215                           
  1216                           ;main.c: 60: RXB0CONbits.RB0DBEN = 0;
  1217  0040F2  9460               	bcf	3936,2,c	;volatile
  1218                           
  1219                           ;main.c: 61: PIE5bits.RXB0IE = 0;
  1220  0040F4  9076               	bcf	3958,0,c	;volatile
  1221                           
  1222                           ;main.c: 62: PIE5bits.RXB1IE = 0;
  1223  0040F6  9276               	bcf	3958,1,c	;volatile
  1224                           
  1225                           ;main.c: 63: PIR5bits.ERRIF = 0;
  1226  0040F8  9A77               	bcf	3959,5,c	;volatile
  1227                           
  1228                           ;main.c: 64: PIR5bits.WAKIF = 0;
  1229  0040FA  9C77               	bcf	3959,6,c	;volatile
  1230                           
  1231                           ;main.c: 72: RXF2SIDH = 0xC8;
  1232  0040FC  0EC8               	movlw	200
  1233  0040FE  010E               	movlb	14	; () banked
  1234  004100  6FE8               	movwf	232,b	;volatile
  1235                           
  1236                           ; BSR set to: 14
  1237                           ;main.c: 73: RXF2SIDL = 0x40;
  1238  004102  0E40               	movlw	64
  1239  004104  010E               	movlb	14	; () banked
  1240  004106  6FE9               	movwf	233,b	;volatile
  1241                           
  1242                           ; BSR set to: 14
  1243                           ;main.c: 74: RXM0SIDH = 0xFE;
  1244  004108  0EFE               	movlw	254
  1245  00410A  010E               	movlb	14	; () banked
  1246  00410C  6FF8               	movwf	248,b	;volatile
  1247                           
  1248                           ; BSR set to: 14
  1249                           ;main.c: 75: RXM0SIDL = 0b00011111;
  1250  00410E  0E1F               	movlw	31
  1251  004110  010E               	movlb	14	; () banked
  1252  004112  6FF9               	movwf	249,b	;volatile
  1253                           
  1254                           ; BSR set to: 14
  1255                           ;main.c: 76: RXM1SIDH = 0xFE;
  1256  004114  0EFE               	movlw	254
  1257  004116  010E               	movlb	14	; () banked
  1258  004118  6FFC               	movwf	252,b	;volatile
  1259                           
  1260                           ; BSR set to: 14
  1261                           ;main.c: 77: RXM1SIDL = 0x00011111;
  1262  00411A  0E11               	movlw	17
  1263  00411C  010E               	movlb	14	; () banked
  1264  00411E  6FFD               	movwf	253,b	;volatile
  1265                           
  1266                           ; BSR set to: 14
  1267                           ;main.c: 80: SSPSTATbits.SMP = 0;
  1268  004120  9EC7               	bcf	4039,7,c	;volatile
  1269                           
  1270                           ; BSR set to: 14
  1271                           ;main.c: 81: SSPSTATbits.CKE = 1;
  1272  004122  8CC7               	bsf	4039,6,c	;volatile
  1273                           
  1274                           ; BSR set to: 14
  1275                           ;main.c: 82: SSPCON1bits.SSPEN = 1;
  1276  004124  8AC6               	bsf	4038,5,c	;volatile
  1277                           
  1278                           ; BSR set to: 14
  1279                           ;main.c: 83: SSPCON1bits.CKP = 1;
  1280  004126  88C6               	bsf	4038,4,c	;volatile
  1281                           
  1282                           ; BSR set to: 14
  1283                           ;main.c: 84: SSPCON1bits.SSPM = 0b0010;
  1284  004128  50C6               	movf	4038,w,c	;volatile
  1285  00412A  0BF0               	andlw	-16
  1286  00412C  0902               	iorlw	2
  1287  00412E  6EC6               	movwf	4038,c	;volatile
  1288                           
  1289                           ; BSR set to: 14
  1290                           ;main.c: 85: FT800_Init();
  1291  004130  ECFC  F026         	call	_FT800_Init	;wreg free
  1292                           
  1293                           ;main.c: 87: wait2secs();
  1294  004134  EC9A  F030         	call	_wait2secs	;wreg free
  1295                           
  1296                           ;main.c: 88: SSPCON1bits.SSPM = 0b0001;
  1297  004138  50C6               	movf	4038,w,c	;volatile
  1298  00413A  0BF0               	andlw	-16
  1299  00413C  0901               	iorlw	1
  1300  00413E  6EC6               	movwf	4038,c	;volatile
  1301                           
  1302                           ;main.c: 90: do { LATAbits.LATA1 = 0; } while(0);
  1303  004140  9289               	bcf	3977,1,c	;volatile
  1304                           
  1305                           ;main.c: 91: do { LATDbits.LATD4 = 0; } while(0);
  1306  004142  988C               	bcf	3980,4,c	;volatile
  1307                           
  1308                           ;main.c: 92: do { LATAbits.LATA0 = 0; } while(0);
  1309  004144  9089               	bcf	3977,0,c	;volatile
  1310                           
  1311                           ;main.c: 93: do { LATBbits.LATB5 = 1; } while(0);
  1312  004146  8A8A               	bsf	3978,5,c	;volatile
  1313                           
  1314                           ;main.c: 94: do { LATDbits.LATD5 = 0; } while(0);
  1315  004148  9A8C               	bcf	3980,5,c	;volatile
  1316                           
  1317                           ;main.c: 95: do { LATDbits.LATD3 = 1; } while(0);
  1318  00414A  868C               	bsf	3980,3,c	;volatile
  1319                           
  1320                           ;main.c: 97: display(rpm, oilP, fuelP, tp, speed, gear, engTemp, oilTemp, battVolts);
  1321  00414C  C08E  F030         	movff	main@rpm,display@rpm
  1322  004150  C08F  F031         	movff	main@rpm+1,display@rpm+1
  1323  004154  C07A  F032         	movff	main@oilP,display@oilP
  1324  004158  C07B  F033         	movff	main@oilP+1,display@oilP+1
  1325  00415C  C07C  F034         	movff	main@fuelP,display@fuelP
  1326  004160  C07D  F035         	movff	main@fuelP+1,display@fuelP+1
  1327  004164  C082  F036         	movff	main@tp,display@tp
  1328  004168  C083  F037         	movff	main@tp+1,display@tp+1
  1329  00416C  C084  F038         	movff	main@speed,display@speed
  1330  004170  C085  F039         	movff	main@speed+1,display@speed+1
  1331  004174  C086  F03A         	movff	main@gear,display@gear
  1332  004178  C087  F03B         	movff	main@gear+1,display@gear+1
  1333  00417C  C088  F03C         	movff	main@engTemp,display@engTemp
  1334  004180  C089  F03D         	movff	main@engTemp+1,display@engTemp+1
  1335  004184  C08A  F03E         	movff	main@oilTemp,display@oilTemp
  1336  004188  C08B  F03F         	movff	main@oilTemp+1,display@oilTemp+1
  1337  00418C  C08C  F040         	movff	main@battVolts,display@battVolts
  1338  004190  C08D  F041         	movff	main@battVolts+1,display@battVolts+1
  1339  004194  ECA4  F02E         	call	_display	;wreg free
  1340                           
  1341                           ;main.c: 100: TMR1_SetInterruptHandler(&refresh);
  1342  004198  0EDC               	movlw	low _refresh
  1343  00419A  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1344  00419C  0E61               	movlw	high _refresh
  1345  00419E  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1346  0041A0  ECE4  F030         	call	_TMR1_SetInterruptHandler	;wreg free
  1347                           
  1348                           ;main.c: 101: TMR0_SetInterruptHandler(*LED_blink);
  1349  0041A4  0E58               	movlw	low _LED_blink
  1350  0041A6  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1351  0041A8  0E60               	movlw	high _LED_blink
  1352  0041AA  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1353  0041AC  ECE9  F030         	call	_TMR0_SetInterruptHandler	;wreg free
  1354                           
  1355                           ;main.c: 102: TMR0_StopTimer();
  1356  0041B0  ECF2  F030         	call	_TMR0_StopTimer	;wreg free
  1357                           
  1358                           ;main.c: 103: (INTCONbits.GIE = 1);
  1359  0041B4  8EF2               	bsf	intcon,7,c	;volatile
  1360                           
  1361                           ;main.c: 104: (INTCONbits.PEIE = 1);
  1362  0041B6  8CF2               	bsf	intcon,6,c	;volatile
  1363  0041B8                     l5088:
  1364                           
  1365                           ;main.c: 107: if (CAN_receive(&canMessage)) {
  1366  0041B8  0EBB               	movlw	low _canMessage
  1367  0041BA  6E23               	movwf	CAN_receive@tempCanMsg,c
  1368  0041BC  0E00               	movlw	high _canMessage
  1369  0041BE  6E24               	movwf	CAN_receive@tempCanMsg+1,c
  1370  0041C0  EC49  F028         	call	_CAN_receive	;wreg free
  1371  0041C4  0900               	iorlw	0
  1372  0041C6  B4D8               	btfsc	status,2,c
  1373  0041C8  D1A2               	goto	l5128
  1374                           
  1375                           ;main.c: 108: if (canMessage.frame.id == 0x640) {
  1376  0041CA  0E40               	movlw	64
  1377  0041CC  0100               	movlb	0	; () banked
  1378  0041CE  19BC               	xorwf	(_canMessage+1)& (0+255),w,b
  1379  0041D0  E158               	bnz	l5102
  1380  0041D2  0E06               	movlw	6
  1381  0041D4  0100               	movlb	0	; () banked
  1382  0041D6  19BD               	xorwf	(_canMessage+2)& (0+255),w,b
  1383  0041D8  0100               	movlb	0	; () banked
  1384  0041DA  11BE               	iorwf	(_canMessage+3)& (0+255),w,b
  1385  0041DC  0100               	movlb	0	; () banked
  1386  0041DE  11BF               	iorwf	(_canMessage+4)& (0+255),w,b
  1387  0041E0  A4D8               	btfss	status,2,c
  1388  0041E2  D04F               	goto	l5102
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;main.c: 109: rpm = ((canMessage.frame.data0 << 8) | canMessage.frame.data1);
  1392  0041E4  0100               	movlb	0	; () banked
  1393  0041E6  51C2               	movf	(_canMessage+7)& (0+255),w,b
  1394  0041E8  C0C1  F060         	movff	_canMessage+6,??_main
  1395  0041EC  0100               	movlb	0	; () banked
  1396  0041EE  6B61               	clrf	(??_main+1)& (0+255),b
  1397  0041F0  C060  F061         	movff	??_main,??_main+1
  1398  0041F4  0100               	movlb	0	; () banked
  1399  0041F6  6B60               	clrf	??_main& (0+255),b
  1400  0041F8  0100               	movlb	0	; () banked
  1401  0041FA  1160               	iorwf	??_main& (0+255),w,b
  1402  0041FC  0100               	movlb	0	; () banked
  1403  0041FE  6F8E               	movwf	main@rpm& (0+255),b
  1404  004200  0100               	movlb	0	; () banked
  1405  004202  5161               	movf	(??_main+1)& (0+255),w,b
  1406  004204  0100               	movlb	0	; () banked
  1407  004206  6F8F               	movwf	(main@rpm+1)& (0+255),b
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;main.c: 110: oilP = ((canMessage.frame.data2 << 8) | canMessage.frame.data3) / 10;
  1411  004208  0100               	movlb	0	; () banked
  1412  00420A  51C4               	movf	(_canMessage+9)& (0+255),w,b
  1413  00420C  C0C3  F060         	movff	_canMessage+8,??_main
  1414  004210  0100               	movlb	0	; () banked
  1415  004212  6B61               	clrf	(??_main+1)& (0+255),b
  1416  004214  C060  F061         	movff	??_main,??_main+1
  1417  004218  0100               	movlb	0	; () banked
  1418  00421A  6B60               	clrf	??_main& (0+255),b
  1419  00421C  0100               	movlb	0	; () banked
  1420  00421E  1160               	iorwf	??_main& (0+255),w,b
  1421  004220  6E10               	movwf	___awdiv@dividend,c
  1422  004222  0100               	movlb	0	; () banked
  1423  004224  5161               	movf	(??_main+1)& (0+255),w,b
  1424  004226  6E11               	movwf	___awdiv@dividend+1,c
  1425  004228  0E00               	movlw	0
  1426  00422A  6E13               	movwf	___awdiv@divisor+1,c
  1427  00422C  0E0A               	movlw	10
  1428  00422E  6E12               	movwf	___awdiv@divisor,c
  1429  004230  ECEE  F02D         	call	___awdiv	;wreg free
  1430  004234  C010  F07A         	movff	?___awdiv,main@oilP
  1431  004238  C011  F07B         	movff	?___awdiv+1,main@oilP+1
  1432                           
  1433                           ;main.c: 111: fuelP = ((canMessage.frame.data4 << 8) | canMessage.frame.data5) / 10;
  1434  00423C  0100               	movlb	0	; () banked
  1435  00423E  51C6               	movf	(_canMessage+11)& (0+255),w,b
  1436  004240  C0C5  F060         	movff	_canMessage+10,??_main
  1437  004244  0100               	movlb	0	; () banked
  1438  004246  6B61               	clrf	(??_main+1)& (0+255),b
  1439  004248  C060  F061         	movff	??_main,??_main+1
  1440  00424C  0100               	movlb	0	; () banked
  1441  00424E  6B60               	clrf	??_main& (0+255),b
  1442  004250  0100               	movlb	0	; () banked
  1443  004252  1160               	iorwf	??_main& (0+255),w,b
  1444  004254  6E10               	movwf	___awdiv@dividend,c
  1445  004256  0100               	movlb	0	; () banked
  1446  004258  5161               	movf	(??_main+1)& (0+255),w,b
  1447  00425A  6E11               	movwf	___awdiv@dividend+1,c
  1448  00425C  0E00               	movlw	0
  1449  00425E  6E13               	movwf	___awdiv@divisor+1,c
  1450  004260  0E0A               	movlw	10
  1451  004262  6E12               	movwf	___awdiv@divisor,c
  1452  004264  ECEE  F02D         	call	___awdiv	;wreg free
  1453  004268  C010  F07C         	movff	?___awdiv,main@fuelP
  1454  00426C  C011  F07D         	movff	?___awdiv+1,main@fuelP+1
  1455                           
  1456                           ;main.c: 112: tp = canMessage.frame.data6;
  1457  004270  C0C7  F082         	movff	_canMessage+12,main@tp
  1458  004274  0100               	movlb	0	; () banked
  1459  004276  6B83               	clrf	(main@tp+1)& (0+255),b
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;main.c: 113: speed = canMessage.frame.data7;
  1463  004278  C0C8  F084         	movff	_canMessage+13,main@speed
  1464  00427C  0100               	movlb	0	; () banked
  1465  00427E  6B85               	clrf	(main@speed+1)& (0+255),b
  1466                           
  1467                           ;main.c: 114: } else if (canMessage.frame.id == 0x641) {
  1468  004280  D146               	goto	l5128
  1469  004282                     l5102:
  1470                           
  1471                           ; BSR set to: 0
  1472  004282  0E41               	movlw	65
  1473  004284  0100               	movlb	0	; () banked
  1474  004286  19BC               	xorwf	(_canMessage+1)& (0+255),w,b
  1475  004288  E112               	bnz	l5106
  1476  00428A  0E06               	movlw	6
  1477  00428C  0100               	movlb	0	; () banked
  1478  00428E  19BD               	xorwf	(_canMessage+2)& (0+255),w,b
  1479  004290  0100               	movlb	0	; () banked
  1480  004292  11BE               	iorwf	(_canMessage+3)& (0+255),w,b
  1481  004294  0100               	movlb	0	; () banked
  1482  004296  11BF               	iorwf	(_canMessage+4)& (0+255),w,b
  1483  004298  A4D8               	btfss	status,2,c
  1484  00429A  D009               	goto	l5106
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;main.c: 115: gear = canMessage.frame.data6;
  1488  00429C  C0C7  F086         	movff	_canMessage+12,main@gear
  1489  0042A0  0100               	movlb	0	; () banked
  1490  0042A2  6B87               	clrf	(main@gear+1)& (0+255),b
  1491                           
  1492                           ;main.c: 116: bias = canMessage.frame.data7;
  1493  0042A4  C0C8  F07E         	movff	_canMessage+13,main@bias
  1494  0042A8  0100               	movlb	0	; () banked
  1495  0042AA  6B7F               	clrf	(main@bias+1)& (0+255),b
  1496                           
  1497                           ;main.c: 117: } else if (canMessage.frame.id == 0x642) {
  1498  0042AC  D130               	goto	l5128
  1499  0042AE                     l5106:
  1500                           
  1501                           ; BSR set to: 0
  1502  0042AE  0E42               	movlw	66
  1503  0042B0  0100               	movlb	0	; () banked
  1504  0042B2  19BC               	xorwf	(_canMessage+1)& (0+255),w,b
  1505  0042B4  E116               	bnz	l5110
  1506  0042B6  0E06               	movlw	6
  1507  0042B8  0100               	movlb	0	; () banked
  1508  0042BA  19BD               	xorwf	(_canMessage+2)& (0+255),w,b
  1509  0042BC  0100               	movlb	0	; () banked
  1510  0042BE  11BE               	iorwf	(_canMessage+3)& (0+255),w,b
  1511  0042C0  0100               	movlb	0	; () banked
  1512  0042C2  11BF               	iorwf	(_canMessage+4)& (0+255),w,b
  1513  0042C4  A4D8               	btfss	status,2,c
  1514  0042C6  D00D               	goto	l5110
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 118: engTemp = canMessage.frame.data0;
  1518  0042C8  C0C1  F088         	movff	_canMessage+6,main@engTemp
  1519  0042CC  0100               	movlb	0	; () banked
  1520  0042CE  6B89               	clrf	(main@engTemp+1)& (0+255),b
  1521                           
  1522                           ;main.c: 119: oilTemp = canMessage.frame.data1;
  1523  0042D0  C0C2  F08A         	movff	_canMessage+7,main@oilTemp
  1524  0042D4  0100               	movlb	0	; () banked
  1525  0042D6  6B8B               	clrf	(main@oilTemp+1)& (0+255),b
  1526                           
  1527                           ;main.c: 120: battVolts = canMessage.frame.data2;
  1528  0042D8  C0C3  F08C         	movff	_canMessage+8,main@battVolts
  1529  0042DC  0100               	movlb	0	; () banked
  1530  0042DE  6B8D               	clrf	(main@battVolts+1)& (0+255),b
  1531                           
  1532                           ;main.c: 121: } else if (canMessage.frame.id == 0x643) {
  1533  0042E0  D116               	goto	l5128
  1534  0042E2                     l5110:
  1535                           
  1536                           ; BSR set to: 0
  1537  0042E2  0E43               	movlw	67
  1538  0042E4  0100               	movlb	0	; () banked
  1539  0042E6  19BC               	xorwf	(_canMessage+1)& (0+255),w,b
  1540  0042E8  E17B               	bnz	l5114
  1541  0042EA  0E06               	movlw	6
  1542  0042EC  0100               	movlb	0	; () banked
  1543  0042EE  19BD               	xorwf	(_canMessage+2)& (0+255),w,b
  1544  0042F0  0100               	movlb	0	; () banked
  1545  0042F2  11BE               	iorwf	(_canMessage+3)& (0+255),w,b
  1546  0042F4  0100               	movlb	0	; () banked
  1547  0042F6  11BF               	iorwf	(_canMessage+4)& (0+255),w,b
  1548  0042F8  A4D8               	btfss	status,2,c
  1549  0042FA  D072               	goto	l5114
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;main.c: 122: radio = canMessage.frame.data0 >> 7;
  1553  0042FC  0100               	movlb	0	; () banked
  1554  0042FE  45C1               	rlncf	(_canMessage+6)& (0+255),w,b
  1555  004300  0B01               	andlw	1
  1556  004302  0100               	movlb	0	; () banked
  1557  004304  6F80               	movwf	main@radio& (0+255),b
  1558                           
  1559                           ;main.c: 123: drs = canMessage.frame.data0 >> 6 & 0b1;
  1560  004306  0100               	movlb	0	; () banked
  1561  004308  45C1               	rlncf	(_canMessage+6)& (0+255),w,b
  1562  00430A  46E8               	rlncf	wreg,f,c
  1563  00430C  0B03               	andlw	3
  1564  00430E  0B01               	andlw	1
  1565  004310  0100               	movlb	0	; () banked
  1566  004312  6F79               	movwf	main@drs& (0+255),b
  1567                           
  1568                           ;main.c: 124: LATAbits.LATA0 = canMessage.frame.data0 >> 5 & 0b1;
  1569  004314  C0C1  F060         	movff	_canMessage+6,??_main
  1570  004318  0E05               	movlw	5
  1571  00431A  0100               	movlb	0	; () banked
  1572  00431C  6F61               	movwf	(??_main+1)& (0+255),b
  1573  00431E                     u1555:
  1574  00431E  0100               	movlb	0	; () banked
  1575  004320  90D8               	bcf	status,0,c
  1576  004322  3360               	rrcf	??_main& (0+255),f,b
  1577  004324  0100               	movlb	0	; () banked
  1578  004326  2F61               	decfsz	(??_main+1)& (0+255),f,b
  1579  004328  D7FA               	goto	u1555
  1580  00432A  0E01               	movlw	1
  1581  00432C  0100               	movlb	0	; () banked
  1582  00432E  1760               	andwf	??_main& (0+255),f,b
  1583  004330  5089               	movf	3977,w,c	;volatile
  1584  004332  0100               	movlb	0	; () banked
  1585  004334  1960               	xorwf	??_main& (0+255),w,b
  1586  004336  0BFE               	andlw	-2
  1587  004338  1960               	xorwf	??_main& (0+255),w,b
  1588  00433A  6E89               	movwf	3977,c	;volatile
  1589                           
  1590                           ;main.c: 125: LATBbits.LATB5 = canMessage.frame.data0 >> 4 & 0b1;
  1591  00433C  C0C1  F060         	movff	_canMessage+6,??_main
  1592  004340  0100               	movlb	0	; () banked
  1593  004342  3B60               	swapf	??_main& (0+255),f,b
  1594  004344  0E0F               	movlw	15
  1595  004346  1760               	andwf	??_main& (0+255),f,b
  1596  004348  0E01               	movlw	1
  1597  00434A  0100               	movlb	0	; () banked
  1598  00434C  1760               	andwf	??_main& (0+255),f,b
  1599  00434E  0100               	movlb	0	; () banked
  1600  004350  3B60               	swapf	??_main& (0+255),f,b
  1601  004352  4760               	rlncf	??_main& (0+255),f,b
  1602  004354  508A               	movf	3978,w,c	;volatile
  1603  004356  0100               	movlb	0	; () banked
  1604  004358  1960               	xorwf	??_main& (0+255),w,b
  1605  00435A  0BDF               	andlw	-33
  1606  00435C  1960               	xorwf	??_main& (0+255),w,b
  1607  00435E  6E8A               	movwf	3978,c	;volatile
  1608                           
  1609                           ;main.c: 126: LATDbits.LATD3 = canMessage.frame.data0 >> 3 & 0b1;
  1610  004360  C0C1  F060         	movff	_canMessage+6,??_main
  1611  004364  0100               	movlb	0	; () banked
  1612  004366  90D8               	bcf	status,0,c
  1613  004368  3360               	rrcf	??_main& (0+255),f,b
  1614  00436A  0100               	movlb	0	; () banked
  1615  00436C  90D8               	bcf	status,0,c
  1616  00436E  3360               	rrcf	??_main& (0+255),f,b
  1617  004370  0100               	movlb	0	; () banked
  1618  004372  90D8               	bcf	status,0,c
  1619  004374  3360               	rrcf	??_main& (0+255),f,b
  1620  004376  0E01               	movlw	1
  1621  004378  0100               	movlb	0	; () banked
  1622  00437A  1760               	andwf	??_main& (0+255),f,b
  1623  00437C  0100               	movlb	0	; () banked
  1624  00437E  4760               	rlncf	??_main& (0+255),f,b
  1625  004380  4760               	rlncf	??_main& (0+255),f,b
  1626  004382  4760               	rlncf	??_main& (0+255),f,b
  1627  004384  508C               	movf	3980,w,c	;volatile
  1628  004386  0100               	movlb	0	; () banked
  1629  004388  1960               	xorwf	??_main& (0+255),w,b
  1630  00438A  0BF7               	andlw	-9
  1631  00438C  1960               	xorwf	??_main& (0+255),w,b
  1632  00438E  6E8C               	movwf	3980,c	;volatile
  1633                           
  1634                           ;main.c: 127: LATDbits.LATD5 = canMessage.frame.data0 >> 2 & 0b1;
  1635  004390  C0C1  F060         	movff	_canMessage+6,??_main
  1636  004394  0100               	movlb	0	; () banked
  1637  004396  90D8               	bcf	status,0,c
  1638  004398  3360               	rrcf	??_main& (0+255),f,b
  1639  00439A  0100               	movlb	0	; () banked
  1640  00439C  90D8               	bcf	status,0,c
  1641  00439E  3360               	rrcf	??_main& (0+255),f,b
  1642  0043A0  0E01               	movlw	1
  1643  0043A2  0100               	movlb	0	; () banked
  1644  0043A4  1760               	andwf	??_main& (0+255),f,b
  1645  0043A6  0100               	movlb	0	; () banked
  1646  0043A8  3B60               	swapf	??_main& (0+255),f,b
  1647  0043AA  4760               	rlncf	??_main& (0+255),f,b
  1648  0043AC  508C               	movf	3980,w,c	;volatile
  1649  0043AE  0100               	movlb	0	; () banked
  1650  0043B0  1960               	xorwf	??_main& (0+255),w,b
  1651  0043B2  0BDF               	andlw	-33
  1652  0043B4  1960               	xorwf	??_main& (0+255),w,b
  1653  0043B6  6E8C               	movwf	3980,c	;volatile
  1654                           
  1655                           ;main.c: 128: launch = canMessage.frame.data1 >> 7 & 0b1;
  1656  0043B8  0100               	movlb	0	; () banked
  1657  0043BA  45C2               	rlncf	(_canMessage+7)& (0+255),w,b
  1658  0043BC  0B01               	andlw	1
  1659  0043BE  0100               	movlb	0	; () banked
  1660  0043C0  6F76               	movwf	main@launch& (0+255),b
  1661                           
  1662                           ;main.c: 129: autoShift = canMessage.frame.data1 >> 6 & 0b1;
  1663  0043C2  0100               	movlb	0	; () banked
  1664  0043C4  45C2               	rlncf	(_canMessage+7)& (0+255),w,b
  1665  0043C6  46E8               	rlncf	wreg,f,c
  1666  0043C8  0B03               	andlw	3
  1667  0043CA  0B01               	andlw	1
  1668  0043CC  0100               	movlb	0	; () banked
  1669  0043CE  6F77               	movwf	main@autoShift& (0+255),b
  1670                           
  1671                           ;main.c: 130: clutch = canMessage.frame.data1 >> 5 & 0b1;
  1672  0043D0  0100               	movlb	0	; () banked
  1673  0043D2  39C2               	swapf	(_canMessage+7)& (0+255),w,b
  1674  0043D4  42E8               	rrncf	wreg,f,c
  1675  0043D6  0B07               	andlw	7
  1676  0043D8  0B01               	andlw	1
  1677  0043DA  0100               	movlb	0	; () banked
  1678  0043DC  6F78               	movwf	main@clutch& (0+255),b
  1679                           
  1680                           ;main.c: 131: } else if (canMessage.frame.id == 0x644) {
  1681  0043DE  D097               	goto	l5128
  1682  0043E0                     l5114:
  1683                           
  1684                           ; BSR set to: 0
  1685  0043E0  0E44               	movlw	68
  1686  0043E2  0100               	movlb	0	; () banked
  1687  0043E4  19BC               	xorwf	(_canMessage+1)& (0+255),w,b
  1688  0043E6  E108               	bnz	u1561
  1689  0043E8  0E06               	movlw	6
  1690  0043EA  0100               	movlb	0	; () banked
  1691  0043EC  19BD               	xorwf	(_canMessage+2)& (0+255),w,b
  1692  0043EE  0100               	movlb	0	; () banked
  1693  0043F0  11BE               	iorwf	(_canMessage+3)& (0+255),w,b
  1694  0043F2  0100               	movlb	0	; () banked
  1695  0043F4  11BF               	iorwf	(_canMessage+4)& (0+255),w,b
  1696  0043F6  A4D8               	btfss	status,2,c
  1697  0043F8                     u1561:
  1698  0043F8  D08A               	goto	l5128
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 132: lap_time.last = ((canMessage.frame.data0 << 8) | canMessage.frame.data1);
  1702  0043FA  0100               	movlb	0	; () banked
  1703  0043FC  51C2               	movf	(_canMessage+7)& (0+255),w,b
  1704  0043FE  C0C1  F060         	movff	_canMessage+6,??_main
  1705  004402  0100               	movlb	0	; () banked
  1706  004404  6B61               	clrf	(??_main+1)& (0+255),b
  1707  004406  C060  F061         	movff	??_main,??_main+1
  1708  00440A  0100               	movlb	0	; () banked
  1709  00440C  6B60               	clrf	??_main& (0+255),b
  1710  00440E  0100               	movlb	0	; () banked
  1711  004410  1160               	iorwf	??_main& (0+255),w,b
  1712  004412  0100               	movlb	0	; () banked
  1713  004414  6F98               	movwf	(main@lap_time+8)& (0+255),b
  1714  004416  0100               	movlb	0	; () banked
  1715  004418  5161               	movf	(??_main+1)& (0+255),w,b
  1716  00441A  0100               	movlb	0	; () banked
  1717  00441C  6F99               	movwf	(main@lap_time+9)& (0+255),b
  1718                           
  1719                           ;main.c: 133: lap_time.current = ((canMessage.frame.data2 << 8) | canMessage.frame.data3
      +                          );
  1720  00441E  0100               	movlb	0	; () banked
  1721  004420  51C4               	movf	(_canMessage+9)& (0+255),w,b
  1722  004422  C0C3  F060         	movff	_canMessage+8,??_main
  1723  004426  0100               	movlb	0	; () banked
  1724  004428  6B61               	clrf	(??_main+1)& (0+255),b
  1725  00442A  C060  F061         	movff	??_main,??_main+1
  1726  00442E  0100               	movlb	0	; () banked
  1727  004430  6B60               	clrf	??_main& (0+255),b
  1728  004432  0100               	movlb	0	; () banked
  1729  004434  1160               	iorwf	??_main& (0+255),w,b
  1730  004436  0100               	movlb	0	; () banked
  1731  004438  6F90               	movwf	main@lap_time& (0+255),b
  1732  00443A  0100               	movlb	0	; () banked
  1733  00443C  5161               	movf	(??_main+1)& (0+255),w,b
  1734  00443E  0100               	movlb	0	; () banked
  1735  004440  6F91               	movwf	(main@lap_time+1)& (0+255),b
  1736                           
  1737                           ;main.c: 134: lap_time.current_number = ((canMessage.frame.data4 << 8) | canMessage.fram
      +                          e.data5);
  1738  004442  0100               	movlb	0	; () banked
  1739  004444  51C6               	movf	(_canMessage+11)& (0+255),w,b
  1740  004446  C0C5  F060         	movff	_canMessage+10,??_main
  1741  00444A  0100               	movlb	0	; () banked
  1742  00444C  6B61               	clrf	(??_main+1)& (0+255),b
  1743  00444E  C060  F061         	movff	??_main,??_main+1
  1744  004452  0100               	movlb	0	; () banked
  1745  004454  6B60               	clrf	??_main& (0+255),b
  1746  004456  0100               	movlb	0	; () banked
  1747  004458  1160               	iorwf	??_main& (0+255),w,b
  1748  00445A  0100               	movlb	0	; () banked
  1749  00445C  6F92               	movwf	(main@lap_time+2)& (0+255),b
  1750  00445E  0100               	movlb	0	; () banked
  1751  004460  5161               	movf	(??_main+1)& (0+255),w,b
  1752  004462  0100               	movlb	0	; () banked
  1753  004464  6F93               	movwf	(main@lap_time+3)& (0+255),b
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 135: lap_time.last_int = lap_time.last/100;
  1757  004466  C098  F010         	movff	main@lap_time+8,___awdiv@dividend
  1758  00446A  C099  F011         	movff	main@lap_time+9,___awdiv@dividend+1
  1759  00446E  0E00               	movlw	0
  1760  004470  6E13               	movwf	___awdiv@divisor+1,c
  1761  004472  0E64               	movlw	100
  1762  004474  6E12               	movwf	___awdiv@divisor,c
  1763  004476  ECEE  F02D         	call	___awdiv	;wreg free
  1764  00447A  C010  F09A         	movff	?___awdiv,main@lap_time+10
  1765  00447E  C011  F09B         	movff	?___awdiv+1,main@lap_time+11
  1766                           
  1767                           ;main.c: 136: lap_time.last_dec = lap_time.last%100;
  1768  004482  C098  F018         	movff	main@lap_time+8,___awmod@dividend
  1769  004486  C099  F019         	movff	main@lap_time+9,___awmod@dividend+1
  1770  00448A  0E00               	movlw	0
  1771  00448C  6E1B               	movwf	___awmod@divisor+1,c
  1772  00448E  0E64               	movlw	100
  1773  004490  6E1A               	movwf	___awmod@divisor,c
  1774  004492  EC6C  F02E         	call	___awmod	;wreg free
  1775  004496  C018  F09C         	movff	?___awmod,main@lap_time+12
  1776  00449A  C019  F09D         	movff	?___awmod+1,main@lap_time+13
  1777                           
  1778                           ;main.c: 137: lap_time.current_int = lap_time.current/100;
  1779  00449E  C090  F010         	movff	main@lap_time,___awdiv@dividend
  1780  0044A2  C091  F011         	movff	main@lap_time+1,___awdiv@dividend+1
  1781  0044A6  0E00               	movlw	0
  1782  0044A8  6E13               	movwf	___awdiv@divisor+1,c
  1783  0044AA  0E64               	movlw	100
  1784  0044AC  6E12               	movwf	___awdiv@divisor,c
  1785  0044AE  ECEE  F02D         	call	___awdiv	;wreg free
  1786  0044B2  C010  F094         	movff	?___awdiv,main@lap_time+4
  1787  0044B6  C011  F095         	movff	?___awdiv+1,main@lap_time+5
  1788                           
  1789                           ;main.c: 138: lap_time.current_dec = lap_time.current%100;
  1790  0044BA  C090  F018         	movff	main@lap_time,___awmod@dividend
  1791  0044BE  C091  F019         	movff	main@lap_time+1,___awmod@dividend+1
  1792  0044C2  0E00               	movlw	0
  1793  0044C4  6E1B               	movwf	___awmod@divisor+1,c
  1794  0044C6  0E64               	movlw	100
  1795  0044C8  6E1A               	movwf	___awmod@divisor,c
  1796  0044CA  EC6C  F02E         	call	___awmod	;wreg free
  1797  0044CE  C018  F096         	movff	?___awmod,main@lap_time+6
  1798  0044D2  C019  F097         	movff	?___awmod+1,main@lap_time+7
  1799                           
  1800                           ;main.c: 139: if(lap_time.current < lap_time.best) {
  1801  0044D6  0100               	movlb	0	; () banked
  1802  0044D8  519E               	movf	(main@lap_time+14)& (0+255),w,b
  1803  0044DA  0100               	movlb	0	; () banked
  1804  0044DC  5D90               	subwf	main@lap_time& (0+255),w,b
  1805  0044DE  0100               	movlb	0	; () banked
  1806  0044E0  5191               	movf	(main@lap_time+1)& (0+255),w,b
  1807  0044E2  0A80               	xorlw	128
  1808  0044E4  0100               	movlb	0	; () banked
  1809  0044E6  6F60               	movwf	??_main& (0+255),b
  1810  0044E8  0100               	movlb	0	; () banked
  1811  0044EA  519F               	movf	(main@lap_time+15)& (0+255),w,b
  1812  0044EC  0A80               	xorlw	128
  1813  0044EE  0100               	movlb	0	; () banked
  1814  0044F0  5960               	subwfb	??_main& (0+255),w,b
  1815  0044F2  B0D8               	btfsc	status,0,c
  1816  0044F4  D00C               	goto	l5128
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 140: lap_time.best = lap_time.current;
  1820  0044F6  C090  F09E         	movff	main@lap_time,main@lap_time+14
  1821  0044FA  C091  F09F         	movff	main@lap_time+1,main@lap_time+15
  1822                           
  1823                           ;main.c: 141: lap_time.best_int = lap_time.current_int;
  1824  0044FE  C094  F0A2         	movff	main@lap_time+4,main@lap_time+18
  1825  004502  C095  F0A3         	movff	main@lap_time+5,main@lap_time+19
  1826                           
  1827                           ;main.c: 142: lap_time.best_dec = lap_time.current_dec;
  1828  004506  C096  F0A4         	movff	main@lap_time+6,main@lap_time+20
  1829  00450A  C097  F0A5         	movff	main@lap_time+7,main@lap_time+21
  1830  00450E                     l5128:
  1831                           
  1832                           ;main.c: 143: }
  1833                           ;main.c: 144: }
  1834                           ;main.c: 145: }
  1835                           ;main.c: 146: if(refresh_screen) {
  1836  00450E  0100               	movlb	0	; () banked
  1837  004510  51BA               	movf	_refresh_screen& (0+255),w,b
  1838  004512  B4D8               	btfsc	status,2,c
  1839  004514  D651               	goto	l5088
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 147: display_start();
  1843  004516  EC61  F02F         	call	_display_start	;wreg free
  1844                           
  1845                           ;main.c: 148: display_rpm(rpm);
  1846  00451A  C08E  F025         	movff	main@rpm,display_rpm@rpm
  1847  00451E  C08F  F026         	movff	main@rpm+1,display_rpm@rpm+1
  1848  004522  ECBA  F007         	call	_display_rpm	;wreg free
  1849                           
  1850                           ;main.c: 149: display_bottom_section();
  1851  004526  EC02  F02A         	call	_display_bottom_section	;wreg free
  1852                           
  1853                           ;main.c: 150: display_labels();
  1854  00452A  EC72  F012         	call	_display_labels	;wreg free
  1855                           
  1856                           ;main.c: 151: display_speed(speed);
  1857  00452E  C084  F025         	movff	main@speed,display_speed@speed
  1858  004532  C085  F026         	movff	main@speed+1,display_speed@speed+1
  1859  004536  EC80  F02C         	call	_display_speed	;wreg free
  1860                           
  1861                           ;main.c: 152: display_waterTemp(engTemp);
  1862  00453A  C088  F025         	movff	main@engTemp,display_waterTemp@temp
  1863  00453E  C089  F026         	movff	main@engTemp+1,display_waterTemp@temp+1
  1864  004542  EC1F  F02B         	call	_display_waterTemp	;wreg free
  1865                           
  1866                           ;main.c: 153: display_oilTemp(oilTemp);
  1867  004546  C08A  F025         	movff	main@oilTemp,display_oilTemp@temp
  1868  00454A  C08B  F026         	movff	main@oilTemp+1,display_oilTemp@temp+1
  1869  00454E  ECF2  F02C         	call	_display_oilTemp	;wreg free
  1870                           
  1871                           ;main.c: 154: display_gear(gear);
  1872  004552  C086  F025         	movff	main@gear,display_gear@gear
  1873  004556  C087  F026         	movff	main@gear+1,display_gear@gear+1
  1874  00455A  EC14  F023         	call	_display_gear	;wreg free
  1875                           
  1876                           ;main.c: 155: display_status(launch,autoShift,clutch,drs,radio);
  1877  00455E  C077  F025         	movff	main@autoShift,display_status@autoShift
  1878  004562  C078  F026         	movff	main@clutch,display_status@clutch
  1879  004566  C079  F027         	movff	main@drs,display_status@drs
  1880  00456A  C080  F028         	movff	main@radio,display_status@radio
  1881  00456E  0100               	movlb	0	; () banked
  1882  004570  5176               	movf	main@launch& (0+255),w,b
  1883  004572  ECCD  F018         	call	_display_status
  1884                           
  1885                           ;main.c: 156: display_brake_bias(bias);
  1886  004576  C07E  F025         	movff	main@bias,display_brake_bias@bias
  1887  00457A  C07F  F026         	movff	main@bias+1,display_brake_bias@bias+1
  1888  00457E  ECA3  F02A         	call	_display_brake_bias	;wreg free
  1889                           
  1890                           ;main.c: 157: display_battery(battVolts);
  1891  004582  C08C  F025         	movff	main@battVolts,display_battery@volts
  1892  004586  C08D  F026         	movff	main@battVolts+1,display_battery@volts+1
  1893  00458A  EC89  F025         	call	_display_battery	;wreg free
  1894                           
  1895                           ;main.c: 158: display_tp(tp);
  1896  00458E  C082  F025         	movff	main@tp,display_tp@tp
  1897  004592  C083  F026         	movff	main@tp+1,display_tp@tp+1
  1898  004596  EC0E  F02C         	call	_display_tp	;wreg free
  1899                           
  1900                           ;main.c: 159: display_laptime(lap_time.current_int, lap_time.current_dec, lap_time.best_
      +                          int, lap_time.best_dec,
  1901                           ;main.c: 160: lap_time.last_int, lap_time.last_dec, lap_time.current_number, lap_time.be
      +                          st_number);
  1902  00459A  C094  F025         	movff	main@lap_time+4,display_laptime@current_int
  1903  00459E  C095  F026         	movff	main@lap_time+5,display_laptime@current_int+1
  1904  0045A2  C096  F027         	movff	main@lap_time+6,display_laptime@current_dec
  1905  0045A6  C097  F028         	movff	main@lap_time+7,display_laptime@current_dec+1
  1906  0045AA  C0A2  F029         	movff	main@lap_time+18,display_laptime@best_int
  1907  0045AE  C0A3  F02A         	movff	main@lap_time+19,display_laptime@best_int+1
  1908  0045B2  C0A4  F02B         	movff	main@lap_time+20,display_laptime@best_dec
  1909  0045B6  C0A5  F02C         	movff	main@lap_time+21,display_laptime@best_dec+1
  1910  0045BA  C09A  F02D         	movff	main@lap_time+10,display_laptime@last_int
  1911  0045BE  C09B  F02E         	movff	main@lap_time+11,display_laptime@last_int+1
  1912  0045C2  C09C  F02F         	movff	main@lap_time+12,display_laptime@last_dec
  1913  0045C6  C09D  F030         	movff	main@lap_time+13,display_laptime@last_dec+1
  1914  0045CA  C092  F031         	movff	main@lap_time+2,display_laptime@lap
  1915  0045CE  C093  F032         	movff	main@lap_time+3,display_laptime@lap+1
  1916  0045D2  C0A0  F033         	movff	main@lap_time+16,display_laptime@best_lap
  1917  0045D6  C0A1  F034         	movff	main@lap_time+17,display_laptime@best_lap+1
  1918  0045DA  EC99  F01C         	call	_display_laptime	;wreg free
  1919                           
  1920                           ;main.c: 161: display_end();
  1921  0045DE  EC20  F02F         	call	_display_end	;wreg free
  1922                           
  1923                           ;main.c: 162: if(rpm > 10000 && !timer_started) {
  1924  0045E2  0100               	movlb	0	; () banked
  1925  0045E4  BF8F               	btfsc	(main@rpm+1)& (0+255),7,b
  1926  0045E6  D013               	goto	l5160
  1927  0045E8  0E11               	movlw	17
  1928  0045EA  0100               	movlb	0	; () banked
  1929  0045EC  5D8E               	subwf	main@rpm& (0+255),w,b
  1930  0045EE  0E27               	movlw	39
  1931  0045F0  0100               	movlb	0	; () banked
  1932  0045F2  598F               	subwfb	(main@rpm+1)& (0+255),w,b
  1933  0045F4  A0D8               	btfss	status,0,c
  1934  0045F6  D00B               	goto	l5160
  1935                           
  1936                           ; BSR set to: 0
  1937  0045F8  0100               	movlb	0	; () banked
  1938  0045FA  5181               	movf	main@timer_started& (0+255),w,b
  1939  0045FC  0100               	movlb	0	; () banked
  1940  0045FE  A4D8               	btfss	status,2,c
  1941  004600  D006               	goto	l5160
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;main.c: 163: TMR0_StartTimer();
  1945  004602  ECF6  F030         	call	_TMR0_StartTimer	;wreg free
  1946                           
  1947                           ;main.c: 164: timer_started = 1;
  1948  004606  0E01               	movlw	1
  1949  004608  0100               	movlb	0	; () banked
  1950  00460A  6F81               	movwf	main@timer_started& (0+255),b
  1951                           
  1952                           ;main.c: 165: } else {
  1953  00460C  D007               	goto	l5168
  1954  00460E                     l5160:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;main.c: 166: TMR0_StopTimer();
  1958  00460E  ECF2  F030         	call	_TMR0_StopTimer	;wreg free
  1959                           
  1960                           ;main.c: 167: timer_started = 0;
  1961  004612  0E00               	movlw	0
  1962  004614  0100               	movlb	0	; () banked
  1963  004616  6F81               	movwf	main@timer_started& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           
  1967                           ; BSR set to: 0
  1968                           
  1969                           ;main.c: 168: do { LATAbits.LATA1 = 0; } while(0);
  1970  004618  9289               	bcf	3977,1,c	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973                           
  1974                           ; BSR set to: 0
  1975                           
  1976                           ;main.c: 169: do { LATDbits.LATD4 = 0; } while(0);
  1977                           
  1978                           ; BSR set to: 0
  1979  00461A  988C               	bcf	3980,4,c	;volatile
  1980  00461C                     l5168:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;main.c: 170: }
  1984                           ;main.c: 171: refresh_screen = 0;
  1985  00461C  0E00               	movlw	0
  1986  00461E  0100               	movlb	0	; () banked
  1987  004620  6FBA               	movwf	_refresh_screen& (0+255),b
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;main.c: 172: TMR1_Reload();
  1991  004622  ECDF  F030         	call	_TMR1_Reload	;wreg free
  1992  004626  D5C8               	goto	l5088
  1993  004628                     __end_of_main:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           intcon	equ	0xFF2
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           postdec1	equ	0xFE5
  2003                           plusw1	equ	0xFE3
  2004                           fsr1l	equ	0xFE1
  2005                           plusw2	equ	0xFDB
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _wait2secs *****************
  2009 ;; Defined at:
  2010 ;;		line 27 in file "main.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    4
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text1
  2039  006134                     __ptext1:
  2040                           	opt stack 0
  2041  006134                     _wait2secs:
  2042                           	opt stack 26
  2043                           
  2044                           ;main.c: 28: _delay((unsigned long)((2000)*(64000000/4000.0)));
  2045                           
  2046                           ;incstack = 0
  2047  006134  0EA3               	movlw	163
  2048  006136  6E11               	movwf	(??_wait2secs+1)& (0+255),c
  2049  006138  0E57               	movlw	87
  2050  00613A  6E10               	movwf	??_wait2secs& (0+255),c
  2051  00613C  0E02               	movlw	2
  2052  00613E                     u1617:
  2053  00613E  2EE8               	decfsz	wreg,f,c
  2054  006140  D7FE               	bra	u1617
  2055  006142  2E10               	decfsz	??_wait2secs& (0+255),f,c
  2056  006144  D7FC               	bra	u1617
  2057  006146  2E11               	decfsz	(??_wait2secs+1)& (0+255),f,c
  2058  006148  D7FA               	bra	u1617
  2059  00614A  D000               	nop2	
  2060  00614C  0012               	return		;funcret
  2061  00614E                     __end_of_wait2secs:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postdec1	equ	0xFE5
  2071                           plusw1	equ	0xFE3
  2072                           fsr1l	equ	0xFE1
  2073                           plusw2	equ	0xFDB
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function _display_status *****************
  2077 ;; Defined at:
  2078 ;;		line 67 in file "display.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  launch          1    wreg     unsigned char 
  2081 ;;  autoShift       1   36[COMRAM] unsigned char 
  2082 ;;  clutch          1   37[COMRAM] unsigned char 
  2083 ;;  drs             1   38[COMRAM] unsigned char 
  2084 ;;  radio           1   39[COMRAM] unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  launch          1   43[COMRAM] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;Total ram usage:        8 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    7
  2103 ;; This function calls:
  2104 ;;		_cmd
  2105 ;;		_cmd_incrementn
  2106 ;;		_wr16
  2107 ;;		_wr8s
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text2
  2114  00319A                     __ptext2:
  2115                           	opt stack 0
  2116  00319A                     _display_status:
  2117                           	opt stack 23
  2118                           
  2119                           ;incstack = 0
  2120                           ;display_status@launch stored from wreg
  2121  00319A  6E2C               	movwf	display_status@launch,c
  2122                           
  2123                           ;display.c: 74: cmd(((31UL<<24)|(((9UL)&15UL)<<0)));
  2124  00319C  0E09               	movlw	9
  2125  00319E  6E1E               	movwf	cmd@command,c
  2126  0031A0  0E00               	movlw	0
  2127  0031A2  6E1F               	movwf	cmd@command+1,c
  2128  0031A4  0E00               	movlw	0
  2129  0031A6  6E20               	movwf	cmd@command+2,c
  2130  0031A8  0E1F               	movlw	31
  2131  0031AA  6E21               	movwf	cmd@command+3,c
  2132  0031AC  ECD9  F02F         	call	_cmd	;wreg free
  2133                           
  2134                           ;display.c: 75: if(launch) {
  2135  0031B0  502C               	movf	display_status@launch,w,c
  2136  0031B2  B4D8               	btfsc	status,2,c
  2137  0031B4  D00B               	goto	l4536
  2138                           
  2139                           ;display.c: 76: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0)));
  2140  0031B6  0E00               	movlw	0
  2141  0031B8  6E1E               	movwf	cmd@command,c
  2142  0031BA  0EFF               	movlw	255
  2143  0031BC  6E1F               	movwf	cmd@command+1,c
  2144  0031BE  0E00               	movlw	0
  2145  0031C0  6E20               	movwf	cmd@command+2,c
  2146  0031C2  0E04               	movlw	4
  2147  0031C4  6E21               	movwf	cmd@command+3,c
  2148  0031C6  ECD9  F02F         	call	_cmd	;wreg free
  2149                           
  2150                           ;display.c: 77: } else {
  2151  0031CA  D00A               	goto	l644
  2152  0031CC                     l4536:
  2153                           
  2154                           ;display.c: 78: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)));
  2155  0031CC  0E3C               	movlw	60
  2156  0031CE  6E1E               	movwf	cmd@command,c
  2157  0031D0  0E3C               	movlw	60
  2158  0031D2  6E1F               	movwf	cmd@command+1,c
  2159  0031D4  0E3C               	movlw	60
  2160  0031D6  6E20               	movwf	cmd@command+2,c
  2161  0031D8  0E04               	movlw	4
  2162  0031DA  6E21               	movwf	cmd@command+3,c
  2163  0031DC  ECD9  F02F         	call	_cmd	;wreg free
  2164  0031E0                     l644:
  2165                           
  2166                           ;display.c: 79: }
  2167                           ;display.c: 80: cmd(((2UL<<30)|(((90)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<7)|((
      +                          (0)&127UL)<<0)));
  2168  0031E0  0E00               	movlw	0
  2169  0031E2  6E1E               	movwf	cmd@command,c
  2170  0031E4  0E70               	movlw	112
  2171  0031E6  6E1F               	movwf	cmd@command+1,c
  2172  0031E8  0E4D               	movlw	77
  2173  0031EA  6E20               	movwf	cmd@command+2,c
  2174  0031EC  0E8B               	movlw	139
  2175  0031EE  6E21               	movwf	cmd@command+3,c
  2176  0031F0  ECD9  F02F         	call	_cmd	;wreg free
  2177                           
  2178                           ;display.c: 81: cmd(((2UL<<30)|(((10)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<7)|((
      +                          (0)&127UL)<<0)));
  2179  0031F4  0E00               	movlw	0
  2180  0031F6  6E1E               	movwf	cmd@command,c
  2181  0031F8  0E60               	movlw	96
  2182  0031FA  6E1F               	movwf	cmd@command+1,c
  2183  0031FC  0E4E               	movlw	78
  2184  0031FE  6E20               	movwf	cmd@command+2,c
  2185  003200  0E81               	movlw	129
  2186  003202  6E21               	movwf	cmd@command+3,c
  2187  003204  ECD9  F02F         	call	_cmd	;wreg free
  2188                           
  2189                           ;display.c: 83: if (autoShift) {
  2190  003208  5025               	movf	display_status@autoShift,w,c
  2191  00320A  B4D8               	btfsc	status,2,c
  2192  00320C  D00B               	goto	l4542
  2193                           
  2194                           ;display.c: 84: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0)));
  2195  00320E  0E00               	movlw	0
  2196  003210  6E1E               	movwf	cmd@command,c
  2197  003212  0EFF               	movlw	255
  2198  003214  6E1F               	movwf	cmd@command+1,c
  2199  003216  0E00               	movlw	0
  2200  003218  6E20               	movwf	cmd@command+2,c
  2201  00321A  0E04               	movlw	4
  2202  00321C  6E21               	movwf	cmd@command+3,c
  2203  00321E  ECD9  F02F         	call	_cmd	;wreg free
  2204                           
  2205                           ;display.c: 85: } else {
  2206  003222  D00A               	goto	l646
  2207  003224                     l4542:
  2208                           
  2209                           ;display.c: 86: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)));
  2210  003224  0E3C               	movlw	60
  2211  003226  6E1E               	movwf	cmd@command,c
  2212  003228  0E3C               	movlw	60
  2213  00322A  6E1F               	movwf	cmd@command+1,c
  2214  00322C  0E3C               	movlw	60
  2215  00322E  6E20               	movwf	cmd@command+2,c
  2216  003230  0E04               	movlw	4
  2217  003232  6E21               	movwf	cmd@command+3,c
  2218  003234  ECD9  F02F         	call	_cmd	;wreg free
  2219  003238                     l646:
  2220                           
  2221                           ;display.c: 87: }
  2222                           ;display.c: 88: cmd(((2UL<<30)|(((175)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2223  003238  0E00               	movlw	0
  2224  00323A  6E1E               	movwf	cmd@command,c
  2225  00323C  0E70               	movlw	112
  2226  00323E  6E1F               	movwf	cmd@command+1,c
  2227  003240  0EED               	movlw	237
  2228  003242  6E20               	movwf	cmd@command+2,c
  2229  003244  0E95               	movlw	149
  2230  003246  6E21               	movwf	cmd@command+3,c
  2231  003248  ECD9  F02F         	call	_cmd	;wreg free
  2232                           
  2233                           ;display.c: 89: cmd(((2UL<<30)|(((125)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2234  00324C  0E00               	movlw	0
  2235  00324E  6E1E               	movwf	cmd@command,c
  2236  003250  0E60               	movlw	96
  2237  003252  6E1F               	movwf	cmd@command+1,c
  2238  003254  0EAE               	movlw	174
  2239  003256  6E20               	movwf	cmd@command+2,c
  2240  003258  0E8F               	movlw	143
  2241  00325A  6E21               	movwf	cmd@command+3,c
  2242  00325C  ECD9  F02F         	call	_cmd	;wreg free
  2243                           
  2244                           ;display.c: 91: if (clutch) {
  2245  003260  5026               	movf	display_status@clutch,w,c
  2246  003262  B4D8               	btfsc	status,2,c
  2247  003264  D00B               	goto	l4548
  2248                           
  2249                           ;display.c: 92: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0)));
  2250  003266  0E00               	movlw	0
  2251  003268  6E1E               	movwf	cmd@command,c
  2252  00326A  0EFF               	movlw	255
  2253  00326C  6E1F               	movwf	cmd@command+1,c
  2254  00326E  0E00               	movlw	0
  2255  003270  6E20               	movwf	cmd@command+2,c
  2256  003272  0E04               	movlw	4
  2257  003274  6E21               	movwf	cmd@command+3,c
  2258  003276  ECD9  F02F         	call	_cmd	;wreg free
  2259                           
  2260                           ;display.c: 93: } else {
  2261  00327A  D00A               	goto	l648
  2262  00327C                     l4548:
  2263                           
  2264                           ;display.c: 94: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)));
  2265  00327C  0E3C               	movlw	60
  2266  00327E  6E1E               	movwf	cmd@command,c
  2267  003280  0E3C               	movlw	60
  2268  003282  6E1F               	movwf	cmd@command+1,c
  2269  003284  0E3C               	movlw	60
  2270  003286  6E20               	movwf	cmd@command+2,c
  2271  003288  0E04               	movlw	4
  2272  00328A  6E21               	movwf	cmd@command+3,c
  2273  00328C  ECD9  F02F         	call	_cmd	;wreg free
  2274  003290                     l648:
  2275                           
  2276                           ;display.c: 95: }
  2277                           ;display.c: 96: cmd(((2UL<<30)|(((275)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2278  003290  0E00               	movlw	0
  2279  003292  6E1E               	movwf	cmd@command,c
  2280  003294  0E70               	movlw	112
  2281  003296  6E1F               	movwf	cmd@command+1,c
  2282  003298  0E6D               	movlw	109
  2283  00329A  6E20               	movwf	cmd@command+2,c
  2284  00329C  0EA2               	movlw	162
  2285  00329E  6E21               	movwf	cmd@command+3,c
  2286  0032A0  ECD9  F02F         	call	_cmd	;wreg free
  2287                           
  2288                           ;display.c: 97: cmd(((2UL<<30)|(((210)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2289  0032A4  0E00               	movlw	0
  2290  0032A6  6E1E               	movwf	cmd@command,c
  2291  0032A8  0E60               	movlw	96
  2292  0032AA  6E1F               	movwf	cmd@command+1,c
  2293  0032AC  0E4E               	movlw	78
  2294  0032AE  6E20               	movwf	cmd@command+2,c
  2295  0032B0  0E9A               	movlw	154
  2296  0032B2  6E21               	movwf	cmd@command+3,c
  2297  0032B4  ECD9  F02F         	call	_cmd	;wreg free
  2298                           
  2299                           ;display.c: 99: if (drs) {
  2300  0032B8  5027               	movf	display_status@drs,w,c
  2301  0032BA  B4D8               	btfsc	status,2,c
  2302  0032BC  D00B               	goto	l4554
  2303                           
  2304                           ;display.c: 100: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0)));
  2305  0032BE  0E00               	movlw	0
  2306  0032C0  6E1E               	movwf	cmd@command,c
  2307  0032C2  0EFF               	movlw	255
  2308  0032C4  6E1F               	movwf	cmd@command+1,c
  2309  0032C6  0E00               	movlw	0
  2310  0032C8  6E20               	movwf	cmd@command+2,c
  2311  0032CA  0E04               	movlw	4
  2312  0032CC  6E21               	movwf	cmd@command+3,c
  2313  0032CE  ECD9  F02F         	call	_cmd	;wreg free
  2314                           
  2315                           ;display.c: 101: } else {
  2316  0032D2  D00A               	goto	l650
  2317  0032D4                     l4554:
  2318                           
  2319                           ;display.c: 102: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)))
      +                          ;
  2320  0032D4  0E3C               	movlw	60
  2321  0032D6  6E1E               	movwf	cmd@command,c
  2322  0032D8  0E3C               	movlw	60
  2323  0032DA  6E1F               	movwf	cmd@command+1,c
  2324  0032DC  0E3C               	movlw	60
  2325  0032DE  6E20               	movwf	cmd@command+2,c
  2326  0032E0  0E04               	movlw	4
  2327  0032E2  6E21               	movwf	cmd@command+3,c
  2328  0032E4  ECD9  F02F         	call	_cmd	;wreg free
  2329  0032E8                     l650:
  2330                           
  2331                           ;display.c: 103: }
  2332                           ;display.c: 104: cmd(((2UL<<30)|(((367)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  2333  0032E8  0E00               	movlw	0
  2334  0032EA  6E1E               	movwf	cmd@command,c
  2335  0032EC  0E70               	movlw	112
  2336  0032EE  6E1F               	movwf	cmd@command+1,c
  2337  0032F0  0EED               	movlw	237
  2338  0032F2  6E20               	movwf	cmd@command+2,c
  2339  0032F4  0EAD               	movlw	173
  2340  0032F6  6E21               	movwf	cmd@command+3,c
  2341  0032F8  ECD9  F02F         	call	_cmd	;wreg free
  2342                           
  2343                           ;display.c: 105: cmd(((2UL<<30)|(((325)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  2344  0032FC  0E00               	movlw	0
  2345  0032FE  6E1E               	movwf	cmd@command,c
  2346  003300  0E60               	movlw	96
  2347  003302  6E1F               	movwf	cmd@command+1,c
  2348  003304  0EAE               	movlw	174
  2349  003306  6E20               	movwf	cmd@command+2,c
  2350  003308  0EA8               	movlw	168
  2351  00330A  6E21               	movwf	cmd@command+3,c
  2352  00330C  ECD9  F02F         	call	_cmd	;wreg free
  2353                           
  2354                           ;display.c: 107: if (radio) {
  2355  003310  5028               	movf	display_status@radio,w,c
  2356  003312  B4D8               	btfsc	status,2,c
  2357  003314  D00B               	goto	l4560
  2358                           
  2359                           ;display.c: 108: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0)));
  2360  003316  0E00               	movlw	0
  2361  003318  6E1E               	movwf	cmd@command,c
  2362  00331A  0EFF               	movlw	255
  2363  00331C  6E1F               	movwf	cmd@command+1,c
  2364  00331E  0E00               	movlw	0
  2365  003320  6E20               	movwf	cmd@command+2,c
  2366  003322  0E04               	movlw	4
  2367  003324  6E21               	movwf	cmd@command+3,c
  2368  003326  ECD9  F02F         	call	_cmd	;wreg free
  2369                           
  2370                           ;display.c: 109: } else {
  2371  00332A  D00A               	goto	l652
  2372  00332C                     l4560:
  2373                           
  2374                           ;display.c: 110: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)))
      +                          ;
  2375  00332C  0E3C               	movlw	60
  2376  00332E  6E1E               	movwf	cmd@command,c
  2377  003330  0E3C               	movlw	60
  2378  003332  6E1F               	movwf	cmd@command+1,c
  2379  003334  0E3C               	movlw	60
  2380  003336  6E20               	movwf	cmd@command+2,c
  2381  003338  0E04               	movlw	4
  2382  00333A  6E21               	movwf	cmd@command+3,c
  2383  00333C  ECD9  F02F         	call	_cmd	;wreg free
  2384  003340                     l652:
  2385                           
  2386                           ;display.c: 111: }
  2387                           ;display.c: 112: cmd(((2UL<<30)|(((465)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  2388  003340  0E00               	movlw	0
  2389  003342  6E1E               	movwf	cmd@command,c
  2390  003344  0E70               	movlw	112
  2391  003346  6E1F               	movwf	cmd@command+1,c
  2392  003348  0E2D               	movlw	45
  2393  00334A  6E20               	movwf	cmd@command+2,c
  2394  00334C  0EBA               	movlw	186
  2395  00334E  6E21               	movwf	cmd@command+3,c
  2396  003350  ECD9  F02F         	call	_cmd	;wreg free
  2397                           
  2398                           ;display.c: 113: cmd(((2UL<<30)|(((405)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  2399  003354  0E00               	movlw	0
  2400  003356  6E1E               	movwf	cmd@command,c
  2401  003358  0E60               	movlw	96
  2402  00335A  6E1F               	movwf	cmd@command+1,c
  2403  00335C  0EAE               	movlw	174
  2404  00335E  6E20               	movwf	cmd@command+2,c
  2405  003360  0EB2               	movlw	178
  2406  003362  6E21               	movwf	cmd@command+3,c
  2407  003364  ECD9  F02F         	call	_cmd	;wreg free
  2408                           
  2409                           ;display.c: 115: if (launch) {
  2410  003368  502C               	movf	display_status@launch,w,c
  2411  00336A  B4D8               	btfsc	status,2,c
  2412  00336C  D00B               	goto	l4566
  2413                           
  2414                           ;display.c: 116: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2415  00336E  0E00               	movlw	0
  2416  003370  6E1E               	movwf	cmd@command,c
  2417  003372  0E00               	movlw	0
  2418  003374  6E1F               	movwf	cmd@command+1,c
  2419  003376  0E00               	movlw	0
  2420  003378  6E20               	movwf	cmd@command+2,c
  2421  00337A  0E04               	movlw	4
  2422  00337C  6E21               	movwf	cmd@command+3,c
  2423  00337E  ECD9  F02F         	call	_cmd	;wreg free
  2424                           
  2425                           ;display.c: 117: } else {
  2426  003382  D00A               	goto	l654
  2427  003384                     l4566:
  2428                           
  2429                           ;display.c: 118: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  2430  003384  0EFF               	movlw	255
  2431  003386  6E1E               	movwf	cmd@command,c
  2432  003388  0EFF               	movlw	255
  2433  00338A  6E1F               	movwf	cmd@command+1,c
  2434  00338C  0EFF               	movlw	255
  2435  00338E  6E20               	movwf	cmd@command+2,c
  2436  003390  0E04               	movlw	4
  2437  003392  6E21               	movwf	cmd@command+3,c
  2438  003394  ECD9  F02F         	call	_cmd	;wreg free
  2439  003398                     l654:
  2440                           
  2441                           ;display.c: 119: }
  2442                           ;display.c: 120: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 10);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 208);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  2443  003398  0E0C               	movlw	12
  2444  00339A  6E1E               	movwf	cmd@command,c
  2445  00339C  0EFF               	movlw	255
  2446  00339E  6E1F               	movwf	cmd@command+1,c
  2447  0033A0  0EFF               	movlw	255
  2448  0033A2  6E20               	movwf	cmd@command+2,c
  2449  0033A4  0EFF               	movlw	255
  2450  0033A6  6E21               	movwf	cmd@command+3,c
  2451  0033A8  ECD9  F02F         	call	_cmd	;wreg free
  2452  0033AC  C04A  F029         	movff	_cmd_offset,??_display_status
  2453  0033B0  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2454  0033B4  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2455  0033B6  0E00               	movlw	0
  2456  0033B8  2429               	addwf	??_display_status,w,c
  2457  0033BA  6E11               	movwf	wr16@addr,c
  2458  0033BC  0E80               	movlw	128
  2459  0033BE  202A               	addwfc	??_display_status+1,w,c
  2460  0033C0  6E12               	movwf	wr16@addr+1,c
  2461  0033C2  0E10               	movlw	16
  2462  0033C4  202B               	addwfc	??_display_status+2,w,c
  2463  0033C6  6E13               	movwf	wr16@addr+2,c
  2464  0033C8  0E00               	movlw	0
  2465  0033CA  6E15               	movwf	wr16@value+1,c
  2466  0033CC  0E0A               	movlw	10
  2467  0033CE  6E14               	movwf	wr16@value,c
  2468  0033D0  EC9E  F02F         	call	_wr16	;wreg free
  2469  0033D4  0E02               	movlw	2
  2470  0033D6  EC8C  F030         	call	_cmd_incrementn
  2471  0033DA  C04A  F029         	movff	_cmd_offset,??_display_status
  2472  0033DE  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2473  0033E2  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2474  0033E4  0E00               	movlw	0
  2475  0033E6  2429               	addwf	??_display_status,w,c
  2476  0033E8  6E11               	movwf	wr16@addr,c
  2477  0033EA  0E80               	movlw	128
  2478  0033EC  202A               	addwfc	??_display_status+1,w,c
  2479  0033EE  6E12               	movwf	wr16@addr+1,c
  2480  0033F0  0E10               	movlw	16
  2481  0033F2  202B               	addwfc	??_display_status+2,w,c
  2482  0033F4  6E13               	movwf	wr16@addr+2,c
  2483  0033F6  0E00               	movlw	0
  2484  0033F8  6E15               	movwf	wr16@value+1,c
  2485  0033FA  0ED0               	movlw	208
  2486  0033FC  6E14               	movwf	wr16@value,c
  2487  0033FE  EC9E  F02F         	call	_wr16	;wreg free
  2488  003402  0E02               	movlw	2
  2489  003404  EC8C  F030         	call	_cmd_incrementn
  2490  003408  C04A  F029         	movff	_cmd_offset,??_display_status
  2491  00340C  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2492  003410  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2493  003412  0E00               	movlw	0
  2494  003414  2429               	addwf	??_display_status,w,c
  2495  003416  6E11               	movwf	wr16@addr,c
  2496  003418  0E80               	movlw	128
  2497  00341A  202A               	addwfc	??_display_status+1,w,c
  2498  00341C  6E12               	movwf	wr16@addr+1,c
  2499  00341E  0E10               	movlw	16
  2500  003420  202B               	addwfc	??_display_status+2,w,c
  2501  003422  6E13               	movwf	wr16@addr+2,c
  2502  003424  0E00               	movlw	0
  2503  003426  6E15               	movwf	wr16@value+1,c
  2504  003428  0E1D               	movlw	29
  2505  00342A  6E14               	movwf	wr16@value,c
  2506  00342C  EC9E  F02F         	call	_wr16	;wreg free
  2507  003430  0E02               	movlw	2
  2508  003432  EC8C  F030         	call	_cmd_incrementn
  2509  003436  C04A  F029         	movff	_cmd_offset,??_display_status
  2510  00343A  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2511  00343E  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2512  003440  0E00               	movlw	0
  2513  003442  2429               	addwf	??_display_status,w,c
  2514  003444  6E11               	movwf	wr16@addr,c
  2515  003446  0E80               	movlw	128
  2516  003448  202A               	addwfc	??_display_status+1,w,c
  2517  00344A  6E12               	movwf	wr16@addr+1,c
  2518  00344C  0E10               	movlw	16
  2519  00344E  202B               	addwfc	??_display_status+2,w,c
  2520  003450  6E13               	movwf	wr16@addr+2,c
  2521  003452  0E00               	movlw	0
  2522  003454  6E15               	movwf	wr16@value+1,c
  2523  003456  0E00               	movlw	0
  2524  003458  6E14               	movwf	wr16@value,c
  2525  00345A  EC9E  F02F         	call	_wr16	;wreg free
  2526  00345E  0E02               	movlw	2
  2527  003460  EC8C  F030         	call	_cmd_incrementn
  2528  003464  C04A  F029         	movff	_cmd_offset,??_display_status
  2529  003468  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2530  00346C  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2531  00346E  0E00               	movlw	0
  2532  003470  2429               	addwf	??_display_status,w,c
  2533  003472  6E16               	movwf	wr8s@addr,c
  2534  003474  0E80               	movlw	128
  2535  003476  202A               	addwfc	??_display_status+1,w,c
  2536  003478  6E17               	movwf	wr8s@addr+1,c
  2537  00347A  0E10               	movlw	16
  2538  00347C  202B               	addwfc	??_display_status+2,w,c
  2539  00347E  6E18               	movwf	wr8s@addr+2,c
  2540  003480  0E1C               	movlw	low STR_14
  2541  003482  6E19               	movwf	wr8s@s,c
  2542  003484  0E0F               	movlw	high STR_14
  2543  003486  6E1A               	movwf	wr8s@s+1,c
  2544  003488  EC64  F02D         	call	_wr8s	;wreg free
  2545  00348C  EC8C  F030         	call	_cmd_incrementn
  2546                           
  2547                           ;display.c: 121: if (autoShift) {
  2548  003490  5025               	movf	display_status@autoShift,w,c
  2549  003492  B4D8               	btfsc	status,2,c
  2550  003494  D00B               	goto	l4574
  2551                           
  2552                           ;display.c: 122: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2553  003496  0E00               	movlw	0
  2554  003498  6E1E               	movwf	cmd@command,c
  2555  00349A  0E00               	movlw	0
  2556  00349C  6E1F               	movwf	cmd@command+1,c
  2557  00349E  0E00               	movlw	0
  2558  0034A0  6E20               	movwf	cmd@command+2,c
  2559  0034A2  0E04               	movlw	4
  2560  0034A4  6E21               	movwf	cmd@command+3,c
  2561  0034A6  ECD9  F02F         	call	_cmd	;wreg free
  2562                           
  2563                           ;display.c: 123: } else {
  2564  0034AA  D00A               	goto	l656
  2565  0034AC                     l4574:
  2566                           
  2567                           ;display.c: 124: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  2568  0034AC  0EFF               	movlw	255
  2569  0034AE  6E1E               	movwf	cmd@command,c
  2570  0034B0  0EFF               	movlw	255
  2571  0034B2  6E1F               	movwf	cmd@command+1,c
  2572  0034B4  0EFF               	movlw	255
  2573  0034B6  6E20               	movwf	cmd@command+2,c
  2574  0034B8  0E04               	movlw	4
  2575  0034BA  6E21               	movwf	cmd@command+3,c
  2576  0034BC  ECD9  F02F         	call	_cmd	;wreg free
  2577  0034C0                     l656:
  2578                           
  2579                           ;display.c: 125: }
  2580                           ;display.c: 126: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 127);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 208);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  2581  0034C0  0E0C               	movlw	12
  2582  0034C2  6E1E               	movwf	cmd@command,c
  2583  0034C4  0EFF               	movlw	255
  2584  0034C6  6E1F               	movwf	cmd@command+1,c
  2585  0034C8  0EFF               	movlw	255
  2586  0034CA  6E20               	movwf	cmd@command+2,c
  2587  0034CC  0EFF               	movlw	255
  2588  0034CE  6E21               	movwf	cmd@command+3,c
  2589  0034D0  ECD9  F02F         	call	_cmd	;wreg free
  2590  0034D4  C04A  F029         	movff	_cmd_offset,??_display_status
  2591  0034D8  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2592  0034DC  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2593  0034DE  0E00               	movlw	0
  2594  0034E0  2429               	addwf	??_display_status,w,c
  2595  0034E2  6E11               	movwf	wr16@addr,c
  2596  0034E4  0E80               	movlw	128
  2597  0034E6  202A               	addwfc	??_display_status+1,w,c
  2598  0034E8  6E12               	movwf	wr16@addr+1,c
  2599  0034EA  0E10               	movlw	16
  2600  0034EC  202B               	addwfc	??_display_status+2,w,c
  2601  0034EE  6E13               	movwf	wr16@addr+2,c
  2602  0034F0  0E00               	movlw	0
  2603  0034F2  6E15               	movwf	wr16@value+1,c
  2604  0034F4  0E7F               	movlw	127
  2605  0034F6  6E14               	movwf	wr16@value,c
  2606  0034F8  EC9E  F02F         	call	_wr16	;wreg free
  2607  0034FC  0E02               	movlw	2
  2608  0034FE  EC8C  F030         	call	_cmd_incrementn
  2609  003502  C04A  F029         	movff	_cmd_offset,??_display_status
  2610  003506  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2611  00350A  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2612  00350C  0E00               	movlw	0
  2613  00350E  2429               	addwf	??_display_status,w,c
  2614  003510  6E11               	movwf	wr16@addr,c
  2615  003512  0E80               	movlw	128
  2616  003514  202A               	addwfc	??_display_status+1,w,c
  2617  003516  6E12               	movwf	wr16@addr+1,c
  2618  003518  0E10               	movlw	16
  2619  00351A  202B               	addwfc	??_display_status+2,w,c
  2620  00351C  6E13               	movwf	wr16@addr+2,c
  2621  00351E  0E00               	movlw	0
  2622  003520  6E15               	movwf	wr16@value+1,c
  2623  003522  0ED0               	movlw	208
  2624  003524  6E14               	movwf	wr16@value,c
  2625  003526  EC9E  F02F         	call	_wr16	;wreg free
  2626  00352A  0E02               	movlw	2
  2627  00352C  EC8C  F030         	call	_cmd_incrementn
  2628  003530  C04A  F029         	movff	_cmd_offset,??_display_status
  2629  003534  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2630  003538  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2631  00353A  0E00               	movlw	0
  2632  00353C  2429               	addwf	??_display_status,w,c
  2633  00353E  6E11               	movwf	wr16@addr,c
  2634  003540  0E80               	movlw	128
  2635  003542  202A               	addwfc	??_display_status+1,w,c
  2636  003544  6E12               	movwf	wr16@addr+1,c
  2637  003546  0E10               	movlw	16
  2638  003548  202B               	addwfc	??_display_status+2,w,c
  2639  00354A  6E13               	movwf	wr16@addr+2,c
  2640  00354C  0E00               	movlw	0
  2641  00354E  6E15               	movwf	wr16@value+1,c
  2642  003550  0E1D               	movlw	29
  2643  003552  6E14               	movwf	wr16@value,c
  2644  003554  EC9E  F02F         	call	_wr16	;wreg free
  2645  003558  0E02               	movlw	2
  2646  00355A  EC8C  F030         	call	_cmd_incrementn
  2647  00355E  C04A  F029         	movff	_cmd_offset,??_display_status
  2648  003562  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2649  003566  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2650  003568  0E00               	movlw	0
  2651  00356A  2429               	addwf	??_display_status,w,c
  2652  00356C  6E11               	movwf	wr16@addr,c
  2653  00356E  0E80               	movlw	128
  2654  003570  202A               	addwfc	??_display_status+1,w,c
  2655  003572  6E12               	movwf	wr16@addr+1,c
  2656  003574  0E10               	movlw	16
  2657  003576  202B               	addwfc	??_display_status+2,w,c
  2658  003578  6E13               	movwf	wr16@addr+2,c
  2659  00357A  0E00               	movlw	0
  2660  00357C  6E15               	movwf	wr16@value+1,c
  2661  00357E  0E00               	movlw	0
  2662  003580  6E14               	movwf	wr16@value,c
  2663  003582  EC9E  F02F         	call	_wr16	;wreg free
  2664  003586  0E02               	movlw	2
  2665  003588  EC8C  F030         	call	_cmd_incrementn
  2666  00358C  C04A  F029         	movff	_cmd_offset,??_display_status
  2667  003590  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2668  003594  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2669  003596  0E00               	movlw	0
  2670  003598  2429               	addwf	??_display_status,w,c
  2671  00359A  6E16               	movwf	wr8s@addr,c
  2672  00359C  0E80               	movlw	128
  2673  00359E  202A               	addwfc	??_display_status+1,w,c
  2674  0035A0  6E17               	movwf	wr8s@addr+1,c
  2675  0035A2  0E10               	movlw	16
  2676  0035A4  202B               	addwfc	??_display_status+2,w,c
  2677  0035A6  6E18               	movwf	wr8s@addr+2,c
  2678  0035A8  0E30               	movlw	low STR_15
  2679  0035AA  6E19               	movwf	wr8s@s,c
  2680  0035AC  0E0F               	movlw	high STR_15
  2681  0035AE  6E1A               	movwf	wr8s@s+1,c
  2682  0035B0  EC64  F02D         	call	_wr8s	;wreg free
  2683  0035B4  EC8C  F030         	call	_cmd_incrementn
  2684                           
  2685                           ;display.c: 127: if (clutch) {
  2686  0035B8  5026               	movf	display_status@clutch,w,c
  2687  0035BA  B4D8               	btfsc	status,2,c
  2688  0035BC  D00B               	goto	l4582
  2689                           
  2690                           ;display.c: 128: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2691  0035BE  0E00               	movlw	0
  2692  0035C0  6E1E               	movwf	cmd@command,c
  2693  0035C2  0E00               	movlw	0
  2694  0035C4  6E1F               	movwf	cmd@command+1,c
  2695  0035C6  0E00               	movlw	0
  2696  0035C8  6E20               	movwf	cmd@command+2,c
  2697  0035CA  0E04               	movlw	4
  2698  0035CC  6E21               	movwf	cmd@command+3,c
  2699  0035CE  ECD9  F02F         	call	_cmd	;wreg free
  2700                           
  2701                           ;display.c: 129: } else {
  2702  0035D2  D00A               	goto	l658
  2703  0035D4                     l4582:
  2704                           
  2705                           ;display.c: 130: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  2706  0035D4  0EFF               	movlw	255
  2707  0035D6  6E1E               	movwf	cmd@command,c
  2708  0035D8  0EFF               	movlw	255
  2709  0035DA  6E1F               	movwf	cmd@command+1,c
  2710  0035DC  0EFF               	movlw	255
  2711  0035DE  6E20               	movwf	cmd@command+2,c
  2712  0035E0  0E04               	movlw	4
  2713  0035E2  6E21               	movwf	cmd@command+3,c
  2714  0035E4  ECD9  F02F         	call	_cmd	;wreg free
  2715  0035E8                     l658:
  2716                           
  2717                           ;display.c: 131: }
  2718                           ;display.c: 132: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 208);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 208);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  2719  0035E8  0E0C               	movlw	12
  2720  0035EA  6E1E               	movwf	cmd@command,c
  2721  0035EC  0EFF               	movlw	255
  2722  0035EE  6E1F               	movwf	cmd@command+1,c
  2723  0035F0  0EFF               	movlw	255
  2724  0035F2  6E20               	movwf	cmd@command+2,c
  2725  0035F4  0EFF               	movlw	255
  2726  0035F6  6E21               	movwf	cmd@command+3,c
  2727  0035F8  ECD9  F02F         	call	_cmd	;wreg free
  2728  0035FC  C04A  F029         	movff	_cmd_offset,??_display_status
  2729  003600  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2730  003604  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2731  003606  0E00               	movlw	0
  2732  003608  2429               	addwf	??_display_status,w,c
  2733  00360A  6E11               	movwf	wr16@addr,c
  2734  00360C  0E80               	movlw	128
  2735  00360E  202A               	addwfc	??_display_status+1,w,c
  2736  003610  6E12               	movwf	wr16@addr+1,c
  2737  003612  0E10               	movlw	16
  2738  003614  202B               	addwfc	??_display_status+2,w,c
  2739  003616  6E13               	movwf	wr16@addr+2,c
  2740  003618  0E00               	movlw	0
  2741  00361A  6E15               	movwf	wr16@value+1,c
  2742  00361C  0ED0               	movlw	208
  2743  00361E  6E14               	movwf	wr16@value,c
  2744  003620  EC9E  F02F         	call	_wr16	;wreg free
  2745  003624  0E02               	movlw	2
  2746  003626  EC8C  F030         	call	_cmd_incrementn
  2747  00362A  C04A  F029         	movff	_cmd_offset,??_display_status
  2748  00362E  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2749  003632  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2750  003634  0E00               	movlw	0
  2751  003636  2429               	addwf	??_display_status,w,c
  2752  003638  6E11               	movwf	wr16@addr,c
  2753  00363A  0E80               	movlw	128
  2754  00363C  202A               	addwfc	??_display_status+1,w,c
  2755  00363E  6E12               	movwf	wr16@addr+1,c
  2756  003640  0E10               	movlw	16
  2757  003642  202B               	addwfc	??_display_status+2,w,c
  2758  003644  6E13               	movwf	wr16@addr+2,c
  2759  003646  0E00               	movlw	0
  2760  003648  6E15               	movwf	wr16@value+1,c
  2761  00364A  0ED0               	movlw	208
  2762  00364C  6E14               	movwf	wr16@value,c
  2763  00364E  EC9E  F02F         	call	_wr16	;wreg free
  2764  003652  0E02               	movlw	2
  2765  003654  EC8C  F030         	call	_cmd_incrementn
  2766  003658  C04A  F029         	movff	_cmd_offset,??_display_status
  2767  00365C  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2768  003660  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2769  003662  0E00               	movlw	0
  2770  003664  2429               	addwf	??_display_status,w,c
  2771  003666  6E11               	movwf	wr16@addr,c
  2772  003668  0E80               	movlw	128
  2773  00366A  202A               	addwfc	??_display_status+1,w,c
  2774  00366C  6E12               	movwf	wr16@addr+1,c
  2775  00366E  0E10               	movlw	16
  2776  003670  202B               	addwfc	??_display_status+2,w,c
  2777  003672  6E13               	movwf	wr16@addr+2,c
  2778  003674  0E00               	movlw	0
  2779  003676  6E15               	movwf	wr16@value+1,c
  2780  003678  0E1D               	movlw	29
  2781  00367A  6E14               	movwf	wr16@value,c
  2782  00367C  EC9E  F02F         	call	_wr16	;wreg free
  2783  003680  0E02               	movlw	2
  2784  003682  EC8C  F030         	call	_cmd_incrementn
  2785  003686  C04A  F029         	movff	_cmd_offset,??_display_status
  2786  00368A  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2787  00368E  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2788  003690  0E00               	movlw	0
  2789  003692  2429               	addwf	??_display_status,w,c
  2790  003694  6E11               	movwf	wr16@addr,c
  2791  003696  0E80               	movlw	128
  2792  003698  202A               	addwfc	??_display_status+1,w,c
  2793  00369A  6E12               	movwf	wr16@addr+1,c
  2794  00369C  0E10               	movlw	16
  2795  00369E  202B               	addwfc	??_display_status+2,w,c
  2796  0036A0  6E13               	movwf	wr16@addr+2,c
  2797  0036A2  0E00               	movlw	0
  2798  0036A4  6E15               	movwf	wr16@value+1,c
  2799  0036A6  0E00               	movlw	0
  2800  0036A8  6E14               	movwf	wr16@value,c
  2801  0036AA  EC9E  F02F         	call	_wr16	;wreg free
  2802  0036AE  0E02               	movlw	2
  2803  0036B0  EC8C  F030         	call	_cmd_incrementn
  2804  0036B4  C04A  F029         	movff	_cmd_offset,??_display_status
  2805  0036B8  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2806  0036BC  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2807  0036BE  0E00               	movlw	0
  2808  0036C0  2429               	addwf	??_display_status,w,c
  2809  0036C2  6E16               	movwf	wr8s@addr,c
  2810  0036C4  0E80               	movlw	128
  2811  0036C6  202A               	addwfc	??_display_status+1,w,c
  2812  0036C8  6E17               	movwf	wr8s@addr+1,c
  2813  0036CA  0E10               	movlw	16
  2814  0036CC  202B               	addwfc	??_display_status+2,w,c
  2815  0036CE  6E18               	movwf	wr8s@addr+2,c
  2816  0036D0  0E23               	movlw	low STR_16
  2817  0036D2  6E19               	movwf	wr8s@s,c
  2818  0036D4  0E0F               	movlw	high STR_16
  2819  0036D6  6E1A               	movwf	wr8s@s+1,c
  2820  0036D8  EC64  F02D         	call	_wr8s	;wreg free
  2821  0036DC  EC8C  F030         	call	_cmd_incrementn
  2822                           
  2823                           ;display.c: 133: if (drs) {
  2824  0036E0  5027               	movf	display_status@drs,w,c
  2825  0036E2  B4D8               	btfsc	status,2,c
  2826  0036E4  D00B               	goto	l4590
  2827                           
  2828                           ;display.c: 134: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2829  0036E6  0E00               	movlw	0
  2830  0036E8  6E1E               	movwf	cmd@command,c
  2831  0036EA  0E00               	movlw	0
  2832  0036EC  6E1F               	movwf	cmd@command+1,c
  2833  0036EE  0E00               	movlw	0
  2834  0036F0  6E20               	movwf	cmd@command+2,c
  2835  0036F2  0E04               	movlw	4
  2836  0036F4  6E21               	movwf	cmd@command+3,c
  2837  0036F6  ECD9  F02F         	call	_cmd	;wreg free
  2838                           
  2839                           ;display.c: 135: } else {
  2840  0036FA  D00A               	goto	l660
  2841  0036FC                     l4590:
  2842                           
  2843                           ;display.c: 136: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  2844  0036FC  0EFF               	movlw	255
  2845  0036FE  6E1E               	movwf	cmd@command,c
  2846  003700  0EFF               	movlw	255
  2847  003702  6E1F               	movwf	cmd@command+1,c
  2848  003704  0EFF               	movlw	255
  2849  003706  6E20               	movwf	cmd@command+2,c
  2850  003708  0E04               	movlw	4
  2851  00370A  6E21               	movwf	cmd@command+3,c
  2852  00370C  ECD9  F02F         	call	_cmd	;wreg free
  2853  003710                     l660:
  2854                           
  2855                           ;display.c: 137: }
  2856                           ;display.c: 138: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 325);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 208);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  2857  003710  0E0C               	movlw	12
  2858  003712  6E1E               	movwf	cmd@command,c
  2859  003714  0EFF               	movlw	255
  2860  003716  6E1F               	movwf	cmd@command+1,c
  2861  003718  0EFF               	movlw	255
  2862  00371A  6E20               	movwf	cmd@command+2,c
  2863  00371C  0EFF               	movlw	255
  2864  00371E  6E21               	movwf	cmd@command+3,c
  2865  003720  ECD9  F02F         	call	_cmd	;wreg free
  2866  003724  C04A  F029         	movff	_cmd_offset,??_display_status
  2867  003728  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2868  00372C  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2869  00372E  0E00               	movlw	0
  2870  003730  2429               	addwf	??_display_status,w,c
  2871  003732  6E11               	movwf	wr16@addr,c
  2872  003734  0E80               	movlw	128
  2873  003736  202A               	addwfc	??_display_status+1,w,c
  2874  003738  6E12               	movwf	wr16@addr+1,c
  2875  00373A  0E10               	movlw	16
  2876  00373C  202B               	addwfc	??_display_status+2,w,c
  2877  00373E  6E13               	movwf	wr16@addr+2,c
  2878  003740  0E01               	movlw	1
  2879  003742  6E15               	movwf	wr16@value+1,c
  2880  003744  0E45               	movlw	69
  2881  003746  6E14               	movwf	wr16@value,c
  2882  003748  EC9E  F02F         	call	_wr16	;wreg free
  2883  00374C  0E02               	movlw	2
  2884  00374E  EC8C  F030         	call	_cmd_incrementn
  2885  003752  C04A  F029         	movff	_cmd_offset,??_display_status
  2886  003756  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2887  00375A  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2888  00375C  0E00               	movlw	0
  2889  00375E  2429               	addwf	??_display_status,w,c
  2890  003760  6E11               	movwf	wr16@addr,c
  2891  003762  0E80               	movlw	128
  2892  003764  202A               	addwfc	??_display_status+1,w,c
  2893  003766  6E12               	movwf	wr16@addr+1,c
  2894  003768  0E10               	movlw	16
  2895  00376A  202B               	addwfc	??_display_status+2,w,c
  2896  00376C  6E13               	movwf	wr16@addr+2,c
  2897  00376E  0E00               	movlw	0
  2898  003770  6E15               	movwf	wr16@value+1,c
  2899  003772  0ED0               	movlw	208
  2900  003774  6E14               	movwf	wr16@value,c
  2901  003776  EC9E  F02F         	call	_wr16	;wreg free
  2902  00377A  0E02               	movlw	2
  2903  00377C  EC8C  F030         	call	_cmd_incrementn
  2904  003780  C04A  F029         	movff	_cmd_offset,??_display_status
  2905  003784  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2906  003788  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2907  00378A  0E00               	movlw	0
  2908  00378C  2429               	addwf	??_display_status,w,c
  2909  00378E  6E11               	movwf	wr16@addr,c
  2910  003790  0E80               	movlw	128
  2911  003792  202A               	addwfc	??_display_status+1,w,c
  2912  003794  6E12               	movwf	wr16@addr+1,c
  2913  003796  0E10               	movlw	16
  2914  003798  202B               	addwfc	??_display_status+2,w,c
  2915  00379A  6E13               	movwf	wr16@addr+2,c
  2916  00379C  0E00               	movlw	0
  2917  00379E  6E15               	movwf	wr16@value+1,c
  2918  0037A0  0E1D               	movlw	29
  2919  0037A2  6E14               	movwf	wr16@value,c
  2920  0037A4  EC9E  F02F         	call	_wr16	;wreg free
  2921  0037A8  0E02               	movlw	2
  2922  0037AA  EC8C  F030         	call	_cmd_incrementn
  2923  0037AE  C04A  F029         	movff	_cmd_offset,??_display_status
  2924  0037B2  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2925  0037B6  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2926  0037B8  0E00               	movlw	0
  2927  0037BA  2429               	addwf	??_display_status,w,c
  2928  0037BC  6E11               	movwf	wr16@addr,c
  2929  0037BE  0E80               	movlw	128
  2930  0037C0  202A               	addwfc	??_display_status+1,w,c
  2931  0037C2  6E12               	movwf	wr16@addr+1,c
  2932  0037C4  0E10               	movlw	16
  2933  0037C6  202B               	addwfc	??_display_status+2,w,c
  2934  0037C8  6E13               	movwf	wr16@addr+2,c
  2935  0037CA  0E00               	movlw	0
  2936  0037CC  6E15               	movwf	wr16@value+1,c
  2937  0037CE  0E00               	movlw	0
  2938  0037D0  6E14               	movwf	wr16@value,c
  2939  0037D2  EC9E  F02F         	call	_wr16	;wreg free
  2940  0037D6  0E02               	movlw	2
  2941  0037D8  EC8C  F030         	call	_cmd_incrementn
  2942  0037DC  C04A  F029         	movff	_cmd_offset,??_display_status
  2943  0037E0  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  2944  0037E4  6A2B               	clrf	(??_display_status+2)& (0+255),c
  2945  0037E6  0E00               	movlw	0
  2946  0037E8  2429               	addwf	??_display_status,w,c
  2947  0037EA  6E16               	movwf	wr8s@addr,c
  2948  0037EC  0E80               	movlw	128
  2949  0037EE  202A               	addwfc	??_display_status+1,w,c
  2950  0037F0  6E17               	movwf	wr8s@addr+1,c
  2951  0037F2  0E10               	movlw	16
  2952  0037F4  202B               	addwfc	??_display_status+2,w,c
  2953  0037F6  6E18               	movwf	wr8s@addr+2,c
  2954  0037F8  0E46               	movlw	low STR_17
  2955  0037FA  6E19               	movwf	wr8s@s,c
  2956  0037FC  0E0F               	movlw	high STR_17
  2957  0037FE  6E1A               	movwf	wr8s@s+1,c
  2958  003800  EC64  F02D         	call	_wr8s	;wreg free
  2959  003804  EC8C  F030         	call	_cmd_incrementn
  2960                           
  2961                           ;display.c: 139: if (radio) {
  2962  003808  5028               	movf	display_status@radio,w,c
  2963  00380A  B4D8               	btfsc	status,2,c
  2964  00380C  D00B               	goto	l4598
  2965                           
  2966                           ;display.c: 140: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2967  00380E  0E00               	movlw	0
  2968  003810  6E1E               	movwf	cmd@command,c
  2969  003812  0E00               	movlw	0
  2970  003814  6E1F               	movwf	cmd@command+1,c
  2971  003816  0E00               	movlw	0
  2972  003818  6E20               	movwf	cmd@command+2,c
  2973  00381A  0E04               	movlw	4
  2974  00381C  6E21               	movwf	cmd@command+3,c
  2975  00381E  ECD9  F02F         	call	_cmd	;wreg free
  2976                           
  2977                           ;display.c: 141: } else {
  2978  003822  D00A               	goto	l662
  2979  003824                     l4598:
  2980                           
  2981                           ;display.c: 142: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  2982  003824  0EFF               	movlw	255
  2983  003826  6E1E               	movwf	cmd@command,c
  2984  003828  0EFF               	movlw	255
  2985  00382A  6E1F               	movwf	cmd@command+1,c
  2986  00382C  0EFF               	movlw	255
  2987  00382E  6E20               	movwf	cmd@command+2,c
  2988  003830  0E04               	movlw	4
  2989  003832  6E21               	movwf	cmd@command+3,c
  2990  003834  ECD9  F02F         	call	_cmd	;wreg free
  2991  003838                     l662:
  2992                           
  2993                           ;display.c: 143: }
  2994                           ;display.c: 144: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 405);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 208);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  2995  003838  0E0C               	movlw	12
  2996  00383A  6E1E               	movwf	cmd@command,c
  2997  00383C  0EFF               	movlw	255
  2998  00383E  6E1F               	movwf	cmd@command+1,c
  2999  003840  0EFF               	movlw	255
  3000  003842  6E20               	movwf	cmd@command+2,c
  3001  003844  0EFF               	movlw	255
  3002  003846  6E21               	movwf	cmd@command+3,c
  3003  003848  ECD9  F02F         	call	_cmd	;wreg free
  3004  00384C  C04A  F029         	movff	_cmd_offset,??_display_status
  3005  003850  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  3006  003854  6A2B               	clrf	(??_display_status+2)& (0+255),c
  3007  003856  0E00               	movlw	0
  3008  003858  2429               	addwf	??_display_status,w,c
  3009  00385A  6E11               	movwf	wr16@addr,c
  3010  00385C  0E80               	movlw	128
  3011  00385E  202A               	addwfc	??_display_status+1,w,c
  3012  003860  6E12               	movwf	wr16@addr+1,c
  3013  003862  0E10               	movlw	16
  3014  003864  202B               	addwfc	??_display_status+2,w,c
  3015  003866  6E13               	movwf	wr16@addr+2,c
  3016  003868  0E01               	movlw	1
  3017  00386A  6E15               	movwf	wr16@value+1,c
  3018  00386C  0E95               	movlw	149
  3019  00386E  6E14               	movwf	wr16@value,c
  3020  003870  EC9E  F02F         	call	_wr16	;wreg free
  3021  003874  0E02               	movlw	2
  3022  003876  EC8C  F030         	call	_cmd_incrementn
  3023  00387A  C04A  F029         	movff	_cmd_offset,??_display_status
  3024  00387E  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  3025  003882  6A2B               	clrf	(??_display_status+2)& (0+255),c
  3026  003884  0E00               	movlw	0
  3027  003886  2429               	addwf	??_display_status,w,c
  3028  003888  6E11               	movwf	wr16@addr,c
  3029  00388A  0E80               	movlw	128
  3030  00388C  202A               	addwfc	??_display_status+1,w,c
  3031  00388E  6E12               	movwf	wr16@addr+1,c
  3032  003890  0E10               	movlw	16
  3033  003892  202B               	addwfc	??_display_status+2,w,c
  3034  003894  6E13               	movwf	wr16@addr+2,c
  3035  003896  0E00               	movlw	0
  3036  003898  6E15               	movwf	wr16@value+1,c
  3037  00389A  0ED0               	movlw	208
  3038  00389C  6E14               	movwf	wr16@value,c
  3039  00389E  EC9E  F02F         	call	_wr16	;wreg free
  3040  0038A2  0E02               	movlw	2
  3041  0038A4  EC8C  F030         	call	_cmd_incrementn
  3042  0038A8  C04A  F029         	movff	_cmd_offset,??_display_status
  3043  0038AC  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  3044  0038B0  6A2B               	clrf	(??_display_status+2)& (0+255),c
  3045  0038B2  0E00               	movlw	0
  3046  0038B4  2429               	addwf	??_display_status,w,c
  3047  0038B6  6E11               	movwf	wr16@addr,c
  3048  0038B8  0E80               	movlw	128
  3049  0038BA  202A               	addwfc	??_display_status+1,w,c
  3050  0038BC  6E12               	movwf	wr16@addr+1,c
  3051  0038BE  0E10               	movlw	16
  3052  0038C0  202B               	addwfc	??_display_status+2,w,c
  3053  0038C2  6E13               	movwf	wr16@addr+2,c
  3054  0038C4  0E00               	movlw	0
  3055  0038C6  6E15               	movwf	wr16@value+1,c
  3056  0038C8  0E1D               	movlw	29
  3057  0038CA  6E14               	movwf	wr16@value,c
  3058  0038CC  EC9E  F02F         	call	_wr16	;wreg free
  3059  0038D0  0E02               	movlw	2
  3060  0038D2  EC8C  F030         	call	_cmd_incrementn
  3061  0038D6  C04A  F029         	movff	_cmd_offset,??_display_status
  3062  0038DA  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  3063  0038DE  6A2B               	clrf	(??_display_status+2)& (0+255),c
  3064  0038E0  0E00               	movlw	0
  3065  0038E2  2429               	addwf	??_display_status,w,c
  3066  0038E4  6E11               	movwf	wr16@addr,c
  3067  0038E6  0E80               	movlw	128
  3068  0038E8  202A               	addwfc	??_display_status+1,w,c
  3069  0038EA  6E12               	movwf	wr16@addr+1,c
  3070  0038EC  0E10               	movlw	16
  3071  0038EE  202B               	addwfc	??_display_status+2,w,c
  3072  0038F0  6E13               	movwf	wr16@addr+2,c
  3073  0038F2  0E00               	movlw	0
  3074  0038F4  6E15               	movwf	wr16@value+1,c
  3075  0038F6  0E00               	movlw	0
  3076  0038F8  6E14               	movwf	wr16@value,c
  3077  0038FA  EC9E  F02F         	call	_wr16	;wreg free
  3078  0038FE  0E02               	movlw	2
  3079  003900  EC8C  F030         	call	_cmd_incrementn
  3080  003904  C04A  F029         	movff	_cmd_offset,??_display_status
  3081  003908  C04B  F02A         	movff	_cmd_offset+1,??_display_status+1
  3082  00390C  6A2B               	clrf	(??_display_status+2)& (0+255),c
  3083  00390E  0E00               	movlw	0
  3084  003910  2429               	addwf	??_display_status,w,c
  3085  003912  6E16               	movwf	wr8s@addr,c
  3086  003914  0E80               	movlw	128
  3087  003916  202A               	addwfc	??_display_status+1,w,c
  3088  003918  6E17               	movwf	wr8s@addr+1,c
  3089  00391A  0E10               	movlw	16
  3090  00391C  202B               	addwfc	??_display_status+2,w,c
  3091  00391E  6E18               	movwf	wr8s@addr+2,c
  3092  003920  0E2A               	movlw	low STR_18
  3093  003922  6E19               	movwf	wr8s@s,c
  3094  003924  0E0F               	movlw	high STR_18
  3095  003926  6E1A               	movwf	wr8s@s+1,c
  3096  003928  EC64  F02D         	call	_wr8s	;wreg free
  3097  00392C  EC8C  F030         	call	_cmd_incrementn
  3098  003930  0012               	return		;funcret
  3099  003932                     __end_of_display_status:
  3100                           	opt stack 0
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           intcon	equ	0xFF2
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           plusw1	equ	0xFE3
  3110                           fsr1l	equ	0xFE1
  3111                           plusw2	equ	0xFDB
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _display_laptime *****************
  3115 ;; Defined at:
  3116 ;;		line 147 in file "display.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  current_int     2   36[COMRAM] int 
  3119 ;;  current_dec     2   38[COMRAM] int 
  3120 ;;  best_int        2   40[COMRAM] int 
  3121 ;;  best_dec        2   42[COMRAM] int 
  3122 ;;  last_int        2   44[COMRAM] int 
  3123 ;;  last_dec        2   46[COMRAM] int 
  3124 ;;  lap             2   48[COMRAM] int 
  3125 ;;  best_lap        2   50[COMRAM] int 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  time_differe    2   57[COMRAM] int 
  3128 ;;  time_differe    2   55[COMRAM] int 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3138 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3142 ;;Total ram usage:       23 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    7
  3145 ;; This function calls:
  3146 ;;		_cmd
  3147 ;;		_cmd_incrementn
  3148 ;;		_wr16
  3149 ;;		_wr8s
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text3
  3156  003932                     __ptext3:
  3157                           	opt stack 0
  3158  003932                     _display_laptime:
  3159                           	opt stack 23
  3160                           
  3161                           ;display.c: 149: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<<0))
      +                          );
  3162                           
  3163                           ;incstack = 0
  3164  003932  0E00               	movlw	0
  3165  003934  6E1E               	movwf	cmd@command,c
  3166  003936  0E7D               	movlw	125
  3167  003938  6E1F               	movwf	cmd@command+1,c
  3168  00393A  0EFF               	movlw	255
  3169  00393C  6E20               	movwf	cmd@command+2,c
  3170  00393E  0E04               	movlw	4
  3171  003940  6E21               	movwf	cmd@command+3,c
  3172  003942  ECD9  F02F         	call	_cmd	;wreg free
  3173                           
  3174                           ;display.c: 154: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 165);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344
      +                          UL+
  3175  003946  0E0C               	movlw	12
  3176  003948  6E1E               	movwf	cmd@command,c
  3177  00394A  0EFF               	movlw	255
  3178  00394C  6E1F               	movwf	cmd@command+1,c
  3179  00394E  0EFF               	movlw	255
  3180  003950  6E20               	movwf	cmd@command+2,c
  3181  003952  0EFF               	movlw	255
  3182  003954  6E21               	movwf	cmd@command+3,c
  3183  003956  ECD9  F02F         	call	_cmd	;wreg free
  3184  00395A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3185  00395E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3186  003962  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3187  003964  0E00               	movlw	0
  3188  003966  2435               	addwf	??_display_laptime,w,c
  3189  003968  6E11               	movwf	wr16@addr,c
  3190  00396A  0E80               	movlw	128
  3191  00396C  2036               	addwfc	??_display_laptime+1,w,c
  3192  00396E  6E12               	movwf	wr16@addr+1,c
  3193  003970  0E10               	movlw	16
  3194  003972  2037               	addwfc	??_display_laptime+2,w,c
  3195  003974  6E13               	movwf	wr16@addr+2,c
  3196  003976  0E00               	movlw	0
  3197  003978  6E15               	movwf	wr16@value+1,c
  3198  00397A  0EF0               	movlw	240
  3199  00397C  6E14               	movwf	wr16@value,c
  3200  00397E  EC9E  F02F         	call	_wr16	;wreg free
  3201  003982  0E02               	movlw	2
  3202  003984  EC8C  F030         	call	_cmd_incrementn
  3203  003988  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3204  00398C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3205  003990  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3206  003992  0E00               	movlw	0
  3207  003994  2435               	addwf	??_display_laptime,w,c
  3208  003996  6E11               	movwf	wr16@addr,c
  3209  003998  0E80               	movlw	128
  3210  00399A  2036               	addwfc	??_display_laptime+1,w,c
  3211  00399C  6E12               	movwf	wr16@addr+1,c
  3212  00399E  0E10               	movlw	16
  3213  0039A0  2037               	addwfc	??_display_laptime+2,w,c
  3214  0039A2  6E13               	movwf	wr16@addr+2,c
  3215  0039A4  0E00               	movlw	0
  3216  0039A6  6E15               	movwf	wr16@value+1,c
  3217  0039A8  0EA5               	movlw	165
  3218  0039AA  6E14               	movwf	wr16@value,c
  3219  0039AC  EC9E  F02F         	call	_wr16	;wreg free
  3220  0039B0  0E02               	movlw	2
  3221  0039B2  EC8C  F030         	call	_cmd_incrementn
  3222  0039B6  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3223  0039BA  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3224  0039BE  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3225  0039C0  0E00               	movlw	0
  3226  0039C2  2435               	addwf	??_display_laptime,w,c
  3227  0039C4  6E11               	movwf	wr16@addr,c
  3228  0039C6  0E80               	movlw	128
  3229  0039C8  2036               	addwfc	??_display_laptime+1,w,c
  3230  0039CA  6E12               	movwf	wr16@addr+1,c
  3231  0039CC  0E10               	movlw	16
  3232  0039CE  2037               	addwfc	??_display_laptime+2,w,c
  3233  0039D0  6E13               	movwf	wr16@addr+2,c
  3234  0039D2  0E00               	movlw	0
  3235  0039D4  6E15               	movwf	wr16@value+1,c
  3236  0039D6  0E1B               	movlw	27
  3237  0039D8  6E14               	movwf	wr16@value,c
  3238  0039DA  EC9E  F02F         	call	_wr16	;wreg free
  3239  0039DE  0E02               	movlw	2
  3240  0039E0  EC8C  F030         	call	_cmd_incrementn
  3241  0039E4  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3242  0039E8  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3243  0039EC  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3244  0039EE  0E00               	movlw	0
  3245  0039F0  2435               	addwf	??_display_laptime,w,c
  3246  0039F2  6E11               	movwf	wr16@addr,c
  3247  0039F4  0E80               	movlw	128
  3248  0039F6  2036               	addwfc	??_display_laptime+1,w,c
  3249  0039F8  6E12               	movwf	wr16@addr+1,c
  3250  0039FA  0E10               	movlw	16
  3251  0039FC  2037               	addwfc	??_display_laptime+2,w,c
  3252  0039FE  6E13               	movwf	wr16@addr+2,c
  3253  003A00  0E06               	movlw	6
  3254  003A02  6E15               	movwf	wr16@value+1,c
  3255  003A04  0E00               	movlw	0
  3256  003A06  6E14               	movwf	wr16@value,c
  3257  003A08  EC9E  F02F         	call	_wr16	;wreg free
  3258  003A0C  0E02               	movlw	2
  3259  003A0E  EC8C  F030         	call	_cmd_incrementn
  3260  003A12  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3261  003A16  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3262  003A1A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3263  003A1C  0E00               	movlw	0
  3264  003A1E  2435               	addwf	??_display_laptime,w,c
  3265  003A20  6E16               	movwf	wr8s@addr,c
  3266  003A22  0E80               	movlw	128
  3267  003A24  2036               	addwfc	??_display_laptime+1,w,c
  3268  003A26  6E17               	movwf	wr8s@addr+1,c
  3269  003A28  0E10               	movlw	16
  3270  003A2A  2037               	addwfc	??_display_laptime+2,w,c
  3271  003A2C  6E18               	movwf	wr8s@addr+2,c
  3272  003A2E  0E42               	movlw	low STR_19
  3273  003A30  6E19               	movwf	wr8s@s,c
  3274  003A32  0E0F               	movlw	high STR_19
  3275  003A34  6E1A               	movwf	wr8s@s+1,c
  3276  003A36  EC64  F02D         	call	_wr8s	;wreg free
  3277  003A3A  EC8C  F030         	call	_cmd_incrementn
  3278                           
  3279                           ;display.c: 155: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 190);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd(lap+1);
  3280  003A3E  0E2E               	movlw	46
  3281  003A40  6E1E               	movwf	cmd@command,c
  3282  003A42  0EFF               	movlw	255
  3283  003A44  6E1F               	movwf	cmd@command+1,c
  3284  003A46  0EFF               	movlw	255
  3285  003A48  6E20               	movwf	cmd@command+2,c
  3286  003A4A  0EFF               	movlw	255
  3287  003A4C  6E21               	movwf	cmd@command+3,c
  3288  003A4E  ECD9  F02F         	call	_cmd	;wreg free
  3289  003A52  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3290  003A56  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3291  003A5A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3292  003A5C  0E00               	movlw	0
  3293  003A5E  2435               	addwf	??_display_laptime,w,c
  3294  003A60  6E11               	movwf	wr16@addr,c
  3295  003A62  0E80               	movlw	128
  3296  003A64  2036               	addwfc	??_display_laptime+1,w,c
  3297  003A66  6E12               	movwf	wr16@addr+1,c
  3298  003A68  0E10               	movlw	16
  3299  003A6A  2037               	addwfc	??_display_laptime+2,w,c
  3300  003A6C  6E13               	movwf	wr16@addr+2,c
  3301  003A6E  0E00               	movlw	0
  3302  003A70  6E15               	movwf	wr16@value+1,c
  3303  003A72  0EF0               	movlw	240
  3304  003A74  6E14               	movwf	wr16@value,c
  3305  003A76  EC9E  F02F         	call	_wr16	;wreg free
  3306  003A7A  0E02               	movlw	2
  3307  003A7C  EC8C  F030         	call	_cmd_incrementn
  3308  003A80  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3309  003A84  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3310  003A88  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3311  003A8A  0E00               	movlw	0
  3312  003A8C  2435               	addwf	??_display_laptime,w,c
  3313  003A8E  6E11               	movwf	wr16@addr,c
  3314  003A90  0E80               	movlw	128
  3315  003A92  2036               	addwfc	??_display_laptime+1,w,c
  3316  003A94  6E12               	movwf	wr16@addr+1,c
  3317  003A96  0E10               	movlw	16
  3318  003A98  2037               	addwfc	??_display_laptime+2,w,c
  3319  003A9A  6E13               	movwf	wr16@addr+2,c
  3320  003A9C  0E00               	movlw	0
  3321  003A9E  6E15               	movwf	wr16@value+1,c
  3322  003AA0  0EBE               	movlw	190
  3323  003AA2  6E14               	movwf	wr16@value,c
  3324  003AA4  EC9E  F02F         	call	_wr16	;wreg free
  3325  003AA8  0E02               	movlw	2
  3326  003AAA  EC8C  F030         	call	_cmd_incrementn
  3327  003AAE  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3328  003AB2  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3329  003AB6  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3330  003AB8  0E00               	movlw	0
  3331  003ABA  2435               	addwf	??_display_laptime,w,c
  3332  003ABC  6E11               	movwf	wr16@addr,c
  3333  003ABE  0E80               	movlw	128
  3334  003AC0  2036               	addwfc	??_display_laptime+1,w,c
  3335  003AC2  6E12               	movwf	wr16@addr+1,c
  3336  003AC4  0E10               	movlw	16
  3337  003AC6  2037               	addwfc	??_display_laptime+2,w,c
  3338  003AC8  6E13               	movwf	wr16@addr+2,c
  3339  003ACA  0E00               	movlw	0
  3340  003ACC  6E15               	movwf	wr16@value+1,c
  3341  003ACE  0E1D               	movlw	29
  3342  003AD0  6E14               	movwf	wr16@value,c
  3343  003AD2  EC9E  F02F         	call	_wr16	;wreg free
  3344  003AD6  0E02               	movlw	2
  3345  003AD8  EC8C  F030         	call	_cmd_incrementn
  3346  003ADC  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3347  003AE0  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3348  003AE4  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3349  003AE6  0E00               	movlw	0
  3350  003AE8  2435               	addwf	??_display_laptime,w,c
  3351  003AEA  6E11               	movwf	wr16@addr,c
  3352  003AEC  0E80               	movlw	128
  3353  003AEE  2036               	addwfc	??_display_laptime+1,w,c
  3354  003AF0  6E12               	movwf	wr16@addr+1,c
  3355  003AF2  0E10               	movlw	16
  3356  003AF4  2037               	addwfc	??_display_laptime+2,w,c
  3357  003AF6  6E13               	movwf	wr16@addr+2,c
  3358  003AF8  0E06               	movlw	6
  3359  003AFA  6E15               	movwf	wr16@value+1,c
  3360  003AFC  0E00               	movlw	0
  3361  003AFE  6E14               	movwf	wr16@value,c
  3362  003B00  EC9E  F02F         	call	_wr16	;wreg free
  3363  003B04  0E02               	movlw	2
  3364  003B06  EC8C  F030         	call	_cmd_incrementn
  3365  003B0A  0E01               	movlw	1
  3366  003B0C  2431               	addwf	display_laptime@lap,w,c
  3367  003B0E  6E35               	movwf	??_display_laptime& (0+255),c
  3368  003B10  0E00               	movlw	0
  3369  003B12  2032               	addwfc	display_laptime@lap+1,w,c
  3370  003B14  6E36               	movwf	(??_display_laptime+1)& (0+255),c
  3371  003B16  C035  F01E         	movff	??_display_laptime,cmd@command
  3372  003B1A  C036  F01F         	movff	??_display_laptime+1,cmd@command+1
  3373  003B1E  0E00               	movlw	0
  3374  003B20  BE1F               	btfsc	cmd@command+1,7,c
  3375  003B22  0EFF               	movlw	-1
  3376  003B24  6E20               	movwf	cmd@command+2,c
  3377  003B26  6E21               	movwf	cmd@command+3,c
  3378  003B28  ECD9  F02F         	call	_cmd	;wreg free
  3379                           
  3380                           ;display.c: 157: int time_difference_integer = last_int - best_int;
  3381  003B2C  C029  F035         	movff	display_laptime@best_int,??_display_laptime
  3382  003B30  C02A  F036         	movff	display_laptime@best_int+1,??_display_laptime+1
  3383  003B34  1E35               	comf	??_display_laptime,f,c
  3384  003B36  1E36               	comf	??_display_laptime+1,f,c
  3385  003B38  4A35               	infsnz	??_display_laptime,f,c
  3386  003B3A  2A36               	incf	??_display_laptime+1,f,c
  3387  003B3C  502D               	movf	display_laptime@last_int,w,c
  3388  003B3E  2435               	addwf	??_display_laptime,w,c
  3389  003B40  6E3A               	movwf	display_laptime@time_difference_integer,c
  3390  003B42  502E               	movf	display_laptime@last_int+1,w,c
  3391  003B44  2036               	addwfc	??_display_laptime+1,w,c
  3392  003B46  6E3B               	movwf	display_laptime@time_difference_integer+1,c
  3393                           
  3394                           ;display.c: 158: int time_difference_decimal = last_dec - best_dec;
  3395  003B48  C02B  F035         	movff	display_laptime@best_dec,??_display_laptime
  3396  003B4C  C02C  F036         	movff	display_laptime@best_dec+1,??_display_laptime+1
  3397  003B50  1E35               	comf	??_display_laptime,f,c
  3398  003B52  1E36               	comf	??_display_laptime+1,f,c
  3399  003B54  4A35               	infsnz	??_display_laptime,f,c
  3400  003B56  2A36               	incf	??_display_laptime+1,f,c
  3401  003B58  502F               	movf	display_laptime@last_dec,w,c
  3402  003B5A  2435               	addwf	??_display_laptime,w,c
  3403  003B5C  6E38               	movwf	display_laptime@time_difference_decimal,c
  3404  003B5E  5030               	movf	display_laptime@last_dec+1,w,c
  3405  003B60  2036               	addwfc	??_display_laptime+1,w,c
  3406  003B62  6E39               	movwf	display_laptime@time_difference_decimal+1,c
  3407                           
  3408                           ;display.c: 160: if(time_difference_integer > 0) {
  3409  003B64  BE3B               	btfsc	display_laptime@time_difference_integer+1,7,c
  3410  003B66  D08C               	goto	l4636
  3411  003B68  503B               	movf	display_laptime@time_difference_integer+1,w,c
  3412  003B6A  E103               	bnz	u1230
  3413  003B6C  043A               	decf	display_laptime@time_difference_integer,w,c
  3414  003B6E  A0D8               	btfss	status,0,c
  3415  003B70  D087               	goto	l4636
  3416  003B72                     u1230:
  3417                           
  3418                           ;display.c: 161: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  3419  003B72  0E00               	movlw	0
  3420  003B74  6E1E               	movwf	cmd@command,c
  3421  003B76  0E00               	movlw	0
  3422  003B78  6E1F               	movwf	cmd@command+1,c
  3423  003B7A  0EFF               	movlw	255
  3424  003B7C  6E20               	movwf	cmd@command+2,c
  3425  003B7E  0E04               	movlw	4
  3426  003B80  6E21               	movwf	cmd@command+3,c
  3427  003B82  ECD9  F02F         	call	_cmd	;wreg free
  3428                           
  3429                           ;display.c: 162: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_o
      +                          ffs
  3430  003B86  0E0C               	movlw	12
  3431  003B88  6E1E               	movwf	cmd@command,c
  3432  003B8A  0EFF               	movlw	255
  3433  003B8C  6E1F               	movwf	cmd@command+1,c
  3434  003B8E  0EFF               	movlw	255
  3435  003B90  6E20               	movwf	cmd@command+2,c
  3436  003B92  0EFF               	movlw	255
  3437  003B94  6E21               	movwf	cmd@command+3,c
  3438  003B96  ECD9  F02F         	call	_cmd	;wreg free
  3439  003B9A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3440  003B9E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3441  003BA2  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3442  003BA4  0E00               	movlw	0
  3443  003BA6  2435               	addwf	??_display_laptime,w,c
  3444  003BA8  6E11               	movwf	wr16@addr,c
  3445  003BAA  0E80               	movlw	128
  3446  003BAC  2036               	addwfc	??_display_laptime+1,w,c
  3447  003BAE  6E12               	movwf	wr16@addr+1,c
  3448  003BB0  0E10               	movlw	16
  3449  003BB2  2037               	addwfc	??_display_laptime+2,w,c
  3450  003BB4  6E13               	movwf	wr16@addr+2,c
  3451  003BB6  0E00               	movlw	0
  3452  003BB8  6E15               	movwf	wr16@value+1,c
  3453  003BBA  0E05               	movlw	5
  3454  003BBC  6E14               	movwf	wr16@value,c
  3455  003BBE  EC9E  F02F         	call	_wr16	;wreg free
  3456  003BC2  0E02               	movlw	2
  3457  003BC4  EC8C  F030         	call	_cmd_incrementn
  3458  003BC8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3459  003BCC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3460  003BD0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3461  003BD2  0E00               	movlw	0
  3462  003BD4  2435               	addwf	??_display_laptime,w,c
  3463  003BD6  6E11               	movwf	wr16@addr,c
  3464  003BD8  0E80               	movlw	128
  3465  003BDA  2036               	addwfc	??_display_laptime+1,w,c
  3466  003BDC  6E12               	movwf	wr16@addr+1,c
  3467  003BDE  0E10               	movlw	16
  3468  003BE0  2037               	addwfc	??_display_laptime+2,w,c
  3469  003BE2  6E13               	movwf	wr16@addr+2,c
  3470  003BE4  0E00               	movlw	0
  3471  003BE6  6E15               	movwf	wr16@value+1,c
  3472  003BE8  0E50               	movlw	80
  3473  003BEA  6E14               	movwf	wr16@value,c
  3474  003BEC  EC9E  F02F         	call	_wr16	;wreg free
  3475  003BF0  0E02               	movlw	2
  3476  003BF2  EC8C  F030         	call	_cmd_incrementn
  3477  003BF6  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3478  003BFA  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3479  003BFE  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3480  003C00  0E00               	movlw	0
  3481  003C02  2435               	addwf	??_display_laptime,w,c
  3482  003C04  6E11               	movwf	wr16@addr,c
  3483  003C06  0E80               	movlw	128
  3484  003C08  2036               	addwfc	??_display_laptime+1,w,c
  3485  003C0A  6E12               	movwf	wr16@addr+1,c
  3486  003C0C  0E10               	movlw	16
  3487  003C0E  2037               	addwfc	??_display_laptime+2,w,c
  3488  003C10  6E13               	movwf	wr16@addr+2,c
  3489  003C12  0E00               	movlw	0
  3490  003C14  6E15               	movwf	wr16@value+1,c
  3491  003C16  0E1F               	movlw	31
  3492  003C18  6E14               	movwf	wr16@value,c
  3493  003C1A  EC9E  F02F         	call	_wr16	;wreg free
  3494  003C1E  0E02               	movlw	2
  3495  003C20  EC8C  F030         	call	_cmd_incrementn
  3496  003C24  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3497  003C28  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3498  003C2C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3499  003C2E  0E00               	movlw	0
  3500  003C30  2435               	addwf	??_display_laptime,w,c
  3501  003C32  6E11               	movwf	wr16@addr,c
  3502  003C34  0E80               	movlw	128
  3503  003C36  2036               	addwfc	??_display_laptime+1,w,c
  3504  003C38  6E12               	movwf	wr16@addr+1,c
  3505  003C3A  0E10               	movlw	16
  3506  003C3C  2037               	addwfc	??_display_laptime+2,w,c
  3507  003C3E  6E13               	movwf	wr16@addr+2,c
  3508  003C40  0E00               	movlw	0
  3509  003C42  6E15               	movwf	wr16@value+1,c
  3510  003C44  0E00               	movlw	0
  3511  003C46  6E14               	movwf	wr16@value,c
  3512  003C48  EC9E  F02F         	call	_wr16	;wreg free
  3513  003C4C  0E02               	movlw	2
  3514  003C4E  EC8C  F030         	call	_cmd_incrementn
  3515  003C52  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3516  003C56  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3517  003C5A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3518  003C5C  0E00               	movlw	0
  3519  003C5E  2435               	addwf	??_display_laptime,w,c
  3520  003C60  6E16               	movwf	wr8s@addr,c
  3521  003C62  0E80               	movlw	128
  3522  003C64  2036               	addwfc	??_display_laptime+1,w,c
  3523  003C66  6E17               	movwf	wr8s@addr+1,c
  3524  003C68  0E10               	movlw	16
  3525  003C6A  2037               	addwfc	??_display_laptime+2,w,c
  3526  003C6C  6E18               	movwf	wr8s@addr+2,c
  3527  003C6E  0E58               	movlw	low STR_20
  3528  003C70  6E19               	movwf	wr8s@s,c
  3529  003C72  0E0F               	movlw	high STR_20
  3530  003C74  6E1A               	movwf	wr8s@s+1,c
  3531  003C76  EC64  F02D         	call	_wr8s	;wreg free
  3532  003C7A  EC8C  F030         	call	_cmd_incrementn
  3533                           
  3534                           ;display.c: 163: } else {
  3535  003C7E  D086               	goto	l4640
  3536  003C80                     l4636:
  3537                           
  3538                           ;display.c: 164: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&255UL)<<0)));
  3539  003C80  0E00               	movlw	0
  3540  003C82  6E1E               	movwf	cmd@command,c
  3541  003C84  0EFF               	movlw	255
  3542  003C86  6E1F               	movwf	cmd@command+1,c
  3543  003C88  0E00               	movlw	0
  3544  003C8A  6E20               	movwf	cmd@command+2,c
  3545  003C8C  0E04               	movlw	4
  3546  003C8E  6E21               	movwf	cmd@command+3,c
  3547  003C90  ECD9  F02F         	call	_cmd	;wreg free
  3548                           
  3549                           ;display.c: 165: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_o
      +                          ffs
  3550  003C94  0E0C               	movlw	12
  3551  003C96  6E1E               	movwf	cmd@command,c
  3552  003C98  0EFF               	movlw	255
  3553  003C9A  6E1F               	movwf	cmd@command+1,c
  3554  003C9C  0EFF               	movlw	255
  3555  003C9E  6E20               	movwf	cmd@command+2,c
  3556  003CA0  0EFF               	movlw	255
  3557  003CA2  6E21               	movwf	cmd@command+3,c
  3558  003CA4  ECD9  F02F         	call	_cmd	;wreg free
  3559  003CA8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3560  003CAC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3561  003CB0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3562  003CB2  0E00               	movlw	0
  3563  003CB4  2435               	addwf	??_display_laptime,w,c
  3564  003CB6  6E11               	movwf	wr16@addr,c
  3565  003CB8  0E80               	movlw	128
  3566  003CBA  2036               	addwfc	??_display_laptime+1,w,c
  3567  003CBC  6E12               	movwf	wr16@addr+1,c
  3568  003CBE  0E10               	movlw	16
  3569  003CC0  2037               	addwfc	??_display_laptime+2,w,c
  3570  003CC2  6E13               	movwf	wr16@addr+2,c
  3571  003CC4  0E00               	movlw	0
  3572  003CC6  6E15               	movwf	wr16@value+1,c
  3573  003CC8  0E05               	movlw	5
  3574  003CCA  6E14               	movwf	wr16@value,c
  3575  003CCC  EC9E  F02F         	call	_wr16	;wreg free
  3576  003CD0  0E02               	movlw	2
  3577  003CD2  EC8C  F030         	call	_cmd_incrementn
  3578  003CD6  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3579  003CDA  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3580  003CDE  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3581  003CE0  0E00               	movlw	0
  3582  003CE2  2435               	addwf	??_display_laptime,w,c
  3583  003CE4  6E11               	movwf	wr16@addr,c
  3584  003CE6  0E80               	movlw	128
  3585  003CE8  2036               	addwfc	??_display_laptime+1,w,c
  3586  003CEA  6E12               	movwf	wr16@addr+1,c
  3587  003CEC  0E10               	movlw	16
  3588  003CEE  2037               	addwfc	??_display_laptime+2,w,c
  3589  003CF0  6E13               	movwf	wr16@addr+2,c
  3590  003CF2  0E00               	movlw	0
  3591  003CF4  6E15               	movwf	wr16@value+1,c
  3592  003CF6  0E50               	movlw	80
  3593  003CF8  6E14               	movwf	wr16@value,c
  3594  003CFA  EC9E  F02F         	call	_wr16	;wreg free
  3595  003CFE  0E02               	movlw	2
  3596  003D00  EC8C  F030         	call	_cmd_incrementn
  3597  003D04  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3598  003D08  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3599  003D0C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3600  003D0E  0E00               	movlw	0
  3601  003D10  2435               	addwf	??_display_laptime,w,c
  3602  003D12  6E11               	movwf	wr16@addr,c
  3603  003D14  0E80               	movlw	128
  3604  003D16  2036               	addwfc	??_display_laptime+1,w,c
  3605  003D18  6E12               	movwf	wr16@addr+1,c
  3606  003D1A  0E10               	movlw	16
  3607  003D1C  2037               	addwfc	??_display_laptime+2,w,c
  3608  003D1E  6E13               	movwf	wr16@addr+2,c
  3609  003D20  0E00               	movlw	0
  3610  003D22  6E15               	movwf	wr16@value+1,c
  3611  003D24  0E1F               	movlw	31
  3612  003D26  6E14               	movwf	wr16@value,c
  3613  003D28  EC9E  F02F         	call	_wr16	;wreg free
  3614  003D2C  0E02               	movlw	2
  3615  003D2E  EC8C  F030         	call	_cmd_incrementn
  3616  003D32  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3617  003D36  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3618  003D3A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3619  003D3C  0E00               	movlw	0
  3620  003D3E  2435               	addwf	??_display_laptime,w,c
  3621  003D40  6E11               	movwf	wr16@addr,c
  3622  003D42  0E80               	movlw	128
  3623  003D44  2036               	addwfc	??_display_laptime+1,w,c
  3624  003D46  6E12               	movwf	wr16@addr+1,c
  3625  003D48  0E10               	movlw	16
  3626  003D4A  2037               	addwfc	??_display_laptime+2,w,c
  3627  003D4C  6E13               	movwf	wr16@addr+2,c
  3628  003D4E  0E00               	movlw	0
  3629  003D50  6E15               	movwf	wr16@value+1,c
  3630  003D52  0E00               	movlw	0
  3631  003D54  6E14               	movwf	wr16@value,c
  3632  003D56  EC9E  F02F         	call	_wr16	;wreg free
  3633  003D5A  0E02               	movlw	2
  3634  003D5C  EC8C  F030         	call	_cmd_incrementn
  3635  003D60  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3636  003D64  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3637  003D68  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3638  003D6A  0E00               	movlw	0
  3639  003D6C  2435               	addwf	??_display_laptime,w,c
  3640  003D6E  6E16               	movwf	wr8s@addr,c
  3641  003D70  0E80               	movlw	128
  3642  003D72  2036               	addwfc	??_display_laptime+1,w,c
  3643  003D74  6E17               	movwf	wr8s@addr+1,c
  3644  003D76  0E10               	movlw	16
  3645  003D78  2037               	addwfc	??_display_laptime+2,w,c
  3646  003D7A  6E18               	movwf	wr8s@addr+2,c
  3647  003D7C  0E5A               	movlw	low STR_21
  3648  003D7E  6E19               	movwf	wr8s@s,c
  3649  003D80  0E0F               	movlw	high STR_21
  3650  003D82  6E1A               	movwf	wr8s@s+1,c
  3651  003D84  EC64  F02D         	call	_wr8s	;wreg free
  3652  003D88  EC8C  F030         	call	_cmd_incrementn
  3653  003D8C                     l4640:
  3654                           
  3655                           ;display.c: 166: }
  3656                           ;display.c: 167: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 53);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          off
  3657  003D8C  0E0C               	movlw	12
  3658  003D8E  6E1E               	movwf	cmd@command,c
  3659  003D90  0EFF               	movlw	255
  3660  003D92  6E1F               	movwf	cmd@command+1,c
  3661  003D94  0EFF               	movlw	255
  3662  003D96  6E20               	movwf	cmd@command+2,c
  3663  003D98  0EFF               	movlw	255
  3664  003D9A  6E21               	movwf	cmd@command+3,c
  3665  003D9C  ECD9  F02F         	call	_cmd	;wreg free
  3666  003DA0  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3667  003DA4  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3668  003DA8  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3669  003DAA  0E00               	movlw	0
  3670  003DAC  2435               	addwf	??_display_laptime,w,c
  3671  003DAE  6E11               	movwf	wr16@addr,c
  3672  003DB0  0E80               	movlw	128
  3673  003DB2  2036               	addwfc	??_display_laptime+1,w,c
  3674  003DB4  6E12               	movwf	wr16@addr+1,c
  3675  003DB6  0E10               	movlw	16
  3676  003DB8  2037               	addwfc	??_display_laptime+2,w,c
  3677  003DBA  6E13               	movwf	wr16@addr+2,c
  3678  003DBC  0E00               	movlw	0
  3679  003DBE  6E15               	movwf	wr16@value+1,c
  3680  003DC0  0E35               	movlw	53
  3681  003DC2  6E14               	movwf	wr16@value,c
  3682  003DC4  EC9E  F02F         	call	_wr16	;wreg free
  3683  003DC8  0E02               	movlw	2
  3684  003DCA  EC8C  F030         	call	_cmd_incrementn
  3685  003DCE  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3686  003DD2  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3687  003DD6  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3688  003DD8  0E00               	movlw	0
  3689  003DDA  2435               	addwf	??_display_laptime,w,c
  3690  003DDC  6E11               	movwf	wr16@addr,c
  3691  003DDE  0E80               	movlw	128
  3692  003DE0  2036               	addwfc	??_display_laptime+1,w,c
  3693  003DE2  6E12               	movwf	wr16@addr+1,c
  3694  003DE4  0E10               	movlw	16
  3695  003DE6  2037               	addwfc	??_display_laptime+2,w,c
  3696  003DE8  6E13               	movwf	wr16@addr+2,c
  3697  003DEA  0E00               	movlw	0
  3698  003DEC  6E15               	movwf	wr16@value+1,c
  3699  003DEE  0E50               	movlw	80
  3700  003DF0  6E14               	movwf	wr16@value,c
  3701  003DF2  EC9E  F02F         	call	_wr16	;wreg free
  3702  003DF6  0E02               	movlw	2
  3703  003DF8  EC8C  F030         	call	_cmd_incrementn
  3704  003DFC  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3705  003E00  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3706  003E04  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3707  003E06  0E00               	movlw	0
  3708  003E08  2435               	addwf	??_display_laptime,w,c
  3709  003E0A  6E11               	movwf	wr16@addr,c
  3710  003E0C  0E80               	movlw	128
  3711  003E0E  2036               	addwfc	??_display_laptime+1,w,c
  3712  003E10  6E12               	movwf	wr16@addr+1,c
  3713  003E12  0E10               	movlw	16
  3714  003E14  2037               	addwfc	??_display_laptime+2,w,c
  3715  003E16  6E13               	movwf	wr16@addr+2,c
  3716  003E18  0E00               	movlw	0
  3717  003E1A  6E15               	movwf	wr16@value+1,c
  3718  003E1C  0E1F               	movlw	31
  3719  003E1E  6E14               	movwf	wr16@value,c
  3720  003E20  EC9E  F02F         	call	_wr16	;wreg free
  3721  003E24  0E02               	movlw	2
  3722  003E26  EC8C  F030         	call	_cmd_incrementn
  3723  003E2A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3724  003E2E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3725  003E32  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3726  003E34  0E00               	movlw	0
  3727  003E36  2435               	addwf	??_display_laptime,w,c
  3728  003E38  6E11               	movwf	wr16@addr,c
  3729  003E3A  0E80               	movlw	128
  3730  003E3C  2036               	addwfc	??_display_laptime+1,w,c
  3731  003E3E  6E12               	movwf	wr16@addr+1,c
  3732  003E40  0E10               	movlw	16
  3733  003E42  2037               	addwfc	??_display_laptime+2,w,c
  3734  003E44  6E13               	movwf	wr16@addr+2,c
  3735  003E46  0E00               	movlw	0
  3736  003E48  6E15               	movwf	wr16@value+1,c
  3737  003E4A  0E00               	movlw	0
  3738  003E4C  6E14               	movwf	wr16@value,c
  3739  003E4E  EC9E  F02F         	call	_wr16	;wreg free
  3740  003E52  0E02               	movlw	2
  3741  003E54  EC8C  F030         	call	_cmd_incrementn
  3742  003E58  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3743  003E5C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3744  003E60  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3745  003E62  0E00               	movlw	0
  3746  003E64  2435               	addwf	??_display_laptime,w,c
  3747  003E66  6E16               	movwf	wr8s@addr,c
  3748  003E68  0E80               	movlw	128
  3749  003E6A  2036               	addwfc	??_display_laptime+1,w,c
  3750  003E6C  6E17               	movwf	wr8s@addr+1,c
  3751  003E6E  0E10               	movlw	16
  3752  003E70  2037               	addwfc	??_display_laptime+2,w,c
  3753  003E72  6E18               	movwf	wr8s@addr+2,c
  3754  003E74  0E5C               	movlw	low STR_22
  3755  003E76  6E19               	movwf	wr8s@s,c
  3756  003E78  0E0F               	movlw	high STR_22
  3757  003E7A  6E1A               	movwf	wr8s@s+1,c
  3758  003E7C  EC64  F02D         	call	_wr8s	;wreg free
  3759  003E80  EC8C  F030         	call	_cmd_incrementn
  3760                           
  3761                           ;display.c: 168: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 30);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(time_difference_integer);
  3762  003E84  0E2E               	movlw	46
  3763  003E86  6E1E               	movwf	cmd@command,c
  3764  003E88  0EFF               	movlw	255
  3765  003E8A  6E1F               	movwf	cmd@command+1,c
  3766  003E8C  0EFF               	movlw	255
  3767  003E8E  6E20               	movwf	cmd@command+2,c
  3768  003E90  0EFF               	movlw	255
  3769  003E92  6E21               	movwf	cmd@command+3,c
  3770  003E94  ECD9  F02F         	call	_cmd	;wreg free
  3771  003E98  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3772  003E9C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3773  003EA0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3774  003EA2  0E00               	movlw	0
  3775  003EA4  2435               	addwf	??_display_laptime,w,c
  3776  003EA6  6E11               	movwf	wr16@addr,c
  3777  003EA8  0E80               	movlw	128
  3778  003EAA  2036               	addwfc	??_display_laptime+1,w,c
  3779  003EAC  6E12               	movwf	wr16@addr+1,c
  3780  003EAE  0E10               	movlw	16
  3781  003EB0  2037               	addwfc	??_display_laptime+2,w,c
  3782  003EB2  6E13               	movwf	wr16@addr+2,c
  3783  003EB4  0E00               	movlw	0
  3784  003EB6  6E15               	movwf	wr16@value+1,c
  3785  003EB8  0E1E               	movlw	30
  3786  003EBA  6E14               	movwf	wr16@value,c
  3787  003EBC  EC9E  F02F         	call	_wr16	;wreg free
  3788  003EC0  0E02               	movlw	2
  3789  003EC2  EC8C  F030         	call	_cmd_incrementn
  3790  003EC6  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3791  003ECA  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3792  003ECE  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3793  003ED0  0E00               	movlw	0
  3794  003ED2  2435               	addwf	??_display_laptime,w,c
  3795  003ED4  6E11               	movwf	wr16@addr,c
  3796  003ED6  0E80               	movlw	128
  3797  003ED8  2036               	addwfc	??_display_laptime+1,w,c
  3798  003EDA  6E12               	movwf	wr16@addr+1,c
  3799  003EDC  0E10               	movlw	16
  3800  003EDE  2037               	addwfc	??_display_laptime+2,w,c
  3801  003EE0  6E13               	movwf	wr16@addr+2,c
  3802  003EE2  0E00               	movlw	0
  3803  003EE4  6E15               	movwf	wr16@value+1,c
  3804  003EE6  0E50               	movlw	80
  3805  003EE8  6E14               	movwf	wr16@value,c
  3806  003EEA  EC9E  F02F         	call	_wr16	;wreg free
  3807  003EEE  0E02               	movlw	2
  3808  003EF0  EC8C  F030         	call	_cmd_incrementn
  3809  003EF4  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3810  003EF8  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3811  003EFC  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3812  003EFE  0E00               	movlw	0
  3813  003F00  2435               	addwf	??_display_laptime,w,c
  3814  003F02  6E11               	movwf	wr16@addr,c
  3815  003F04  0E80               	movlw	128
  3816  003F06  2036               	addwfc	??_display_laptime+1,w,c
  3817  003F08  6E12               	movwf	wr16@addr+1,c
  3818  003F0A  0E10               	movlw	16
  3819  003F0C  2037               	addwfc	??_display_laptime+2,w,c
  3820  003F0E  6E13               	movwf	wr16@addr+2,c
  3821  003F10  0E00               	movlw	0
  3822  003F12  6E15               	movwf	wr16@value+1,c
  3823  003F14  0E1F               	movlw	31
  3824  003F16  6E14               	movwf	wr16@value,c
  3825  003F18  EC9E  F02F         	call	_wr16	;wreg free
  3826  003F1C  0E02               	movlw	2
  3827  003F1E  EC8C  F030         	call	_cmd_incrementn
  3828  003F22  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3829  003F26  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3830  003F2A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3831  003F2C  0E00               	movlw	0
  3832  003F2E  2435               	addwf	??_display_laptime,w,c
  3833  003F30  6E11               	movwf	wr16@addr,c
  3834  003F32  0E80               	movlw	128
  3835  003F34  2036               	addwfc	??_display_laptime+1,w,c
  3836  003F36  6E12               	movwf	wr16@addr+1,c
  3837  003F38  0E10               	movlw	16
  3838  003F3A  2037               	addwfc	??_display_laptime+2,w,c
  3839  003F3C  6E13               	movwf	wr16@addr+2,c
  3840  003F3E  0E00               	movlw	0
  3841  003F40  6E15               	movwf	wr16@value+1,c
  3842  003F42  0E00               	movlw	0
  3843  003F44  6E14               	movwf	wr16@value,c
  3844  003F46  EC9E  F02F         	call	_wr16	;wreg free
  3845  003F4A  0E02               	movlw	2
  3846  003F4C  EC8C  F030         	call	_cmd_incrementn
  3847  003F50  C03A  F01E         	movff	display_laptime@time_difference_integer,cmd@command
  3848  003F54  C03B  F01F         	movff	display_laptime@time_difference_integer+1,cmd@command+1
  3849  003F58  0E00               	movlw	0
  3850  003F5A  BE1F               	btfsc	cmd@command+1,7,c
  3851  003F5C  0EFF               	movlw	-1
  3852  003F5E  6E20               	movwf	cmd@command+2,c
  3853  003F60  6E21               	movwf	cmd@command+3,c
  3854  003F62  ECD9  F02F         	call	_cmd	;wreg free
  3855                           
  3856                           ;display.c: 169: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 62);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(time_difference_decimal);
  3857  003F66  0E2E               	movlw	46
  3858  003F68  6E1E               	movwf	cmd@command,c
  3859  003F6A  0EFF               	movlw	255
  3860  003F6C  6E1F               	movwf	cmd@command+1,c
  3861  003F6E  0EFF               	movlw	255
  3862  003F70  6E20               	movwf	cmd@command+2,c
  3863  003F72  0EFF               	movlw	255
  3864  003F74  6E21               	movwf	cmd@command+3,c
  3865  003F76  ECD9  F02F         	call	_cmd	;wreg free
  3866  003F7A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3867  003F7E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3868  003F82  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3869  003F84  0E00               	movlw	0
  3870  003F86  2435               	addwf	??_display_laptime,w,c
  3871  003F88  6E11               	movwf	wr16@addr,c
  3872  003F8A  0E80               	movlw	128
  3873  003F8C  2036               	addwfc	??_display_laptime+1,w,c
  3874  003F8E  6E12               	movwf	wr16@addr+1,c
  3875  003F90  0E10               	movlw	16
  3876  003F92  2037               	addwfc	??_display_laptime+2,w,c
  3877  003F94  6E13               	movwf	wr16@addr+2,c
  3878  003F96  0E00               	movlw	0
  3879  003F98  6E15               	movwf	wr16@value+1,c
  3880  003F9A  0E3E               	movlw	62
  3881  003F9C  6E14               	movwf	wr16@value,c
  3882  003F9E  EC9E  F02F         	call	_wr16	;wreg free
  3883  003FA2  0E02               	movlw	2
  3884  003FA4  EC8C  F030         	call	_cmd_incrementn
  3885  003FA8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3886  003FAC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3887  003FB0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3888  003FB2  0E00               	movlw	0
  3889  003FB4  2435               	addwf	??_display_laptime,w,c
  3890  003FB6  6E11               	movwf	wr16@addr,c
  3891  003FB8  0E80               	movlw	128
  3892  003FBA  2036               	addwfc	??_display_laptime+1,w,c
  3893  003FBC  6E12               	movwf	wr16@addr+1,c
  3894  003FBE  0E10               	movlw	16
  3895  003FC0  2037               	addwfc	??_display_laptime+2,w,c
  3896  003FC2  6E13               	movwf	wr16@addr+2,c
  3897  003FC4  0E00               	movlw	0
  3898  003FC6  6E15               	movwf	wr16@value+1,c
  3899  003FC8  0E50               	movlw	80
  3900  003FCA  6E14               	movwf	wr16@value,c
  3901  003FCC  EC9E  F02F         	call	_wr16	;wreg free
  3902  003FD0  0E02               	movlw	2
  3903  003FD2  EC8C  F030         	call	_cmd_incrementn
  3904  003FD6  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3905  003FDA  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3906  003FDE  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3907  003FE0  0E00               	movlw	0
  3908  003FE2  2435               	addwf	??_display_laptime,w,c
  3909  003FE4  6E11               	movwf	wr16@addr,c
  3910  003FE6  0E80               	movlw	128
  3911  003FE8  2036               	addwfc	??_display_laptime+1,w,c
  3912  003FEA  6E12               	movwf	wr16@addr+1,c
  3913  003FEC  0E10               	movlw	16
  3914  003FEE  2037               	addwfc	??_display_laptime+2,w,c
  3915  003FF0  6E13               	movwf	wr16@addr+2,c
  3916  003FF2  0E00               	movlw	0
  3917  003FF4  6E15               	movwf	wr16@value+1,c
  3918  003FF6  0E1F               	movlw	31
  3919  003FF8  6E14               	movwf	wr16@value,c
  3920  003FFA  EC9E  F02F         	call	_wr16	;wreg free
  3921  003FFE  0E02               	movlw	2
  3922  004000  EC8C  F030         	call	_cmd_incrementn
  3923  004004  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3924  004008  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3925  00400C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3926  00400E  0E00               	movlw	0
  3927  004010  2435               	addwf	??_display_laptime,w,c
  3928  004012  6E11               	movwf	wr16@addr,c
  3929  004014  0E80               	movlw	128
  3930  004016  2036               	addwfc	??_display_laptime+1,w,c
  3931  004018  6E12               	movwf	wr16@addr+1,c
  3932  00401A  0E10               	movlw	16
  3933  00401C  2037               	addwfc	??_display_laptime+2,w,c
  3934  00401E  6E13               	movwf	wr16@addr+2,c
  3935  004020  0E00               	movlw	0
  3936  004022  6E15               	movwf	wr16@value+1,c
  3937  004024  0E00               	movlw	0
  3938  004026  6E14               	movwf	wr16@value,c
  3939  004028  EC9E  F02F         	call	_wr16	;wreg free
  3940  00402C  0E02               	movlw	2
  3941  00402E  EC8C  F030         	call	_cmd_incrementn
  3942  004032  C038  F01E         	movff	display_laptime@time_difference_decimal,cmd@command
  3943  004036  C039  F01F         	movff	display_laptime@time_difference_decimal+1,cmd@command+1
  3944  00403A  0E00               	movlw	0
  3945  00403C  BE1F               	btfsc	cmd@command+1,7,c
  3946  00403E  0EFF               	movlw	-1
  3947  004040  6E20               	movwf	cmd@command+2,c
  3948  004042  6E21               	movwf	cmd@command+3,c
  3949  004044  ECD9  F02F         	call	_cmd	;wreg free
  3950  004048  0012               	return		;funcret
  3951  00404A                     __end_of_display_laptime:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           intcon	equ	0xFF2
  3958                           postinc0	equ	0xFEE
  3959                           wreg	equ	0xFE8
  3960                           postdec1	equ	0xFE5
  3961                           plusw1	equ	0xFE3
  3962                           fsr1l	equ	0xFE1
  3963                           plusw2	equ	0xFDB
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function _display_brake_bias *****************
  3967 ;; Defined at:
  3968 ;;		line 228 in file "display.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  bias            2   36[COMRAM] int 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3984 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3986 ;;Total ram usage:        5 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    7
  3989 ;; This function calls:
  3990 ;;		_cmd
  3991 ;;		_cmd_incrementn
  3992 ;;		_wr16
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text4
  3999  005546                     __ptext4:
  4000                           	opt stack 0
  4001  005546                     _display_brake_bias:
  4002                           	opt stack 23
  4003                           
  4004                           ;display.c: 229: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  4005                           
  4006                           ;incstack = 0
  4007  005546  0EFF               	movlw	255
  4008  005548  6E1E               	movwf	cmd@command,c
  4009  00554A  0EFF               	movlw	255
  4010  00554C  6E1F               	movwf	cmd@command+1,c
  4011  00554E  0EFF               	movlw	255
  4012  005550  6E20               	movwf	cmd@command+2,c
  4013  005552  0E04               	movlw	4
  4014  005554  6E21               	movwf	cmd@command+3,c
  4015  005556  ECD9  F02F         	call	_cmd	;wreg free
  4016                           
  4017                           ;display.c: 230: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(bias);
  4018  00555A  0E2E               	movlw	46
  4019  00555C  6E1E               	movwf	cmd@command,c
  4020  00555E  0EFF               	movlw	255
  4021  005560  6E1F               	movwf	cmd@command+1,c
  4022  005562  0EFF               	movlw	255
  4023  005564  6E20               	movwf	cmd@command+2,c
  4024  005566  0EFF               	movlw	255
  4025  005568  6E21               	movwf	cmd@command+3,c
  4026  00556A  ECD9  F02F         	call	_cmd	;wreg free
  4027  00556E  C04A  F027         	movff	_cmd_offset,??_display_brake_bias
  4028  005572  C04B  F028         	movff	_cmd_offset+1,??_display_brake_bias+1
  4029  005576  6A29               	clrf	(??_display_brake_bias+2)& (0+255),c
  4030  005578  0E00               	movlw	0
  4031  00557A  2427               	addwf	??_display_brake_bias,w,c
  4032  00557C  6E11               	movwf	wr16@addr,c
  4033  00557E  0E80               	movlw	128
  4034  005580  2028               	addwfc	??_display_brake_bias+1,w,c
  4035  005582  6E12               	movwf	wr16@addr+1,c
  4036  005584  0E10               	movlw	16
  4037  005586  2029               	addwfc	??_display_brake_bias+2,w,c
  4038  005588  6E13               	movwf	wr16@addr+2,c
  4039  00558A  0E00               	movlw	0
  4040  00558C  6E15               	movwf	wr16@value+1,c
  4041  00558E  0E05               	movlw	5
  4042  005590  6E14               	movwf	wr16@value,c
  4043  005592  EC9E  F02F         	call	_wr16	;wreg free
  4044  005596  0E02               	movlw	2
  4045  005598  EC8C  F030         	call	_cmd_incrementn
  4046  00559C  C04A  F027         	movff	_cmd_offset,??_display_brake_bias
  4047  0055A0  C04B  F028         	movff	_cmd_offset+1,??_display_brake_bias+1
  4048  0055A4  6A29               	clrf	(??_display_brake_bias+2)& (0+255),c
  4049  0055A6  0E00               	movlw	0
  4050  0055A8  2427               	addwf	??_display_brake_bias,w,c
  4051  0055AA  6E11               	movwf	wr16@addr,c
  4052  0055AC  0E80               	movlw	128
  4053  0055AE  2028               	addwfc	??_display_brake_bias+1,w,c
  4054  0055B0  6E12               	movwf	wr16@addr+1,c
  4055  0055B2  0E10               	movlw	16
  4056  0055B4  2029               	addwfc	??_display_brake_bias+2,w,c
  4057  0055B6  6E13               	movwf	wr16@addr+2,c
  4058  0055B8  0E00               	movlw	0
  4059  0055BA  6E15               	movwf	wr16@value+1,c
  4060  0055BC  0EEC               	movlw	236
  4061  0055BE  6E14               	movwf	wr16@value,c
  4062  0055C0  EC9E  F02F         	call	_wr16	;wreg free
  4063  0055C4  0E02               	movlw	2
  4064  0055C6  EC8C  F030         	call	_cmd_incrementn
  4065  0055CA  C04A  F027         	movff	_cmd_offset,??_display_brake_bias
  4066  0055CE  C04B  F028         	movff	_cmd_offset+1,??_display_brake_bias+1
  4067  0055D2  6A29               	clrf	(??_display_brake_bias+2)& (0+255),c
  4068  0055D4  0E00               	movlw	0
  4069  0055D6  2427               	addwf	??_display_brake_bias,w,c
  4070  0055D8  6E11               	movwf	wr16@addr,c
  4071  0055DA  0E80               	movlw	128
  4072  0055DC  2028               	addwfc	??_display_brake_bias+1,w,c
  4073  0055DE  6E12               	movwf	wr16@addr+1,c
  4074  0055E0  0E10               	movlw	16
  4075  0055E2  2029               	addwfc	??_display_brake_bias+2,w,c
  4076  0055E4  6E13               	movwf	wr16@addr+2,c
  4077  0055E6  0E00               	movlw	0
  4078  0055E8  6E15               	movwf	wr16@value+1,c
  4079  0055EA  0E1E               	movlw	30
  4080  0055EC  6E14               	movwf	wr16@value,c
  4081  0055EE  EC9E  F02F         	call	_wr16	;wreg free
  4082  0055F2  0E02               	movlw	2
  4083  0055F4  EC8C  F030         	call	_cmd_incrementn
  4084  0055F8  C04A  F027         	movff	_cmd_offset,??_display_brake_bias
  4085  0055FC  C04B  F028         	movff	_cmd_offset+1,??_display_brake_bias+1
  4086  005600  6A29               	clrf	(??_display_brake_bias+2)& (0+255),c
  4087  005602  0E00               	movlw	0
  4088  005604  2427               	addwf	??_display_brake_bias,w,c
  4089  005606  6E11               	movwf	wr16@addr,c
  4090  005608  0E80               	movlw	128
  4091  00560A  2028               	addwfc	??_display_brake_bias+1,w,c
  4092  00560C  6E12               	movwf	wr16@addr+1,c
  4093  00560E  0E10               	movlw	16
  4094  005610  2029               	addwfc	??_display_brake_bias+2,w,c
  4095  005612  6E13               	movwf	wr16@addr+2,c
  4096  005614  0E00               	movlw	0
  4097  005616  6E15               	movwf	wr16@value+1,c
  4098  005618  0E00               	movlw	0
  4099  00561A  6E14               	movwf	wr16@value,c
  4100  00561C  EC9E  F02F         	call	_wr16	;wreg free
  4101  005620  0E02               	movlw	2
  4102  005622  EC8C  F030         	call	_cmd_incrementn
  4103  005626  C025  F01E         	movff	display_brake_bias@bias,cmd@command
  4104  00562A  C026  F01F         	movff	display_brake_bias@bias+1,cmd@command+1
  4105  00562E  0E00               	movlw	0
  4106  005630  BE1F               	btfsc	cmd@command+1,7,c
  4107  005632  0EFF               	movlw	-1
  4108  005634  6E20               	movwf	cmd@command+2,c
  4109  005636  6E21               	movwf	cmd@command+3,c
  4110  005638  ECD9  F02F         	call	_cmd	;wreg free
  4111  00563C  0012               	return		;funcret
  4112  00563E                     __end_of_display_brake_bias:
  4113                           	opt stack 0
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           intcon	equ	0xFF2
  4119                           postinc0	equ	0xFEE
  4120                           wreg	equ	0xFE8
  4121                           postdec1	equ	0xFE5
  4122                           plusw1	equ	0xFE3
  4123                           fsr1l	equ	0xFE1
  4124                           plusw2	equ	0xFDB
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _display *****************
  4128 ;; Defined at:
  4129 ;;		line 3 in file "display.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  rpm             2   47[COMRAM] int 
  4132 ;;  oilP            2   49[COMRAM] int 
  4133 ;;  fuelP           2   51[COMRAM] int 
  4134 ;;  tp              2   53[COMRAM] int 
  4135 ;;  speed           2   55[COMRAM] int 
  4136 ;;  gear            2   57[COMRAM] int 
  4137 ;;  engTemp         2   59[COMRAM] int 
  4138 ;;  oilTemp         2   61[COMRAM] int 
  4139 ;;  battVolts       2   63[COMRAM] int 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4151 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;Total ram usage:       18 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    8
  4158 ;; This function calls:
  4159 ;;		_display_battery
  4160 ;;		_display_bottom_section
  4161 ;;		_display_end
  4162 ;;		_display_gear
  4163 ;;		_display_labels
  4164 ;;		_display_oilTemp
  4165 ;;		_display_rpm
  4166 ;;		_display_speed
  4167 ;;		_display_start
  4168 ;;		_display_tp
  4169 ;;		_display_waterTemp
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text5
  4176  005D48                     __ptext5:
  4177                           	opt stack 0
  4178  005D48                     _display:
  4179                           	opt stack 22
  4180                           
  4181                           ;display.c: 4: display_start();
  4182                           
  4183                           ;incstack = 0
  4184  005D48  EC61  F02F         	call	_display_start	;wreg free
  4185                           
  4186                           ;display.c: 5: display_rpm(rpm);
  4187  005D4C  C030  F025         	movff	display@rpm,display_rpm@rpm
  4188  005D50  C031  F026         	movff	display@rpm+1,display_rpm@rpm+1
  4189  005D54  ECBA  F007         	call	_display_rpm	;wreg free
  4190                           
  4191                           ;display.c: 6: display_bottom_section();
  4192  005D58  EC02  F02A         	call	_display_bottom_section	;wreg free
  4193                           
  4194                           ;display.c: 7: display_labels();
  4195  005D5C  EC72  F012         	call	_display_labels	;wreg free
  4196                           
  4197                           ;display.c: 8: display_speed(speed);
  4198  005D60  C038  F025         	movff	display@speed,display_speed@speed
  4199  005D64  C039  F026         	movff	display@speed+1,display_speed@speed+1
  4200  005D68  EC80  F02C         	call	_display_speed	;wreg free
  4201                           
  4202                           ;display.c: 9: display_waterTemp(engTemp);
  4203  005D6C  C03C  F025         	movff	display@engTemp,display_waterTemp@temp
  4204  005D70  C03D  F026         	movff	display@engTemp+1,display_waterTemp@temp+1
  4205  005D74  EC1F  F02B         	call	_display_waterTemp	;wreg free
  4206                           
  4207                           ;display.c: 10: display_oilTemp(oilTemp);
  4208  005D78  C03E  F025         	movff	display@oilTemp,display_oilTemp@temp
  4209  005D7C  C03F  F026         	movff	display@oilTemp+1,display_oilTemp@temp+1
  4210  005D80  ECF2  F02C         	call	_display_oilTemp	;wreg free
  4211                           
  4212                           ;display.c: 11: display_gear(gear);
  4213  005D84  C03A  F025         	movff	display@gear,display_gear@gear
  4214  005D88  C03B  F026         	movff	display@gear+1,display_gear@gear+1
  4215  005D8C  EC14  F023         	call	_display_gear	;wreg free
  4216                           
  4217                           ;display.c: 12: display_battery(battVolts);
  4218  005D90  C040  F025         	movff	display@battVolts,display_battery@volts
  4219  005D94  C041  F026         	movff	display@battVolts+1,display_battery@volts+1
  4220  005D98  EC89  F025         	call	_display_battery	;wreg free
  4221                           
  4222                           ;display.c: 13: display_tp(tp);
  4223  005D9C  C036  F025         	movff	display@tp,display_tp@tp
  4224  005DA0  C037  F026         	movff	display@tp+1,display_tp@tp+1
  4225  005DA4  EC0E  F02C         	call	_display_tp	;wreg free
  4226                           
  4227                           ;display.c: 14: display_end();
  4228  005DA8  EC20  F02F         	call	_display_end	;wreg free
  4229  005DAC  0012               	return		;funcret
  4230  005DAE                     __end_of_display:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           intcon	equ	0xFF2
  4237                           postinc0	equ	0xFEE
  4238                           wreg	equ	0xFE8
  4239                           postdec1	equ	0xFE5
  4240                           plusw1	equ	0xFE3
  4241                           fsr1l	equ	0xFE1
  4242                           plusw2	equ	0xFDB
  4243                           status	equ	0xFD8
  4244                           
  4245 ;; *************** function _display_waterTemp *****************
  4246 ;; Defined at:
  4247 ;;		line 190 in file "display.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  temp            2   36[COMRAM] int 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;Total ram usage:        5 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    7
  4268 ;; This function calls:
  4269 ;;		_cmd
  4270 ;;		_cmd_incrementn
  4271 ;;		_wr16
  4272 ;; This function is called by:
  4273 ;;		_display
  4274 ;;		_main
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text6
  4279  00563E                     __ptext6:
  4280                           	opt stack 0
  4281  00563E                     _display_waterTemp:
  4282                           	opt stack 23
  4283                           
  4284                           ;display.c: 191: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  4285                           
  4286                           ;incstack = 0
  4287  00563E  0EFF               	movlw	255
  4288  005640  6E1E               	movwf	cmd@command,c
  4289  005642  0EFF               	movlw	255
  4290  005644  6E1F               	movwf	cmd@command+1,c
  4291  005646  0EFF               	movlw	255
  4292  005648  6E20               	movwf	cmd@command+2,c
  4293  00564A  0E04               	movlw	4
  4294  00564C  6E21               	movwf	cmd@command+3,c
  4295  00564E  ECD9  F02F         	call	_cmd	;wreg free
  4296                           
  4297                           ;display.c: 193: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 155);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(temp);
  4298  005652  0E2E               	movlw	46
  4299  005654  6E1E               	movwf	cmd@command,c
  4300  005656  0EFF               	movlw	255
  4301  005658  6E1F               	movwf	cmd@command+1,c
  4302  00565A  0EFF               	movlw	255
  4303  00565C  6E20               	movwf	cmd@command+2,c
  4304  00565E  0EFF               	movlw	255
  4305  005660  6E21               	movwf	cmd@command+3,c
  4306  005662  ECD9  F02F         	call	_cmd	;wreg free
  4307  005666  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  4308  00566A  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  4309  00566E  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  4310  005670  0E00               	movlw	0
  4311  005672  2427               	addwf	??_display_waterTemp,w,c
  4312  005674  6E11               	movwf	wr16@addr,c
  4313  005676  0E80               	movlw	128
  4314  005678  2028               	addwfc	??_display_waterTemp+1,w,c
  4315  00567A  6E12               	movwf	wr16@addr+1,c
  4316  00567C  0E10               	movlw	16
  4317  00567E  2029               	addwfc	??_display_waterTemp+2,w,c
  4318  005680  6E13               	movwf	wr16@addr+2,c
  4319  005682  0E00               	movlw	0
  4320  005684  6E15               	movwf	wr16@value+1,c
  4321  005686  0E05               	movlw	5
  4322  005688  6E14               	movwf	wr16@value,c
  4323  00568A  EC9E  F02F         	call	_wr16	;wreg free
  4324  00568E  0E02               	movlw	2
  4325  005690  EC8C  F030         	call	_cmd_incrementn
  4326  005694  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  4327  005698  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  4328  00569C  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  4329  00569E  0E00               	movlw	0
  4330  0056A0  2427               	addwf	??_display_waterTemp,w,c
  4331  0056A2  6E11               	movwf	wr16@addr,c
  4332  0056A4  0E80               	movlw	128
  4333  0056A6  2028               	addwfc	??_display_waterTemp+1,w,c
  4334  0056A8  6E12               	movwf	wr16@addr+1,c
  4335  0056AA  0E10               	movlw	16
  4336  0056AC  2029               	addwfc	??_display_waterTemp+2,w,c
  4337  0056AE  6E13               	movwf	wr16@addr+2,c
  4338  0056B0  0E00               	movlw	0
  4339  0056B2  6E15               	movwf	wr16@value+1,c
  4340  0056B4  0E9B               	movlw	155
  4341  0056B6  6E14               	movwf	wr16@value,c
  4342  0056B8  EC9E  F02F         	call	_wr16	;wreg free
  4343  0056BC  0E02               	movlw	2
  4344  0056BE  EC8C  F030         	call	_cmd_incrementn
  4345  0056C2  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  4346  0056C6  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  4347  0056CA  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  4348  0056CC  0E00               	movlw	0
  4349  0056CE  2427               	addwf	??_display_waterTemp,w,c
  4350  0056D0  6E11               	movwf	wr16@addr,c
  4351  0056D2  0E80               	movlw	128
  4352  0056D4  2028               	addwfc	??_display_waterTemp+1,w,c
  4353  0056D6  6E12               	movwf	wr16@addr+1,c
  4354  0056D8  0E10               	movlw	16
  4355  0056DA  2029               	addwfc	??_display_waterTemp+2,w,c
  4356  0056DC  6E13               	movwf	wr16@addr+2,c
  4357  0056DE  0E00               	movlw	0
  4358  0056E0  6E15               	movwf	wr16@value+1,c
  4359  0056E2  0E1F               	movlw	31
  4360  0056E4  6E14               	movwf	wr16@value,c
  4361  0056E6  EC9E  F02F         	call	_wr16	;wreg free
  4362  0056EA  0E02               	movlw	2
  4363  0056EC  EC8C  F030         	call	_cmd_incrementn
  4364  0056F0  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  4365  0056F4  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  4366  0056F8  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  4367  0056FA  0E00               	movlw	0
  4368  0056FC  2427               	addwf	??_display_waterTemp,w,c
  4369  0056FE  6E11               	movwf	wr16@addr,c
  4370  005700  0E80               	movlw	128
  4371  005702  2028               	addwfc	??_display_waterTemp+1,w,c
  4372  005704  6E12               	movwf	wr16@addr+1,c
  4373  005706  0E10               	movlw	16
  4374  005708  2029               	addwfc	??_display_waterTemp+2,w,c
  4375  00570A  6E13               	movwf	wr16@addr+2,c
  4376  00570C  0E00               	movlw	0
  4377  00570E  6E15               	movwf	wr16@value+1,c
  4378  005710  0E00               	movlw	0
  4379  005712  6E14               	movwf	wr16@value,c
  4380  005714  EC9E  F02F         	call	_wr16	;wreg free
  4381  005718  0E02               	movlw	2
  4382  00571A  EC8C  F030         	call	_cmd_incrementn
  4383  00571E  C025  F01E         	movff	display_waterTemp@temp,cmd@command
  4384  005722  C026  F01F         	movff	display_waterTemp@temp+1,cmd@command+1
  4385  005726  0E00               	movlw	0
  4386  005728  BE1F               	btfsc	cmd@command+1,7,c
  4387  00572A  0EFF               	movlw	-1
  4388  00572C  6E20               	movwf	cmd@command+2,c
  4389  00572E  6E21               	movwf	cmd@command+3,c
  4390  005730  ECD9  F02F         	call	_cmd	;wreg free
  4391  005734  0012               	return		;funcret
  4392  005736                     __end_of_display_waterTemp:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           intcon	equ	0xFF2
  4399                           postinc0	equ	0xFEE
  4400                           wreg	equ	0xFE8
  4401                           postdec1	equ	0xFE5
  4402                           plusw1	equ	0xFE3
  4403                           fsr1l	equ	0xFE1
  4404                           plusw2	equ	0xFDB
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _display_tp *****************
  4408 ;; Defined at:
  4409 ;;		line 218 in file "display.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  tp              2   36[COMRAM] int 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4425 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;Total ram usage:        5 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    7
  4430 ;; This function calls:
  4431 ;;		_cmd
  4432 ;;		_cmd_incrementn
  4433 ;;		_wr16
  4434 ;; This function is called by:
  4435 ;;		_display
  4436 ;;		_main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text7
  4441  00581C                     __ptext7:
  4442                           	opt stack 0
  4443  00581C                     _display_tp:
  4444                           	opt stack 23
  4445                           
  4446                           ;display.c: 220: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 455);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(tp);
  4447                           
  4448                           ;incstack = 0
  4449  00581C  0E2E               	movlw	46
  4450  00581E  6E1E               	movwf	cmd@command,c
  4451  005820  0EFF               	movlw	255
  4452  005822  6E1F               	movwf	cmd@command+1,c
  4453  005824  0EFF               	movlw	255
  4454  005826  6E20               	movwf	cmd@command+2,c
  4455  005828  0EFF               	movlw	255
  4456  00582A  6E21               	movwf	cmd@command+3,c
  4457  00582C  ECD9  F02F         	call	_cmd	;wreg free
  4458  005830  C04A  F027         	movff	_cmd_offset,??_display_tp
  4459  005834  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4460  005838  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4461  00583A  0E00               	movlw	0
  4462  00583C  2427               	addwf	??_display_tp,w,c
  4463  00583E  6E11               	movwf	wr16@addr,c
  4464  005840  0E80               	movlw	128
  4465  005842  2028               	addwfc	??_display_tp+1,w,c
  4466  005844  6E12               	movwf	wr16@addr+1,c
  4467  005846  0E10               	movlw	16
  4468  005848  2029               	addwfc	??_display_tp+2,w,c
  4469  00584A  6E13               	movwf	wr16@addr+2,c
  4470  00584C  0E01               	movlw	1
  4471  00584E  6E15               	movwf	wr16@value+1,c
  4472  005850  0EC7               	movlw	199
  4473  005852  6E14               	movwf	wr16@value,c
  4474  005854  EC9E  F02F         	call	_wr16	;wreg free
  4475  005858  0E02               	movlw	2
  4476  00585A  EC8C  F030         	call	_cmd_incrementn
  4477  00585E  C04A  F027         	movff	_cmd_offset,??_display_tp
  4478  005862  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4479  005866  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4480  005868  0E00               	movlw	0
  4481  00586A  2427               	addwf	??_display_tp,w,c
  4482  00586C  6E11               	movwf	wr16@addr,c
  4483  00586E  0E80               	movlw	128
  4484  005870  2028               	addwfc	??_display_tp+1,w,c
  4485  005872  6E12               	movwf	wr16@addr+1,c
  4486  005874  0E10               	movlw	16
  4487  005876  2029               	addwfc	??_display_tp+2,w,c
  4488  005878  6E13               	movwf	wr16@addr+2,c
  4489  00587A  0E00               	movlw	0
  4490  00587C  6E15               	movwf	wr16@value+1,c
  4491  00587E  0EEC               	movlw	236
  4492  005880  6E14               	movwf	wr16@value,c
  4493  005882  EC9E  F02F         	call	_wr16	;wreg free
  4494  005886  0E02               	movlw	2
  4495  005888  EC8C  F030         	call	_cmd_incrementn
  4496  00588C  C04A  F027         	movff	_cmd_offset,??_display_tp
  4497  005890  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4498  005894  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4499  005896  0E00               	movlw	0
  4500  005898  2427               	addwf	??_display_tp,w,c
  4501  00589A  6E11               	movwf	wr16@addr,c
  4502  00589C  0E80               	movlw	128
  4503  00589E  2028               	addwfc	??_display_tp+1,w,c
  4504  0058A0  6E12               	movwf	wr16@addr+1,c
  4505  0058A2  0E10               	movlw	16
  4506  0058A4  2029               	addwfc	??_display_tp+2,w,c
  4507  0058A6  6E13               	movwf	wr16@addr+2,c
  4508  0058A8  0E00               	movlw	0
  4509  0058AA  6E15               	movwf	wr16@value+1,c
  4510  0058AC  0E1E               	movlw	30
  4511  0058AE  6E14               	movwf	wr16@value,c
  4512  0058B0  EC9E  F02F         	call	_wr16	;wreg free
  4513  0058B4  0E02               	movlw	2
  4514  0058B6  EC8C  F030         	call	_cmd_incrementn
  4515  0058BA  C04A  F027         	movff	_cmd_offset,??_display_tp
  4516  0058BE  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4517  0058C2  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4518  0058C4  0E00               	movlw	0
  4519  0058C6  2427               	addwf	??_display_tp,w,c
  4520  0058C8  6E11               	movwf	wr16@addr,c
  4521  0058CA  0E80               	movlw	128
  4522  0058CC  2028               	addwfc	??_display_tp+1,w,c
  4523  0058CE  6E12               	movwf	wr16@addr+1,c
  4524  0058D0  0E10               	movlw	16
  4525  0058D2  2029               	addwfc	??_display_tp+2,w,c
  4526  0058D4  6E13               	movwf	wr16@addr+2,c
  4527  0058D6  0E08               	movlw	8
  4528  0058D8  6E15               	movwf	wr16@value+1,c
  4529  0058DA  0E00               	movlw	0
  4530  0058DC  6E14               	movwf	wr16@value,c
  4531  0058DE  EC9E  F02F         	call	_wr16	;wreg free
  4532  0058E2  0E02               	movlw	2
  4533  0058E4  EC8C  F030         	call	_cmd_incrementn
  4534  0058E8  C025  F01E         	movff	display_tp@tp,cmd@command
  4535  0058EC  C026  F01F         	movff	display_tp@tp+1,cmd@command+1
  4536  0058F0  0E00               	movlw	0
  4537  0058F2  BE1F               	btfsc	cmd@command+1,7,c
  4538  0058F4  0EFF               	movlw	-1
  4539  0058F6  6E20               	movwf	cmd@command+2,c
  4540  0058F8  6E21               	movwf	cmd@command+3,c
  4541  0058FA  ECD9  F02F         	call	_cmd	;wreg free
  4542  0058FE  0012               	return		;funcret
  4543  005900                     __end_of_display_tp:
  4544                           	opt stack 0
  4545                           tblptru	equ	0xFF8
  4546                           tblptrh	equ	0xFF7
  4547                           tblptrl	equ	0xFF6
  4548                           tablat	equ	0xFF5
  4549                           intcon	equ	0xFF2
  4550                           postinc0	equ	0xFEE
  4551                           wreg	equ	0xFE8
  4552                           postdec1	equ	0xFE5
  4553                           plusw1	equ	0xFE3
  4554                           fsr1l	equ	0xFE1
  4555                           plusw2	equ	0xFDB
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function _display_start *****************
  4559 ;; Defined at:
  4560 ;;		line 17 in file "display.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    7
  4581 ;; This function calls:
  4582 ;;		_cmd
  4583 ;; This function is called by:
  4584 ;;		_display
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text8
  4590  005EC2                     __ptext8:
  4591                           	opt stack 0
  4592  005EC2                     _display_start:
  4593                           	opt stack 23
  4594                           
  4595                           ;display.c: 18: cmd(4294967040UL);
  4596                           
  4597                           ;incstack = 0
  4598  005EC2  0E00               	movlw	0
  4599  005EC4  6E1E               	movwf	cmd@command,c
  4600  005EC6  0EFF               	movlw	255
  4601  005EC8  6E1F               	movwf	cmd@command+1,c
  4602  005ECA  0EFF               	movlw	255
  4603  005ECC  6E20               	movwf	cmd@command+2,c
  4604  005ECE  0EFF               	movlw	255
  4605  005ED0  6E21               	movwf	cmd@command+3,c
  4606  005ED2  ECD9  F02F         	call	_cmd	;wreg free
  4607                           
  4608                           ;display.c: 19: cmd(((2UL<<24)|(((20)&255UL)<<16)|(((20)&255UL)<<8)|(((20)&255UL)<<0)));
  4609  005ED6  0E14               	movlw	20
  4610  005ED8  6E1E               	movwf	cmd@command,c
  4611  005EDA  0E14               	movlw	20
  4612  005EDC  6E1F               	movwf	cmd@command+1,c
  4613  005EDE  0E14               	movlw	20
  4614  005EE0  6E20               	movwf	cmd@command+2,c
  4615  005EE2  0E02               	movlw	2
  4616  005EE4  6E21               	movwf	cmd@command+3,c
  4617  005EE6  ECD9  F02F         	call	_cmd	;wreg free
  4618                           
  4619                           ;display.c: 20: cmd(((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)));
  4620  005EEA  0E07               	movlw	7
  4621  005EEC  6E1E               	movwf	cmd@command,c
  4622  005EEE  0E00               	movlw	0
  4623  005EF0  6E1F               	movwf	cmd@command+1,c
  4624  005EF2  0E00               	movlw	0
  4625  005EF4  6E20               	movwf	cmd@command+2,c
  4626  005EF6  0E26               	movlw	38
  4627  005EF8  6E21               	movwf	cmd@command+3,c
  4628  005EFA  ECD9  F02F         	call	_cmd	;wreg free
  4629  005EFE  0012               	return		;funcret
  4630  005F00                     __end_of_display_start:
  4631                           	opt stack 0
  4632                           tblptru	equ	0xFF8
  4633                           tblptrh	equ	0xFF7
  4634                           tblptrl	equ	0xFF6
  4635                           tablat	equ	0xFF5
  4636                           intcon	equ	0xFF2
  4637                           postinc0	equ	0xFEE
  4638                           wreg	equ	0xFE8
  4639                           postdec1	equ	0xFE5
  4640                           plusw1	equ	0xFE3
  4641                           fsr1l	equ	0xFE1
  4642                           plusw2	equ	0xFDB
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function _display_speed *****************
  4646 ;; Defined at:
  4647 ;;		line 223 in file "display.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  speed           2   36[COMRAM] int 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;Total ram usage:        5 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    7
  4668 ;; This function calls:
  4669 ;;		_cmd
  4670 ;;		_cmd_incrementn
  4671 ;;		_wr16
  4672 ;; This function is called by:
  4673 ;;		_display
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text9
  4679  005900                     __ptext9:
  4680                           	opt stack 0
  4681  005900                     _display_speed:
  4682                           	opt stack 23
  4683                           
  4684                           ;display.c: 225: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 75);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(speed);
  4685                           
  4686                           ;incstack = 0
  4687  005900  0E2E               	movlw	46
  4688  005902  6E1E               	movwf	cmd@command,c
  4689  005904  0EFF               	movlw	255
  4690  005906  6E1F               	movwf	cmd@command+1,c
  4691  005908  0EFF               	movlw	255
  4692  00590A  6E20               	movwf	cmd@command+2,c
  4693  00590C  0EFF               	movlw	255
  4694  00590E  6E21               	movwf	cmd@command+3,c
  4695  005910  ECD9  F02F         	call	_cmd	;wreg free
  4696  005914  C04A  F027         	movff	_cmd_offset,??_display_speed
  4697  005918  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4698  00591C  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4699  00591E  0E00               	movlw	0
  4700  005920  2427               	addwf	??_display_speed,w,c
  4701  005922  6E11               	movwf	wr16@addr,c
  4702  005924  0E80               	movlw	128
  4703  005926  2028               	addwfc	??_display_speed+1,w,c
  4704  005928  6E12               	movwf	wr16@addr+1,c
  4705  00592A  0E10               	movlw	16
  4706  00592C  2029               	addwfc	??_display_speed+2,w,c
  4707  00592E  6E13               	movwf	wr16@addr+2,c
  4708  005930  0E00               	movlw	0
  4709  005932  6E15               	movwf	wr16@value+1,c
  4710  005934  0E4B               	movlw	75
  4711  005936  6E14               	movwf	wr16@value,c
  4712  005938  EC9E  F02F         	call	_wr16	;wreg free
  4713  00593C  0E02               	movlw	2
  4714  00593E  EC8C  F030         	call	_cmd_incrementn
  4715  005942  C04A  F027         	movff	_cmd_offset,??_display_speed
  4716  005946  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4717  00594A  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4718  00594C  0E00               	movlw	0
  4719  00594E  2427               	addwf	??_display_speed,w,c
  4720  005950  6E11               	movwf	wr16@addr,c
  4721  005952  0E80               	movlw	128
  4722  005954  2028               	addwfc	??_display_speed+1,w,c
  4723  005956  6E12               	movwf	wr16@addr+1,c
  4724  005958  0E10               	movlw	16
  4725  00595A  2029               	addwfc	??_display_speed+2,w,c
  4726  00595C  6E13               	movwf	wr16@addr+2,c
  4727  00595E  0E00               	movlw	0
  4728  005960  6E15               	movwf	wr16@value+1,c
  4729  005962  0E05               	movlw	5
  4730  005964  6E14               	movwf	wr16@value,c
  4731  005966  EC9E  F02F         	call	_wr16	;wreg free
  4732  00596A  0E02               	movlw	2
  4733  00596C  EC8C  F030         	call	_cmd_incrementn
  4734  005970  C04A  F027         	movff	_cmd_offset,??_display_speed
  4735  005974  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4736  005978  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4737  00597A  0E00               	movlw	0
  4738  00597C  2427               	addwf	??_display_speed,w,c
  4739  00597E  6E11               	movwf	wr16@addr,c
  4740  005980  0E80               	movlw	128
  4741  005982  2028               	addwfc	??_display_speed+1,w,c
  4742  005984  6E12               	movwf	wr16@addr+1,c
  4743  005986  0E10               	movlw	16
  4744  005988  2029               	addwfc	??_display_speed+2,w,c
  4745  00598A  6E13               	movwf	wr16@addr+2,c
  4746  00598C  0E00               	movlw	0
  4747  00598E  6E15               	movwf	wr16@value+1,c
  4748  005990  0E1F               	movlw	31
  4749  005992  6E14               	movwf	wr16@value,c
  4750  005994  EC9E  F02F         	call	_wr16	;wreg free
  4751  005998  0E02               	movlw	2
  4752  00599A  EC8C  F030         	call	_cmd_incrementn
  4753  00599E  C04A  F027         	movff	_cmd_offset,??_display_speed
  4754  0059A2  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4755  0059A6  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4756  0059A8  0E00               	movlw	0
  4757  0059AA  2427               	addwf	??_display_speed,w,c
  4758  0059AC  6E11               	movwf	wr16@addr,c
  4759  0059AE  0E80               	movlw	128
  4760  0059B0  2028               	addwfc	??_display_speed+1,w,c
  4761  0059B2  6E12               	movwf	wr16@addr+1,c
  4762  0059B4  0E10               	movlw	16
  4763  0059B6  2029               	addwfc	??_display_speed+2,w,c
  4764  0059B8  6E13               	movwf	wr16@addr+2,c
  4765  0059BA  0E08               	movlw	8
  4766  0059BC  6E15               	movwf	wr16@value+1,c
  4767  0059BE  0E00               	movlw	0
  4768  0059C0  6E14               	movwf	wr16@value,c
  4769  0059C2  EC9E  F02F         	call	_wr16	;wreg free
  4770  0059C6  0E02               	movlw	2
  4771  0059C8  EC8C  F030         	call	_cmd_incrementn
  4772  0059CC  C025  F01E         	movff	display_speed@speed,cmd@command
  4773  0059D0  C026  F01F         	movff	display_speed@speed+1,cmd@command+1
  4774  0059D4  0E00               	movlw	0
  4775  0059D6  BE1F               	btfsc	cmd@command+1,7,c
  4776  0059D8  0EFF               	movlw	-1
  4777  0059DA  6E20               	movwf	cmd@command+2,c
  4778  0059DC  6E21               	movwf	cmd@command+3,c
  4779  0059DE  ECD9  F02F         	call	_cmd	;wreg free
  4780  0059E2  0012               	return		;funcret
  4781  0059E4                     __end_of_display_speed:
  4782                           	opt stack 0
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           intcon	equ	0xFF2
  4788                           postinc0	equ	0xFEE
  4789                           wreg	equ	0xFE8
  4790                           postdec1	equ	0xFE5
  4791                           plusw1	equ	0xFE3
  4792                           fsr1l	equ	0xFE1
  4793                           plusw2	equ	0xFDB
  4794                           status	equ	0xFD8
  4795                           
  4796 ;; *************** function _display_rpm *****************
  4797 ;; Defined at:
  4798 ;;		line 233 in file "display.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  rpm             2   36[COMRAM] int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  val             2   41[COMRAM] int 
  4803 ;;  first_digit     2   45[COMRAM] int 
  4804 ;;  second_digit    2   43[COMRAM] int 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;Total ram usage:       11 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    7
  4821 ;; This function calls:
  4822 ;;		___awdiv
  4823 ;;		___awmod
  4824 ;;		___wmul
  4825 ;;		_cmd
  4826 ;;		_cmd_incrementn
  4827 ;;		_wr16
  4828 ;;		_wr8s
  4829 ;; This function is called by:
  4830 ;;		_display
  4831 ;;		_main
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text10
  4836  000F74                     __ptext10:
  4837                           	opt stack 0
  4838  000F74                     _display_rpm:
  4839                           	opt stack 23
  4840                           
  4841                           ;display.c: 234: int first_digit = rpm/1000;
  4842                           
  4843                           ;incstack = 0
  4844  000F74  C025  F010         	movff	display_rpm@rpm,___awdiv@dividend
  4845  000F78  C026  F011         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4846  000F7C  0E03               	movlw	3
  4847  000F7E  6E13               	movwf	___awdiv@divisor+1,c
  4848  000F80  0EE8               	movlw	232
  4849  000F82  6E12               	movwf	___awdiv@divisor,c
  4850  000F84  ECEE  F02D         	call	___awdiv	;wreg free
  4851  000F88  C010  F02E         	movff	?___awdiv,display_rpm@first_digit
  4852  000F8C  C011  F02F         	movff	?___awdiv+1,display_rpm@first_digit+1
  4853                           
  4854                           ;display.c: 235: int second_digit = (rpm/100)%10;
  4855  000F90  0E00               	movlw	0
  4856  000F92  6E13               	movwf	___awdiv@divisor+1,c
  4857  000F94  0E64               	movlw	100
  4858  000F96  6E12               	movwf	___awdiv@divisor,c
  4859  000F98  C025  F010         	movff	display_rpm@rpm,___awdiv@dividend
  4860  000F9C  C026  F011         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4861  000FA0  ECEE  F02D         	call	___awdiv	;wreg free
  4862  000FA4  C010  F018         	movff	?___awdiv,___awmod@dividend
  4863  000FA8  C011  F019         	movff	?___awdiv+1,___awmod@dividend+1
  4864  000FAC  0E00               	movlw	0
  4865  000FAE  6E1B               	movwf	___awmod@divisor+1,c
  4866  000FB0  0E0A               	movlw	10
  4867  000FB2  6E1A               	movwf	___awmod@divisor,c
  4868  000FB4  EC6C  F02E         	call	___awmod	;wreg free
  4869  000FB8  C018  F02C         	movff	?___awmod,display_rpm@second_digit
  4870  000FBC  C019  F02D         	movff	?___awmod+1,display_rpm@second_digit+1
  4871                           
  4872                           ;display.c: 238: cmd(((31UL<<24)|(((2UL)&15UL)<<0)));
  4873  000FC0  0E02               	movlw	2
  4874  000FC2  6E1E               	movwf	cmd@command,c
  4875  000FC4  0E00               	movlw	0
  4876  000FC6  6E1F               	movwf	cmd@command+1,c
  4877  000FC8  0E00               	movlw	0
  4878  000FCA  6E20               	movwf	cmd@command+2,c
  4879  000FCC  0E1F               	movlw	31
  4880  000FCE  6E21               	movwf	cmd@command+3,c
  4881  000FD0  ECD9  F02F         	call	_cmd	;wreg free
  4882                           
  4883                           ;display.c: 239: cmd(((4UL<<24)|(((20)&255UL)<<16)|(((20)&255UL)<<8)|(((20)&255UL)<<0)))
      +                          ;
  4884  000FD4  0E14               	movlw	20
  4885  000FD6  6E1E               	movwf	cmd@command,c
  4886  000FD8  0E14               	movlw	20
  4887  000FDA  6E1F               	movwf	cmd@command+1,c
  4888  000FDC  0E14               	movlw	20
  4889  000FDE  6E20               	movwf	cmd@command+2,c
  4890  000FE0  0E04               	movlw	4
  4891  000FE2  6E21               	movwf	cmd@command+3,c
  4892  000FE4  ECD9  F02F         	call	_cmd	;wreg free
  4893                           
  4894                           ;display.c: 240: cmd(((13UL<<24)|(((1750)&8191UL)<<0)));
  4895  000FE8  0ED6               	movlw	214
  4896  000FEA  6E1E               	movwf	cmd@command,c
  4897  000FEC  0E06               	movlw	6
  4898  000FEE  6E1F               	movwf	cmd@command+1,c
  4899  000FF0  0E00               	movlw	0
  4900  000FF2  6E20               	movwf	cmd@command+2,c
  4901  000FF4  0E0D               	movlw	13
  4902  000FF6  6E21               	movwf	cmd@command+3,c
  4903  000FF8  ECD9  F02F         	call	_cmd	;wreg free
  4904                           
  4905                           ;display.c: 241: cmd(((2UL<<30)|(((240)&511UL)<<21)|(((115)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4906  000FFC  0E00               	movlw	0
  4907  000FFE  6E1E               	movwf	cmd@command,c
  4908  001000  0E30               	movlw	48
  4909  001002  6E1F               	movwf	cmd@command+1,c
  4910  001004  0E07               	movlw	7
  4911  001006  6E20               	movwf	cmd@command+2,c
  4912  001008  0E9E               	movlw	158
  4913  00100A  6E21               	movwf	cmd@command+3,c
  4914  00100C  ECD9  F02F         	call	_cmd	;wreg free
  4915                           
  4916                           ;display.c: 242: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)))
      +                          ;
  4917  001010  0E3C               	movlw	60
  4918  001012  6E1E               	movwf	cmd@command,c
  4919  001014  0E3C               	movlw	60
  4920  001016  6E1F               	movwf	cmd@command+1,c
  4921  001018  0E3C               	movlw	60
  4922  00101A  6E20               	movwf	cmd@command+2,c
  4923  00101C  0E04               	movlw	4
  4924  00101E  6E21               	movwf	cmd@command+3,c
  4925  001020  ECD9  F02F         	call	_cmd	;wreg free
  4926                           
  4927                           ;display.c: 243: cmd(((13UL<<24)|(((1650)&8191UL)<<0)));
  4928  001024  0E72               	movlw	114
  4929  001026  6E1E               	movwf	cmd@command,c
  4930  001028  0E06               	movlw	6
  4931  00102A  6E1F               	movwf	cmd@command+1,c
  4932  00102C  0E00               	movlw	0
  4933  00102E  6E20               	movwf	cmd@command+2,c
  4934  001030  0E0D               	movlw	13
  4935  001032  6E21               	movwf	cmd@command+3,c
  4936  001034  ECD9  F02F         	call	_cmd	;wreg free
  4937                           
  4938                           ;display.c: 244: cmd(((2UL<<30)|(((240)&511UL)<<21)|(((115)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4939  001038  0E00               	movlw	0
  4940  00103A  6E1E               	movwf	cmd@command,c
  4941  00103C  0E30               	movlw	48
  4942  00103E  6E1F               	movwf	cmd@command+1,c
  4943  001040  0E07               	movlw	7
  4944  001042  6E20               	movwf	cmd@command+2,c
  4945  001044  0E9E               	movlw	158
  4946  001046  6E21               	movwf	cmd@command+3,c
  4947  001048  ECD9  F02F         	call	_cmd	;wreg free
  4948                           
  4949                           ;display.c: 246: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  4950  00104C  0EFF               	movlw	255
  4951  00104E  6E1E               	movwf	cmd@command,c
  4952  001050  0EFF               	movlw	255
  4953  001052  6E1F               	movwf	cmd@command+1,c
  4954  001054  0EFF               	movlw	255
  4955  001056  6E20               	movwf	cmd@command+2,c
  4956  001058  0E04               	movlw	4
  4957  00105A  6E21               	movwf	cmd@command+3,c
  4958  00105C  ECD9  F02F         	call	_cmd	;wreg free
  4959                           
  4960                           ;display.c: 248: cmd(4294967049UL);cmd(0x323232);
  4961  001060  0E09               	movlw	9
  4962  001062  6E1E               	movwf	cmd@command,c
  4963  001064  0EFF               	movlw	255
  4964  001066  6E1F               	movwf	cmd@command+1,c
  4965  001068  0EFF               	movlw	255
  4966  00106A  6E20               	movwf	cmd@command+2,c
  4967  00106C  0EFF               	movlw	255
  4968  00106E  6E21               	movwf	cmd@command+3,c
  4969  001070  ECD9  F02F         	call	_cmd	;wreg free
  4970  001074  0E32               	movlw	50
  4971  001076  6E1E               	movwf	cmd@command,c
  4972  001078  0E32               	movlw	50
  4973  00107A  6E1F               	movwf	cmd@command+1,c
  4974  00107C  0E32               	movlw	50
  4975  00107E  6E20               	movwf	cmd@command+2,c
  4976  001080  0E00               	movlw	0
  4977  001082  6E21               	movwf	cmd@command+3,c
  4978  001084  ECD9  F02F         	call	_cmd	;wreg free
  4979                           
  4980                           ;display.c: 249: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 16384UL | 4096UL | 256UL);cmd_incrementn(2);wr16(108
      +                          134
  4981  001088  0E13               	movlw	19
  4982  00108A  6E1E               	movwf	cmd@command,c
  4983  00108C  0EFF               	movlw	255
  4984  00108E  6E1F               	movwf	cmd@command+1,c
  4985  001090  0EFF               	movlw	255
  4986  001092  6E20               	movwf	cmd@command+2,c
  4987  001094  0EFF               	movlw	255
  4988  001096  6E21               	movwf	cmd@command+3,c
  4989  001098  ECD9  F02F         	call	_cmd	;wreg free
  4990  00109C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4991  0010A0  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4992  0010A4  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4993  0010A6  0E00               	movlw	0
  4994  0010A8  2427               	addwf	??_display_rpm,w,c
  4995  0010AA  6E11               	movwf	wr16@addr,c
  4996  0010AC  0E80               	movlw	128
  4997  0010AE  2028               	addwfc	??_display_rpm+1,w,c
  4998  0010B0  6E12               	movwf	wr16@addr+1,c
  4999  0010B2  0E10               	movlw	16
  5000  0010B4  2029               	addwfc	??_display_rpm+2,w,c
  5001  0010B6  6E13               	movwf	wr16@addr+2,c
  5002  0010B8  0E00               	movlw	0
  5003  0010BA  6E15               	movwf	wr16@value+1,c
  5004  0010BC  0EF0               	movlw	240
  5005  0010BE  6E14               	movwf	wr16@value,c
  5006  0010C0  EC9E  F02F         	call	_wr16	;wreg free
  5007  0010C4  0E02               	movlw	2
  5008  0010C6  EC8C  F030         	call	_cmd_incrementn
  5009  0010CA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5010  0010CE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5011  0010D2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5012  0010D4  0E00               	movlw	0
  5013  0010D6  2427               	addwf	??_display_rpm,w,c
  5014  0010D8  6E11               	movwf	wr16@addr,c
  5015  0010DA  0E80               	movlw	128
  5016  0010DC  2028               	addwfc	??_display_rpm+1,w,c
  5017  0010DE  6E12               	movwf	wr16@addr+1,c
  5018  0010E0  0E10               	movlw	16
  5019  0010E2  2029               	addwfc	??_display_rpm+2,w,c
  5020  0010E4  6E13               	movwf	wr16@addr+2,c
  5021  0010E6  0E00               	movlw	0
  5022  0010E8  6E15               	movwf	wr16@value+1,c
  5023  0010EA  0E73               	movlw	115
  5024  0010EC  6E14               	movwf	wr16@value,c
  5025  0010EE  EC9E  F02F         	call	_wr16	;wreg free
  5026  0010F2  0E02               	movlw	2
  5027  0010F4  EC8C  F030         	call	_cmd_incrementn
  5028  0010F8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5029  0010FC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5030  001100  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5031  001102  0E00               	movlw	0
  5032  001104  2427               	addwf	??_display_rpm,w,c
  5033  001106  6E11               	movwf	wr16@addr,c
  5034  001108  0E80               	movlw	128
  5035  00110A  2028               	addwfc	??_display_rpm+1,w,c
  5036  00110C  6E12               	movwf	wr16@addr+1,c
  5037  00110E  0E10               	movlw	16
  5038  001110  2029               	addwfc	??_display_rpm+2,w,c
  5039  001112  6E13               	movwf	wr16@addr+2,c
  5040  001114  0E00               	movlw	0
  5041  001116  6E15               	movwf	wr16@value+1,c
  5042  001118  0E82               	movlw	130
  5043  00111A  6E14               	movwf	wr16@value,c
  5044  00111C  EC9E  F02F         	call	_wr16	;wreg free
  5045  001120  0E02               	movlw	2
  5046  001122  EC8C  F030         	call	_cmd_incrementn
  5047  001126  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5048  00112A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5049  00112E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5050  001130  0E00               	movlw	0
  5051  001132  2427               	addwf	??_display_rpm,w,c
  5052  001134  6E11               	movwf	wr16@addr,c
  5053  001136  0E80               	movlw	128
  5054  001138  2028               	addwfc	??_display_rpm+1,w,c
  5055  00113A  6E12               	movwf	wr16@addr+1,c
  5056  00113C  0E10               	movlw	16
  5057  00113E  2029               	addwfc	??_display_rpm+2,w,c
  5058  001140  6E13               	movwf	wr16@addr+2,c
  5059  001142  0E51               	movlw	81
  5060  001144  6E15               	movwf	wr16@value+1,c
  5061  001146  0E00               	movlw	0
  5062  001148  6E14               	movwf	wr16@value,c
  5063  00114A  EC9E  F02F         	call	_wr16	;wreg free
  5064  00114E  0E02               	movlw	2
  5065  001150  EC8C  F030         	call	_cmd_incrementn
  5066  001154  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5067  001158  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5068  00115C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5069  00115E  0E00               	movlw	0
  5070  001160  2427               	addwf	??_display_rpm,w,c
  5071  001162  6E11               	movwf	wr16@addr,c
  5072  001164  0E80               	movlw	128
  5073  001166  2028               	addwfc	??_display_rpm+1,w,c
  5074  001168  6E12               	movwf	wr16@addr+1,c
  5075  00116A  0E10               	movlw	16
  5076  00116C  2029               	addwfc	??_display_rpm+2,w,c
  5077  00116E  6E13               	movwf	wr16@addr+2,c
  5078  001170  0E00               	movlw	0
  5079  001172  6E15               	movwf	wr16@value+1,c
  5080  001174  0E0A               	movlw	10
  5081  001176  6E14               	movwf	wr16@value,c
  5082  001178  EC9E  F02F         	call	_wr16	;wreg free
  5083  00117C  0E02               	movlw	2
  5084  00117E  EC8C  F030         	call	_cmd_incrementn
  5085  001182  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5086  001186  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5087  00118A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5088  00118C  0E00               	movlw	0
  5089  00118E  2427               	addwf	??_display_rpm,w,c
  5090  001190  6E11               	movwf	wr16@addr,c
  5091  001192  0E80               	movlw	128
  5092  001194  2028               	addwfc	??_display_rpm+1,w,c
  5093  001196  6E12               	movwf	wr16@addr+1,c
  5094  001198  0E10               	movlw	16
  5095  00119A  2029               	addwfc	??_display_rpm+2,w,c
  5096  00119C  6E13               	movwf	wr16@addr+2,c
  5097  00119E  0E00               	movlw	0
  5098  0011A0  6E15               	movwf	wr16@value+1,c
  5099  0011A2  0E05               	movlw	5
  5100  0011A4  6E14               	movwf	wr16@value,c
  5101  0011A6  EC9E  F02F         	call	_wr16	;wreg free
  5102  0011AA  0E02               	movlw	2
  5103  0011AC  EC8C  F030         	call	_cmd_incrementn
  5104  0011B0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5105  0011B4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5106  0011B8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5107  0011BA  0E00               	movlw	0
  5108  0011BC  2427               	addwf	??_display_rpm,w,c
  5109  0011BE  6E11               	movwf	wr16@addr,c
  5110  0011C0  0E80               	movlw	128
  5111  0011C2  2028               	addwfc	??_display_rpm+1,w,c
  5112  0011C4  6E12               	movwf	wr16@addr+1,c
  5113  0011C6  0E10               	movlw	16
  5114  0011C8  2029               	addwfc	??_display_rpm+2,w,c
  5115  0011CA  6E13               	movwf	wr16@addr+2,c
  5116  0011CC  0E00               	movlw	0
  5117  0011CE  6E15               	movwf	wr16@value+1,c
  5118  0011D0  0E00               	movlw	0
  5119  0011D2  6E14               	movwf	wr16@value,c
  5120  0011D4  EC9E  F02F         	call	_wr16	;wreg free
  5121  0011D8  0E02               	movlw	2
  5122  0011DA  EC8C  F030         	call	_cmd_incrementn
  5123  0011DE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5124  0011E2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5125  0011E6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5126  0011E8  0E00               	movlw	0
  5127  0011EA  2427               	addwf	??_display_rpm,w,c
  5128  0011EC  6E11               	movwf	wr16@addr,c
  5129  0011EE  0E80               	movlw	128
  5130  0011F0  2028               	addwfc	??_display_rpm+1,w,c
  5131  0011F2  6E12               	movwf	wr16@addr+1,c
  5132  0011F4  0E10               	movlw	16
  5133  0011F6  2029               	addwfc	??_display_rpm+2,w,c
  5134  0011F8  6E13               	movwf	wr16@addr+2,c
  5135  0011FA  0E00               	movlw	0
  5136  0011FC  6E15               	movwf	wr16@value+1,c
  5137  0011FE  0E32               	movlw	50
  5138  001200  6E14               	movwf	wr16@value,c
  5139  001202  EC9E  F02F         	call	_wr16	;wreg free
  5140  001206  0E02               	movlw	2
  5141  001208  EC8C  F030         	call	_cmd_incrementn
  5142                           
  5143                           ;display.c: 251: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  5144  00120C  0E00               	movlw	0
  5145  00120E  6E1E               	movwf	cmd@command,c
  5146  001210  0E00               	movlw	0
  5147  001212  6E1F               	movwf	cmd@command+1,c
  5148  001214  0EFF               	movlw	255
  5149  001216  6E20               	movwf	cmd@command+2,c
  5150  001218  0E04               	movlw	4
  5151  00121A  6E21               	movwf	cmd@command+3,c
  5152  00121C  ECD9  F02F         	call	_cmd	;wreg free
  5153                           
  5154                           ;display.c: 252: if(first_digit < 2) {
  5155  001220  BE2F               	btfsc	display_rpm@first_digit+1,7,c
  5156  001222  D006               	goto	l3664
  5157  001224  502F               	movf	display_rpm@first_digit+1,w,c
  5158  001226  E103               	bnz	u1071
  5159  001228  0E02               	movlw	2
  5160  00122A  5C2E               	subwf	display_rpm@first_digit,w,c
  5161  00122C  B0D8               	btfsc	status,0,c
  5162  00122E                     u1071:
  5163  00122E  D0C3               	goto	l3666
  5164  001230                     l3664:
  5165                           
  5166                           ;display.c: 253: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 8192UL|4096UL | 256UL);cmd_incrementn(2);wr16(108134
      +                          4UL
  5167  001230  0E13               	movlw	19
  5168  001232  6E1E               	movwf	cmd@command,c
  5169  001234  0EFF               	movlw	255
  5170  001236  6E1F               	movwf	cmd@command+1,c
  5171  001238  0EFF               	movlw	255
  5172  00123A  6E20               	movwf	cmd@command+2,c
  5173  00123C  0EFF               	movlw	255
  5174  00123E  6E21               	movwf	cmd@command+3,c
  5175  001240  ECD9  F02F         	call	_cmd	;wreg free
  5176  001244  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5177  001248  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5178  00124C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5179  00124E  0E00               	movlw	0
  5180  001250  2427               	addwf	??_display_rpm,w,c
  5181  001252  6E11               	movwf	wr16@addr,c
  5182  001254  0E80               	movlw	128
  5183  001256  2028               	addwfc	??_display_rpm+1,w,c
  5184  001258  6E12               	movwf	wr16@addr+1,c
  5185  00125A  0E10               	movlw	16
  5186  00125C  2029               	addwfc	??_display_rpm+2,w,c
  5187  00125E  6E13               	movwf	wr16@addr+2,c
  5188  001260  0E00               	movlw	0
  5189  001262  6E15               	movwf	wr16@value+1,c
  5190  001264  0EF0               	movlw	240
  5191  001266  6E14               	movwf	wr16@value,c
  5192  001268  EC9E  F02F         	call	_wr16	;wreg free
  5193  00126C  0E02               	movlw	2
  5194  00126E  EC8C  F030         	call	_cmd_incrementn
  5195  001272  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5196  001276  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5197  00127A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5198  00127C  0E00               	movlw	0
  5199  00127E  2427               	addwf	??_display_rpm,w,c
  5200  001280  6E11               	movwf	wr16@addr,c
  5201  001282  0E80               	movlw	128
  5202  001284  2028               	addwfc	??_display_rpm+1,w,c
  5203  001286  6E12               	movwf	wr16@addr+1,c
  5204  001288  0E10               	movlw	16
  5205  00128A  2029               	addwfc	??_display_rpm+2,w,c
  5206  00128C  6E13               	movwf	wr16@addr+2,c
  5207  00128E  0E00               	movlw	0
  5208  001290  6E15               	movwf	wr16@value+1,c
  5209  001292  0E73               	movlw	115
  5210  001294  6E14               	movwf	wr16@value,c
  5211  001296  EC9E  F02F         	call	_wr16	;wreg free
  5212  00129A  0E02               	movlw	2
  5213  00129C  EC8C  F030         	call	_cmd_incrementn
  5214  0012A0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5215  0012A4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5216  0012A8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5217  0012AA  0E00               	movlw	0
  5218  0012AC  2427               	addwf	??_display_rpm,w,c
  5219  0012AE  6E11               	movwf	wr16@addr,c
  5220  0012B0  0E80               	movlw	128
  5221  0012B2  2028               	addwfc	??_display_rpm+1,w,c
  5222  0012B4  6E12               	movwf	wr16@addr+1,c
  5223  0012B6  0E10               	movlw	16
  5224  0012B8  2029               	addwfc	??_display_rpm+2,w,c
  5225  0012BA  6E13               	movwf	wr16@addr+2,c
  5226  0012BC  0E00               	movlw	0
  5227  0012BE  6E15               	movwf	wr16@value+1,c
  5228  0012C0  0E82               	movlw	130
  5229  0012C2  6E14               	movwf	wr16@value,c
  5230  0012C4  EC9E  F02F         	call	_wr16	;wreg free
  5231  0012C8  0E02               	movlw	2
  5232  0012CA  EC8C  F030         	call	_cmd_incrementn
  5233  0012CE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5234  0012D2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5235  0012D6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5236  0012D8  0E00               	movlw	0
  5237  0012DA  2427               	addwf	??_display_rpm,w,c
  5238  0012DC  6E11               	movwf	wr16@addr,c
  5239  0012DE  0E80               	movlw	128
  5240  0012E0  2028               	addwfc	??_display_rpm+1,w,c
  5241  0012E2  6E12               	movwf	wr16@addr+1,c
  5242  0012E4  0E10               	movlw	16
  5243  0012E6  2029               	addwfc	??_display_rpm+2,w,c
  5244  0012E8  6E13               	movwf	wr16@addr+2,c
  5245  0012EA  0E31               	movlw	49
  5246  0012EC  6E15               	movwf	wr16@value+1,c
  5247  0012EE  0E00               	movlw	0
  5248  0012F0  6E14               	movwf	wr16@value,c
  5249  0012F2  EC9E  F02F         	call	_wr16	;wreg free
  5250  0012F6  0E02               	movlw	2
  5251  0012F8  EC8C  F030         	call	_cmd_incrementn
  5252  0012FC  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5253  001300  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5254  001304  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5255  001306  0E00               	movlw	0
  5256  001308  2427               	addwf	??_display_rpm,w,c
  5257  00130A  6E11               	movwf	wr16@addr,c
  5258  00130C  0E80               	movlw	128
  5259  00130E  2028               	addwfc	??_display_rpm+1,w,c
  5260  001310  6E12               	movwf	wr16@addr+1,c
  5261  001312  0E10               	movlw	16
  5262  001314  2029               	addwfc	??_display_rpm+2,w,c
  5263  001316  6E13               	movwf	wr16@addr+2,c
  5264  001318  0E00               	movlw	0
  5265  00131A  6E15               	movwf	wr16@value+1,c
  5266  00131C  0E0A               	movlw	10
  5267  00131E  6E14               	movwf	wr16@value,c
  5268  001320  EC9E  F02F         	call	_wr16	;wreg free
  5269  001324  0E02               	movlw	2
  5270  001326  EC8C  F030         	call	_cmd_incrementn
  5271  00132A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5272  00132E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5273  001332  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5274  001334  0E00               	movlw	0
  5275  001336  2427               	addwf	??_display_rpm,w,c
  5276  001338  6E11               	movwf	wr16@addr,c
  5277  00133A  0E80               	movlw	128
  5278  00133C  2028               	addwfc	??_display_rpm+1,w,c
  5279  00133E  6E12               	movwf	wr16@addr+1,c
  5280  001340  0E10               	movlw	16
  5281  001342  2029               	addwfc	??_display_rpm+2,w,c
  5282  001344  6E13               	movwf	wr16@addr+2,c
  5283  001346  0E00               	movlw	0
  5284  001348  6E15               	movwf	wr16@value+1,c
  5285  00134A  0E05               	movlw	5
  5286  00134C  6E14               	movwf	wr16@value,c
  5287  00134E  EC9E  F02F         	call	_wr16	;wreg free
  5288  001352  0E02               	movlw	2
  5289  001354  EC8C  F030         	call	_cmd_incrementn
  5290  001358  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5291  00135C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5292  001360  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5293  001362  0E00               	movlw	0
  5294  001364  2427               	addwf	??_display_rpm,w,c
  5295  001366  6E11               	movwf	wr16@addr,c
  5296  001368  0E80               	movlw	128
  5297  00136A  2028               	addwfc	??_display_rpm+1,w,c
  5298  00136C  6E12               	movwf	wr16@addr+1,c
  5299  00136E  0E10               	movlw	16
  5300  001370  2029               	addwfc	??_display_rpm+2,w,c
  5301  001372  6E13               	movwf	wr16@addr+2,c
  5302  001374  C02E  F014         	movff	display_rpm@first_digit,wr16@value
  5303  001378  C02F  F015         	movff	display_rpm@first_digit+1,wr16@value+1
  5304  00137C  EC9E  F02F         	call	_wr16	;wreg free
  5305  001380  0E02               	movlw	2
  5306  001382  EC8C  F030         	call	_cmd_incrementn
  5307  001386  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5308  00138A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5309  00138E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5310  001390  0E00               	movlw	0
  5311  001392  2427               	addwf	??_display_rpm,w,c
  5312  001394  6E11               	movwf	wr16@addr,c
  5313  001396  0E80               	movlw	128
  5314  001398  2028               	addwfc	??_display_rpm+1,w,c
  5315  00139A  6E12               	movwf	wr16@addr+1,c
  5316  00139C  0E10               	movlw	16
  5317  00139E  2029               	addwfc	??_display_rpm+2,w,c
  5318  0013A0  6E13               	movwf	wr16@addr+2,c
  5319  0013A2  0E00               	movlw	0
  5320  0013A4  6E15               	movwf	wr16@value+1,c
  5321  0013A6  0E32               	movlw	50
  5322  0013A8  6E14               	movwf	wr16@value,c
  5323  0013AA  EC9E  F02F         	call	_wr16	;wreg free
  5324  0013AE  0E02               	movlw	2
  5325  0013B0  EC8C  F030         	call	_cmd_incrementn
  5326                           
  5327                           ;display.c: 254: } else {
  5328  0013B4  D0E2               	goto	l3702
  5329  0013B6                     l3666:
  5330                           
  5331                           ;display.c: 255: int val = ((first_digit-2)*5)+(second_digit/2);
  5332  0013B6  0EFE               	movlw	254
  5333  0013B8  242E               	addwf	display_rpm@first_digit,w,c
  5334  0013BA  6E10               	movwf	___wmul@multiplier,c
  5335  0013BC  0EFF               	movlw	255
  5336  0013BE  202F               	addwfc	display_rpm@first_digit+1,w,c
  5337  0013C0  6E11               	movwf	___wmul@multiplier+1,c
  5338  0013C2  0E00               	movlw	0
  5339  0013C4  6E13               	movwf	___wmul@multiplicand+1,c
  5340  0013C6  0E05               	movlw	5
  5341  0013C8  6E12               	movwf	___wmul@multiplicand,c
  5342  0013CA  EC5B  F030         	call	___wmul	;wreg free
  5343  0013CE  C010  F027         	movff	?___wmul,??_display_rpm
  5344  0013D2  C011  F028         	movff	?___wmul+1,??_display_rpm+1
  5345  0013D6  C02C  F010         	movff	display_rpm@second_digit,___awdiv@dividend
  5346  0013DA  C02D  F011         	movff	display_rpm@second_digit+1,___awdiv@dividend+1
  5347  0013DE  0E00               	movlw	0
  5348  0013E0  6E13               	movwf	___awdiv@divisor+1,c
  5349  0013E2  0E02               	movlw	2
  5350  0013E4  6E12               	movwf	___awdiv@divisor,c
  5351  0013E6  ECEE  F02D         	call	___awdiv	;wreg free
  5352  0013EA  5010               	movf	?___awdiv,w,c
  5353  0013EC  2427               	addwf	??_display_rpm,w,c
  5354  0013EE  6E2A               	movwf	display_rpm@val,c
  5355  0013F0  5011               	movf	?___awdiv+1,w,c
  5356  0013F2  2028               	addwfc	??_display_rpm+1,w,c
  5357  0013F4  6E2B               	movwf	display_rpm@val+1,c
  5358                           
  5359                           ;display.c: 256: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 8192UL|4096UL | 256UL);cmd_incrementn(2);wr16(108134
      +                          4UL
  5360  0013F6  0E13               	movlw	19
  5361  0013F8  6E1E               	movwf	cmd@command,c
  5362  0013FA  0EFF               	movlw	255
  5363  0013FC  6E1F               	movwf	cmd@command+1,c
  5364  0013FE  0EFF               	movlw	255
  5365  001400  6E20               	movwf	cmd@command+2,c
  5366  001402  0EFF               	movlw	255
  5367  001404  6E21               	movwf	cmd@command+3,c
  5368  001406  ECD9  F02F         	call	_cmd	;wreg free
  5369  00140A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5370  00140E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5371  001412  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5372  001414  0E00               	movlw	0
  5373  001416  2427               	addwf	??_display_rpm,w,c
  5374  001418  6E11               	movwf	wr16@addr,c
  5375  00141A  0E80               	movlw	128
  5376  00141C  2028               	addwfc	??_display_rpm+1,w,c
  5377  00141E  6E12               	movwf	wr16@addr+1,c
  5378  001420  0E10               	movlw	16
  5379  001422  2029               	addwfc	??_display_rpm+2,w,c
  5380  001424  6E13               	movwf	wr16@addr+2,c
  5381  001426  0E00               	movlw	0
  5382  001428  6E15               	movwf	wr16@value+1,c
  5383  00142A  0EF0               	movlw	240
  5384  00142C  6E14               	movwf	wr16@value,c
  5385  00142E  EC9E  F02F         	call	_wr16	;wreg free
  5386  001432  0E02               	movlw	2
  5387  001434  EC8C  F030         	call	_cmd_incrementn
  5388  001438  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5389  00143C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5390  001440  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5391  001442  0E00               	movlw	0
  5392  001444  2427               	addwf	??_display_rpm,w,c
  5393  001446  6E11               	movwf	wr16@addr,c
  5394  001448  0E80               	movlw	128
  5395  00144A  2028               	addwfc	??_display_rpm+1,w,c
  5396  00144C  6E12               	movwf	wr16@addr+1,c
  5397  00144E  0E10               	movlw	16
  5398  001450  2029               	addwfc	??_display_rpm+2,w,c
  5399  001452  6E13               	movwf	wr16@addr+2,c
  5400  001454  0E00               	movlw	0
  5401  001456  6E15               	movwf	wr16@value+1,c
  5402  001458  0E73               	movlw	115
  5403  00145A  6E14               	movwf	wr16@value,c
  5404  00145C  EC9E  F02F         	call	_wr16	;wreg free
  5405  001460  0E02               	movlw	2
  5406  001462  EC8C  F030         	call	_cmd_incrementn
  5407  001466  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5408  00146A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5409  00146E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5410  001470  0E00               	movlw	0
  5411  001472  2427               	addwf	??_display_rpm,w,c
  5412  001474  6E11               	movwf	wr16@addr,c
  5413  001476  0E80               	movlw	128
  5414  001478  2028               	addwfc	??_display_rpm+1,w,c
  5415  00147A  6E12               	movwf	wr16@addr+1,c
  5416  00147C  0E10               	movlw	16
  5417  00147E  2029               	addwfc	??_display_rpm+2,w,c
  5418  001480  6E13               	movwf	wr16@addr+2,c
  5419  001482  0E00               	movlw	0
  5420  001484  6E15               	movwf	wr16@value+1,c
  5421  001486  0E82               	movlw	130
  5422  001488  6E14               	movwf	wr16@value,c
  5423  00148A  EC9E  F02F         	call	_wr16	;wreg free
  5424  00148E  0E02               	movlw	2
  5425  001490  EC8C  F030         	call	_cmd_incrementn
  5426  001494  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5427  001498  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5428  00149C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5429  00149E  0E00               	movlw	0
  5430  0014A0  2427               	addwf	??_display_rpm,w,c
  5431  0014A2  6E11               	movwf	wr16@addr,c
  5432  0014A4  0E80               	movlw	128
  5433  0014A6  2028               	addwfc	??_display_rpm+1,w,c
  5434  0014A8  6E12               	movwf	wr16@addr+1,c
  5435  0014AA  0E10               	movlw	16
  5436  0014AC  2029               	addwfc	??_display_rpm+2,w,c
  5437  0014AE  6E13               	movwf	wr16@addr+2,c
  5438  0014B0  0E31               	movlw	49
  5439  0014B2  6E15               	movwf	wr16@value+1,c
  5440  0014B4  0E00               	movlw	0
  5441  0014B6  6E14               	movwf	wr16@value,c
  5442  0014B8  EC9E  F02F         	call	_wr16	;wreg free
  5443  0014BC  0E02               	movlw	2
  5444  0014BE  EC8C  F030         	call	_cmd_incrementn
  5445  0014C2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5446  0014C6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5447  0014CA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5448  0014CC  0E00               	movlw	0
  5449  0014CE  2427               	addwf	??_display_rpm,w,c
  5450  0014D0  6E11               	movwf	wr16@addr,c
  5451  0014D2  0E80               	movlw	128
  5452  0014D4  2028               	addwfc	??_display_rpm+1,w,c
  5453  0014D6  6E12               	movwf	wr16@addr+1,c
  5454  0014D8  0E10               	movlw	16
  5455  0014DA  2029               	addwfc	??_display_rpm+2,w,c
  5456  0014DC  6E13               	movwf	wr16@addr+2,c
  5457  0014DE  0E00               	movlw	0
  5458  0014E0  6E15               	movwf	wr16@value+1,c
  5459  0014E2  0E0A               	movlw	10
  5460  0014E4  6E14               	movwf	wr16@value,c
  5461  0014E6  EC9E  F02F         	call	_wr16	;wreg free
  5462  0014EA  0E02               	movlw	2
  5463  0014EC  EC8C  F030         	call	_cmd_incrementn
  5464  0014F0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5465  0014F4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5466  0014F8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5467  0014FA  0E00               	movlw	0
  5468  0014FC  2427               	addwf	??_display_rpm,w,c
  5469  0014FE  6E11               	movwf	wr16@addr,c
  5470  001500  0E80               	movlw	128
  5471  001502  2028               	addwfc	??_display_rpm+1,w,c
  5472  001504  6E12               	movwf	wr16@addr+1,c
  5473  001506  0E10               	movlw	16
  5474  001508  2029               	addwfc	??_display_rpm+2,w,c
  5475  00150A  6E13               	movwf	wr16@addr+2,c
  5476  00150C  0E00               	movlw	0
  5477  00150E  6E15               	movwf	wr16@value+1,c
  5478  001510  0E05               	movlw	5
  5479  001512  6E14               	movwf	wr16@value,c
  5480  001514  EC9E  F02F         	call	_wr16	;wreg free
  5481  001518  0E02               	movlw	2
  5482  00151A  EC8C  F030         	call	_cmd_incrementn
  5483  00151E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5484  001522  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5485  001526  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5486  001528  0E00               	movlw	0
  5487  00152A  2427               	addwf	??_display_rpm,w,c
  5488  00152C  6E11               	movwf	wr16@addr,c
  5489  00152E  0E80               	movlw	128
  5490  001530  2028               	addwfc	??_display_rpm+1,w,c
  5491  001532  6E12               	movwf	wr16@addr+1,c
  5492  001534  0E10               	movlw	16
  5493  001536  2029               	addwfc	??_display_rpm+2,w,c
  5494  001538  6E13               	movwf	wr16@addr+2,c
  5495  00153A  C02A  F014         	movff	display_rpm@val,wr16@value
  5496  00153E  C02B  F015         	movff	display_rpm@val+1,wr16@value+1
  5497  001542  EC9E  F02F         	call	_wr16	;wreg free
  5498  001546  0E02               	movlw	2
  5499  001548  EC8C  F030         	call	_cmd_incrementn
  5500  00154C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5501  001550  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5502  001554  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5503  001556  0E00               	movlw	0
  5504  001558  2427               	addwf	??_display_rpm,w,c
  5505  00155A  6E11               	movwf	wr16@addr,c
  5506  00155C  0E80               	movlw	128
  5507  00155E  2028               	addwfc	??_display_rpm+1,w,c
  5508  001560  6E12               	movwf	wr16@addr+1,c
  5509  001562  0E10               	movlw	16
  5510  001564  2029               	addwfc	??_display_rpm+2,w,c
  5511  001566  6E13               	movwf	wr16@addr+2,c
  5512  001568  0E00               	movlw	0
  5513  00156A  6E15               	movwf	wr16@value+1,c
  5514  00156C  0E32               	movlw	50
  5515  00156E  6E14               	movwf	wr16@value,c
  5516  001570  EC9E  F02F         	call	_wr16	;wreg free
  5517  001574  0E02               	movlw	2
  5518  001576  EC8C  F030         	call	_cmd_incrementn
  5519  00157A                     l3702:
  5520                           
  5521                           ;display.c: 257: }
  5522                           ;display.c: 259: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  5523  00157A  0EFF               	movlw	255
  5524  00157C  6E1E               	movwf	cmd@command,c
  5525  00157E  0EFF               	movlw	255
  5526  001580  6E1F               	movwf	cmd@command+1,c
  5527  001582  0EFF               	movlw	255
  5528  001584  6E20               	movwf	cmd@command+2,c
  5529  001586  0E04               	movlw	4
  5530  001588  6E21               	movwf	cmd@command+3,c
  5531  00158A  ECD9  F02F         	call	_cmd	;wreg free
  5532                           
  5533                           ;display.c: 260: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 237);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 89);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(first_digit);
  5534  00158E  0E2E               	movlw	46
  5535  001590  6E1E               	movwf	cmd@command,c
  5536  001592  0EFF               	movlw	255
  5537  001594  6E1F               	movwf	cmd@command+1,c
  5538  001596  0EFF               	movlw	255
  5539  001598  6E20               	movwf	cmd@command+2,c
  5540  00159A  0EFF               	movlw	255
  5541  00159C  6E21               	movwf	cmd@command+3,c
  5542  00159E  ECD9  F02F         	call	_cmd	;wreg free
  5543  0015A2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5544  0015A6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5545  0015AA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5546  0015AC  0E00               	movlw	0
  5547  0015AE  2427               	addwf	??_display_rpm,w,c
  5548  0015B0  6E11               	movwf	wr16@addr,c
  5549  0015B2  0E80               	movlw	128
  5550  0015B4  2028               	addwfc	??_display_rpm+1,w,c
  5551  0015B6  6E12               	movwf	wr16@addr+1,c
  5552  0015B8  0E10               	movlw	16
  5553  0015BA  2029               	addwfc	??_display_rpm+2,w,c
  5554  0015BC  6E13               	movwf	wr16@addr+2,c
  5555  0015BE  0E00               	movlw	0
  5556  0015C0  6E15               	movwf	wr16@value+1,c
  5557  0015C2  0EED               	movlw	237
  5558  0015C4  6E14               	movwf	wr16@value,c
  5559  0015C6  EC9E  F02F         	call	_wr16	;wreg free
  5560  0015CA  0E02               	movlw	2
  5561  0015CC  EC8C  F030         	call	_cmd_incrementn
  5562  0015D0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5563  0015D4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5564  0015D8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5565  0015DA  0E00               	movlw	0
  5566  0015DC  2427               	addwf	??_display_rpm,w,c
  5567  0015DE  6E11               	movwf	wr16@addr,c
  5568  0015E0  0E80               	movlw	128
  5569  0015E2  2028               	addwfc	??_display_rpm+1,w,c
  5570  0015E4  6E12               	movwf	wr16@addr+1,c
  5571  0015E6  0E10               	movlw	16
  5572  0015E8  2029               	addwfc	??_display_rpm+2,w,c
  5573  0015EA  6E13               	movwf	wr16@addr+2,c
  5574  0015EC  0E00               	movlw	0
  5575  0015EE  6E15               	movwf	wr16@value+1,c
  5576  0015F0  0E59               	movlw	89
  5577  0015F2  6E14               	movwf	wr16@value,c
  5578  0015F4  EC9E  F02F         	call	_wr16	;wreg free
  5579  0015F8  0E02               	movlw	2
  5580  0015FA  EC8C  F030         	call	_cmd_incrementn
  5581  0015FE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5582  001602  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5583  001606  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5584  001608  0E00               	movlw	0
  5585  00160A  2427               	addwf	??_display_rpm,w,c
  5586  00160C  6E11               	movwf	wr16@addr,c
  5587  00160E  0E80               	movlw	128
  5588  001610  2028               	addwfc	??_display_rpm+1,w,c
  5589  001612  6E12               	movwf	wr16@addr+1,c
  5590  001614  0E10               	movlw	16
  5591  001616  2029               	addwfc	??_display_rpm+2,w,c
  5592  001618  6E13               	movwf	wr16@addr+2,c
  5593  00161A  0E00               	movlw	0
  5594  00161C  6E15               	movwf	wr16@value+1,c
  5595  00161E  0E1F               	movlw	31
  5596  001620  6E14               	movwf	wr16@value,c
  5597  001622  EC9E  F02F         	call	_wr16	;wreg free
  5598  001626  0E02               	movlw	2
  5599  001628  EC8C  F030         	call	_cmd_incrementn
  5600  00162C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5601  001630  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5602  001634  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5603  001636  0E00               	movlw	0
  5604  001638  2427               	addwf	??_display_rpm,w,c
  5605  00163A  6E11               	movwf	wr16@addr,c
  5606  00163C  0E80               	movlw	128
  5607  00163E  2028               	addwfc	??_display_rpm+1,w,c
  5608  001640  6E12               	movwf	wr16@addr+1,c
  5609  001642  0E10               	movlw	16
  5610  001644  2029               	addwfc	??_display_rpm+2,w,c
  5611  001646  6E13               	movwf	wr16@addr+2,c
  5612  001648  0E08               	movlw	8
  5613  00164A  6E15               	movwf	wr16@value+1,c
  5614  00164C  0E00               	movlw	0
  5615  00164E  6E14               	movwf	wr16@value,c
  5616  001650  EC9E  F02F         	call	_wr16	;wreg free
  5617  001654  0E02               	movlw	2
  5618  001656  EC8C  F030         	call	_cmd_incrementn
  5619  00165A  C02E  F01E         	movff	display_rpm@first_digit,cmd@command
  5620  00165E  C02F  F01F         	movff	display_rpm@first_digit+1,cmd@command+1
  5621  001662  0E00               	movlw	0
  5622  001664  BE1F               	btfsc	cmd@command+1,7,c
  5623  001666  0EFF               	movlw	-1
  5624  001668  6E20               	movwf	cmd@command+2,c
  5625  00166A  6E21               	movwf	cmd@command+3,c
  5626  00166C  ECD9  F02F         	call	_cmd	;wreg free
  5627                           
  5628                           ;display.c: 261: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 243);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 89);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(second_digit);
  5629  001670  0E2E               	movlw	46
  5630  001672  6E1E               	movwf	cmd@command,c
  5631  001674  0EFF               	movlw	255
  5632  001676  6E1F               	movwf	cmd@command+1,c
  5633  001678  0EFF               	movlw	255
  5634  00167A  6E20               	movwf	cmd@command+2,c
  5635  00167C  0EFF               	movlw	255
  5636  00167E  6E21               	movwf	cmd@command+3,c
  5637  001680  ECD9  F02F         	call	_cmd	;wreg free
  5638  001684  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5639  001688  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5640  00168C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5641  00168E  0E00               	movlw	0
  5642  001690  2427               	addwf	??_display_rpm,w,c
  5643  001692  6E11               	movwf	wr16@addr,c
  5644  001694  0E80               	movlw	128
  5645  001696  2028               	addwfc	??_display_rpm+1,w,c
  5646  001698  6E12               	movwf	wr16@addr+1,c
  5647  00169A  0E10               	movlw	16
  5648  00169C  2029               	addwfc	??_display_rpm+2,w,c
  5649  00169E  6E13               	movwf	wr16@addr+2,c
  5650  0016A0  0E00               	movlw	0
  5651  0016A2  6E15               	movwf	wr16@value+1,c
  5652  0016A4  0EF3               	movlw	243
  5653  0016A6  6E14               	movwf	wr16@value,c
  5654  0016A8  EC9E  F02F         	call	_wr16	;wreg free
  5655  0016AC  0E02               	movlw	2
  5656  0016AE  EC8C  F030         	call	_cmd_incrementn
  5657  0016B2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5658  0016B6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5659  0016BA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5660  0016BC  0E00               	movlw	0
  5661  0016BE  2427               	addwf	??_display_rpm,w,c
  5662  0016C0  6E11               	movwf	wr16@addr,c
  5663  0016C2  0E80               	movlw	128
  5664  0016C4  2028               	addwfc	??_display_rpm+1,w,c
  5665  0016C6  6E12               	movwf	wr16@addr+1,c
  5666  0016C8  0E10               	movlw	16
  5667  0016CA  2029               	addwfc	??_display_rpm+2,w,c
  5668  0016CC  6E13               	movwf	wr16@addr+2,c
  5669  0016CE  0E00               	movlw	0
  5670  0016D0  6E15               	movwf	wr16@value+1,c
  5671  0016D2  0E59               	movlw	89
  5672  0016D4  6E14               	movwf	wr16@value,c
  5673  0016D6  EC9E  F02F         	call	_wr16	;wreg free
  5674  0016DA  0E02               	movlw	2
  5675  0016DC  EC8C  F030         	call	_cmd_incrementn
  5676  0016E0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5677  0016E4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5678  0016E8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5679  0016EA  0E00               	movlw	0
  5680  0016EC  2427               	addwf	??_display_rpm,w,c
  5681  0016EE  6E11               	movwf	wr16@addr,c
  5682  0016F0  0E80               	movlw	128
  5683  0016F2  2028               	addwfc	??_display_rpm+1,w,c
  5684  0016F4  6E12               	movwf	wr16@addr+1,c
  5685  0016F6  0E10               	movlw	16
  5686  0016F8  2029               	addwfc	??_display_rpm+2,w,c
  5687  0016FA  6E13               	movwf	wr16@addr+2,c
  5688  0016FC  0E00               	movlw	0
  5689  0016FE  6E15               	movwf	wr16@value+1,c
  5690  001700  0E1F               	movlw	31
  5691  001702  6E14               	movwf	wr16@value,c
  5692  001704  EC9E  F02F         	call	_wr16	;wreg free
  5693  001708  0E02               	movlw	2
  5694  00170A  EC8C  F030         	call	_cmd_incrementn
  5695  00170E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5696  001712  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5697  001716  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5698  001718  0E00               	movlw	0
  5699  00171A  2427               	addwf	??_display_rpm,w,c
  5700  00171C  6E11               	movwf	wr16@addr,c
  5701  00171E  0E80               	movlw	128
  5702  001720  2028               	addwfc	??_display_rpm+1,w,c
  5703  001722  6E12               	movwf	wr16@addr+1,c
  5704  001724  0E10               	movlw	16
  5705  001726  2029               	addwfc	??_display_rpm+2,w,c
  5706  001728  6E13               	movwf	wr16@addr+2,c
  5707  00172A  0E00               	movlw	0
  5708  00172C  6E15               	movwf	wr16@value+1,c
  5709  00172E  0E00               	movlw	0
  5710  001730  6E14               	movwf	wr16@value,c
  5711  001732  EC9E  F02F         	call	_wr16	;wreg free
  5712  001736  0E02               	movlw	2
  5713  001738  EC8C  F030         	call	_cmd_incrementn
  5714  00173C  C02C  F01E         	movff	display_rpm@second_digit,cmd@command
  5715  001740  C02D  F01F         	movff	display_rpm@second_digit+1,cmd@command+1
  5716  001744  0E00               	movlw	0
  5717  001746  BE1F               	btfsc	cmd@command+1,7,c
  5718  001748  0EFF               	movlw	-1
  5719  00174A  6E20               	movwf	cmd@command+2,c
  5720  00174C  6E21               	movwf	cmd@command+3,c
  5721  00174E  ECD9  F02F         	call	_cmd	;wreg free
  5722                           
  5723                           ;display.c: 263: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 183);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 161);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  5724  001752  0E0C               	movlw	12
  5725  001754  6E1E               	movwf	cmd@command,c
  5726  001756  0EFF               	movlw	255
  5727  001758  6E1F               	movwf	cmd@command+1,c
  5728  00175A  0EFF               	movlw	255
  5729  00175C  6E20               	movwf	cmd@command+2,c
  5730  00175E  0EFF               	movlw	255
  5731  001760  6E21               	movwf	cmd@command+3,c
  5732  001762  ECD9  F02F         	call	_cmd	;wreg free
  5733  001766  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5734  00176A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5735  00176E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5736  001770  0E00               	movlw	0
  5737  001772  2427               	addwf	??_display_rpm,w,c
  5738  001774  6E11               	movwf	wr16@addr,c
  5739  001776  0E80               	movlw	128
  5740  001778  2028               	addwfc	??_display_rpm+1,w,c
  5741  00177A  6E12               	movwf	wr16@addr+1,c
  5742  00177C  0E10               	movlw	16
  5743  00177E  2029               	addwfc	??_display_rpm+2,w,c
  5744  001780  6E13               	movwf	wr16@addr+2,c
  5745  001782  0E00               	movlw	0
  5746  001784  6E15               	movwf	wr16@value+1,c
  5747  001786  0EB7               	movlw	183
  5748  001788  6E14               	movwf	wr16@value,c
  5749  00178A  EC9E  F02F         	call	_wr16	;wreg free
  5750  00178E  0E02               	movlw	2
  5751  001790  EC8C  F030         	call	_cmd_incrementn
  5752  001794  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5753  001798  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5754  00179C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5755  00179E  0E00               	movlw	0
  5756  0017A0  2427               	addwf	??_display_rpm,w,c
  5757  0017A2  6E11               	movwf	wr16@addr,c
  5758  0017A4  0E80               	movlw	128
  5759  0017A6  2028               	addwfc	??_display_rpm+1,w,c
  5760  0017A8  6E12               	movwf	wr16@addr+1,c
  5761  0017AA  0E10               	movlw	16
  5762  0017AC  2029               	addwfc	??_display_rpm+2,w,c
  5763  0017AE  6E13               	movwf	wr16@addr+2,c
  5764  0017B0  0E00               	movlw	0
  5765  0017B2  6E15               	movwf	wr16@value+1,c
  5766  0017B4  0EA1               	movlw	161
  5767  0017B6  6E14               	movwf	wr16@value,c
  5768  0017B8  EC9E  F02F         	call	_wr16	;wreg free
  5769  0017BC  0E02               	movlw	2
  5770  0017BE  EC8C  F030         	call	_cmd_incrementn
  5771  0017C2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5772  0017C6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5773  0017CA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5774  0017CC  0E00               	movlw	0
  5775  0017CE  2427               	addwf	??_display_rpm,w,c
  5776  0017D0  6E11               	movwf	wr16@addr,c
  5777  0017D2  0E80               	movlw	128
  5778  0017D4  2028               	addwfc	??_display_rpm+1,w,c
  5779  0017D6  6E12               	movwf	wr16@addr+1,c
  5780  0017D8  0E10               	movlw	16
  5781  0017DA  2029               	addwfc	??_display_rpm+2,w,c
  5782  0017DC  6E13               	movwf	wr16@addr+2,c
  5783  0017DE  0E00               	movlw	0
  5784  0017E0  6E15               	movwf	wr16@value+1,c
  5785  0017E2  0E1C               	movlw	28
  5786  0017E4  6E14               	movwf	wr16@value,c
  5787  0017E6  EC9E  F02F         	call	_wr16	;wreg free
  5788  0017EA  0E02               	movlw	2
  5789  0017EC  EC8C  F030         	call	_cmd_incrementn
  5790  0017F0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5791  0017F4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5792  0017F8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5793  0017FA  0E00               	movlw	0
  5794  0017FC  2427               	addwf	??_display_rpm,w,c
  5795  0017FE  6E11               	movwf	wr16@addr,c
  5796  001800  0E80               	movlw	128
  5797  001802  2028               	addwfc	??_display_rpm+1,w,c
  5798  001804  6E12               	movwf	wr16@addr+1,c
  5799  001806  0E10               	movlw	16
  5800  001808  2029               	addwfc	??_display_rpm+2,w,c
  5801  00180A  6E13               	movwf	wr16@addr+2,c
  5802  00180C  0E00               	movlw	0
  5803  00180E  6E15               	movwf	wr16@value+1,c
  5804  001810  0E00               	movlw	0
  5805  001812  6E14               	movwf	wr16@value,c
  5806  001814  EC9E  F02F         	call	_wr16	;wreg free
  5807  001818  0E02               	movlw	2
  5808  00181A  EC8C  F030         	call	_cmd_incrementn
  5809  00181E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5810  001822  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5811  001826  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5812  001828  0E00               	movlw	0
  5813  00182A  2427               	addwf	??_display_rpm,w,c
  5814  00182C  6E16               	movwf	wr8s@addr,c
  5815  00182E  0E80               	movlw	128
  5816  001830  2028               	addwfc	??_display_rpm+1,w,c
  5817  001832  6E17               	movwf	wr8s@addr+1,c
  5818  001834  0E10               	movlw	16
  5819  001836  2029               	addwfc	??_display_rpm+2,w,c
  5820  001838  6E18               	movwf	wr8s@addr+2,c
  5821  00183A  0E51               	movlw	low (STR_34+1)
  5822  00183C  6E19               	movwf	wr8s@s,c
  5823  00183E  0E0F               	movlw	high (STR_34+1)
  5824  001840  6E1A               	movwf	wr8s@s+1,c
  5825  001842  EC64  F02D         	call	_wr8s	;wreg free
  5826  001846  EC8C  F030         	call	_cmd_incrementn
  5827                           
  5828                           ;display.c: 264: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 160);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  5829  00184A  0E0C               	movlw	12
  5830  00184C  6E1E               	movwf	cmd@command,c
  5831  00184E  0EFF               	movlw	255
  5832  001850  6E1F               	movwf	cmd@command+1,c
  5833  001852  0EFF               	movlw	255
  5834  001854  6E20               	movwf	cmd@command+2,c
  5835  001856  0EFF               	movlw	255
  5836  001858  6E21               	movwf	cmd@command+3,c
  5837  00185A  ECD9  F02F         	call	_cmd	;wreg free
  5838  00185E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5839  001862  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5840  001866  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5841  001868  0E00               	movlw	0
  5842  00186A  2427               	addwf	??_display_rpm,w,c
  5843  00186C  6E11               	movwf	wr16@addr,c
  5844  00186E  0E80               	movlw	128
  5845  001870  2028               	addwfc	??_display_rpm+1,w,c
  5846  001872  6E12               	movwf	wr16@addr+1,c
  5847  001874  0E10               	movlw	16
  5848  001876  2029               	addwfc	??_display_rpm+2,w,c
  5849  001878  6E13               	movwf	wr16@addr+2,c
  5850  00187A  0E00               	movlw	0
  5851  00187C  6E15               	movwf	wr16@value+1,c
  5852  00187E  0EA0               	movlw	160
  5853  001880  6E14               	movwf	wr16@value,c
  5854  001882  EC9E  F02F         	call	_wr16	;wreg free
  5855  001886  0E02               	movlw	2
  5856  001888  EC8C  F030         	call	_cmd_incrementn
  5857  00188C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5858  001890  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5859  001894  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5860  001896  0E00               	movlw	0
  5861  001898  2427               	addwf	??_display_rpm,w,c
  5862  00189A  6E11               	movwf	wr16@addr,c
  5863  00189C  0E80               	movlw	128
  5864  00189E  2028               	addwfc	??_display_rpm+1,w,c
  5865  0018A0  6E12               	movwf	wr16@addr+1,c
  5866  0018A2  0E10               	movlw	16
  5867  0018A4  2029               	addwfc	??_display_rpm+2,w,c
  5868  0018A6  6E13               	movwf	wr16@addr+2,c
  5869  0018A8  0E00               	movlw	0
  5870  0018AA  6E15               	movwf	wr16@value+1,c
  5871  0018AC  0E82               	movlw	130
  5872  0018AE  6E14               	movwf	wr16@value,c
  5873  0018B0  EC9E  F02F         	call	_wr16	;wreg free
  5874  0018B4  0E02               	movlw	2
  5875  0018B6  EC8C  F030         	call	_cmd_incrementn
  5876  0018BA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5877  0018BE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5878  0018C2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5879  0018C4  0E00               	movlw	0
  5880  0018C6  2427               	addwf	??_display_rpm,w,c
  5881  0018C8  6E11               	movwf	wr16@addr,c
  5882  0018CA  0E80               	movlw	128
  5883  0018CC  2028               	addwfc	??_display_rpm+1,w,c
  5884  0018CE  6E12               	movwf	wr16@addr+1,c
  5885  0018D0  0E10               	movlw	16
  5886  0018D2  2029               	addwfc	??_display_rpm+2,w,c
  5887  0018D4  6E13               	movwf	wr16@addr+2,c
  5888  0018D6  0E00               	movlw	0
  5889  0018D8  6E15               	movwf	wr16@value+1,c
  5890  0018DA  0E1C               	movlw	28
  5891  0018DC  6E14               	movwf	wr16@value,c
  5892  0018DE  EC9E  F02F         	call	_wr16	;wreg free
  5893  0018E2  0E02               	movlw	2
  5894  0018E4  EC8C  F030         	call	_cmd_incrementn
  5895  0018E8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5896  0018EC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5897  0018F0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5898  0018F2  0E00               	movlw	0
  5899  0018F4  2427               	addwf	??_display_rpm,w,c
  5900  0018F6  6E11               	movwf	wr16@addr,c
  5901  0018F8  0E80               	movlw	128
  5902  0018FA  2028               	addwfc	??_display_rpm+1,w,c
  5903  0018FC  6E12               	movwf	wr16@addr+1,c
  5904  0018FE  0E10               	movlw	16
  5905  001900  2029               	addwfc	??_display_rpm+2,w,c
  5906  001902  6E13               	movwf	wr16@addr+2,c
  5907  001904  0E00               	movlw	0
  5908  001906  6E15               	movwf	wr16@value+1,c
  5909  001908  0E00               	movlw	0
  5910  00190A  6E14               	movwf	wr16@value,c
  5911  00190C  EC9E  F02F         	call	_wr16	;wreg free
  5912  001910  0E02               	movlw	2
  5913  001912  EC8C  F030         	call	_cmd_incrementn
  5914  001916  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5915  00191A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5916  00191E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5917  001920  0E00               	movlw	0
  5918  001922  2427               	addwf	??_display_rpm,w,c
  5919  001924  6E16               	movwf	wr8s@addr,c
  5920  001926  0E80               	movlw	128
  5921  001928  2028               	addwfc	??_display_rpm+1,w,c
  5922  00192A  6E17               	movwf	wr8s@addr+1,c
  5923  00192C  0E10               	movlw	16
  5924  00192E  2029               	addwfc	??_display_rpm+2,w,c
  5925  001930  6E18               	movwf	wr8s@addr+2,c
  5926  001932  0E5E               	movlw	low STR_25
  5927  001934  6E19               	movwf	wr8s@s,c
  5928  001936  0E0F               	movlw	high STR_25
  5929  001938  6E1A               	movwf	wr8s@s+1,c
  5930  00193A  EC64  F02D         	call	_wr8s	;wreg free
  5931  00193E  EC8C  F030         	call	_cmd_incrementn
  5932                           
  5933                           ;display.c: 265: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 155);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 92);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  5934  001942  0E0C               	movlw	12
  5935  001944  6E1E               	movwf	cmd@command,c
  5936  001946  0EFF               	movlw	255
  5937  001948  6E1F               	movwf	cmd@command+1,c
  5938  00194A  0EFF               	movlw	255
  5939  00194C  6E20               	movwf	cmd@command+2,c
  5940  00194E  0EFF               	movlw	255
  5941  001950  6E21               	movwf	cmd@command+3,c
  5942  001952  ECD9  F02F         	call	_cmd	;wreg free
  5943  001956  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5944  00195A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5945  00195E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5946  001960  0E00               	movlw	0
  5947  001962  2427               	addwf	??_display_rpm,w,c
  5948  001964  6E11               	movwf	wr16@addr,c
  5949  001966  0E80               	movlw	128
  5950  001968  2028               	addwfc	??_display_rpm+1,w,c
  5951  00196A  6E12               	movwf	wr16@addr+1,c
  5952  00196C  0E10               	movlw	16
  5953  00196E  2029               	addwfc	??_display_rpm+2,w,c
  5954  001970  6E13               	movwf	wr16@addr+2,c
  5955  001972  0E00               	movlw	0
  5956  001974  6E15               	movwf	wr16@value+1,c
  5957  001976  0E9B               	movlw	155
  5958  001978  6E14               	movwf	wr16@value,c
  5959  00197A  EC9E  F02F         	call	_wr16	;wreg free
  5960  00197E  0E02               	movlw	2
  5961  001980  EC8C  F030         	call	_cmd_incrementn
  5962  001984  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5963  001988  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5964  00198C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5965  00198E  0E00               	movlw	0
  5966  001990  2427               	addwf	??_display_rpm,w,c
  5967  001992  6E11               	movwf	wr16@addr,c
  5968  001994  0E80               	movlw	128
  5969  001996  2028               	addwfc	??_display_rpm+1,w,c
  5970  001998  6E12               	movwf	wr16@addr+1,c
  5971  00199A  0E10               	movlw	16
  5972  00199C  2029               	addwfc	??_display_rpm+2,w,c
  5973  00199E  6E13               	movwf	wr16@addr+2,c
  5974  0019A0  0E00               	movlw	0
  5975  0019A2  6E15               	movwf	wr16@value+1,c
  5976  0019A4  0E5C               	movlw	92
  5977  0019A6  6E14               	movwf	wr16@value,c
  5978  0019A8  EC9E  F02F         	call	_wr16	;wreg free
  5979  0019AC  0E02               	movlw	2
  5980  0019AE  EC8C  F030         	call	_cmd_incrementn
  5981  0019B2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5982  0019B6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5983  0019BA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5984  0019BC  0E00               	movlw	0
  5985  0019BE  2427               	addwf	??_display_rpm,w,c
  5986  0019C0  6E11               	movwf	wr16@addr,c
  5987  0019C2  0E80               	movlw	128
  5988  0019C4  2028               	addwfc	??_display_rpm+1,w,c
  5989  0019C6  6E12               	movwf	wr16@addr+1,c
  5990  0019C8  0E10               	movlw	16
  5991  0019CA  2029               	addwfc	??_display_rpm+2,w,c
  5992  0019CC  6E13               	movwf	wr16@addr+2,c
  5993  0019CE  0E00               	movlw	0
  5994  0019D0  6E15               	movwf	wr16@value+1,c
  5995  0019D2  0E1C               	movlw	28
  5996  0019D4  6E14               	movwf	wr16@value,c
  5997  0019D6  EC9E  F02F         	call	_wr16	;wreg free
  5998  0019DA  0E02               	movlw	2
  5999  0019DC  EC8C  F030         	call	_cmd_incrementn
  6000  0019E0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6001  0019E4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6002  0019E8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6003  0019EA  0E00               	movlw	0
  6004  0019EC  2427               	addwf	??_display_rpm,w,c
  6005  0019EE  6E11               	movwf	wr16@addr,c
  6006  0019F0  0E80               	movlw	128
  6007  0019F2  2028               	addwfc	??_display_rpm+1,w,c
  6008  0019F4  6E12               	movwf	wr16@addr+1,c
  6009  0019F6  0E10               	movlw	16
  6010  0019F8  2029               	addwfc	??_display_rpm+2,w,c
  6011  0019FA  6E13               	movwf	wr16@addr+2,c
  6012  0019FC  0E00               	movlw	0
  6013  0019FE  6E15               	movwf	wr16@value+1,c
  6014  001A00  0E00               	movlw	0
  6015  001A02  6E14               	movwf	wr16@value,c
  6016  001A04  EC9E  F02F         	call	_wr16	;wreg free
  6017  001A08  0E02               	movlw	2
  6018  001A0A  EC8C  F030         	call	_cmd_incrementn
  6019  001A0E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6020  001A12  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6021  001A16  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6022  001A18  0E00               	movlw	0
  6023  001A1A  2427               	addwf	??_display_rpm,w,c
  6024  001A1C  6E16               	movwf	wr8s@addr,c
  6025  001A1E  0E80               	movlw	128
  6026  001A20  2028               	addwfc	??_display_rpm+1,w,c
  6027  001A22  6E17               	movwf	wr8s@addr+1,c
  6028  001A24  0E10               	movlw	16
  6029  001A26  2029               	addwfc	??_display_rpm+2,w,c
  6030  001A28  6E18               	movwf	wr8s@addr+2,c
  6031  001A2A  0E60               	movlw	low STR_26
  6032  001A2C  6E19               	movwf	wr8s@s,c
  6033  001A2E  0E0F               	movlw	high STR_26
  6034  001A30  6E1A               	movwf	wr8s@s+1,c
  6035  001A32  EC64  F02D         	call	_wr8s	;wreg free
  6036  001A36  EC8C  F030         	call	_cmd_incrementn
  6037                           
  6038                           ;display.c: 266: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 171);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6039  001A3A  0E0C               	movlw	12
  6040  001A3C  6E1E               	movwf	cmd@command,c
  6041  001A3E  0EFF               	movlw	255
  6042  001A40  6E1F               	movwf	cmd@command+1,c
  6043  001A42  0EFF               	movlw	255
  6044  001A44  6E20               	movwf	cmd@command+2,c
  6045  001A46  0EFF               	movlw	255
  6046  001A48  6E21               	movwf	cmd@command+3,c
  6047  001A4A  ECD9  F02F         	call	_cmd	;wreg free
  6048  001A4E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6049  001A52  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6050  001A56  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6051  001A58  0E00               	movlw	0
  6052  001A5A  2427               	addwf	??_display_rpm,w,c
  6053  001A5C  6E11               	movwf	wr16@addr,c
  6054  001A5E  0E80               	movlw	128
  6055  001A60  2028               	addwfc	??_display_rpm+1,w,c
  6056  001A62  6E12               	movwf	wr16@addr+1,c
  6057  001A64  0E10               	movlw	16
  6058  001A66  2029               	addwfc	??_display_rpm+2,w,c
  6059  001A68  6E13               	movwf	wr16@addr+2,c
  6060  001A6A  0E00               	movlw	0
  6061  001A6C  6E15               	movwf	wr16@value+1,c
  6062  001A6E  0EAB               	movlw	171
  6063  001A70  6E14               	movwf	wr16@value,c
  6064  001A72  EC9E  F02F         	call	_wr16	;wreg free
  6065  001A76  0E02               	movlw	2
  6066  001A78  EC8C  F030         	call	_cmd_incrementn
  6067  001A7C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6068  001A80  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6069  001A84  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6070  001A86  0E00               	movlw	0
  6071  001A88  2427               	addwf	??_display_rpm,w,c
  6072  001A8A  6E11               	movwf	wr16@addr,c
  6073  001A8C  0E80               	movlw	128
  6074  001A8E  2028               	addwfc	??_display_rpm+1,w,c
  6075  001A90  6E12               	movwf	wr16@addr+1,c
  6076  001A92  0E10               	movlw	16
  6077  001A94  2029               	addwfc	??_display_rpm+2,w,c
  6078  001A96  6E13               	movwf	wr16@addr+2,c
  6079  001A98  0E00               	movlw	0
  6080  001A9A  6E15               	movwf	wr16@value+1,c
  6081  001A9C  0E3A               	movlw	58
  6082  001A9E  6E14               	movwf	wr16@value,c
  6083  001AA0  EC9E  F02F         	call	_wr16	;wreg free
  6084  001AA4  0E02               	movlw	2
  6085  001AA6  EC8C  F030         	call	_cmd_incrementn
  6086  001AAA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6087  001AAE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6088  001AB2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6089  001AB4  0E00               	movlw	0
  6090  001AB6  2427               	addwf	??_display_rpm,w,c
  6091  001AB8  6E11               	movwf	wr16@addr,c
  6092  001ABA  0E80               	movlw	128
  6093  001ABC  2028               	addwfc	??_display_rpm+1,w,c
  6094  001ABE  6E12               	movwf	wr16@addr+1,c
  6095  001AC0  0E10               	movlw	16
  6096  001AC2  2029               	addwfc	??_display_rpm+2,w,c
  6097  001AC4  6E13               	movwf	wr16@addr+2,c
  6098  001AC6  0E00               	movlw	0
  6099  001AC8  6E15               	movwf	wr16@value+1,c
  6100  001ACA  0E1C               	movlw	28
  6101  001ACC  6E14               	movwf	wr16@value,c
  6102  001ACE  EC9E  F02F         	call	_wr16	;wreg free
  6103  001AD2  0E02               	movlw	2
  6104  001AD4  EC8C  F030         	call	_cmd_incrementn
  6105  001AD8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6106  001ADC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6107  001AE0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6108  001AE2  0E00               	movlw	0
  6109  001AE4  2427               	addwf	??_display_rpm,w,c
  6110  001AE6  6E11               	movwf	wr16@addr,c
  6111  001AE8  0E80               	movlw	128
  6112  001AEA  2028               	addwfc	??_display_rpm+1,w,c
  6113  001AEC  6E12               	movwf	wr16@addr+1,c
  6114  001AEE  0E10               	movlw	16
  6115  001AF0  2029               	addwfc	??_display_rpm+2,w,c
  6116  001AF2  6E13               	movwf	wr16@addr+2,c
  6117  001AF4  0E00               	movlw	0
  6118  001AF6  6E15               	movwf	wr16@value+1,c
  6119  001AF8  0E00               	movlw	0
  6120  001AFA  6E14               	movwf	wr16@value,c
  6121  001AFC  EC9E  F02F         	call	_wr16	;wreg free
  6122  001B00  0E02               	movlw	2
  6123  001B02  EC8C  F030         	call	_cmd_incrementn
  6124  001B06  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6125  001B0A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6126  001B0E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6127  001B10  0E00               	movlw	0
  6128  001B12  2427               	addwf	??_display_rpm,w,c
  6129  001B14  6E16               	movwf	wr8s@addr,c
  6130  001B16  0E80               	movlw	128
  6131  001B18  2028               	addwfc	??_display_rpm+1,w,c
  6132  001B1A  6E17               	movwf	wr8s@addr+1,c
  6133  001B1C  0E10               	movlw	16
  6134  001B1E  2029               	addwfc	??_display_rpm+2,w,c
  6135  001B20  6E18               	movwf	wr8s@addr+2,c
  6136  001B22  0E62               	movlw	low STR_27
  6137  001B24  6E19               	movwf	wr8s@s,c
  6138  001B26  0E0F               	movlw	high STR_27
  6139  001B28  6E1A               	movwf	wr8s@s+1,c
  6140  001B2A  EC64  F02D         	call	_wr8s	;wreg free
  6141  001B2E  EC8C  F030         	call	_cmd_incrementn
  6142                           
  6143                           ;display.c: 267: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 201);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 33);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6144  001B32  0E0C               	movlw	12
  6145  001B34  6E1E               	movwf	cmd@command,c
  6146  001B36  0EFF               	movlw	255
  6147  001B38  6E1F               	movwf	cmd@command+1,c
  6148  001B3A  0EFF               	movlw	255
  6149  001B3C  6E20               	movwf	cmd@command+2,c
  6150  001B3E  0EFF               	movlw	255
  6151  001B40  6E21               	movwf	cmd@command+3,c
  6152  001B42  ECD9  F02F         	call	_cmd	;wreg free
  6153  001B46  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6154  001B4A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6155  001B4E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6156  001B50  0E00               	movlw	0
  6157  001B52  2427               	addwf	??_display_rpm,w,c
  6158  001B54  6E11               	movwf	wr16@addr,c
  6159  001B56  0E80               	movlw	128
  6160  001B58  2028               	addwfc	??_display_rpm+1,w,c
  6161  001B5A  6E12               	movwf	wr16@addr+1,c
  6162  001B5C  0E10               	movlw	16
  6163  001B5E  2029               	addwfc	??_display_rpm+2,w,c
  6164  001B60  6E13               	movwf	wr16@addr+2,c
  6165  001B62  0E00               	movlw	0
  6166  001B64  6E15               	movwf	wr16@value+1,c
  6167  001B66  0EC9               	movlw	201
  6168  001B68  6E14               	movwf	wr16@value,c
  6169  001B6A  EC9E  F02F         	call	_wr16	;wreg free
  6170  001B6E  0E02               	movlw	2
  6171  001B70  EC8C  F030         	call	_cmd_incrementn
  6172  001B74  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6173  001B78  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6174  001B7C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6175  001B7E  0E00               	movlw	0
  6176  001B80  2427               	addwf	??_display_rpm,w,c
  6177  001B82  6E11               	movwf	wr16@addr,c
  6178  001B84  0E80               	movlw	128
  6179  001B86  2028               	addwfc	??_display_rpm+1,w,c
  6180  001B88  6E12               	movwf	wr16@addr+1,c
  6181  001B8A  0E10               	movlw	16
  6182  001B8C  2029               	addwfc	??_display_rpm+2,w,c
  6183  001B8E  6E13               	movwf	wr16@addr+2,c
  6184  001B90  0E00               	movlw	0
  6185  001B92  6E15               	movwf	wr16@value+1,c
  6186  001B94  0E21               	movlw	33
  6187  001B96  6E14               	movwf	wr16@value,c
  6188  001B98  EC9E  F02F         	call	_wr16	;wreg free
  6189  001B9C  0E02               	movlw	2
  6190  001B9E  EC8C  F030         	call	_cmd_incrementn
  6191  001BA2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6192  001BA6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6193  001BAA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6194  001BAC  0E00               	movlw	0
  6195  001BAE  2427               	addwf	??_display_rpm,w,c
  6196  001BB0  6E11               	movwf	wr16@addr,c
  6197  001BB2  0E80               	movlw	128
  6198  001BB4  2028               	addwfc	??_display_rpm+1,w,c
  6199  001BB6  6E12               	movwf	wr16@addr+1,c
  6200  001BB8  0E10               	movlw	16
  6201  001BBA  2029               	addwfc	??_display_rpm+2,w,c
  6202  001BBC  6E13               	movwf	wr16@addr+2,c
  6203  001BBE  0E00               	movlw	0
  6204  001BC0  6E15               	movwf	wr16@value+1,c
  6205  001BC2  0E1C               	movlw	28
  6206  001BC4  6E14               	movwf	wr16@value,c
  6207  001BC6  EC9E  F02F         	call	_wr16	;wreg free
  6208  001BCA  0E02               	movlw	2
  6209  001BCC  EC8C  F030         	call	_cmd_incrementn
  6210  001BD0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6211  001BD4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6212  001BD8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6213  001BDA  0E00               	movlw	0
  6214  001BDC  2427               	addwf	??_display_rpm,w,c
  6215  001BDE  6E11               	movwf	wr16@addr,c
  6216  001BE0  0E80               	movlw	128
  6217  001BE2  2028               	addwfc	??_display_rpm+1,w,c
  6218  001BE4  6E12               	movwf	wr16@addr+1,c
  6219  001BE6  0E10               	movlw	16
  6220  001BE8  2029               	addwfc	??_display_rpm+2,w,c
  6221  001BEA  6E13               	movwf	wr16@addr+2,c
  6222  001BEC  0E00               	movlw	0
  6223  001BEE  6E15               	movwf	wr16@value+1,c
  6224  001BF0  0E00               	movlw	0
  6225  001BF2  6E14               	movwf	wr16@value,c
  6226  001BF4  EC9E  F02F         	call	_wr16	;wreg free
  6227  001BF8  0E02               	movlw	2
  6228  001BFA  EC8C  F030         	call	_cmd_incrementn
  6229  001BFE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6230  001C02  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6231  001C06  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6232  001C08  0E00               	movlw	0
  6233  001C0A  2427               	addwf	??_display_rpm,w,c
  6234  001C0C  6E16               	movwf	wr8s@addr,c
  6235  001C0E  0E80               	movlw	128
  6236  001C10  2028               	addwfc	??_display_rpm+1,w,c
  6237  001C12  6E17               	movwf	wr8s@addr+1,c
  6238  001C14  0E10               	movlw	16
  6239  001C16  2029               	addwfc	??_display_rpm+2,w,c
  6240  001C18  6E18               	movwf	wr8s@addr+2,c
  6241  001C1A  0E64               	movlw	low STR_28
  6242  001C1C  6E19               	movwf	wr8s@s,c
  6243  001C1E  0E0F               	movlw	high STR_28
  6244  001C20  6E1A               	movwf	wr8s@s+1,c
  6245  001C22  EC64  F02D         	call	_wr8s	;wreg free
  6246  001C26  EC8C  F030         	call	_cmd_incrementn
  6247                           
  6248                           ;display.c: 268: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 235);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6249  001C2A  0E0C               	movlw	12
  6250  001C2C  6E1E               	movwf	cmd@command,c
  6251  001C2E  0EFF               	movlw	255
  6252  001C30  6E1F               	movwf	cmd@command+1,c
  6253  001C32  0EFF               	movlw	255
  6254  001C34  6E20               	movwf	cmd@command+2,c
  6255  001C36  0EFF               	movlw	255
  6256  001C38  6E21               	movwf	cmd@command+3,c
  6257  001C3A  ECD9  F02F         	call	_cmd	;wreg free
  6258  001C3E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6259  001C42  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6260  001C46  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6261  001C48  0E00               	movlw	0
  6262  001C4A  2427               	addwf	??_display_rpm,w,c
  6263  001C4C  6E11               	movwf	wr16@addr,c
  6264  001C4E  0E80               	movlw	128
  6265  001C50  2028               	addwfc	??_display_rpm+1,w,c
  6266  001C52  6E12               	movwf	wr16@addr+1,c
  6267  001C54  0E10               	movlw	16
  6268  001C56  2029               	addwfc	??_display_rpm+2,w,c
  6269  001C58  6E13               	movwf	wr16@addr+2,c
  6270  001C5A  0E00               	movlw	0
  6271  001C5C  6E15               	movwf	wr16@value+1,c
  6272  001C5E  0EEB               	movlw	235
  6273  001C60  6E14               	movwf	wr16@value,c
  6274  001C62  EC9E  F02F         	call	_wr16	;wreg free
  6275  001C66  0E02               	movlw	2
  6276  001C68  EC8C  F030         	call	_cmd_incrementn
  6277  001C6C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6278  001C70  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6279  001C74  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6280  001C76  0E00               	movlw	0
  6281  001C78  2427               	addwf	??_display_rpm,w,c
  6282  001C7A  6E11               	movwf	wr16@addr,c
  6283  001C7C  0E80               	movlw	128
  6284  001C7E  2028               	addwfc	??_display_rpm+1,w,c
  6285  001C80  6E12               	movwf	wr16@addr+1,c
  6286  001C82  0E10               	movlw	16
  6287  001C84  2029               	addwfc	??_display_rpm+2,w,c
  6288  001C86  6E13               	movwf	wr16@addr+2,c
  6289  001C88  0E00               	movlw	0
  6290  001C8A  6E15               	movwf	wr16@value+1,c
  6291  001C8C  0E1A               	movlw	26
  6292  001C8E  6E14               	movwf	wr16@value,c
  6293  001C90  EC9E  F02F         	call	_wr16	;wreg free
  6294  001C94  0E02               	movlw	2
  6295  001C96  EC8C  F030         	call	_cmd_incrementn
  6296  001C9A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6297  001C9E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6298  001CA2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6299  001CA4  0E00               	movlw	0
  6300  001CA6  2427               	addwf	??_display_rpm,w,c
  6301  001CA8  6E11               	movwf	wr16@addr,c
  6302  001CAA  0E80               	movlw	128
  6303  001CAC  2028               	addwfc	??_display_rpm+1,w,c
  6304  001CAE  6E12               	movwf	wr16@addr+1,c
  6305  001CB0  0E10               	movlw	16
  6306  001CB2  2029               	addwfc	??_display_rpm+2,w,c
  6307  001CB4  6E13               	movwf	wr16@addr+2,c
  6308  001CB6  0E00               	movlw	0
  6309  001CB8  6E15               	movwf	wr16@value+1,c
  6310  001CBA  0E1C               	movlw	28
  6311  001CBC  6E14               	movwf	wr16@value,c
  6312  001CBE  EC9E  F02F         	call	_wr16	;wreg free
  6313  001CC2  0E02               	movlw	2
  6314  001CC4  EC8C  F030         	call	_cmd_incrementn
  6315  001CC8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6316  001CCC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6317  001CD0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6318  001CD2  0E00               	movlw	0
  6319  001CD4  2427               	addwf	??_display_rpm,w,c
  6320  001CD6  6E11               	movwf	wr16@addr,c
  6321  001CD8  0E80               	movlw	128
  6322  001CDA  2028               	addwfc	??_display_rpm+1,w,c
  6323  001CDC  6E12               	movwf	wr16@addr+1,c
  6324  001CDE  0E10               	movlw	16
  6325  001CE0  2029               	addwfc	??_display_rpm+2,w,c
  6326  001CE2  6E13               	movwf	wr16@addr+2,c
  6327  001CE4  0E00               	movlw	0
  6328  001CE6  6E15               	movwf	wr16@value+1,c
  6329  001CE8  0E00               	movlw	0
  6330  001CEA  6E14               	movwf	wr16@value,c
  6331  001CEC  EC9E  F02F         	call	_wr16	;wreg free
  6332  001CF0  0E02               	movlw	2
  6333  001CF2  EC8C  F030         	call	_cmd_incrementn
  6334  001CF6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6335  001CFA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6336  001CFE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6337  001D00  0E00               	movlw	0
  6338  001D02  2427               	addwf	??_display_rpm,w,c
  6339  001D04  6E16               	movwf	wr8s@addr,c
  6340  001D06  0E80               	movlw	128
  6341  001D08  2028               	addwfc	??_display_rpm+1,w,c
  6342  001D0A  6E17               	movwf	wr8s@addr+1,c
  6343  001D0C  0E10               	movlw	16
  6344  001D0E  2029               	addwfc	??_display_rpm+2,w,c
  6345  001D10  6E18               	movwf	wr8s@addr+2,c
  6346  001D12  0E66               	movlw	low STR_29
  6347  001D14  6E19               	movwf	wr8s@s,c
  6348  001D16  0E0F               	movlw	high STR_29
  6349  001D18  6E1A               	movwf	wr8s@s+1,c
  6350  001D1A  EC64  F02D         	call	_wr8s	;wreg free
  6351  001D1E  EC8C  F030         	call	_cmd_incrementn
  6352                           
  6353                           ;display.c: 269: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 269);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 33);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6354  001D22  0E0C               	movlw	12
  6355  001D24  6E1E               	movwf	cmd@command,c
  6356  001D26  0EFF               	movlw	255
  6357  001D28  6E1F               	movwf	cmd@command+1,c
  6358  001D2A  0EFF               	movlw	255
  6359  001D2C  6E20               	movwf	cmd@command+2,c
  6360  001D2E  0EFF               	movlw	255
  6361  001D30  6E21               	movwf	cmd@command+3,c
  6362  001D32  ECD9  F02F         	call	_cmd	;wreg free
  6363  001D36  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6364  001D3A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6365  001D3E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6366  001D40  0E00               	movlw	0
  6367  001D42  2427               	addwf	??_display_rpm,w,c
  6368  001D44  6E11               	movwf	wr16@addr,c
  6369  001D46  0E80               	movlw	128
  6370  001D48  2028               	addwfc	??_display_rpm+1,w,c
  6371  001D4A  6E12               	movwf	wr16@addr+1,c
  6372  001D4C  0E10               	movlw	16
  6373  001D4E  2029               	addwfc	??_display_rpm+2,w,c
  6374  001D50  6E13               	movwf	wr16@addr+2,c
  6375  001D52  0E01               	movlw	1
  6376  001D54  6E15               	movwf	wr16@value+1,c
  6377  001D56  0E0D               	movlw	13
  6378  001D58  6E14               	movwf	wr16@value,c
  6379  001D5A  EC9E  F02F         	call	_wr16	;wreg free
  6380  001D5E  0E02               	movlw	2
  6381  001D60  EC8C  F030         	call	_cmd_incrementn
  6382  001D64  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6383  001D68  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6384  001D6C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6385  001D6E  0E00               	movlw	0
  6386  001D70  2427               	addwf	??_display_rpm,w,c
  6387  001D72  6E11               	movwf	wr16@addr,c
  6388  001D74  0E80               	movlw	128
  6389  001D76  2028               	addwfc	??_display_rpm+1,w,c
  6390  001D78  6E12               	movwf	wr16@addr+1,c
  6391  001D7A  0E10               	movlw	16
  6392  001D7C  2029               	addwfc	??_display_rpm+2,w,c
  6393  001D7E  6E13               	movwf	wr16@addr+2,c
  6394  001D80  0E00               	movlw	0
  6395  001D82  6E15               	movwf	wr16@value+1,c
  6396  001D84  0E21               	movlw	33
  6397  001D86  6E14               	movwf	wr16@value,c
  6398  001D88  EC9E  F02F         	call	_wr16	;wreg free
  6399  001D8C  0E02               	movlw	2
  6400  001D8E  EC8C  F030         	call	_cmd_incrementn
  6401  001D92  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6402  001D96  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6403  001D9A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6404  001D9C  0E00               	movlw	0
  6405  001D9E  2427               	addwf	??_display_rpm,w,c
  6406  001DA0  6E11               	movwf	wr16@addr,c
  6407  001DA2  0E80               	movlw	128
  6408  001DA4  2028               	addwfc	??_display_rpm+1,w,c
  6409  001DA6  6E12               	movwf	wr16@addr+1,c
  6410  001DA8  0E10               	movlw	16
  6411  001DAA  2029               	addwfc	??_display_rpm+2,w,c
  6412  001DAC  6E13               	movwf	wr16@addr+2,c
  6413  001DAE  0E00               	movlw	0
  6414  001DB0  6E15               	movwf	wr16@value+1,c
  6415  001DB2  0E1C               	movlw	28
  6416  001DB4  6E14               	movwf	wr16@value,c
  6417  001DB6  EC9E  F02F         	call	_wr16	;wreg free
  6418  001DBA  0E02               	movlw	2
  6419  001DBC  EC8C  F030         	call	_cmd_incrementn
  6420  001DC0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6421  001DC4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6422  001DC8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6423  001DCA  0E00               	movlw	0
  6424  001DCC  2427               	addwf	??_display_rpm,w,c
  6425  001DCE  6E11               	movwf	wr16@addr,c
  6426  001DD0  0E80               	movlw	128
  6427  001DD2  2028               	addwfc	??_display_rpm+1,w,c
  6428  001DD4  6E12               	movwf	wr16@addr+1,c
  6429  001DD6  0E10               	movlw	16
  6430  001DD8  2029               	addwfc	??_display_rpm+2,w,c
  6431  001DDA  6E13               	movwf	wr16@addr+2,c
  6432  001DDC  0E00               	movlw	0
  6433  001DDE  6E15               	movwf	wr16@value+1,c
  6434  001DE0  0E00               	movlw	0
  6435  001DE2  6E14               	movwf	wr16@value,c
  6436  001DE4  EC9E  F02F         	call	_wr16	;wreg free
  6437  001DE8  0E02               	movlw	2
  6438  001DEA  EC8C  F030         	call	_cmd_incrementn
  6439  001DEE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6440  001DF2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6441  001DF6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6442  001DF8  0E00               	movlw	0
  6443  001DFA  2427               	addwf	??_display_rpm,w,c
  6444  001DFC  6E16               	movwf	wr8s@addr,c
  6445  001DFE  0E80               	movlw	128
  6446  001E00  2028               	addwfc	??_display_rpm+1,w,c
  6447  001E02  6E17               	movwf	wr8s@addr+1,c
  6448  001E04  0E10               	movlw	16
  6449  001E06  2029               	addwfc	??_display_rpm+2,w,c
  6450  001E08  6E18               	movwf	wr8s@addr+2,c
  6451  001E0A  0E68               	movlw	low STR_30
  6452  001E0C  6E19               	movwf	wr8s@s,c
  6453  001E0E  0E0F               	movlw	high STR_30
  6454  001E10  6E1A               	movwf	wr8s@s+1,c
  6455  001E12  EC64  F02D         	call	_wr8s	;wreg free
  6456  001E16  EC8C  F030         	call	_cmd_incrementn
  6457                           
  6458                           ;display.c: 270: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 298);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6459  001E1A  0E0C               	movlw	12
  6460  001E1C  6E1E               	movwf	cmd@command,c
  6461  001E1E  0EFF               	movlw	255
  6462  001E20  6E1F               	movwf	cmd@command+1,c
  6463  001E22  0EFF               	movlw	255
  6464  001E24  6E20               	movwf	cmd@command+2,c
  6465  001E26  0EFF               	movlw	255
  6466  001E28  6E21               	movwf	cmd@command+3,c
  6467  001E2A  ECD9  F02F         	call	_cmd	;wreg free
  6468  001E2E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6469  001E32  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6470  001E36  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6471  001E38  0E00               	movlw	0
  6472  001E3A  2427               	addwf	??_display_rpm,w,c
  6473  001E3C  6E11               	movwf	wr16@addr,c
  6474  001E3E  0E80               	movlw	128
  6475  001E40  2028               	addwfc	??_display_rpm+1,w,c
  6476  001E42  6E12               	movwf	wr16@addr+1,c
  6477  001E44  0E10               	movlw	16
  6478  001E46  2029               	addwfc	??_display_rpm+2,w,c
  6479  001E48  6E13               	movwf	wr16@addr+2,c
  6480  001E4A  0E01               	movlw	1
  6481  001E4C  6E15               	movwf	wr16@value+1,c
  6482  001E4E  0E2A               	movlw	42
  6483  001E50  6E14               	movwf	wr16@value,c
  6484  001E52  EC9E  F02F         	call	_wr16	;wreg free
  6485  001E56  0E02               	movlw	2
  6486  001E58  EC8C  F030         	call	_cmd_incrementn
  6487  001E5C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6488  001E60  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6489  001E64  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6490  001E66  0E00               	movlw	0
  6491  001E68  2427               	addwf	??_display_rpm,w,c
  6492  001E6A  6E11               	movwf	wr16@addr,c
  6493  001E6C  0E80               	movlw	128
  6494  001E6E  2028               	addwfc	??_display_rpm+1,w,c
  6495  001E70  6E12               	movwf	wr16@addr+1,c
  6496  001E72  0E10               	movlw	16
  6497  001E74  2029               	addwfc	??_display_rpm+2,w,c
  6498  001E76  6E13               	movwf	wr16@addr+2,c
  6499  001E78  0E00               	movlw	0
  6500  001E7A  6E15               	movwf	wr16@value+1,c
  6501  001E7C  0E3A               	movlw	58
  6502  001E7E  6E14               	movwf	wr16@value,c
  6503  001E80  EC9E  F02F         	call	_wr16	;wreg free
  6504  001E84  0E02               	movlw	2
  6505  001E86  EC8C  F030         	call	_cmd_incrementn
  6506  001E8A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6507  001E8E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6508  001E92  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6509  001E94  0E00               	movlw	0
  6510  001E96  2427               	addwf	??_display_rpm,w,c
  6511  001E98  6E11               	movwf	wr16@addr,c
  6512  001E9A  0E80               	movlw	128
  6513  001E9C  2028               	addwfc	??_display_rpm+1,w,c
  6514  001E9E  6E12               	movwf	wr16@addr+1,c
  6515  001EA0  0E10               	movlw	16
  6516  001EA2  2029               	addwfc	??_display_rpm+2,w,c
  6517  001EA4  6E13               	movwf	wr16@addr+2,c
  6518  001EA6  0E00               	movlw	0
  6519  001EA8  6E15               	movwf	wr16@value+1,c
  6520  001EAA  0E1C               	movlw	28
  6521  001EAC  6E14               	movwf	wr16@value,c
  6522  001EAE  EC9E  F02F         	call	_wr16	;wreg free
  6523  001EB2  0E02               	movlw	2
  6524  001EB4  EC8C  F030         	call	_cmd_incrementn
  6525  001EB8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6526  001EBC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6527  001EC0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6528  001EC2  0E00               	movlw	0
  6529  001EC4  2427               	addwf	??_display_rpm,w,c
  6530  001EC6  6E11               	movwf	wr16@addr,c
  6531  001EC8  0E80               	movlw	128
  6532  001ECA  2028               	addwfc	??_display_rpm+1,w,c
  6533  001ECC  6E12               	movwf	wr16@addr+1,c
  6534  001ECE  0E10               	movlw	16
  6535  001ED0  2029               	addwfc	??_display_rpm+2,w,c
  6536  001ED2  6E13               	movwf	wr16@addr+2,c
  6537  001ED4  0E00               	movlw	0
  6538  001ED6  6E15               	movwf	wr16@value+1,c
  6539  001ED8  0E00               	movlw	0
  6540  001EDA  6E14               	movwf	wr16@value,c
  6541  001EDC  EC9E  F02F         	call	_wr16	;wreg free
  6542  001EE0  0E02               	movlw	2
  6543  001EE2  EC8C  F030         	call	_cmd_incrementn
  6544  001EE6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6545  001EEA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6546  001EEE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6547  001EF0  0E00               	movlw	0
  6548  001EF2  2427               	addwf	??_display_rpm,w,c
  6549  001EF4  6E16               	movwf	wr8s@addr,c
  6550  001EF6  0E80               	movlw	128
  6551  001EF8  2028               	addwfc	??_display_rpm+1,w,c
  6552  001EFA  6E17               	movwf	wr8s@addr+1,c
  6553  001EFC  0E10               	movlw	16
  6554  001EFE  2029               	addwfc	??_display_rpm+2,w,c
  6555  001F00  6E18               	movwf	wr8s@addr+2,c
  6556  001F02  0E6A               	movlw	low STR_31
  6557  001F04  6E19               	movwf	wr8s@s,c
  6558  001F06  0E0F               	movlw	high STR_31
  6559  001F08  6E1A               	movwf	wr8s@s+1,c
  6560  001F0A  EC64  F02D         	call	_wr8s	;wreg free
  6561  001F0E  EC8C  F030         	call	_cmd_incrementn
  6562                           
  6563                           ;display.c: 271: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 301);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 92);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6564  001F12  0E0C               	movlw	12
  6565  001F14  6E1E               	movwf	cmd@command,c
  6566  001F16  0EFF               	movlw	255
  6567  001F18  6E1F               	movwf	cmd@command+1,c
  6568  001F1A  0EFF               	movlw	255
  6569  001F1C  6E20               	movwf	cmd@command+2,c
  6570  001F1E  0EFF               	movlw	255
  6571  001F20  6E21               	movwf	cmd@command+3,c
  6572  001F22  ECD9  F02F         	call	_cmd	;wreg free
  6573  001F26  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6574  001F2A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6575  001F2E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6576  001F30  0E00               	movlw	0
  6577  001F32  2427               	addwf	??_display_rpm,w,c
  6578  001F34  6E11               	movwf	wr16@addr,c
  6579  001F36  0E80               	movlw	128
  6580  001F38  2028               	addwfc	??_display_rpm+1,w,c
  6581  001F3A  6E12               	movwf	wr16@addr+1,c
  6582  001F3C  0E10               	movlw	16
  6583  001F3E  2029               	addwfc	??_display_rpm+2,w,c
  6584  001F40  6E13               	movwf	wr16@addr+2,c
  6585  001F42  0E01               	movlw	1
  6586  001F44  6E15               	movwf	wr16@value+1,c
  6587  001F46  0E2D               	movlw	45
  6588  001F48  6E14               	movwf	wr16@value,c
  6589  001F4A  EC9E  F02F         	call	_wr16	;wreg free
  6590  001F4E  0E02               	movlw	2
  6591  001F50  EC8C  F030         	call	_cmd_incrementn
  6592  001F54  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6593  001F58  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6594  001F5C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6595  001F5E  0E00               	movlw	0
  6596  001F60  2427               	addwf	??_display_rpm,w,c
  6597  001F62  6E11               	movwf	wr16@addr,c
  6598  001F64  0E80               	movlw	128
  6599  001F66  2028               	addwfc	??_display_rpm+1,w,c
  6600  001F68  6E12               	movwf	wr16@addr+1,c
  6601  001F6A  0E10               	movlw	16
  6602  001F6C  2029               	addwfc	??_display_rpm+2,w,c
  6603  001F6E  6E13               	movwf	wr16@addr+2,c
  6604  001F70  0E00               	movlw	0
  6605  001F72  6E15               	movwf	wr16@value+1,c
  6606  001F74  0E5C               	movlw	92
  6607  001F76  6E14               	movwf	wr16@value,c
  6608  001F78  EC9E  F02F         	call	_wr16	;wreg free
  6609  001F7C  0E02               	movlw	2
  6610  001F7E  EC8C  F030         	call	_cmd_incrementn
  6611  001F82  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6612  001F86  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6613  001F8A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6614  001F8C  0E00               	movlw	0
  6615  001F8E  2427               	addwf	??_display_rpm,w,c
  6616  001F90  6E11               	movwf	wr16@addr,c
  6617  001F92  0E80               	movlw	128
  6618  001F94  2028               	addwfc	??_display_rpm+1,w,c
  6619  001F96  6E12               	movwf	wr16@addr+1,c
  6620  001F98  0E10               	movlw	16
  6621  001F9A  2029               	addwfc	??_display_rpm+2,w,c
  6622  001F9C  6E13               	movwf	wr16@addr+2,c
  6623  001F9E  0E00               	movlw	0
  6624  001FA0  6E15               	movwf	wr16@value+1,c
  6625  001FA2  0E1C               	movlw	28
  6626  001FA4  6E14               	movwf	wr16@value,c
  6627  001FA6  EC9E  F02F         	call	_wr16	;wreg free
  6628  001FAA  0E02               	movlw	2
  6629  001FAC  EC8C  F030         	call	_cmd_incrementn
  6630  001FB0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6631  001FB4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6632  001FB8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6633  001FBA  0E00               	movlw	0
  6634  001FBC  2427               	addwf	??_display_rpm,w,c
  6635  001FBE  6E11               	movwf	wr16@addr,c
  6636  001FC0  0E80               	movlw	128
  6637  001FC2  2028               	addwfc	??_display_rpm+1,w,c
  6638  001FC4  6E12               	movwf	wr16@addr+1,c
  6639  001FC6  0E10               	movlw	16
  6640  001FC8  2029               	addwfc	??_display_rpm+2,w,c
  6641  001FCA  6E13               	movwf	wr16@addr+2,c
  6642  001FCC  0E00               	movlw	0
  6643  001FCE  6E15               	movwf	wr16@value+1,c
  6644  001FD0  0E00               	movlw	0
  6645  001FD2  6E14               	movwf	wr16@value,c
  6646  001FD4  EC9E  F02F         	call	_wr16	;wreg free
  6647  001FD8  0E02               	movlw	2
  6648  001FDA  EC8C  F030         	call	_cmd_incrementn
  6649  001FDE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6650  001FE2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6651  001FE6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6652  001FE8  0E00               	movlw	0
  6653  001FEA  2427               	addwf	??_display_rpm,w,c
  6654  001FEC  6E16               	movwf	wr8s@addr,c
  6655  001FEE  0E80               	movlw	128
  6656  001FF0  2028               	addwfc	??_display_rpm+1,w,c
  6657  001FF2  6E17               	movwf	wr8s@addr+1,c
  6658  001FF4  0E10               	movlw	16
  6659  001FF6  2029               	addwfc	??_display_rpm+2,w,c
  6660  001FF8  6E18               	movwf	wr8s@addr+2,c
  6661  001FFA  0E4A               	movlw	low STR_32
  6662  001FFC  6E19               	movwf	wr8s@s,c
  6663  001FFE  0E0F               	movlw	high STR_32
  6664  002000  6E1A               	movwf	wr8s@s+1,c
  6665  002002  EC64  F02D         	call	_wr8s	;wreg free
  6666  002006  EC8C  F030         	call	_cmd_incrementn
  6667                           
  6668                           ;display.c: 272: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 299);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6669  00200A  0E0C               	movlw	12
  6670  00200C  6E1E               	movwf	cmd@command,c
  6671  00200E  0EFF               	movlw	255
  6672  002010  6E1F               	movwf	cmd@command+1,c
  6673  002012  0EFF               	movlw	255
  6674  002014  6E20               	movwf	cmd@command+2,c
  6675  002016  0EFF               	movlw	255
  6676  002018  6E21               	movwf	cmd@command+3,c
  6677  00201A  ECD9  F02F         	call	_cmd	;wreg free
  6678  00201E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6679  002022  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6680  002026  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6681  002028  0E00               	movlw	0
  6682  00202A  2427               	addwf	??_display_rpm,w,c
  6683  00202C  6E11               	movwf	wr16@addr,c
  6684  00202E  0E80               	movlw	128
  6685  002030  2028               	addwfc	??_display_rpm+1,w,c
  6686  002032  6E12               	movwf	wr16@addr+1,c
  6687  002034  0E10               	movlw	16
  6688  002036  2029               	addwfc	??_display_rpm+2,w,c
  6689  002038  6E13               	movwf	wr16@addr+2,c
  6690  00203A  0E01               	movlw	1
  6691  00203C  6E15               	movwf	wr16@value+1,c
  6692  00203E  0E2B               	movlw	43
  6693  002040  6E14               	movwf	wr16@value,c
  6694  002042  EC9E  F02F         	call	_wr16	;wreg free
  6695  002046  0E02               	movlw	2
  6696  002048  EC8C  F030         	call	_cmd_incrementn
  6697  00204C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6698  002050  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6699  002054  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6700  002056  0E00               	movlw	0
  6701  002058  2427               	addwf	??_display_rpm,w,c
  6702  00205A  6E11               	movwf	wr16@addr,c
  6703  00205C  0E80               	movlw	128
  6704  00205E  2028               	addwfc	??_display_rpm+1,w,c
  6705  002060  6E12               	movwf	wr16@addr+1,c
  6706  002062  0E10               	movlw	16
  6707  002064  2029               	addwfc	??_display_rpm+2,w,c
  6708  002066  6E13               	movwf	wr16@addr+2,c
  6709  002068  0E00               	movlw	0
  6710  00206A  6E15               	movwf	wr16@value+1,c
  6711  00206C  0E82               	movlw	130
  6712  00206E  6E14               	movwf	wr16@value,c
  6713  002070  EC9E  F02F         	call	_wr16	;wreg free
  6714  002074  0E02               	movlw	2
  6715  002076  EC8C  F030         	call	_cmd_incrementn
  6716  00207A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6717  00207E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6718  002082  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6719  002084  0E00               	movlw	0
  6720  002086  2427               	addwf	??_display_rpm,w,c
  6721  002088  6E11               	movwf	wr16@addr,c
  6722  00208A  0E80               	movlw	128
  6723  00208C  2028               	addwfc	??_display_rpm+1,w,c
  6724  00208E  6E12               	movwf	wr16@addr+1,c
  6725  002090  0E10               	movlw	16
  6726  002092  2029               	addwfc	??_display_rpm+2,w,c
  6727  002094  6E13               	movwf	wr16@addr+2,c
  6728  002096  0E00               	movlw	0
  6729  002098  6E15               	movwf	wr16@value+1,c
  6730  00209A  0E1C               	movlw	28
  6731  00209C  6E14               	movwf	wr16@value,c
  6732  00209E  EC9E  F02F         	call	_wr16	;wreg free
  6733  0020A2  0E02               	movlw	2
  6734  0020A4  EC8C  F030         	call	_cmd_incrementn
  6735  0020A8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6736  0020AC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6737  0020B0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6738  0020B2  0E00               	movlw	0
  6739  0020B4  2427               	addwf	??_display_rpm,w,c
  6740  0020B6  6E11               	movwf	wr16@addr,c
  6741  0020B8  0E80               	movlw	128
  6742  0020BA  2028               	addwfc	??_display_rpm+1,w,c
  6743  0020BC  6E12               	movwf	wr16@addr+1,c
  6744  0020BE  0E10               	movlw	16
  6745  0020C0  2029               	addwfc	??_display_rpm+2,w,c
  6746  0020C2  6E13               	movwf	wr16@addr+2,c
  6747  0020C4  0E00               	movlw	0
  6748  0020C6  6E15               	movwf	wr16@value+1,c
  6749  0020C8  0E00               	movlw	0
  6750  0020CA  6E14               	movwf	wr16@value,c
  6751  0020CC  EC9E  F02F         	call	_wr16	;wreg free
  6752  0020D0  0E02               	movlw	2
  6753  0020D2  EC8C  F030         	call	_cmd_incrementn
  6754  0020D6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6755  0020DA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6756  0020DE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6757  0020E0  0E00               	movlw	0
  6758  0020E2  2427               	addwf	??_display_rpm,w,c
  6759  0020E4  6E16               	movwf	wr8s@addr,c
  6760  0020E6  0E80               	movlw	128
  6761  0020E8  2028               	addwfc	??_display_rpm+1,w,c
  6762  0020EA  6E17               	movwf	wr8s@addr+1,c
  6763  0020EC  0E10               	movlw	16
  6764  0020EE  2029               	addwfc	??_display_rpm+2,w,c
  6765  0020F0  6E18               	movwf	wr8s@addr+2,c
  6766  0020F2  0E4D               	movlw	low STR_33
  6767  0020F4  6E19               	movwf	wr8s@s,c
  6768  0020F6  0E0F               	movlw	high STR_33
  6769  0020F8  6E1A               	movwf	wr8s@s+1,c
  6770  0020FA  EC64  F02D         	call	_wr8s	;wreg free
  6771  0020FE  EC8C  F030         	call	_cmd_incrementn
  6772                           
  6773                           ;display.c: 273: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 274);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 161);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6774  002102  0E0C               	movlw	12
  6775  002104  6E1E               	movwf	cmd@command,c
  6776  002106  0EFF               	movlw	255
  6777  002108  6E1F               	movwf	cmd@command+1,c
  6778  00210A  0EFF               	movlw	255
  6779  00210C  6E20               	movwf	cmd@command+2,c
  6780  00210E  0EFF               	movlw	255
  6781  002110  6E21               	movwf	cmd@command+3,c
  6782  002112  ECD9  F02F         	call	_cmd	;wreg free
  6783  002116  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6784  00211A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6785  00211E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6786  002120  0E00               	movlw	0
  6787  002122  2427               	addwf	??_display_rpm,w,c
  6788  002124  6E11               	movwf	wr16@addr,c
  6789  002126  0E80               	movlw	128
  6790  002128  2028               	addwfc	??_display_rpm+1,w,c
  6791  00212A  6E12               	movwf	wr16@addr+1,c
  6792  00212C  0E10               	movlw	16
  6793  00212E  2029               	addwfc	??_display_rpm+2,w,c
  6794  002130  6E13               	movwf	wr16@addr+2,c
  6795  002132  0E01               	movlw	1
  6796  002134  6E15               	movwf	wr16@value+1,c
  6797  002136  0E12               	movlw	18
  6798  002138  6E14               	movwf	wr16@value,c
  6799  00213A  EC9E  F02F         	call	_wr16	;wreg free
  6800  00213E  0E02               	movlw	2
  6801  002140  EC8C  F030         	call	_cmd_incrementn
  6802  002144  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6803  002148  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6804  00214C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6805  00214E  0E00               	movlw	0
  6806  002150  2427               	addwf	??_display_rpm,w,c
  6807  002152  6E11               	movwf	wr16@addr,c
  6808  002154  0E80               	movlw	128
  6809  002156  2028               	addwfc	??_display_rpm+1,w,c
  6810  002158  6E12               	movwf	wr16@addr+1,c
  6811  00215A  0E10               	movlw	16
  6812  00215C  2029               	addwfc	??_display_rpm+2,w,c
  6813  00215E  6E13               	movwf	wr16@addr+2,c
  6814  002160  0E00               	movlw	0
  6815  002162  6E15               	movwf	wr16@value+1,c
  6816  002164  0EA1               	movlw	161
  6817  002166  6E14               	movwf	wr16@value,c
  6818  002168  EC9E  F02F         	call	_wr16	;wreg free
  6819  00216C  0E02               	movlw	2
  6820  00216E  EC8C  F030         	call	_cmd_incrementn
  6821  002172  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6822  002176  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6823  00217A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6824  00217C  0E00               	movlw	0
  6825  00217E  2427               	addwf	??_display_rpm,w,c
  6826  002180  6E11               	movwf	wr16@addr,c
  6827  002182  0E80               	movlw	128
  6828  002184  2028               	addwfc	??_display_rpm+1,w,c
  6829  002186  6E12               	movwf	wr16@addr+1,c
  6830  002188  0E10               	movlw	16
  6831  00218A  2029               	addwfc	??_display_rpm+2,w,c
  6832  00218C  6E13               	movwf	wr16@addr+2,c
  6833  00218E  0E00               	movlw	0
  6834  002190  6E15               	movwf	wr16@value+1,c
  6835  002192  0E1C               	movlw	28
  6836  002194  6E14               	movwf	wr16@value,c
  6837  002196  EC9E  F02F         	call	_wr16	;wreg free
  6838  00219A  0E02               	movlw	2
  6839  00219C  EC8C  F030         	call	_cmd_incrementn
  6840  0021A0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6841  0021A4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6842  0021A8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6843  0021AA  0E00               	movlw	0
  6844  0021AC  2427               	addwf	??_display_rpm,w,c
  6845  0021AE  6E11               	movwf	wr16@addr,c
  6846  0021B0  0E80               	movlw	128
  6847  0021B2  2028               	addwfc	??_display_rpm+1,w,c
  6848  0021B4  6E12               	movwf	wr16@addr+1,c
  6849  0021B6  0E10               	movlw	16
  6850  0021B8  2029               	addwfc	??_display_rpm+2,w,c
  6851  0021BA  6E13               	movwf	wr16@addr+2,c
  6852  0021BC  0E00               	movlw	0
  6853  0021BE  6E15               	movwf	wr16@value+1,c
  6854  0021C0  0E00               	movlw	0
  6855  0021C2  6E14               	movwf	wr16@value,c
  6856  0021C4  EC9E  F02F         	call	_wr16	;wreg free
  6857  0021C8  0E02               	movlw	2
  6858  0021CA  EC8C  F030         	call	_cmd_incrementn
  6859  0021CE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6860  0021D2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6861  0021D6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6862  0021D8  0E00               	movlw	0
  6863  0021DA  2427               	addwf	??_display_rpm,w,c
  6864  0021DC  6E16               	movwf	wr8s@addr,c
  6865  0021DE  0E80               	movlw	128
  6866  0021E0  2028               	addwfc	??_display_rpm+1,w,c
  6867  0021E2  6E17               	movwf	wr8s@addr+1,c
  6868  0021E4  0E10               	movlw	16
  6869  0021E6  2029               	addwfc	??_display_rpm+2,w,c
  6870  0021E8  6E18               	movwf	wr8s@addr+2,c
  6871  0021EA  0E50               	movlw	low STR_34
  6872  0021EC  6E19               	movwf	wr8s@s,c
  6873  0021EE  0E0F               	movlw	high STR_34
  6874  0021F0  6E1A               	movwf	wr8s@s+1,c
  6875  0021F2  EC64  F02D         	call	_wr8s	;wreg free
  6876  0021F6  EC8C  F030         	call	_cmd_incrementn
  6877                           
  6878                           ;display.c: 274: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 241);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 114);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344
      +                          UL+
  6879  0021FA  0E0C               	movlw	12
  6880  0021FC  6E1E               	movwf	cmd@command,c
  6881  0021FE  0EFF               	movlw	255
  6882  002200  6E1F               	movwf	cmd@command+1,c
  6883  002202  0EFF               	movlw	255
  6884  002204  6E20               	movwf	cmd@command+2,c
  6885  002206  0EFF               	movlw	255
  6886  002208  6E21               	movwf	cmd@command+3,c
  6887  00220A  ECD9  F02F         	call	_cmd	;wreg free
  6888  00220E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6889  002212  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6890  002216  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6891  002218  0E00               	movlw	0
  6892  00221A  2427               	addwf	??_display_rpm,w,c
  6893  00221C  6E11               	movwf	wr16@addr,c
  6894  00221E  0E80               	movlw	128
  6895  002220  2028               	addwfc	??_display_rpm+1,w,c
  6896  002222  6E12               	movwf	wr16@addr+1,c
  6897  002224  0E10               	movlw	16
  6898  002226  2029               	addwfc	??_display_rpm+2,w,c
  6899  002228  6E13               	movwf	wr16@addr+2,c
  6900  00222A  0E00               	movlw	0
  6901  00222C  6E15               	movwf	wr16@value+1,c
  6902  00222E  0EF1               	movlw	241
  6903  002230  6E14               	movwf	wr16@value,c
  6904  002232  EC9E  F02F         	call	_wr16	;wreg free
  6905  002236  0E02               	movlw	2
  6906  002238  EC8C  F030         	call	_cmd_incrementn
  6907  00223C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6908  002240  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6909  002244  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6910  002246  0E00               	movlw	0
  6911  002248  2427               	addwf	??_display_rpm,w,c
  6912  00224A  6E11               	movwf	wr16@addr,c
  6913  00224C  0E80               	movlw	128
  6914  00224E  2028               	addwfc	??_display_rpm+1,w,c
  6915  002250  6E12               	movwf	wr16@addr+1,c
  6916  002252  0E10               	movlw	16
  6917  002254  2029               	addwfc	??_display_rpm+2,w,c
  6918  002256  6E13               	movwf	wr16@addr+2,c
  6919  002258  0E00               	movlw	0
  6920  00225A  6E15               	movwf	wr16@value+1,c
  6921  00225C  0E72               	movlw	114
  6922  00225E  6E14               	movwf	wr16@value,c
  6923  002260  EC9E  F02F         	call	_wr16	;wreg free
  6924  002264  0E02               	movlw	2
  6925  002266  EC8C  F030         	call	_cmd_incrementn
  6926  00226A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6927  00226E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6928  002272  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6929  002274  0E00               	movlw	0
  6930  002276  2427               	addwf	??_display_rpm,w,c
  6931  002278  6E11               	movwf	wr16@addr,c
  6932  00227A  0E80               	movlw	128
  6933  00227C  2028               	addwfc	??_display_rpm+1,w,c
  6934  00227E  6E12               	movwf	wr16@addr+1,c
  6935  002280  0E10               	movlw	16
  6936  002282  2029               	addwfc	??_display_rpm+2,w,c
  6937  002284  6E13               	movwf	wr16@addr+2,c
  6938  002286  0E00               	movlw	0
  6939  002288  6E15               	movwf	wr16@value+1,c
  6940  00228A  0E1F               	movlw	31
  6941  00228C  6E14               	movwf	wr16@value,c
  6942  00228E  EC9E  F02F         	call	_wr16	;wreg free
  6943  002292  0E02               	movlw	2
  6944  002294  EC8C  F030         	call	_cmd_incrementn
  6945  002298  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6946  00229C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6947  0022A0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6948  0022A2  0E00               	movlw	0
  6949  0022A4  2427               	addwf	??_display_rpm,w,c
  6950  0022A6  6E11               	movwf	wr16@addr,c
  6951  0022A8  0E80               	movlw	128
  6952  0022AA  2028               	addwfc	??_display_rpm+1,w,c
  6953  0022AC  6E12               	movwf	wr16@addr+1,c
  6954  0022AE  0E10               	movlw	16
  6955  0022B0  2029               	addwfc	??_display_rpm+2,w,c
  6956  0022B2  6E13               	movwf	wr16@addr+2,c
  6957  0022B4  0E06               	movlw	6
  6958  0022B6  6E15               	movwf	wr16@value+1,c
  6959  0022B8  0E00               	movlw	0
  6960  0022BA  6E14               	movwf	wr16@value,c
  6961  0022BC  EC9E  F02F         	call	_wr16	;wreg free
  6962  0022C0  0E02               	movlw	2
  6963  0022C2  EC8C  F030         	call	_cmd_incrementn
  6964  0022C6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6965  0022CA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6966  0022CE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6967  0022D0  0E00               	movlw	0
  6968  0022D2  2427               	addwf	??_display_rpm,w,c
  6969  0022D4  6E16               	movwf	wr8s@addr,c
  6970  0022D6  0E80               	movlw	128
  6971  0022D8  2028               	addwfc	??_display_rpm+1,w,c
  6972  0022DA  6E17               	movwf	wr8s@addr+1,c
  6973  0022DC  0E10               	movlw	16
  6974  0022DE  2029               	addwfc	??_display_rpm+2,w,c
  6975  0022E0  6E18               	movwf	wr8s@addr+2,c
  6976  0022E2  0E5C               	movlw	low STR_22
  6977  0022E4  6E19               	movwf	wr8s@s,c
  6978  0022E6  0E0F               	movlw	high STR_22
  6979  0022E8  6E1A               	movwf	wr8s@s+1,c
  6980  0022EA  EC64  F02D         	call	_wr8s	;wreg free
  6981  0022EE  EC8C  F030         	call	_cmd_incrementn
  6982                           
  6983                           ;display.c: 275: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 267);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 108);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6984  0022F2  0E0C               	movlw	12
  6985  0022F4  6E1E               	movwf	cmd@command,c
  6986  0022F6  0EFF               	movlw	255
  6987  0022F8  6E1F               	movwf	cmd@command+1,c
  6988  0022FA  0EFF               	movlw	255
  6989  0022FC  6E20               	movwf	cmd@command+2,c
  6990  0022FE  0EFF               	movlw	255
  6991  002300  6E21               	movwf	cmd@command+3,c
  6992  002302  ECD9  F02F         	call	_cmd	;wreg free
  6993  002306  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6994  00230A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6995  00230E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6996  002310  0E00               	movlw	0
  6997  002312  2427               	addwf	??_display_rpm,w,c
  6998  002314  6E11               	movwf	wr16@addr,c
  6999  002316  0E80               	movlw	128
  7000  002318  2028               	addwfc	??_display_rpm+1,w,c
  7001  00231A  6E12               	movwf	wr16@addr+1,c
  7002  00231C  0E10               	movlw	16
  7003  00231E  2029               	addwfc	??_display_rpm+2,w,c
  7004  002320  6E13               	movwf	wr16@addr+2,c
  7005  002322  0E01               	movlw	1
  7006  002324  6E15               	movwf	wr16@value+1,c
  7007  002326  0E0B               	movlw	11
  7008  002328  6E14               	movwf	wr16@value,c
  7009  00232A  EC9E  F02F         	call	_wr16	;wreg free
  7010  00232E  0E02               	movlw	2
  7011  002330  EC8C  F030         	call	_cmd_incrementn
  7012  002334  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7013  002338  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7014  00233C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7015  00233E  0E00               	movlw	0
  7016  002340  2427               	addwf	??_display_rpm,w,c
  7017  002342  6E11               	movwf	wr16@addr,c
  7018  002344  0E80               	movlw	128
  7019  002346  2028               	addwfc	??_display_rpm+1,w,c
  7020  002348  6E12               	movwf	wr16@addr+1,c
  7021  00234A  0E10               	movlw	16
  7022  00234C  2029               	addwfc	??_display_rpm+2,w,c
  7023  00234E  6E13               	movwf	wr16@addr+2,c
  7024  002350  0E00               	movlw	0
  7025  002352  6E15               	movwf	wr16@value+1,c
  7026  002354  0E6C               	movlw	108
  7027  002356  6E14               	movwf	wr16@value,c
  7028  002358  EC9E  F02F         	call	_wr16	;wreg free
  7029  00235C  0E02               	movlw	2
  7030  00235E  EC8C  F030         	call	_cmd_incrementn
  7031  002362  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7032  002366  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7033  00236A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7034  00236C  0E00               	movlw	0
  7035  00236E  2427               	addwf	??_display_rpm,w,c
  7036  002370  6E11               	movwf	wr16@addr,c
  7037  002372  0E80               	movlw	128
  7038  002374  2028               	addwfc	??_display_rpm+1,w,c
  7039  002376  6E12               	movwf	wr16@addr+1,c
  7040  002378  0E10               	movlw	16
  7041  00237A  2029               	addwfc	??_display_rpm+2,w,c
  7042  00237C  6E13               	movwf	wr16@addr+2,c
  7043  00237E  0E00               	movlw	0
  7044  002380  6E15               	movwf	wr16@value+1,c
  7045  002382  0E1C               	movlw	28
  7046  002384  6E14               	movwf	wr16@value,c
  7047  002386  EC9E  F02F         	call	_wr16	;wreg free
  7048  00238A  0E02               	movlw	2
  7049  00238C  EC8C  F030         	call	_cmd_incrementn
  7050  002390  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7051  002394  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7052  002398  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7053  00239A  0E00               	movlw	0
  7054  00239C  2427               	addwf	??_display_rpm,w,c
  7055  00239E  6E11               	movwf	wr16@addr,c
  7056  0023A0  0E80               	movlw	128
  7057  0023A2  2028               	addwfc	??_display_rpm+1,w,c
  7058  0023A4  6E12               	movwf	wr16@addr+1,c
  7059  0023A6  0E10               	movlw	16
  7060  0023A8  2029               	addwfc	??_display_rpm+2,w,c
  7061  0023AA  6E13               	movwf	wr16@addr+2,c
  7062  0023AC  0E00               	movlw	0
  7063  0023AE  6E15               	movwf	wr16@value+1,c
  7064  0023B0  0E00               	movlw	0
  7065  0023B2  6E14               	movwf	wr16@value,c
  7066  0023B4  EC9E  F02F         	call	_wr16	;wreg free
  7067  0023B8  0E02               	movlw	2
  7068  0023BA  EC8C  F030         	call	_cmd_incrementn
  7069  0023BE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7070  0023C2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7071  0023C6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7072  0023C8  0E00               	movlw	0
  7073  0023CA  2427               	addwf	??_display_rpm,w,c
  7074  0023CC  6E16               	movwf	wr8s@addr,c
  7075  0023CE  0E80               	movlw	128
  7076  0023D0  2028               	addwfc	??_display_rpm+1,w,c
  7077  0023D2  6E17               	movwf	wr8s@addr+1,c
  7078  0023D4  0E10               	movlw	16
  7079  0023D6  2029               	addwfc	??_display_rpm+2,w,c
  7080  0023D8  6E18               	movwf	wr8s@addr+2,c
  7081  0023DA  0E70               	movlw	low STR_36
  7082  0023DC  6E19               	movwf	wr8s@s,c
  7083  0023DE  0E0F               	movlw	high STR_36
  7084  0023E0  6E1A               	movwf	wr8s@s+1,c
  7085  0023E2  EC64  F02D         	call	_wr8s	;wreg free
  7086  0023E6  EC8C  F030         	call	_cmd_incrementn
  7087                           
  7088                           ;display.c: 276: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 227);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 132);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  7089  0023EA  0E0C               	movlw	12
  7090  0023EC  6E1E               	movwf	cmd@command,c
  7091  0023EE  0EFF               	movlw	255
  7092  0023F0  6E1F               	movwf	cmd@command+1,c
  7093  0023F2  0EFF               	movlw	255
  7094  0023F4  6E20               	movwf	cmd@command+2,c
  7095  0023F6  0EFF               	movlw	255
  7096  0023F8  6E21               	movwf	cmd@command+3,c
  7097  0023FA  ECD9  F02F         	call	_cmd	;wreg free
  7098  0023FE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7099  002402  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7100  002406  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7101  002408  0E00               	movlw	0
  7102  00240A  2427               	addwf	??_display_rpm,w,c
  7103  00240C  6E11               	movwf	wr16@addr,c
  7104  00240E  0E80               	movlw	128
  7105  002410  2028               	addwfc	??_display_rpm+1,w,c
  7106  002412  6E12               	movwf	wr16@addr+1,c
  7107  002414  0E10               	movlw	16
  7108  002416  2029               	addwfc	??_display_rpm+2,w,c
  7109  002418  6E13               	movwf	wr16@addr+2,c
  7110  00241A  0E00               	movlw	0
  7111  00241C  6E15               	movwf	wr16@value+1,c
  7112  00241E  0EE3               	movlw	227
  7113  002420  6E14               	movwf	wr16@value,c
  7114  002422  EC9E  F02F         	call	_wr16	;wreg free
  7115  002426  0E02               	movlw	2
  7116  002428  EC8C  F030         	call	_cmd_incrementn
  7117  00242C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7118  002430  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7119  002434  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7120  002436  0E00               	movlw	0
  7121  002438  2427               	addwf	??_display_rpm,w,c
  7122  00243A  6E11               	movwf	wr16@addr,c
  7123  00243C  0E80               	movlw	128
  7124  00243E  2028               	addwfc	??_display_rpm+1,w,c
  7125  002440  6E12               	movwf	wr16@addr+1,c
  7126  002442  0E10               	movlw	16
  7127  002444  2029               	addwfc	??_display_rpm+2,w,c
  7128  002446  6E13               	movwf	wr16@addr+2,c
  7129  002448  0E00               	movlw	0
  7130  00244A  6E15               	movwf	wr16@value+1,c
  7131  00244C  0E84               	movlw	132
  7132  00244E  6E14               	movwf	wr16@value,c
  7133  002450  EC9E  F02F         	call	_wr16	;wreg free
  7134  002454  0E02               	movlw	2
  7135  002456  EC8C  F030         	call	_cmd_incrementn
  7136  00245A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7137  00245E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7138  002462  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7139  002464  0E00               	movlw	0
  7140  002466  2427               	addwf	??_display_rpm,w,c
  7141  002468  6E11               	movwf	wr16@addr,c
  7142  00246A  0E80               	movlw	128
  7143  00246C  2028               	addwfc	??_display_rpm+1,w,c
  7144  00246E  6E12               	movwf	wr16@addr+1,c
  7145  002470  0E10               	movlw	16
  7146  002472  2029               	addwfc	??_display_rpm+2,w,c
  7147  002474  6E13               	movwf	wr16@addr+2,c
  7148  002476  0E00               	movlw	0
  7149  002478  6E15               	movwf	wr16@value+1,c
  7150  00247A  0E1A               	movlw	26
  7151  00247C  6E14               	movwf	wr16@value,c
  7152  00247E  EC9E  F02F         	call	_wr16	;wreg free
  7153  002482  0E02               	movlw	2
  7154  002484  EC8C  F030         	call	_cmd_incrementn
  7155  002488  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7156  00248C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7157  002490  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7158  002492  0E00               	movlw	0
  7159  002494  2427               	addwf	??_display_rpm,w,c
  7160  002496  6E11               	movwf	wr16@addr,c
  7161  002498  0E80               	movlw	128
  7162  00249A  2028               	addwfc	??_display_rpm+1,w,c
  7163  00249C  6E12               	movwf	wr16@addr+1,c
  7164  00249E  0E10               	movlw	16
  7165  0024A0  2029               	addwfc	??_display_rpm+2,w,c
  7166  0024A2  6E13               	movwf	wr16@addr+2,c
  7167  0024A4  0E00               	movlw	0
  7168  0024A6  6E15               	movwf	wr16@value+1,c
  7169  0024A8  0E00               	movlw	0
  7170  0024AA  6E14               	movwf	wr16@value,c
  7171  0024AC  EC9E  F02F         	call	_wr16	;wreg free
  7172  0024B0  0E02               	movlw	2
  7173  0024B2  EC8C  F030         	call	_cmd_incrementn
  7174  0024B6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  7175  0024BA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  7176  0024BE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  7177  0024C0  0E00               	movlw	0
  7178  0024C2  2427               	addwf	??_display_rpm,w,c
  7179  0024C4  6E16               	movwf	wr8s@addr,c
  7180  0024C6  0E80               	movlw	128
  7181  0024C8  2028               	addwfc	??_display_rpm+1,w,c
  7182  0024CA  6E17               	movwf	wr8s@addr+1,c
  7183  0024CC  0E10               	movlw	16
  7184  0024CE  2029               	addwfc	??_display_rpm+2,w,c
  7185  0024D0  6E18               	movwf	wr8s@addr+2,c
  7186  0024D2  0E3E               	movlw	low STR_37
  7187  0024D4  6E19               	movwf	wr8s@s,c
  7188  0024D6  0E0F               	movlw	high STR_37
  7189  0024D8  6E1A               	movwf	wr8s@s+1,c
  7190  0024DA  EC64  F02D         	call	_wr8s	;wreg free
  7191  0024DE  EC8C  F030         	call	_cmd_incrementn
  7192  0024E2  0012               	return		;funcret
  7193  0024E4                     __end_of_display_rpm:
  7194                           	opt stack 0
  7195                           tblptru	equ	0xFF8
  7196                           tblptrh	equ	0xFF7
  7197                           tblptrl	equ	0xFF6
  7198                           tablat	equ	0xFF5
  7199                           intcon	equ	0xFF2
  7200                           postinc0	equ	0xFEE
  7201                           wreg	equ	0xFE8
  7202                           postdec1	equ	0xFE5
  7203                           plusw1	equ	0xFE3
  7204                           fsr1l	equ	0xFE1
  7205                           plusw2	equ	0xFDB
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function ___wmul *****************
  7209 ;; Defined at:
  7210 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  multiplier      2   15[COMRAM] unsigned int 
  7213 ;;  multiplicand    2   17[COMRAM] unsigned int 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  product         2   19[COMRAM] unsigned int 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  2   15[COMRAM] unsigned int 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0, prodl, prodh
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;Total ram usage:        6 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    4
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_display_rpm
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text11
  7240  0060B6                     __ptext11:
  7241                           	opt stack 0
  7242  0060B6                     ___wmul:
  7243                           	opt stack 25
  7244                           
  7245                           ;incstack = 0
  7246  0060B6  5010               	movf	___wmul@multiplier,w,c
  7247  0060B8  0212               	mulwf	___wmul@multiplicand,c
  7248  0060BA  CFF3 F014          	movff	prodl,___wmul@product
  7249  0060BE  CFF4 F015          	movff	prodh,___wmul@product+1
  7250  0060C2  5010               	movf	___wmul@multiplier,w,c
  7251  0060C4  0213               	mulwf	___wmul@multiplicand+1,c
  7252  0060C6  50F3               	movf	prodl,w,c
  7253  0060C8  2615               	addwf	___wmul@product+1,f,c
  7254  0060CA  5011               	movf	___wmul@multiplier+1,w,c
  7255  0060CC  0212               	mulwf	___wmul@multiplicand,c
  7256  0060CE  50F3               	movf	prodl,w,c
  7257  0060D0  2615               	addwf	___wmul@product+1,f,c
  7258  0060D2  C014  F010         	movff	___wmul@product,?___wmul
  7259  0060D6  C015  F011         	movff	___wmul@product+1,?___wmul+1
  7260  0060DA  0012               	return	
  7261  0060DC                     __end_of___wmul:
  7262                           	opt stack 0
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           postinc0	equ	0xFEE
  7271                           wreg	equ	0xFE8
  7272                           postdec1	equ	0xFE5
  7273                           plusw1	equ	0xFE3
  7274                           fsr1l	equ	0xFE1
  7275                           plusw2	equ	0xFDB
  7276                           status	equ	0xFD8
  7277                           
  7278 ;; *************** function _display_oilTemp *****************
  7279 ;; Defined at:
  7280 ;;		line 196 in file "display.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  temp            2   36[COMRAM] int 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;Total ram usage:        5 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    7
  7301 ;; This function calls:
  7302 ;;		_cmd
  7303 ;;		_cmd_incrementn
  7304 ;;		_wr16
  7305 ;; This function is called by:
  7306 ;;		_display
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text12
  7312  0059E4                     __ptext12:
  7313                           	opt stack 0
  7314  0059E4                     _display_oilTemp:
  7315                           	opt stack 23
  7316                           
  7317                           ;display.c: 198: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 450);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 155);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(temp);
  7318                           
  7319                           ;incstack = 0
  7320  0059E4  0E2E               	movlw	46
  7321  0059E6  6E1E               	movwf	cmd@command,c
  7322  0059E8  0EFF               	movlw	255
  7323  0059EA  6E1F               	movwf	cmd@command+1,c
  7324  0059EC  0EFF               	movlw	255
  7325  0059EE  6E20               	movwf	cmd@command+2,c
  7326  0059F0  0EFF               	movlw	255
  7327  0059F2  6E21               	movwf	cmd@command+3,c
  7328  0059F4  ECD9  F02F         	call	_cmd	;wreg free
  7329  0059F8  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  7330  0059FC  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  7331  005A00  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  7332  005A02  0E00               	movlw	0
  7333  005A04  2427               	addwf	??_display_oilTemp,w,c
  7334  005A06  6E11               	movwf	wr16@addr,c
  7335  005A08  0E80               	movlw	128
  7336  005A0A  2028               	addwfc	??_display_oilTemp+1,w,c
  7337  005A0C  6E12               	movwf	wr16@addr+1,c
  7338  005A0E  0E10               	movlw	16
  7339  005A10  2029               	addwfc	??_display_oilTemp+2,w,c
  7340  005A12  6E13               	movwf	wr16@addr+2,c
  7341  005A14  0E01               	movlw	1
  7342  005A16  6E15               	movwf	wr16@value+1,c
  7343  005A18  0EC2               	movlw	194
  7344  005A1A  6E14               	movwf	wr16@value,c
  7345  005A1C  EC9E  F02F         	call	_wr16	;wreg free
  7346  005A20  0E02               	movlw	2
  7347  005A22  EC8C  F030         	call	_cmd_incrementn
  7348  005A26  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  7349  005A2A  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  7350  005A2E  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  7351  005A30  0E00               	movlw	0
  7352  005A32  2427               	addwf	??_display_oilTemp,w,c
  7353  005A34  6E11               	movwf	wr16@addr,c
  7354  005A36  0E80               	movlw	128
  7355  005A38  2028               	addwfc	??_display_oilTemp+1,w,c
  7356  005A3A  6E12               	movwf	wr16@addr+1,c
  7357  005A3C  0E10               	movlw	16
  7358  005A3E  2029               	addwfc	??_display_oilTemp+2,w,c
  7359  005A40  6E13               	movwf	wr16@addr+2,c
  7360  005A42  0E00               	movlw	0
  7361  005A44  6E15               	movwf	wr16@value+1,c
  7362  005A46  0E9B               	movlw	155
  7363  005A48  6E14               	movwf	wr16@value,c
  7364  005A4A  EC9E  F02F         	call	_wr16	;wreg free
  7365  005A4E  0E02               	movlw	2
  7366  005A50  EC8C  F030         	call	_cmd_incrementn
  7367  005A54  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  7368  005A58  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  7369  005A5C  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  7370  005A5E  0E00               	movlw	0
  7371  005A60  2427               	addwf	??_display_oilTemp,w,c
  7372  005A62  6E11               	movwf	wr16@addr,c
  7373  005A64  0E80               	movlw	128
  7374  005A66  2028               	addwfc	??_display_oilTemp+1,w,c
  7375  005A68  6E12               	movwf	wr16@addr+1,c
  7376  005A6A  0E10               	movlw	16
  7377  005A6C  2029               	addwfc	??_display_oilTemp+2,w,c
  7378  005A6E  6E13               	movwf	wr16@addr+2,c
  7379  005A70  0E00               	movlw	0
  7380  005A72  6E15               	movwf	wr16@value+1,c
  7381  005A74  0E1F               	movlw	31
  7382  005A76  6E14               	movwf	wr16@value,c
  7383  005A78  EC9E  F02F         	call	_wr16	;wreg free
  7384  005A7C  0E02               	movlw	2
  7385  005A7E  EC8C  F030         	call	_cmd_incrementn
  7386  005A82  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  7387  005A86  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  7388  005A8A  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  7389  005A8C  0E00               	movlw	0
  7390  005A8E  2427               	addwf	??_display_oilTemp,w,c
  7391  005A90  6E11               	movwf	wr16@addr,c
  7392  005A92  0E80               	movlw	128
  7393  005A94  2028               	addwfc	??_display_oilTemp+1,w,c
  7394  005A96  6E12               	movwf	wr16@addr+1,c
  7395  005A98  0E10               	movlw	16
  7396  005A9A  2029               	addwfc	??_display_oilTemp+2,w,c
  7397  005A9C  6E13               	movwf	wr16@addr+2,c
  7398  005A9E  0E08               	movlw	8
  7399  005AA0  6E15               	movwf	wr16@value+1,c
  7400  005AA2  0E00               	movlw	0
  7401  005AA4  6E14               	movwf	wr16@value,c
  7402  005AA6  EC9E  F02F         	call	_wr16	;wreg free
  7403  005AAA  0E02               	movlw	2
  7404  005AAC  EC8C  F030         	call	_cmd_incrementn
  7405  005AB0  C025  F01E         	movff	display_oilTemp@temp,cmd@command
  7406  005AB4  C026  F01F         	movff	display_oilTemp@temp+1,cmd@command+1
  7407  005AB8  0E00               	movlw	0
  7408  005ABA  BE1F               	btfsc	cmd@command+1,7,c
  7409  005ABC  0EFF               	movlw	-1
  7410  005ABE  6E20               	movwf	cmd@command+2,c
  7411  005AC0  6E21               	movwf	cmd@command+3,c
  7412  005AC2  ECD9  F02F         	call	_cmd	;wreg free
  7413  005AC6  0012               	return		;funcret
  7414  005AC8                     __end_of_display_oilTemp:
  7415                           	opt stack 0
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           prodh	equ	0xFF4
  7421                           prodl	equ	0xFF3
  7422                           intcon	equ	0xFF2
  7423                           postinc0	equ	0xFEE
  7424                           wreg	equ	0xFE8
  7425                           postdec1	equ	0xFE5
  7426                           plusw1	equ	0xFE3
  7427                           fsr1l	equ	0xFE1
  7428                           plusw2	equ	0xFDB
  7429                           status	equ	0xFD8
  7430                           
  7431 ;; *************** function _display_labels *****************
  7432 ;; Defined at:
  7433 ;;		line 29 in file "display.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  y_start         2   39[COMRAM] int 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;Total ram usage:        5 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    7
  7454 ;; This function calls:
  7455 ;;		_cmd
  7456 ;;		_cmd_incrementn
  7457 ;;		_wr16
  7458 ;;		_wr8s
  7459 ;; This function is called by:
  7460 ;;		_display
  7461 ;;		_main
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text13
  7466  0024E4                     __ptext13:
  7467                           	opt stack 0
  7468  0024E4                     _display_labels:
  7469                           	opt stack 23
  7470                           
  7471                           ;display.c: 30: int y_start = 5;
  7472                           
  7473                           ;incstack = 0
  7474  0024E4  0E00               	movlw	0
  7475  0024E6  6E29               	movwf	display_labels@y_start+1,c
  7476  0024E8  0E05               	movlw	5
  7477  0024EA  6E28               	movwf	display_labels@y_start,c
  7478                           
  7479                           ;display.c: 32: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0)
      +                          ));
  7480  0024EC  0EFF               	movlw	255
  7481  0024EE  6E1E               	movwf	cmd@command,c
  7482  0024F0  0EFF               	movlw	255
  7483  0024F2  6E1F               	movwf	cmd@command+1,c
  7484  0024F4  0EFF               	movlw	255
  7485  0024F6  6E20               	movwf	cmd@command+2,c
  7486  0024F8  0E04               	movlw	4
  7487  0024FA  6E21               	movwf	cmd@command+3,c
  7488  0024FC  ECD9  F02F         	call	_cmd	;wreg free
  7489                           
  7490                           ;display.c: 33: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 22);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_o
      +                          ff
  7491  002500  0E0C               	movlw	12
  7492  002502  6E1E               	movwf	cmd@command,c
  7493  002504  0EFF               	movlw	255
  7494  002506  6E1F               	movwf	cmd@command+1,c
  7495  002508  0EFF               	movlw	255
  7496  00250A  6E20               	movwf	cmd@command+2,c
  7497  00250C  0EFF               	movlw	255
  7498  00250E  6E21               	movwf	cmd@command+3,c
  7499  002510  ECD9  F02F         	call	_cmd	;wreg free
  7500  002514  C04A  F025         	movff	_cmd_offset,??_display_labels
  7501  002518  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7502  00251C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7503  00251E  0E00               	movlw	0
  7504  002520  2425               	addwf	??_display_labels,w,c
  7505  002522  6E11               	movwf	wr16@addr,c
  7506  002524  0E80               	movlw	128
  7507  002526  2026               	addwfc	??_display_labels+1,w,c
  7508  002528  6E12               	movwf	wr16@addr+1,c
  7509  00252A  0E10               	movlw	16
  7510  00252C  2027               	addwfc	??_display_labels+2,w,c
  7511  00252E  6E13               	movwf	wr16@addr+2,c
  7512  002530  0E00               	movlw	0
  7513  002532  6E15               	movwf	wr16@value+1,c
  7514  002534  0E50               	movlw	80
  7515  002536  6E14               	movwf	wr16@value,c
  7516  002538  EC9E  F02F         	call	_wr16	;wreg free
  7517  00253C  0E02               	movlw	2
  7518  00253E  EC8C  F030         	call	_cmd_incrementn
  7519  002542  C04A  F025         	movff	_cmd_offset,??_display_labels
  7520  002546  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7521  00254A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7522  00254C  0E00               	movlw	0
  7523  00254E  2425               	addwf	??_display_labels,w,c
  7524  002550  6E11               	movwf	wr16@addr,c
  7525  002552  0E80               	movlw	128
  7526  002554  2026               	addwfc	??_display_labels+1,w,c
  7527  002556  6E12               	movwf	wr16@addr+1,c
  7528  002558  0E10               	movlw	16
  7529  00255A  2027               	addwfc	??_display_labels+2,w,c
  7530  00255C  6E13               	movwf	wr16@addr+2,c
  7531  00255E  0E00               	movlw	0
  7532  002560  6E15               	movwf	wr16@value+1,c
  7533  002562  0E16               	movlw	22
  7534  002564  6E14               	movwf	wr16@value,c
  7535  002566  EC9E  F02F         	call	_wr16	;wreg free
  7536  00256A  0E02               	movlw	2
  7537  00256C  EC8C  F030         	call	_cmd_incrementn
  7538  002570  C04A  F025         	movff	_cmd_offset,??_display_labels
  7539  002574  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7540  002578  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7541  00257A  0E00               	movlw	0
  7542  00257C  2425               	addwf	??_display_labels,w,c
  7543  00257E  6E11               	movwf	wr16@addr,c
  7544  002580  0E80               	movlw	128
  7545  002582  2026               	addwfc	??_display_labels+1,w,c
  7546  002584  6E12               	movwf	wr16@addr+1,c
  7547  002586  0E10               	movlw	16
  7548  002588  2027               	addwfc	??_display_labels+2,w,c
  7549  00258A  6E13               	movwf	wr16@addr+2,c
  7550  00258C  0E00               	movlw	0
  7551  00258E  6E15               	movwf	wr16@value+1,c
  7552  002590  0E1C               	movlw	28
  7553  002592  6E14               	movwf	wr16@value,c
  7554  002594  EC9E  F02F         	call	_wr16	;wreg free
  7555  002598  0E02               	movlw	2
  7556  00259A  EC8C  F030         	call	_cmd_incrementn
  7557  00259E  C04A  F025         	movff	_cmd_offset,??_display_labels
  7558  0025A2  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7559  0025A6  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7560  0025A8  0E00               	movlw	0
  7561  0025AA  2425               	addwf	??_display_labels,w,c
  7562  0025AC  6E11               	movwf	wr16@addr,c
  7563  0025AE  0E80               	movlw	128
  7564  0025B0  2026               	addwfc	??_display_labels+1,w,c
  7565  0025B2  6E12               	movwf	wr16@addr+1,c
  7566  0025B4  0E10               	movlw	16
  7567  0025B6  2027               	addwfc	??_display_labels+2,w,c
  7568  0025B8  6E13               	movwf	wr16@addr+2,c
  7569  0025BA  0E00               	movlw	0
  7570  0025BC  6E15               	movwf	wr16@value+1,c
  7571  0025BE  0E00               	movlw	0
  7572  0025C0  6E14               	movwf	wr16@value,c
  7573  0025C2  EC9E  F02F         	call	_wr16	;wreg free
  7574  0025C6  0E02               	movlw	2
  7575  0025C8  EC8C  F030         	call	_cmd_incrementn
  7576  0025CC  C04A  F025         	movff	_cmd_offset,??_display_labels
  7577  0025D0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7578  0025D4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7579  0025D6  0E00               	movlw	0
  7580  0025D8  2425               	addwf	??_display_labels,w,c
  7581  0025DA  6E16               	movwf	wr8s@addr,c
  7582  0025DC  0E80               	movlw	128
  7583  0025DE  2026               	addwfc	??_display_labels+1,w,c
  7584  0025E0  6E17               	movwf	wr8s@addr+1,c
  7585  0025E2  0E10               	movlw	16
  7586  0025E4  2027               	addwfc	??_display_labels+2,w,c
  7587  0025E6  6E18               	movwf	wr8s@addr+2,c
  7588  0025E8  0E3A               	movlw	low STR_1
  7589  0025EA  6E19               	movwf	wr8s@s,c
  7590  0025EC  0E0F               	movlw	high STR_1
  7591  0025EE  6E1A               	movwf	wr8s@s+1,c
  7592  0025F0  EC64  F02D         	call	_wr8s	;wreg free
  7593  0025F4  EC8C  F030         	call	_cmd_incrementn
  7594                           
  7595                           ;display.c: 34: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, 60);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_incrementn
      +                          (2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_of
      +                          fs
  7596  0025F8  0E0C               	movlw	12
  7597  0025FA  6E1E               	movwf	cmd@command,c
  7598  0025FC  0EFF               	movlw	255
  7599  0025FE  6E1F               	movwf	cmd@command+1,c
  7600  002600  0EFF               	movlw	255
  7601  002602  6E20               	movwf	cmd@command+2,c
  7602  002604  0EFF               	movlw	255
  7603  002606  6E21               	movwf	cmd@command+3,c
  7604  002608  ECD9  F02F         	call	_cmd	;wreg free
  7605  00260C  C04A  F025         	movff	_cmd_offset,??_display_labels
  7606  002610  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7607  002614  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7608  002616  0E00               	movlw	0
  7609  002618  2425               	addwf	??_display_labels,w,c
  7610  00261A  6E11               	movwf	wr16@addr,c
  7611  00261C  0E80               	movlw	128
  7612  00261E  2026               	addwfc	??_display_labels+1,w,c
  7613  002620  6E12               	movwf	wr16@addr+1,c
  7614  002622  0E10               	movlw	16
  7615  002624  2027               	addwfc	??_display_labels+2,w,c
  7616  002626  6E13               	movwf	wr16@addr+2,c
  7617  002628  0E00               	movlw	0
  7618  00262A  6E15               	movwf	wr16@value+1,c
  7619  00262C  0E05               	movlw	5
  7620  00262E  6E14               	movwf	wr16@value,c
  7621  002630  EC9E  F02F         	call	_wr16	;wreg free
  7622  002634  0E02               	movlw	2
  7623  002636  EC8C  F030         	call	_cmd_incrementn
  7624  00263A  C04A  F025         	movff	_cmd_offset,??_display_labels
  7625  00263E  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7626  002642  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7627  002644  0E00               	movlw	0
  7628  002646  2425               	addwf	??_display_labels,w,c
  7629  002648  6E11               	movwf	wr16@addr,c
  7630  00264A  0E80               	movlw	128
  7631  00264C  2026               	addwfc	??_display_labels+1,w,c
  7632  00264E  6E12               	movwf	wr16@addr+1,c
  7633  002650  0E10               	movlw	16
  7634  002652  2027               	addwfc	??_display_labels+2,w,c
  7635  002654  6E13               	movwf	wr16@addr+2,c
  7636  002656  0E00               	movlw	0
  7637  002658  6E15               	movwf	wr16@value+1,c
  7638  00265A  0E3C               	movlw	60
  7639  00265C  6E14               	movwf	wr16@value,c
  7640  00265E  EC9E  F02F         	call	_wr16	;wreg free
  7641  002662  0E02               	movlw	2
  7642  002664  EC8C  F030         	call	_cmd_incrementn
  7643  002668  C04A  F025         	movff	_cmd_offset,??_display_labels
  7644  00266C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7645  002670  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7646  002672  0E00               	movlw	0
  7647  002674  2425               	addwf	??_display_labels,w,c
  7648  002676  6E11               	movwf	wr16@addr,c
  7649  002678  0E80               	movlw	128
  7650  00267A  2026               	addwfc	??_display_labels+1,w,c
  7651  00267C  6E12               	movwf	wr16@addr+1,c
  7652  00267E  0E10               	movlw	16
  7653  002680  2027               	addwfc	??_display_labels+2,w,c
  7654  002682  6E13               	movwf	wr16@addr+2,c
  7655  002684  0E00               	movlw	0
  7656  002686  6E15               	movwf	wr16@value+1,c
  7657  002688  0E1B               	movlw	27
  7658  00268A  6E14               	movwf	wr16@value,c
  7659  00268C  EC9E  F02F         	call	_wr16	;wreg free
  7660  002690  0E02               	movlw	2
  7661  002692  EC8C  F030         	call	_cmd_incrementn
  7662  002696  C04A  F025         	movff	_cmd_offset,??_display_labels
  7663  00269A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7664  00269E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7665  0026A0  0E00               	movlw	0
  7666  0026A2  2425               	addwf	??_display_labels,w,c
  7667  0026A4  6E11               	movwf	wr16@addr,c
  7668  0026A6  0E80               	movlw	128
  7669  0026A8  2026               	addwfc	??_display_labels+1,w,c
  7670  0026AA  6E12               	movwf	wr16@addr+1,c
  7671  0026AC  0E10               	movlw	16
  7672  0026AE  2027               	addwfc	??_display_labels+2,w,c
  7673  0026B0  6E13               	movwf	wr16@addr+2,c
  7674  0026B2  0E00               	movlw	0
  7675  0026B4  6E15               	movwf	wr16@value+1,c
  7676  0026B6  0E00               	movlw	0
  7677  0026B8  6E14               	movwf	wr16@value,c
  7678  0026BA  EC9E  F02F         	call	_wr16	;wreg free
  7679  0026BE  0E02               	movlw	2
  7680  0026C0  EC8C  F030         	call	_cmd_incrementn
  7681  0026C4  C04A  F025         	movff	_cmd_offset,??_display_labels
  7682  0026C8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7683  0026CC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7684  0026CE  0E00               	movlw	0
  7685  0026D0  2425               	addwf	??_display_labels,w,c
  7686  0026D2  6E16               	movwf	wr8s@addr,c
  7687  0026D4  0E80               	movlw	128
  7688  0026D6  2026               	addwfc	??_display_labels+1,w,c
  7689  0026D8  6E17               	movwf	wr8s@addr+1,c
  7690  0026DA  0E10               	movlw	16
  7691  0026DC  2027               	addwfc	??_display_labels+2,w,c
  7692  0026DE  6E18               	movwf	wr8s@addr+2,c
  7693  0026E0  0E01               	movlw	low STR_2
  7694  0026E2  6E19               	movwf	wr8s@s,c
  7695  0026E4  0E0F               	movlw	high STR_2
  7696  0026E6  6E1A               	movwf	wr8s@s+1,c
  7697  0026E8  EC64  F02D         	call	_wr8s	;wreg free
  7698  0026EC  EC8C  F030         	call	_cmd_incrementn
  7699                           
  7700                           ;display.c: 35: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, 135);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_o
      +                          ff
  7701  0026F0  0E0C               	movlw	12
  7702  0026F2  6E1E               	movwf	cmd@command,c
  7703  0026F4  0EFF               	movlw	255
  7704  0026F6  6E1F               	movwf	cmd@command+1,c
  7705  0026F8  0EFF               	movlw	255
  7706  0026FA  6E20               	movwf	cmd@command+2,c
  7707  0026FC  0EFF               	movlw	255
  7708  0026FE  6E21               	movwf	cmd@command+3,c
  7709  002700  ECD9  F02F         	call	_cmd	;wreg free
  7710  002704  C04A  F025         	movff	_cmd_offset,??_display_labels
  7711  002708  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7712  00270C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7713  00270E  0E00               	movlw	0
  7714  002710  2425               	addwf	??_display_labels,w,c
  7715  002712  6E11               	movwf	wr16@addr,c
  7716  002714  0E80               	movlw	128
  7717  002716  2026               	addwfc	??_display_labels+1,w,c
  7718  002718  6E12               	movwf	wr16@addr+1,c
  7719  00271A  0E10               	movlw	16
  7720  00271C  2027               	addwfc	??_display_labels+2,w,c
  7721  00271E  6E13               	movwf	wr16@addr+2,c
  7722  002720  0E00               	movlw	0
  7723  002722  6E15               	movwf	wr16@value+1,c
  7724  002724  0E05               	movlw	5
  7725  002726  6E14               	movwf	wr16@value,c
  7726  002728  EC9E  F02F         	call	_wr16	;wreg free
  7727  00272C  0E02               	movlw	2
  7728  00272E  EC8C  F030         	call	_cmd_incrementn
  7729  002732  C04A  F025         	movff	_cmd_offset,??_display_labels
  7730  002736  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7731  00273A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7732  00273C  0E00               	movlw	0
  7733  00273E  2425               	addwf	??_display_labels,w,c
  7734  002740  6E11               	movwf	wr16@addr,c
  7735  002742  0E80               	movlw	128
  7736  002744  2026               	addwfc	??_display_labels+1,w,c
  7737  002746  6E12               	movwf	wr16@addr+1,c
  7738  002748  0E10               	movlw	16
  7739  00274A  2027               	addwfc	??_display_labels+2,w,c
  7740  00274C  6E13               	movwf	wr16@addr+2,c
  7741  00274E  0E00               	movlw	0
  7742  002750  6E15               	movwf	wr16@value+1,c
  7743  002752  0E87               	movlw	135
  7744  002754  6E14               	movwf	wr16@value,c
  7745  002756  EC9E  F02F         	call	_wr16	;wreg free
  7746  00275A  0E02               	movlw	2
  7747  00275C  EC8C  F030         	call	_cmd_incrementn
  7748  002760  C04A  F025         	movff	_cmd_offset,??_display_labels
  7749  002764  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7750  002768  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7751  00276A  0E00               	movlw	0
  7752  00276C  2425               	addwf	??_display_labels,w,c
  7753  00276E  6E11               	movwf	wr16@addr,c
  7754  002770  0E80               	movlw	128
  7755  002772  2026               	addwfc	??_display_labels+1,w,c
  7756  002774  6E12               	movwf	wr16@addr+1,c
  7757  002776  0E10               	movlw	16
  7758  002778  2027               	addwfc	??_display_labels+2,w,c
  7759  00277A  6E13               	movwf	wr16@addr+2,c
  7760  00277C  0E00               	movlw	0
  7761  00277E  6E15               	movwf	wr16@value+1,c
  7762  002780  0E1C               	movlw	28
  7763  002782  6E14               	movwf	wr16@value,c
  7764  002784  EC9E  F02F         	call	_wr16	;wreg free
  7765  002788  0E02               	movlw	2
  7766  00278A  EC8C  F030         	call	_cmd_incrementn
  7767  00278E  C04A  F025         	movff	_cmd_offset,??_display_labels
  7768  002792  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7769  002796  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7770  002798  0E00               	movlw	0
  7771  00279A  2425               	addwf	??_display_labels,w,c
  7772  00279C  6E11               	movwf	wr16@addr,c
  7773  00279E  0E80               	movlw	128
  7774  0027A0  2026               	addwfc	??_display_labels+1,w,c
  7775  0027A2  6E12               	movwf	wr16@addr+1,c
  7776  0027A4  0E10               	movlw	16
  7777  0027A6  2027               	addwfc	??_display_labels+2,w,c
  7778  0027A8  6E13               	movwf	wr16@addr+2,c
  7779  0027AA  0E00               	movlw	0
  7780  0027AC  6E15               	movwf	wr16@value+1,c
  7781  0027AE  0E00               	movlw	0
  7782  0027B0  6E14               	movwf	wr16@value,c
  7783  0027B2  EC9E  F02F         	call	_wr16	;wreg free
  7784  0027B6  0E02               	movlw	2
  7785  0027B8  EC8C  F030         	call	_cmd_incrementn
  7786  0027BC  C04A  F025         	movff	_cmd_offset,??_display_labels
  7787  0027C0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7788  0027C4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7789  0027C6  0E00               	movlw	0
  7790  0027C8  2425               	addwf	??_display_labels,w,c
  7791  0027CA  6E16               	movwf	wr8s@addr,c
  7792  0027CC  0E80               	movlw	128
  7793  0027CE  2026               	addwfc	??_display_labels+1,w,c
  7794  0027D0  6E17               	movwf	wr8s@addr+1,c
  7795  0027D2  0E10               	movlw	16
  7796  0027D4  2027               	addwfc	??_display_labels+2,w,c
  7797  0027D6  6E18               	movwf	wr8s@addr+2,c
  7798  0027D8  0E14               	movlw	low STR_3
  7799  0027DA  6E19               	movwf	wr8s@s,c
  7800  0027DC  0E0F               	movlw	high STR_3
  7801  0027DE  6E1A               	movwf	wr8s@s+1,c
  7802  0027E0  EC64  F02D         	call	_wr8s	;wreg free
  7803  0027E4  EC8C  F030         	call	_cmd_incrementn
  7804                           
  7805                           ;display.c: 36: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 80);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 167);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 20);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  7806  0027E8  0E0C               	movlw	12
  7807  0027EA  6E1E               	movwf	cmd@command,c
  7808  0027EC  0EFF               	movlw	255
  7809  0027EE  6E1F               	movwf	cmd@command+1,c
  7810  0027F0  0EFF               	movlw	255
  7811  0027F2  6E20               	movwf	cmd@command+2,c
  7812  0027F4  0EFF               	movlw	255
  7813  0027F6  6E21               	movwf	cmd@command+3,c
  7814  0027F8  ECD9  F02F         	call	_cmd	;wreg free
  7815  0027FC  C04A  F025         	movff	_cmd_offset,??_display_labels
  7816  002800  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7817  002804  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7818  002806  0E00               	movlw	0
  7819  002808  2425               	addwf	??_display_labels,w,c
  7820  00280A  6E11               	movwf	wr16@addr,c
  7821  00280C  0E80               	movlw	128
  7822  00280E  2026               	addwfc	??_display_labels+1,w,c
  7823  002810  6E12               	movwf	wr16@addr+1,c
  7824  002812  0E10               	movlw	16
  7825  002814  2027               	addwfc	??_display_labels+2,w,c
  7826  002816  6E13               	movwf	wr16@addr+2,c
  7827  002818  0E00               	movlw	0
  7828  00281A  6E15               	movwf	wr16@value+1,c
  7829  00281C  0E50               	movlw	80
  7830  00281E  6E14               	movwf	wr16@value,c
  7831  002820  EC9E  F02F         	call	_wr16	;wreg free
  7832  002824  0E02               	movlw	2
  7833  002826  EC8C  F030         	call	_cmd_incrementn
  7834  00282A  C04A  F025         	movff	_cmd_offset,??_display_labels
  7835  00282E  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7836  002832  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7837  002834  0E00               	movlw	0
  7838  002836  2425               	addwf	??_display_labels,w,c
  7839  002838  6E11               	movwf	wr16@addr,c
  7840  00283A  0E80               	movlw	128
  7841  00283C  2026               	addwfc	??_display_labels+1,w,c
  7842  00283E  6E12               	movwf	wr16@addr+1,c
  7843  002840  0E10               	movlw	16
  7844  002842  2027               	addwfc	??_display_labels+2,w,c
  7845  002844  6E13               	movwf	wr16@addr+2,c
  7846  002846  0E00               	movlw	0
  7847  002848  6E15               	movwf	wr16@value+1,c
  7848  00284A  0EA7               	movlw	167
  7849  00284C  6E14               	movwf	wr16@value,c
  7850  00284E  EC9E  F02F         	call	_wr16	;wreg free
  7851  002852  0E02               	movlw	2
  7852  002854  EC8C  F030         	call	_cmd_incrementn
  7853  002858  C04A  F025         	movff	_cmd_offset,??_display_labels
  7854  00285C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7855  002860  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7856  002862  0E00               	movlw	0
  7857  002864  2425               	addwf	??_display_labels,w,c
  7858  002866  6E11               	movwf	wr16@addr,c
  7859  002868  0E80               	movlw	128
  7860  00286A  2026               	addwfc	??_display_labels+1,w,c
  7861  00286C  6E12               	movwf	wr16@addr+1,c
  7862  00286E  0E10               	movlw	16
  7863  002870  2027               	addwfc	??_display_labels+2,w,c
  7864  002872  6E13               	movwf	wr16@addr+2,c
  7865  002874  0E00               	movlw	0
  7866  002876  6E15               	movwf	wr16@value+1,c
  7867  002878  0E14               	movlw	20
  7868  00287A  6E14               	movwf	wr16@value,c
  7869  00287C  EC9E  F02F         	call	_wr16	;wreg free
  7870  002880  0E02               	movlw	2
  7871  002882  EC8C  F030         	call	_cmd_incrementn
  7872  002886  C04A  F025         	movff	_cmd_offset,??_display_labels
  7873  00288A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7874  00288E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7875  002890  0E00               	movlw	0
  7876  002892  2425               	addwf	??_display_labels,w,c
  7877  002894  6E11               	movwf	wr16@addr,c
  7878  002896  0E80               	movlw	128
  7879  002898  2026               	addwfc	??_display_labels+1,w,c
  7880  00289A  6E12               	movwf	wr16@addr+1,c
  7881  00289C  0E10               	movlw	16
  7882  00289E  2027               	addwfc	??_display_labels+2,w,c
  7883  0028A0  6E13               	movwf	wr16@addr+2,c
  7884  0028A2  0E00               	movlw	0
  7885  0028A4  6E15               	movwf	wr16@value+1,c
  7886  0028A6  0E00               	movlw	0
  7887  0028A8  6E14               	movwf	wr16@value,c
  7888  0028AA  EC9E  F02F         	call	_wr16	;wreg free
  7889  0028AE  0E02               	movlw	2
  7890  0028B0  EC8C  F030         	call	_cmd_incrementn
  7891  0028B4  C04A  F025         	movff	_cmd_offset,??_display_labels
  7892  0028B8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7893  0028BC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7894  0028BE  0E00               	movlw	0
  7895  0028C0  2425               	addwf	??_display_labels,w,c
  7896  0028C2  6E16               	movwf	wr8s@addr,c
  7897  0028C4  0E80               	movlw	128
  7898  0028C6  2026               	addwfc	??_display_labels+1,w,c
  7899  0028C8  6E17               	movwf	wr8s@addr+1,c
  7900  0028CA  0E10               	movlw	16
  7901  0028CC  2027               	addwfc	??_display_labels+2,w,c
  7902  0028CE  6E18               	movwf	wr8s@addr+2,c
  7903  0028D0  0E2E               	movlw	low (STR_18+4)
  7904  0028D2  6E19               	movwf	wr8s@s,c
  7905  0028D4  0E0F               	movlw	high (STR_18+4)
  7906  0028D6  6E1A               	movwf	wr8s@s+1,c
  7907  0028D8  EC64  F02D         	call	_wr8s	;wreg free
  7908  0028DC  EC8C  F030         	call	_cmd_incrementn
  7909                           
  7910                           ;display.c: 37: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 85);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 170);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  7911  0028E0  0E0C               	movlw	12
  7912  0028E2  6E1E               	movwf	cmd@command,c
  7913  0028E4  0EFF               	movlw	255
  7914  0028E6  6E1F               	movwf	cmd@command+1,c
  7915  0028E8  0EFF               	movlw	255
  7916  0028EA  6E20               	movwf	cmd@command+2,c
  7917  0028EC  0EFF               	movlw	255
  7918  0028EE  6E21               	movwf	cmd@command+3,c
  7919  0028F0  ECD9  F02F         	call	_cmd	;wreg free
  7920  0028F4  C04A  F025         	movff	_cmd_offset,??_display_labels
  7921  0028F8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7922  0028FC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7923  0028FE  0E00               	movlw	0
  7924  002900  2425               	addwf	??_display_labels,w,c
  7925  002902  6E11               	movwf	wr16@addr,c
  7926  002904  0E80               	movlw	128
  7927  002906  2026               	addwfc	??_display_labels+1,w,c
  7928  002908  6E12               	movwf	wr16@addr+1,c
  7929  00290A  0E10               	movlw	16
  7930  00290C  2027               	addwfc	??_display_labels+2,w,c
  7931  00290E  6E13               	movwf	wr16@addr+2,c
  7932  002910  0E00               	movlw	0
  7933  002912  6E15               	movwf	wr16@value+1,c
  7934  002914  0E55               	movlw	85
  7935  002916  6E14               	movwf	wr16@value,c
  7936  002918  EC9E  F02F         	call	_wr16	;wreg free
  7937  00291C  0E02               	movlw	2
  7938  00291E  EC8C  F030         	call	_cmd_incrementn
  7939  002922  C04A  F025         	movff	_cmd_offset,??_display_labels
  7940  002926  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7941  00292A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7942  00292C  0E00               	movlw	0
  7943  00292E  2425               	addwf	??_display_labels,w,c
  7944  002930  6E11               	movwf	wr16@addr,c
  7945  002932  0E80               	movlw	128
  7946  002934  2026               	addwfc	??_display_labels+1,w,c
  7947  002936  6E12               	movwf	wr16@addr+1,c
  7948  002938  0E10               	movlw	16
  7949  00293A  2027               	addwfc	??_display_labels+2,w,c
  7950  00293C  6E13               	movwf	wr16@addr+2,c
  7951  00293E  0E00               	movlw	0
  7952  002940  6E15               	movwf	wr16@value+1,c
  7953  002942  0EAA               	movlw	170
  7954  002944  6E14               	movwf	wr16@value,c
  7955  002946  EC9E  F02F         	call	_wr16	;wreg free
  7956  00294A  0E02               	movlw	2
  7957  00294C  EC8C  F030         	call	_cmd_incrementn
  7958  002950  C04A  F025         	movff	_cmd_offset,??_display_labels
  7959  002954  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7960  002958  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7961  00295A  0E00               	movlw	0
  7962  00295C  2425               	addwf	??_display_labels,w,c
  7963  00295E  6E11               	movwf	wr16@addr,c
  7964  002960  0E80               	movlw	128
  7965  002962  2026               	addwfc	??_display_labels+1,w,c
  7966  002964  6E12               	movwf	wr16@addr+1,c
  7967  002966  0E10               	movlw	16
  7968  002968  2027               	addwfc	??_display_labels+2,w,c
  7969  00296A  6E13               	movwf	wr16@addr+2,c
  7970  00296C  0E00               	movlw	0
  7971  00296E  6E15               	movwf	wr16@value+1,c
  7972  002970  0E1C               	movlw	28
  7973  002972  6E14               	movwf	wr16@value,c
  7974  002974  EC9E  F02F         	call	_wr16	;wreg free
  7975  002978  0E02               	movlw	2
  7976  00297A  EC8C  F030         	call	_cmd_incrementn
  7977  00297E  C04A  F025         	movff	_cmd_offset,??_display_labels
  7978  002982  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7979  002986  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7980  002988  0E00               	movlw	0
  7981  00298A  2425               	addwf	??_display_labels,w,c
  7982  00298C  6E11               	movwf	wr16@addr,c
  7983  00298E  0E80               	movlw	128
  7984  002990  2026               	addwfc	??_display_labels+1,w,c
  7985  002992  6E12               	movwf	wr16@addr+1,c
  7986  002994  0E10               	movlw	16
  7987  002996  2027               	addwfc	??_display_labels+2,w,c
  7988  002998  6E13               	movwf	wr16@addr+2,c
  7989  00299A  0E00               	movlw	0
  7990  00299C  6E15               	movwf	wr16@value+1,c
  7991  00299E  0E00               	movlw	0
  7992  0029A0  6E14               	movwf	wr16@value,c
  7993  0029A2  EC9E  F02F         	call	_wr16	;wreg free
  7994  0029A6  0E02               	movlw	2
  7995  0029A8  EC8C  F030         	call	_cmd_incrementn
  7996  0029AC  C04A  F025         	movff	_cmd_offset,??_display_labels
  7997  0029B0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7998  0029B4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7999  0029B6  0E00               	movlw	0
  8000  0029B8  2425               	addwf	??_display_labels,w,c
  8001  0029BA  6E16               	movwf	wr8s@addr,c
  8002  0029BC  0E80               	movlw	128
  8003  0029BE  2026               	addwfc	??_display_labels+1,w,c
  8004  0029C0  6E17               	movwf	wr8s@addr+1,c
  8005  0029C2  0E10               	movlw	16
  8006  0029C4  2027               	addwfc	??_display_labels+2,w,c
  8007  0029C6  6E18               	movwf	wr8s@addr+2,c
  8008  0029C8  0E6C               	movlw	low STR_5
  8009  0029CA  6E19               	movwf	wr8s@s,c
  8010  0029CC  0E0F               	movlw	high STR_5
  8011  0029CE  6E1A               	movwf	wr8s@s+1,c
  8012  0029D0  EC64  F02D         	call	_wr8s	;wreg free
  8013  0029D4  EC8C  F030         	call	_cmd_incrementn
  8014                           
  8015                           ;display.c: 38: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 475);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 135);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+
  8016  0029D8  0E0C               	movlw	12
  8017  0029DA  6E1E               	movwf	cmd@command,c
  8018  0029DC  0EFF               	movlw	255
  8019  0029DE  6E1F               	movwf	cmd@command+1,c
  8020  0029E0  0EFF               	movlw	255
  8021  0029E2  6E20               	movwf	cmd@command+2,c
  8022  0029E4  0EFF               	movlw	255
  8023  0029E6  6E21               	movwf	cmd@command+3,c
  8024  0029E8  ECD9  F02F         	call	_cmd	;wreg free
  8025  0029EC  C04A  F025         	movff	_cmd_offset,??_display_labels
  8026  0029F0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8027  0029F4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8028  0029F6  0E00               	movlw	0
  8029  0029F8  2425               	addwf	??_display_labels,w,c
  8030  0029FA  6E11               	movwf	wr16@addr,c
  8031  0029FC  0E80               	movlw	128
  8032  0029FE  2026               	addwfc	??_display_labels+1,w,c
  8033  002A00  6E12               	movwf	wr16@addr+1,c
  8034  002A02  0E10               	movlw	16
  8035  002A04  2027               	addwfc	??_display_labels+2,w,c
  8036  002A06  6E13               	movwf	wr16@addr+2,c
  8037  002A08  0E01               	movlw	1
  8038  002A0A  6E15               	movwf	wr16@value+1,c
  8039  002A0C  0EDB               	movlw	219
  8040  002A0E  6E14               	movwf	wr16@value,c
  8041  002A10  EC9E  F02F         	call	_wr16	;wreg free
  8042  002A14  0E02               	movlw	2
  8043  002A16  EC8C  F030         	call	_cmd_incrementn
  8044  002A1A  C04A  F025         	movff	_cmd_offset,??_display_labels
  8045  002A1E  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8046  002A22  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8047  002A24  0E00               	movlw	0
  8048  002A26  2425               	addwf	??_display_labels,w,c
  8049  002A28  6E11               	movwf	wr16@addr,c
  8050  002A2A  0E80               	movlw	128
  8051  002A2C  2026               	addwfc	??_display_labels+1,w,c
  8052  002A2E  6E12               	movwf	wr16@addr+1,c
  8053  002A30  0E10               	movlw	16
  8054  002A32  2027               	addwfc	??_display_labels+2,w,c
  8055  002A34  6E13               	movwf	wr16@addr+2,c
  8056  002A36  0E00               	movlw	0
  8057  002A38  6E15               	movwf	wr16@value+1,c
  8058  002A3A  0E87               	movlw	135
  8059  002A3C  6E14               	movwf	wr16@value,c
  8060  002A3E  EC9E  F02F         	call	_wr16	;wreg free
  8061  002A42  0E02               	movlw	2
  8062  002A44  EC8C  F030         	call	_cmd_incrementn
  8063  002A48  C04A  F025         	movff	_cmd_offset,??_display_labels
  8064  002A4C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8065  002A50  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8066  002A52  0E00               	movlw	0
  8067  002A54  2425               	addwf	??_display_labels,w,c
  8068  002A56  6E11               	movwf	wr16@addr,c
  8069  002A58  0E80               	movlw	128
  8070  002A5A  2026               	addwfc	??_display_labels+1,w,c
  8071  002A5C  6E12               	movwf	wr16@addr+1,c
  8072  002A5E  0E10               	movlw	16
  8073  002A60  2027               	addwfc	??_display_labels+2,w,c
  8074  002A62  6E13               	movwf	wr16@addr+2,c
  8075  002A64  0E00               	movlw	0
  8076  002A66  6E15               	movwf	wr16@value+1,c
  8077  002A68  0E1C               	movlw	28
  8078  002A6A  6E14               	movwf	wr16@value,c
  8079  002A6C  EC9E  F02F         	call	_wr16	;wreg free
  8080  002A70  0E02               	movlw	2
  8081  002A72  EC8C  F030         	call	_cmd_incrementn
  8082  002A76  C04A  F025         	movff	_cmd_offset,??_display_labels
  8083  002A7A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8084  002A7E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8085  002A80  0E00               	movlw	0
  8086  002A82  2425               	addwf	??_display_labels,w,c
  8087  002A84  6E11               	movwf	wr16@addr,c
  8088  002A86  0E80               	movlw	128
  8089  002A88  2026               	addwfc	??_display_labels+1,w,c
  8090  002A8A  6E12               	movwf	wr16@addr+1,c
  8091  002A8C  0E10               	movlw	16
  8092  002A8E  2027               	addwfc	??_display_labels+2,w,c
  8093  002A90  6E13               	movwf	wr16@addr+2,c
  8094  002A92  0E08               	movlw	8
  8095  002A94  6E15               	movwf	wr16@value+1,c
  8096  002A96  0E00               	movlw	0
  8097  002A98  6E14               	movwf	wr16@value,c
  8098  002A9A  EC9E  F02F         	call	_wr16	;wreg free
  8099  002A9E  0E02               	movlw	2
  8100  002AA0  EC8C  F030         	call	_cmd_incrementn
  8101  002AA4  C04A  F025         	movff	_cmd_offset,??_display_labels
  8102  002AA8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8103  002AAC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8104  002AAE  0E00               	movlw	0
  8105  002AB0  2425               	addwf	??_display_labels,w,c
  8106  002AB2  6E16               	movwf	wr8s@addr,c
  8107  002AB4  0E80               	movlw	128
  8108  002AB6  2026               	addwfc	??_display_labels+1,w,c
  8109  002AB8  6E17               	movwf	wr8s@addr+1,c
  8110  002ABA  0E10               	movlw	16
  8111  002ABC  2027               	addwfc	??_display_labels+2,w,c
  8112  002ABE  6E18               	movwf	wr8s@addr+2,c
  8113  002AC0  0E0B               	movlw	low STR_6
  8114  002AC2  6E19               	movwf	wr8s@s,c
  8115  002AC4  0E0F               	movlw	high STR_6
  8116  002AC6  6E1A               	movwf	wr8s@s+1,c
  8117  002AC8  EC64  F02D         	call	_wr8s	;wreg free
  8118  002ACC  EC8C  F030         	call	_cmd_incrementn
  8119                           
  8120                           ;display.c: 39: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 455);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 167);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 20);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8121  002AD0  0E0C               	movlw	12
  8122  002AD2  6E1E               	movwf	cmd@command,c
  8123  002AD4  0EFF               	movlw	255
  8124  002AD6  6E1F               	movwf	cmd@command+1,c
  8125  002AD8  0EFF               	movlw	255
  8126  002ADA  6E20               	movwf	cmd@command+2,c
  8127  002ADC  0EFF               	movlw	255
  8128  002ADE  6E21               	movwf	cmd@command+3,c
  8129  002AE0  ECD9  F02F         	call	_cmd	;wreg free
  8130  002AE4  C04A  F025         	movff	_cmd_offset,??_display_labels
  8131  002AE8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8132  002AEC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8133  002AEE  0E00               	movlw	0
  8134  002AF0  2425               	addwf	??_display_labels,w,c
  8135  002AF2  6E11               	movwf	wr16@addr,c
  8136  002AF4  0E80               	movlw	128
  8137  002AF6  2026               	addwfc	??_display_labels+1,w,c
  8138  002AF8  6E12               	movwf	wr16@addr+1,c
  8139  002AFA  0E10               	movlw	16
  8140  002AFC  2027               	addwfc	??_display_labels+2,w,c
  8141  002AFE  6E13               	movwf	wr16@addr+2,c
  8142  002B00  0E01               	movlw	1
  8143  002B02  6E15               	movwf	wr16@value+1,c
  8144  002B04  0EC7               	movlw	199
  8145  002B06  6E14               	movwf	wr16@value,c
  8146  002B08  EC9E  F02F         	call	_wr16	;wreg free
  8147  002B0C  0E02               	movlw	2
  8148  002B0E  EC8C  F030         	call	_cmd_incrementn
  8149  002B12  C04A  F025         	movff	_cmd_offset,??_display_labels
  8150  002B16  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8151  002B1A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8152  002B1C  0E00               	movlw	0
  8153  002B1E  2425               	addwf	??_display_labels,w,c
  8154  002B20  6E11               	movwf	wr16@addr,c
  8155  002B22  0E80               	movlw	128
  8156  002B24  2026               	addwfc	??_display_labels+1,w,c
  8157  002B26  6E12               	movwf	wr16@addr+1,c
  8158  002B28  0E10               	movlw	16
  8159  002B2A  2027               	addwfc	??_display_labels+2,w,c
  8160  002B2C  6E13               	movwf	wr16@addr+2,c
  8161  002B2E  0E00               	movlw	0
  8162  002B30  6E15               	movwf	wr16@value+1,c
  8163  002B32  0EA7               	movlw	167
  8164  002B34  6E14               	movwf	wr16@value,c
  8165  002B36  EC9E  F02F         	call	_wr16	;wreg free
  8166  002B3A  0E02               	movlw	2
  8167  002B3C  EC8C  F030         	call	_cmd_incrementn
  8168  002B40  C04A  F025         	movff	_cmd_offset,??_display_labels
  8169  002B44  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8170  002B48  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8171  002B4A  0E00               	movlw	0
  8172  002B4C  2425               	addwf	??_display_labels,w,c
  8173  002B4E  6E11               	movwf	wr16@addr,c
  8174  002B50  0E80               	movlw	128
  8175  002B52  2026               	addwfc	??_display_labels+1,w,c
  8176  002B54  6E12               	movwf	wr16@addr+1,c
  8177  002B56  0E10               	movlw	16
  8178  002B58  2027               	addwfc	??_display_labels+2,w,c
  8179  002B5A  6E13               	movwf	wr16@addr+2,c
  8180  002B5C  0E00               	movlw	0
  8181  002B5E  6E15               	movwf	wr16@value+1,c
  8182  002B60  0E14               	movlw	20
  8183  002B62  6E14               	movwf	wr16@value,c
  8184  002B64  EC9E  F02F         	call	_wr16	;wreg free
  8185  002B68  0E02               	movlw	2
  8186  002B6A  EC8C  F030         	call	_cmd_incrementn
  8187  002B6E  C04A  F025         	movff	_cmd_offset,??_display_labels
  8188  002B72  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8189  002B76  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8190  002B78  0E00               	movlw	0
  8191  002B7A  2425               	addwf	??_display_labels,w,c
  8192  002B7C  6E11               	movwf	wr16@addr,c
  8193  002B7E  0E80               	movlw	128
  8194  002B80  2026               	addwfc	??_display_labels+1,w,c
  8195  002B82  6E12               	movwf	wr16@addr+1,c
  8196  002B84  0E10               	movlw	16
  8197  002B86  2027               	addwfc	??_display_labels+2,w,c
  8198  002B88  6E13               	movwf	wr16@addr+2,c
  8199  002B8A  0E00               	movlw	0
  8200  002B8C  6E15               	movwf	wr16@value+1,c
  8201  002B8E  0E00               	movlw	0
  8202  002B90  6E14               	movwf	wr16@value,c
  8203  002B92  EC9E  F02F         	call	_wr16	;wreg free
  8204  002B96  0E02               	movlw	2
  8205  002B98  EC8C  F030         	call	_cmd_incrementn
  8206  002B9C  C04A  F025         	movff	_cmd_offset,??_display_labels
  8207  002BA0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8208  002BA4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8209  002BA6  0E00               	movlw	0
  8210  002BA8  2425               	addwf	??_display_labels,w,c
  8211  002BAA  6E16               	movwf	wr8s@addr,c
  8212  002BAC  0E80               	movlw	128
  8213  002BAE  2026               	addwfc	??_display_labels+1,w,c
  8214  002BB0  6E17               	movwf	wr8s@addr+1,c
  8215  002BB2  0E10               	movlw	16
  8216  002BB4  2027               	addwfc	??_display_labels+2,w,c
  8217  002BB6  6E18               	movwf	wr8s@addr+2,c
  8218  002BB8  0E2E               	movlw	low (STR_18+4)
  8219  002BBA  6E19               	movwf	wr8s@s,c
  8220  002BBC  0E0F               	movlw	high (STR_18+4)
  8221  002BBE  6E1A               	movwf	wr8s@s+1,c
  8222  002BC0  EC64  F02D         	call	_wr8s	;wreg free
  8223  002BC4  EC8C  F030         	call	_cmd_incrementn
  8224                           
  8225                           ;display.c: 40: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 472);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 170);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+
  8226  002BC8  0E0C               	movlw	12
  8227  002BCA  6E1E               	movwf	cmd@command,c
  8228  002BCC  0EFF               	movlw	255
  8229  002BCE  6E1F               	movwf	cmd@command+1,c
  8230  002BD0  0EFF               	movlw	255
  8231  002BD2  6E20               	movwf	cmd@command+2,c
  8232  002BD4  0EFF               	movlw	255
  8233  002BD6  6E21               	movwf	cmd@command+3,c
  8234  002BD8  ECD9  F02F         	call	_cmd	;wreg free
  8235  002BDC  C04A  F025         	movff	_cmd_offset,??_display_labels
  8236  002BE0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8237  002BE4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8238  002BE6  0E00               	movlw	0
  8239  002BE8  2425               	addwf	??_display_labels,w,c
  8240  002BEA  6E11               	movwf	wr16@addr,c
  8241  002BEC  0E80               	movlw	128
  8242  002BEE  2026               	addwfc	??_display_labels+1,w,c
  8243  002BF0  6E12               	movwf	wr16@addr+1,c
  8244  002BF2  0E10               	movlw	16
  8245  002BF4  2027               	addwfc	??_display_labels+2,w,c
  8246  002BF6  6E13               	movwf	wr16@addr+2,c
  8247  002BF8  0E01               	movlw	1
  8248  002BFA  6E15               	movwf	wr16@value+1,c
  8249  002BFC  0ED8               	movlw	216
  8250  002BFE  6E14               	movwf	wr16@value,c
  8251  002C00  EC9E  F02F         	call	_wr16	;wreg free
  8252  002C04  0E02               	movlw	2
  8253  002C06  EC8C  F030         	call	_cmd_incrementn
  8254  002C0A  C04A  F025         	movff	_cmd_offset,??_display_labels
  8255  002C0E  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8256  002C12  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8257  002C14  0E00               	movlw	0
  8258  002C16  2425               	addwf	??_display_labels,w,c
  8259  002C18  6E11               	movwf	wr16@addr,c
  8260  002C1A  0E80               	movlw	128
  8261  002C1C  2026               	addwfc	??_display_labels+1,w,c
  8262  002C1E  6E12               	movwf	wr16@addr+1,c
  8263  002C20  0E10               	movlw	16
  8264  002C22  2027               	addwfc	??_display_labels+2,w,c
  8265  002C24  6E13               	movwf	wr16@addr+2,c
  8266  002C26  0E00               	movlw	0
  8267  002C28  6E15               	movwf	wr16@value+1,c
  8268  002C2A  0EAA               	movlw	170
  8269  002C2C  6E14               	movwf	wr16@value,c
  8270  002C2E  EC9E  F02F         	call	_wr16	;wreg free
  8271  002C32  0E02               	movlw	2
  8272  002C34  EC8C  F030         	call	_cmd_incrementn
  8273  002C38  C04A  F025         	movff	_cmd_offset,??_display_labels
  8274  002C3C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8275  002C40  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8276  002C42  0E00               	movlw	0
  8277  002C44  2425               	addwf	??_display_labels,w,c
  8278  002C46  6E11               	movwf	wr16@addr,c
  8279  002C48  0E80               	movlw	128
  8280  002C4A  2026               	addwfc	??_display_labels+1,w,c
  8281  002C4C  6E12               	movwf	wr16@addr+1,c
  8282  002C4E  0E10               	movlw	16
  8283  002C50  2027               	addwfc	??_display_labels+2,w,c
  8284  002C52  6E13               	movwf	wr16@addr+2,c
  8285  002C54  0E00               	movlw	0
  8286  002C56  6E15               	movwf	wr16@value+1,c
  8287  002C58  0E1C               	movlw	28
  8288  002C5A  6E14               	movwf	wr16@value,c
  8289  002C5C  EC9E  F02F         	call	_wr16	;wreg free
  8290  002C60  0E02               	movlw	2
  8291  002C62  EC8C  F030         	call	_cmd_incrementn
  8292  002C66  C04A  F025         	movff	_cmd_offset,??_display_labels
  8293  002C6A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8294  002C6E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8295  002C70  0E00               	movlw	0
  8296  002C72  2425               	addwf	??_display_labels,w,c
  8297  002C74  6E11               	movwf	wr16@addr,c
  8298  002C76  0E80               	movlw	128
  8299  002C78  2026               	addwfc	??_display_labels+1,w,c
  8300  002C7A  6E12               	movwf	wr16@addr+1,c
  8301  002C7C  0E10               	movlw	16
  8302  002C7E  2027               	addwfc	??_display_labels+2,w,c
  8303  002C80  6E13               	movwf	wr16@addr+2,c
  8304  002C82  0E08               	movlw	8
  8305  002C84  6E15               	movwf	wr16@value+1,c
  8306  002C86  0E00               	movlw	0
  8307  002C88  6E14               	movwf	wr16@value,c
  8308  002C8A  EC9E  F02F         	call	_wr16	;wreg free
  8309  002C8E  0E02               	movlw	2
  8310  002C90  EC8C  F030         	call	_cmd_incrementn
  8311  002C94  C04A  F025         	movff	_cmd_offset,??_display_labels
  8312  002C98  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8313  002C9C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8314  002C9E  0E00               	movlw	0
  8315  002CA0  2425               	addwf	??_display_labels,w,c
  8316  002CA2  6E16               	movwf	wr8s@addr,c
  8317  002CA4  0E80               	movlw	128
  8318  002CA6  2026               	addwfc	??_display_labels+1,w,c
  8319  002CA8  6E17               	movwf	wr8s@addr+1,c
  8320  002CAA  0E10               	movlw	16
  8321  002CAC  2027               	addwfc	??_display_labels+2,w,c
  8322  002CAE  6E18               	movwf	wr8s@addr+2,c
  8323  002CB0  0E6C               	movlw	low STR_5
  8324  002CB2  6E19               	movwf	wr8s@s,c
  8325  002CB4  0E0F               	movlw	high STR_5
  8326  002CB6  6E1A               	movwf	wr8s@s+1,c
  8327  002CB8  EC64  F02D         	call	_wr8s	;wreg free
  8328  002CBC  EC8C  F030         	call	_cmd_incrementn
  8329                           
  8330                           ;display.c: 41: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 65);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  8331  002CC0  0E0C               	movlw	12
  8332  002CC2  6E1E               	movwf	cmd@command,c
  8333  002CC4  0EFF               	movlw	255
  8334  002CC6  6E1F               	movwf	cmd@command+1,c
  8335  002CC8  0EFF               	movlw	255
  8336  002CCA  6E20               	movwf	cmd@command+2,c
  8337  002CCC  0EFF               	movlw	255
  8338  002CCE  6E21               	movwf	cmd@command+3,c
  8339  002CD0  ECD9  F02F         	call	_cmd	;wreg free
  8340  002CD4  C04A  F025         	movff	_cmd_offset,??_display_labels
  8341  002CD8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8342  002CDC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8343  002CDE  0E00               	movlw	0
  8344  002CE0  2425               	addwf	??_display_labels,w,c
  8345  002CE2  6E11               	movwf	wr16@addr,c
  8346  002CE4  0E80               	movlw	128
  8347  002CE6  2026               	addwfc	??_display_labels+1,w,c
  8348  002CE8  6E12               	movwf	wr16@addr+1,c
  8349  002CEA  0E10               	movlw	16
  8350  002CEC  2027               	addwfc	??_display_labels+2,w,c
  8351  002CEE  6E13               	movwf	wr16@addr+2,c
  8352  002CF0  0E00               	movlw	0
  8353  002CF2  6E15               	movwf	wr16@value+1,c
  8354  002CF4  0E41               	movlw	65
  8355  002CF6  6E14               	movwf	wr16@value,c
  8356  002CF8  EC9E  F02F         	call	_wr16	;wreg free
  8357  002CFC  0E02               	movlw	2
  8358  002CFE  EC8C  F030         	call	_cmd_incrementn
  8359  002D02  C04A  F025         	movff	_cmd_offset,??_display_labels
  8360  002D06  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8361  002D0A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8362  002D0C  0E00               	movlw	0
  8363  002D0E  2425               	addwf	??_display_labels,w,c
  8364  002D10  6E11               	movwf	wr16@addr,c
  8365  002D12  0E80               	movlw	128
  8366  002D14  2026               	addwfc	??_display_labels+1,w,c
  8367  002D16  6E12               	movwf	wr16@addr+1,c
  8368  002D18  0E10               	movlw	16
  8369  002D1A  2027               	addwfc	??_display_labels+2,w,c
  8370  002D1C  6E13               	movwf	wr16@addr+2,c
  8371  002D1E  0E00               	movlw	0
  8372  002D20  6E15               	movwf	wr16@value+1,c
  8373  002D22  0EF5               	movlw	245
  8374  002D24  6E14               	movwf	wr16@value,c
  8375  002D26  EC9E  F02F         	call	_wr16	;wreg free
  8376  002D2A  0E02               	movlw	2
  8377  002D2C  EC8C  F030         	call	_cmd_incrementn
  8378  002D30  C04A  F025         	movff	_cmd_offset,??_display_labels
  8379  002D34  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8380  002D38  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8381  002D3A  0E00               	movlw	0
  8382  002D3C  2425               	addwf	??_display_labels,w,c
  8383  002D3E  6E11               	movwf	wr16@addr,c
  8384  002D40  0E80               	movlw	128
  8385  002D42  2026               	addwfc	??_display_labels+1,w,c
  8386  002D44  6E12               	movwf	wr16@addr+1,c
  8387  002D46  0E10               	movlw	16
  8388  002D48  2027               	addwfc	??_display_labels+2,w,c
  8389  002D4A  6E13               	movwf	wr16@addr+2,c
  8390  002D4C  0E00               	movlw	0
  8391  002D4E  6E15               	movwf	wr16@value+1,c
  8392  002D50  0E1C               	movlw	28
  8393  002D52  6E14               	movwf	wr16@value,c
  8394  002D54  EC9E  F02F         	call	_wr16	;wreg free
  8395  002D58  0E02               	movlw	2
  8396  002D5A  EC8C  F030         	call	_cmd_incrementn
  8397  002D5E  C04A  F025         	movff	_cmd_offset,??_display_labels
  8398  002D62  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8399  002D66  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8400  002D68  0E00               	movlw	0
  8401  002D6A  2425               	addwf	??_display_labels,w,c
  8402  002D6C  6E11               	movwf	wr16@addr,c
  8403  002D6E  0E80               	movlw	128
  8404  002D70  2026               	addwfc	??_display_labels+1,w,c
  8405  002D72  6E12               	movwf	wr16@addr+1,c
  8406  002D74  0E10               	movlw	16
  8407  002D76  2027               	addwfc	??_display_labels+2,w,c
  8408  002D78  6E13               	movwf	wr16@addr+2,c
  8409  002D7A  0E00               	movlw	0
  8410  002D7C  6E15               	movwf	wr16@value+1,c
  8411  002D7E  0E00               	movlw	0
  8412  002D80  6E14               	movwf	wr16@value,c
  8413  002D82  EC9E  F02F         	call	_wr16	;wreg free
  8414  002D86  0E02               	movlw	2
  8415  002D88  EC8C  F030         	call	_cmd_incrementn
  8416  002D8C  C04A  F025         	movff	_cmd_offset,??_display_labels
  8417  002D90  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8418  002D94  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8419  002D96  0E00               	movlw	0
  8420  002D98  2425               	addwf	??_display_labels,w,c
  8421  002D9A  6E16               	movwf	wr8s@addr,c
  8422  002D9C  0E80               	movlw	128
  8423  002D9E  2026               	addwfc	??_display_labels+1,w,c
  8424  002DA0  6E17               	movwf	wr8s@addr+1,c
  8425  002DA2  0E10               	movlw	16
  8426  002DA4  2027               	addwfc	??_display_labels+2,w,c
  8427  002DA6  6E18               	movwf	wr8s@addr+2,c
  8428  002DA8  0E35               	movlw	low STR_9
  8429  002DAA  6E19               	movwf	wr8s@s,c
  8430  002DAC  0E0F               	movlw	high STR_9
  8431  002DAE  6E1A               	movwf	wr8s@s+1,c
  8432  002DB0  EC64  F02D         	call	_wr8s	;wreg free
  8433  002DB4  EC8C  F030         	call	_cmd_incrementn
  8434                           
  8435                           ;display.c: 42: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 45);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  8436  002DB8  0E0C               	movlw	12
  8437  002DBA  6E1E               	movwf	cmd@command,c
  8438  002DBC  0EFF               	movlw	255
  8439  002DBE  6E1F               	movwf	cmd@command+1,c
  8440  002DC0  0EFF               	movlw	255
  8441  002DC2  6E20               	movwf	cmd@command+2,c
  8442  002DC4  0EFF               	movlw	255
  8443  002DC6  6E21               	movwf	cmd@command+3,c
  8444  002DC8  ECD9  F02F         	call	_cmd	;wreg free
  8445  002DCC  C04A  F025         	movff	_cmd_offset,??_display_labels
  8446  002DD0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8447  002DD4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8448  002DD6  0E00               	movlw	0
  8449  002DD8  2425               	addwf	??_display_labels,w,c
  8450  002DDA  6E11               	movwf	wr16@addr,c
  8451  002DDC  0E80               	movlw	128
  8452  002DDE  2026               	addwfc	??_display_labels+1,w,c
  8453  002DE0  6E12               	movwf	wr16@addr+1,c
  8454  002DE2  0E10               	movlw	16
  8455  002DE4  2027               	addwfc	??_display_labels+2,w,c
  8456  002DE6  6E13               	movwf	wr16@addr+2,c
  8457  002DE8  0E00               	movlw	0
  8458  002DEA  6E15               	movwf	wr16@value+1,c
  8459  002DEC  0E2D               	movlw	45
  8460  002DEE  6E14               	movwf	wr16@value,c
  8461  002DF0  EC9E  F02F         	call	_wr16	;wreg free
  8462  002DF4  0E02               	movlw	2
  8463  002DF6  EC8C  F030         	call	_cmd_incrementn
  8464  002DFA  C04A  F025         	movff	_cmd_offset,??_display_labels
  8465  002DFE  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8466  002E02  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8467  002E04  0E00               	movlw	0
  8468  002E06  2425               	addwf	??_display_labels,w,c
  8469  002E08  6E11               	movwf	wr16@addr,c
  8470  002E0A  0E80               	movlw	128
  8471  002E0C  2026               	addwfc	??_display_labels+1,w,c
  8472  002E0E  6E12               	movwf	wr16@addr+1,c
  8473  002E10  0E10               	movlw	16
  8474  002E12  2027               	addwfc	??_display_labels+2,w,c
  8475  002E14  6E13               	movwf	wr16@addr+2,c
  8476  002E16  0E00               	movlw	0
  8477  002E18  6E15               	movwf	wr16@value+1,c
  8478  002E1A  0EF5               	movlw	245
  8479  002E1C  6E14               	movwf	wr16@value,c
  8480  002E1E  EC9E  F02F         	call	_wr16	;wreg free
  8481  002E22  0E02               	movlw	2
  8482  002E24  EC8C  F030         	call	_cmd_incrementn
  8483  002E28  C04A  F025         	movff	_cmd_offset,??_display_labels
  8484  002E2C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8485  002E30  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8486  002E32  0E00               	movlw	0
  8487  002E34  2425               	addwf	??_display_labels,w,c
  8488  002E36  6E11               	movwf	wr16@addr,c
  8489  002E38  0E80               	movlw	128
  8490  002E3A  2026               	addwfc	??_display_labels+1,w,c
  8491  002E3C  6E12               	movwf	wr16@addr+1,c
  8492  002E3E  0E10               	movlw	16
  8493  002E40  2027               	addwfc	??_display_labels+2,w,c
  8494  002E42  6E13               	movwf	wr16@addr+2,c
  8495  002E44  0E00               	movlw	0
  8496  002E46  6E15               	movwf	wr16@value+1,c
  8497  002E48  0E1C               	movlw	28
  8498  002E4A  6E14               	movwf	wr16@value,c
  8499  002E4C  EC9E  F02F         	call	_wr16	;wreg free
  8500  002E50  0E02               	movlw	2
  8501  002E52  EC8C  F030         	call	_cmd_incrementn
  8502  002E56  C04A  F025         	movff	_cmd_offset,??_display_labels
  8503  002E5A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8504  002E5E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8505  002E60  0E00               	movlw	0
  8506  002E62  2425               	addwf	??_display_labels,w,c
  8507  002E64  6E11               	movwf	wr16@addr,c
  8508  002E66  0E80               	movlw	128
  8509  002E68  2026               	addwfc	??_display_labels+1,w,c
  8510  002E6A  6E12               	movwf	wr16@addr+1,c
  8511  002E6C  0E10               	movlw	16
  8512  002E6E  2027               	addwfc	??_display_labels+2,w,c
  8513  002E70  6E13               	movwf	wr16@addr+2,c
  8514  002E72  0E00               	movlw	0
  8515  002E74  6E15               	movwf	wr16@value+1,c
  8516  002E76  0E00               	movlw	0
  8517  002E78  6E14               	movwf	wr16@value,c
  8518  002E7A  EC9E  F02F         	call	_wr16	;wreg free
  8519  002E7E  0E02               	movlw	2
  8520  002E80  EC8C  F030         	call	_cmd_incrementn
  8521  002E84  C04A  F025         	movff	_cmd_offset,??_display_labels
  8522  002E88  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8523  002E8C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8524  002E8E  0E00               	movlw	0
  8525  002E90  2425               	addwf	??_display_labels,w,c
  8526  002E92  6E16               	movwf	wr8s@addr,c
  8527  002E94  0E80               	movlw	128
  8528  002E96  2026               	addwfc	??_display_labels+1,w,c
  8529  002E98  6E17               	movwf	wr8s@addr+1,c
  8530  002E9A  0E10               	movlw	16
  8531  002E9C  2027               	addwfc	??_display_labels+2,w,c
  8532  002E9E  6E18               	movwf	wr8s@addr+2,c
  8533  002EA0  0E56               	movlw	low STR_10
  8534  002EA2  6E19               	movwf	wr8s@s,c
  8535  002EA4  0E0F               	movlw	high STR_10
  8536  002EA6  6E1A               	movwf	wr8s@s+1,c
  8537  002EA8  EC64  F02D         	call	_wr8s	;wreg free
  8538  002EAC  EC8C  F030         	call	_cmd_incrementn
  8539                           
  8540                           ;display.c: 43: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 270);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8541  002EB0  0E0C               	movlw	12
  8542  002EB2  6E1E               	movwf	cmd@command,c
  8543  002EB4  0EFF               	movlw	255
  8544  002EB6  6E1F               	movwf	cmd@command+1,c
  8545  002EB8  0EFF               	movlw	255
  8546  002EBA  6E20               	movwf	cmd@command+2,c
  8547  002EBC  0EFF               	movlw	255
  8548  002EBE  6E21               	movwf	cmd@command+3,c
  8549  002EC0  ECD9  F02F         	call	_cmd	;wreg free
  8550  002EC4  C04A  F025         	movff	_cmd_offset,??_display_labels
  8551  002EC8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8552  002ECC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8553  002ECE  0E00               	movlw	0
  8554  002ED0  2425               	addwf	??_display_labels,w,c
  8555  002ED2  6E11               	movwf	wr16@addr,c
  8556  002ED4  0E80               	movlw	128
  8557  002ED6  2026               	addwfc	??_display_labels+1,w,c
  8558  002ED8  6E12               	movwf	wr16@addr+1,c
  8559  002EDA  0E10               	movlw	16
  8560  002EDC  2027               	addwfc	??_display_labels+2,w,c
  8561  002EDE  6E13               	movwf	wr16@addr+2,c
  8562  002EE0  0E01               	movlw	1
  8563  002EE2  6E15               	movwf	wr16@value+1,c
  8564  002EE4  0E0E               	movlw	14
  8565  002EE6  6E14               	movwf	wr16@value,c
  8566  002EE8  EC9E  F02F         	call	_wr16	;wreg free
  8567  002EEC  0E02               	movlw	2
  8568  002EEE  EC8C  F030         	call	_cmd_incrementn
  8569  002EF2  C04A  F025         	movff	_cmd_offset,??_display_labels
  8570  002EF6  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8571  002EFA  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8572  002EFC  0E00               	movlw	0
  8573  002EFE  2425               	addwf	??_display_labels,w,c
  8574  002F00  6E11               	movwf	wr16@addr,c
  8575  002F02  0E80               	movlw	128
  8576  002F04  2026               	addwfc	??_display_labels+1,w,c
  8577  002F06  6E12               	movwf	wr16@addr+1,c
  8578  002F08  0E10               	movlw	16
  8579  002F0A  2027               	addwfc	??_display_labels+2,w,c
  8580  002F0C  6E13               	movwf	wr16@addr+2,c
  8581  002F0E  0E00               	movlw	0
  8582  002F10  6E15               	movwf	wr16@value+1,c
  8583  002F12  0EF5               	movlw	245
  8584  002F14  6E14               	movwf	wr16@value,c
  8585  002F16  EC9E  F02F         	call	_wr16	;wreg free
  8586  002F1A  0E02               	movlw	2
  8587  002F1C  EC8C  F030         	call	_cmd_incrementn
  8588  002F20  C04A  F025         	movff	_cmd_offset,??_display_labels
  8589  002F24  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8590  002F28  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8591  002F2A  0E00               	movlw	0
  8592  002F2C  2425               	addwf	??_display_labels,w,c
  8593  002F2E  6E11               	movwf	wr16@addr,c
  8594  002F30  0E80               	movlw	128
  8595  002F32  2026               	addwfc	??_display_labels+1,w,c
  8596  002F34  6E12               	movwf	wr16@addr+1,c
  8597  002F36  0E10               	movlw	16
  8598  002F38  2027               	addwfc	??_display_labels+2,w,c
  8599  002F3A  6E13               	movwf	wr16@addr+2,c
  8600  002F3C  0E00               	movlw	0
  8601  002F3E  6E15               	movwf	wr16@value+1,c
  8602  002F40  0E1C               	movlw	28
  8603  002F42  6E14               	movwf	wr16@value,c
  8604  002F44  EC9E  F02F         	call	_wr16	;wreg free
  8605  002F48  0E02               	movlw	2
  8606  002F4A  EC8C  F030         	call	_cmd_incrementn
  8607  002F4E  C04A  F025         	movff	_cmd_offset,??_display_labels
  8608  002F52  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8609  002F56  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8610  002F58  0E00               	movlw	0
  8611  002F5A  2425               	addwf	??_display_labels,w,c
  8612  002F5C  6E11               	movwf	wr16@addr,c
  8613  002F5E  0E80               	movlw	128
  8614  002F60  2026               	addwfc	??_display_labels+1,w,c
  8615  002F62  6E12               	movwf	wr16@addr+1,c
  8616  002F64  0E10               	movlw	16
  8617  002F66  2027               	addwfc	??_display_labels+2,w,c
  8618  002F68  6E13               	movwf	wr16@addr+2,c
  8619  002F6A  0E00               	movlw	0
  8620  002F6C  6E15               	movwf	wr16@value+1,c
  8621  002F6E  0E00               	movlw	0
  8622  002F70  6E14               	movwf	wr16@value,c
  8623  002F72  EC9E  F02F         	call	_wr16	;wreg free
  8624  002F76  0E02               	movlw	2
  8625  002F78  EC8C  F030         	call	_cmd_incrementn
  8626  002F7C  C04A  F025         	movff	_cmd_offset,??_display_labels
  8627  002F80  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8628  002F84  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8629  002F86  0E00               	movlw	0
  8630  002F88  2425               	addwf	??_display_labels,w,c
  8631  002F8A  6E16               	movwf	wr8s@addr,c
  8632  002F8C  0E80               	movlw	128
  8633  002F8E  2026               	addwfc	??_display_labels+1,w,c
  8634  002F90  6E17               	movwf	wr8s@addr+1,c
  8635  002F92  0E10               	movlw	16
  8636  002F94  2027               	addwfc	??_display_labels+2,w,c
  8637  002F96  6E18               	movwf	wr8s@addr+2,c
  8638  002F98  0E6E               	movlw	low STR_11
  8639  002F9A  6E19               	movwf	wr8s@s,c
  8640  002F9C  0E0F               	movlw	high STR_11
  8641  002F9E  6E1A               	movwf	wr8s@s+1,c
  8642  002FA0  EC64  F02D         	call	_wr8s	;wreg free
  8643  002FA4  EC8C  F030         	call	_cmd_incrementn
  8644                           
  8645                           ;display.c: 44: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 370);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8646  002FA8  0E0C               	movlw	12
  8647  002FAA  6E1E               	movwf	cmd@command,c
  8648  002FAC  0EFF               	movlw	255
  8649  002FAE  6E1F               	movwf	cmd@command+1,c
  8650  002FB0  0EFF               	movlw	255
  8651  002FB2  6E20               	movwf	cmd@command+2,c
  8652  002FB4  0EFF               	movlw	255
  8653  002FB6  6E21               	movwf	cmd@command+3,c
  8654  002FB8  ECD9  F02F         	call	_cmd	;wreg free
  8655  002FBC  C04A  F025         	movff	_cmd_offset,??_display_labels
  8656  002FC0  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8657  002FC4  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8658  002FC6  0E00               	movlw	0
  8659  002FC8  2425               	addwf	??_display_labels,w,c
  8660  002FCA  6E11               	movwf	wr16@addr,c
  8661  002FCC  0E80               	movlw	128
  8662  002FCE  2026               	addwfc	??_display_labels+1,w,c
  8663  002FD0  6E12               	movwf	wr16@addr+1,c
  8664  002FD2  0E10               	movlw	16
  8665  002FD4  2027               	addwfc	??_display_labels+2,w,c
  8666  002FD6  6E13               	movwf	wr16@addr+2,c
  8667  002FD8  0E01               	movlw	1
  8668  002FDA  6E15               	movwf	wr16@value+1,c
  8669  002FDC  0E72               	movlw	114
  8670  002FDE  6E14               	movwf	wr16@value,c
  8671  002FE0  EC9E  F02F         	call	_wr16	;wreg free
  8672  002FE4  0E02               	movlw	2
  8673  002FE6  EC8C  F030         	call	_cmd_incrementn
  8674  002FEA  C04A  F025         	movff	_cmd_offset,??_display_labels
  8675  002FEE  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8676  002FF2  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8677  002FF4  0E00               	movlw	0
  8678  002FF6  2425               	addwf	??_display_labels,w,c
  8679  002FF8  6E11               	movwf	wr16@addr,c
  8680  002FFA  0E80               	movlw	128
  8681  002FFC  2026               	addwfc	??_display_labels+1,w,c
  8682  002FFE  6E12               	movwf	wr16@addr+1,c
  8683  003000  0E10               	movlw	16
  8684  003002  2027               	addwfc	??_display_labels+2,w,c
  8685  003004  6E13               	movwf	wr16@addr+2,c
  8686  003006  0E00               	movlw	0
  8687  003008  6E15               	movwf	wr16@value+1,c
  8688  00300A  0EF5               	movlw	245
  8689  00300C  6E14               	movwf	wr16@value,c
  8690  00300E  EC9E  F02F         	call	_wr16	;wreg free
  8691  003012  0E02               	movlw	2
  8692  003014  EC8C  F030         	call	_cmd_incrementn
  8693  003018  C04A  F025         	movff	_cmd_offset,??_display_labels
  8694  00301C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8695  003020  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8696  003022  0E00               	movlw	0
  8697  003024  2425               	addwf	??_display_labels,w,c
  8698  003026  6E11               	movwf	wr16@addr,c
  8699  003028  0E80               	movlw	128
  8700  00302A  2026               	addwfc	??_display_labels+1,w,c
  8701  00302C  6E12               	movwf	wr16@addr+1,c
  8702  00302E  0E10               	movlw	16
  8703  003030  2027               	addwfc	??_display_labels+2,w,c
  8704  003032  6E13               	movwf	wr16@addr+2,c
  8705  003034  0E00               	movlw	0
  8706  003036  6E15               	movwf	wr16@value+1,c
  8707  003038  0E1C               	movlw	28
  8708  00303A  6E14               	movwf	wr16@value,c
  8709  00303C  EC9E  F02F         	call	_wr16	;wreg free
  8710  003040  0E02               	movlw	2
  8711  003042  EC8C  F030         	call	_cmd_incrementn
  8712  003046  C04A  F025         	movff	_cmd_offset,??_display_labels
  8713  00304A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8714  00304E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8715  003050  0E00               	movlw	0
  8716  003052  2425               	addwf	??_display_labels,w,c
  8717  003054  6E11               	movwf	wr16@addr,c
  8718  003056  0E80               	movlw	128
  8719  003058  2026               	addwfc	??_display_labels+1,w,c
  8720  00305A  6E12               	movwf	wr16@addr+1,c
  8721  00305C  0E10               	movlw	16
  8722  00305E  2027               	addwfc	??_display_labels+2,w,c
  8723  003060  6E13               	movwf	wr16@addr+2,c
  8724  003062  0E00               	movlw	0
  8725  003064  6E15               	movwf	wr16@value+1,c
  8726  003066  0E00               	movlw	0
  8727  003068  6E14               	movwf	wr16@value,c
  8728  00306A  EC9E  F02F         	call	_wr16	;wreg free
  8729  00306E  0E02               	movlw	2
  8730  003070  EC8C  F030         	call	_cmd_incrementn
  8731  003074  C04A  F025         	movff	_cmd_offset,??_display_labels
  8732  003078  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8733  00307C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8734  00307E  0E00               	movlw	0
  8735  003080  2425               	addwf	??_display_labels,w,c
  8736  003082  6E16               	movwf	wr8s@addr,c
  8737  003084  0E80               	movlw	128
  8738  003086  2026               	addwfc	??_display_labels+1,w,c
  8739  003088  6E17               	movwf	wr8s@addr+1,c
  8740  00308A  0E10               	movlw	16
  8741  00308C  2027               	addwfc	??_display_labels+2,w,c
  8742  00308E  6E18               	movwf	wr8s@addr+2,c
  8743  003090  0E53               	movlw	low STR_12
  8744  003092  6E19               	movwf	wr8s@s,c
  8745  003094  0E0F               	movlw	high STR_12
  8746  003096  6E1A               	movwf	wr8s@s+1,c
  8747  003098  EC64  F02D         	call	_wr8s	;wreg free
  8748  00309C  EC8C  F030         	call	_cmd_incrementn
  8749                           
  8750                           ;display.c: 45: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 459);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 245);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8751  0030A0  0E0C               	movlw	12
  8752  0030A2  6E1E               	movwf	cmd@command,c
  8753  0030A4  0EFF               	movlw	255
  8754  0030A6  6E1F               	movwf	cmd@command+1,c
  8755  0030A8  0EFF               	movlw	255
  8756  0030AA  6E20               	movwf	cmd@command+2,c
  8757  0030AC  0EFF               	movlw	255
  8758  0030AE  6E21               	movwf	cmd@command+3,c
  8759  0030B0  ECD9  F02F         	call	_cmd	;wreg free
  8760  0030B4  C04A  F025         	movff	_cmd_offset,??_display_labels
  8761  0030B8  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8762  0030BC  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8763  0030BE  0E00               	movlw	0
  8764  0030C0  2425               	addwf	??_display_labels,w,c
  8765  0030C2  6E11               	movwf	wr16@addr,c
  8766  0030C4  0E80               	movlw	128
  8767  0030C6  2026               	addwfc	??_display_labels+1,w,c
  8768  0030C8  6E12               	movwf	wr16@addr+1,c
  8769  0030CA  0E10               	movlw	16
  8770  0030CC  2027               	addwfc	??_display_labels+2,w,c
  8771  0030CE  6E13               	movwf	wr16@addr+2,c
  8772  0030D0  0E01               	movlw	1
  8773  0030D2  6E15               	movwf	wr16@value+1,c
  8774  0030D4  0ECB               	movlw	203
  8775  0030D6  6E14               	movwf	wr16@value,c
  8776  0030D8  EC9E  F02F         	call	_wr16	;wreg free
  8777  0030DC  0E02               	movlw	2
  8778  0030DE  EC8C  F030         	call	_cmd_incrementn
  8779  0030E2  C04A  F025         	movff	_cmd_offset,??_display_labels
  8780  0030E6  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8781  0030EA  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8782  0030EC  0E00               	movlw	0
  8783  0030EE  2425               	addwf	??_display_labels,w,c
  8784  0030F0  6E11               	movwf	wr16@addr,c
  8785  0030F2  0E80               	movlw	128
  8786  0030F4  2026               	addwfc	??_display_labels+1,w,c
  8787  0030F6  6E12               	movwf	wr16@addr+1,c
  8788  0030F8  0E10               	movlw	16
  8789  0030FA  2027               	addwfc	??_display_labels+2,w,c
  8790  0030FC  6E13               	movwf	wr16@addr+2,c
  8791  0030FE  0E00               	movlw	0
  8792  003100  6E15               	movwf	wr16@value+1,c
  8793  003102  0EF5               	movlw	245
  8794  003104  6E14               	movwf	wr16@value,c
  8795  003106  EC9E  F02F         	call	_wr16	;wreg free
  8796  00310A  0E02               	movlw	2
  8797  00310C  EC8C  F030         	call	_cmd_incrementn
  8798  003110  C04A  F025         	movff	_cmd_offset,??_display_labels
  8799  003114  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8800  003118  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8801  00311A  0E00               	movlw	0
  8802  00311C  2425               	addwf	??_display_labels,w,c
  8803  00311E  6E11               	movwf	wr16@addr,c
  8804  003120  0E80               	movlw	128
  8805  003122  2026               	addwfc	??_display_labels+1,w,c
  8806  003124  6E12               	movwf	wr16@addr+1,c
  8807  003126  0E10               	movlw	16
  8808  003128  2027               	addwfc	??_display_labels+2,w,c
  8809  00312A  6E13               	movwf	wr16@addr+2,c
  8810  00312C  0E00               	movlw	0
  8811  00312E  6E15               	movwf	wr16@value+1,c
  8812  003130  0E1C               	movlw	28
  8813  003132  6E14               	movwf	wr16@value,c
  8814  003134  EC9E  F02F         	call	_wr16	;wreg free
  8815  003138  0E02               	movlw	2
  8816  00313A  EC8C  F030         	call	_cmd_incrementn
  8817  00313E  C04A  F025         	movff	_cmd_offset,??_display_labels
  8818  003142  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8819  003146  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8820  003148  0E00               	movlw	0
  8821  00314A  2425               	addwf	??_display_labels,w,c
  8822  00314C  6E11               	movwf	wr16@addr,c
  8823  00314E  0E80               	movlw	128
  8824  003150  2026               	addwfc	??_display_labels+1,w,c
  8825  003152  6E12               	movwf	wr16@addr+1,c
  8826  003154  0E10               	movlw	16
  8827  003156  2027               	addwfc	??_display_labels+2,w,c
  8828  003158  6E13               	movwf	wr16@addr+2,c
  8829  00315A  0E00               	movlw	0
  8830  00315C  6E15               	movwf	wr16@value+1,c
  8831  00315E  0E00               	movlw	0
  8832  003160  6E14               	movwf	wr16@value,c
  8833  003162  EC9E  F02F         	call	_wr16	;wreg free
  8834  003166  0E02               	movlw	2
  8835  003168  EC8C  F030         	call	_cmd_incrementn
  8836  00316C  C04A  F025         	movff	_cmd_offset,??_display_labels
  8837  003170  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8838  003174  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8839  003176  0E00               	movlw	0
  8840  003178  2425               	addwf	??_display_labels,w,c
  8841  00317A  6E16               	movwf	wr8s@addr,c
  8842  00317C  0E80               	movlw	128
  8843  00317E  2026               	addwfc	??_display_labels+1,w,c
  8844  003180  6E17               	movwf	wr8s@addr+1,c
  8845  003182  0E10               	movlw	16
  8846  003184  2027               	addwfc	??_display_labels+2,w,c
  8847  003186  6E18               	movwf	wr8s@addr+2,c
  8848  003188  0E56               	movlw	low STR_10
  8849  00318A  6E19               	movwf	wr8s@s,c
  8850  00318C  0E0F               	movlw	high STR_10
  8851  00318E  6E1A               	movwf	wr8s@s+1,c
  8852  003190  EC64  F02D         	call	_wr8s	;wreg free
  8853  003194  EC8C  F030         	call	_cmd_incrementn
  8854  003198  0012               	return		;funcret
  8855  00319A                     __end_of_display_labels:
  8856                           	opt stack 0
  8857                           tblptru	equ	0xFF8
  8858                           tblptrh	equ	0xFF7
  8859                           tblptrl	equ	0xFF6
  8860                           tablat	equ	0xFF5
  8861                           prodh	equ	0xFF4
  8862                           prodl	equ	0xFF3
  8863                           intcon	equ	0xFF2
  8864                           postinc0	equ	0xFEE
  8865                           wreg	equ	0xFE8
  8866                           postdec1	equ	0xFE5
  8867                           plusw1	equ	0xFE3
  8868                           fsr1l	equ	0xFE1
  8869                           plusw2	equ	0xFDB
  8870                           status	equ	0xFD8
  8871                           
  8872 ;; *************** function _display_gear *****************
  8873 ;; Defined at:
  8874 ;;		line 279 in file "display.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  gear            2   36[COMRAM] int 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8892 ;;Total ram usage:        4 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:    7
  8895 ;; This function calls:
  8896 ;;		_cmd
  8897 ;; This function is called by:
  8898 ;;		_display
  8899 ;;		_main
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text14
  8904  004628                     __ptext14:
  8905                           	opt stack 0
  8906  004628                     _display_gear:
  8907                           	opt stack 23
  8908                           
  8909                           ;display.c: 280: cmd(((14UL<<24)|(((96)&4095UL)<<0)));
  8910                           
  8911                           ;incstack = 0
  8912  004628  0E60               	movlw	96
  8913  00462A  6E1E               	movwf	cmd@command,c
  8914  00462C  0E00               	movlw	0
  8915  00462E  6E1F               	movwf	cmd@command+1,c
  8916  004630  0E00               	movlw	0
  8917  004632  6E20               	movwf	cmd@command+2,c
  8918  004634  0E0E               	movlw	14
  8919  004636  6E21               	movwf	cmd@command+3,c
  8920  004638  ECD9  F02F         	call	_cmd	;wreg free
  8921                           
  8922                           ;display.c: 281: cmd(((4UL<<24)|(((202)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<<0))
      +                          );
  8923  00463C  0E00               	movlw	0
  8924  00463E  6E1E               	movwf	cmd@command,c
  8925  004640  0E7D               	movlw	125
  8926  004642  6E1F               	movwf	cmd@command+1,c
  8927  004644  0ECA               	movlw	202
  8928  004646  6E20               	movwf	cmd@command+2,c
  8929  004648  0E04               	movlw	4
  8930  00464A  6E21               	movwf	cmd@command+3,c
  8931  00464C  ECD9  F02F         	call	_cmd	;wreg free
  8932                           
  8933                           ;display.c: 282: cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
  8934  004650  0E03               	movlw	3
  8935  004652  6E1E               	movwf	cmd@command,c
  8936  004654  0E00               	movlw	0
  8937  004656  6E1F               	movwf	cmd@command+1,c
  8938  004658  0E00               	movlw	0
  8939  00465A  6E20               	movwf	cmd@command+2,c
  8940  00465C  0E1F               	movlw	31
  8941  00465E  6E21               	movwf	cmd@command+3,c
  8942  004660  ECD9  F02F         	call	_cmd	;wreg free
  8943                           
  8944                           ;display.c: 283: switch (gear) {
  8945  004664  D237               	goto	l4314
  8946  004666                     l4298:
  8947                           
  8948                           ;display.c: 285: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8949  004666  0E00               	movlw	0
  8950  004668  6E1E               	movwf	cmd@command,c
  8951  00466A  0EF0               	movlw	240
  8952  00466C  6E1F               	movwf	cmd@command+1,c
  8953  00466E  0E80               	movlw	128
  8954  004670  6E20               	movwf	cmd@command+2,c
  8955  004672  0EAF               	movlw	175
  8956  004674  6E21               	movwf	cmd@command+3,c
  8957  004676  ECD9  F02F         	call	_cmd	;wreg free
  8958                           
  8959                           ;display.c: 286: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  8960  00467A  0E00               	movlw	0
  8961  00467C  6E1E               	movwf	cmd@command,c
  8962  00467E  0E30               	movlw	48
  8963  004680  6E1F               	movwf	cmd@command+1,c
  8964  004682  0E87               	movlw	135
  8965  004684  6E20               	movwf	cmd@command+2,c
  8966  004686  0EAF               	movlw	175
  8967  004688  6E21               	movwf	cmd@command+3,c
  8968  00468A  ECD9  F02F         	call	_cmd	;wreg free
  8969                           
  8970                           ;display.c: 287: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  8971  00468E  0E00               	movlw	0
  8972  004690  6E1E               	movwf	cmd@command,c
  8973  004692  0EF0               	movlw	240
  8974  004694  6E1F               	movwf	cmd@command+1,c
  8975  004696  0E80               	movlw	128
  8976  004698  6E20               	movwf	cmd@command+2,c
  8977  00469A  0EAF               	movlw	175
  8978  00469C  6E21               	movwf	cmd@command+3,c
  8979  00469E  ECD9  F02F         	call	_cmd	;wreg free
  8980                           
  8981                           ;display.c: 288: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  8982  0046A2  0E00               	movlw	0
  8983  0046A4  6E1E               	movwf	cmd@command,c
  8984  0046A6  0E30               	movlw	48
  8985  0046A8  6E1F               	movwf	cmd@command+1,c
  8986  0046AA  0E87               	movlw	135
  8987  0046AC  6E20               	movwf	cmd@command+2,c
  8988  0046AE  0EB9               	movlw	185
  8989  0046B0  6E21               	movwf	cmd@command+3,c
  8990  0046B2  ECD9  F02F         	call	_cmd	;wreg free
  8991                           
  8992                           ;display.c: 289: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  8993  0046B6  0E00               	movlw	0
  8994  0046B8  6E1E               	movwf	cmd@command,c
  8995  0046BA  0E40               	movlw	64
  8996  0046BC  6E1F               	movwf	cmd@command+1,c
  8997  0046BE  0E87               	movlw	135
  8998  0046C0  6E20               	movwf	cmd@command+2,c
  8999  0046C2  0EB9               	movlw	185
  9000  0046C4  6E21               	movwf	cmd@command+3,c
  9001  0046C6  ECD9  F02F         	call	_cmd	;wreg free
  9002                           
  9003                           ;display.c: 290: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9004  0046CA  0E00               	movlw	0
  9005  0046CC  6E1E               	movwf	cmd@command,c
  9006  0046CE  0EF0               	movlw	240
  9007  0046D0  6E1F               	movwf	cmd@command+1,c
  9008  0046D2  0E80               	movlw	128
  9009  0046D4  6E20               	movwf	cmd@command+2,c
  9010  0046D6  0EB9               	movlw	185
  9011  0046D8  6E21               	movwf	cmd@command+3,c
  9012  0046DA  ECD9  F02F         	call	_cmd	;wreg free
  9013                           
  9014                           ;display.c: 291: break;
  9015  0046DE  0012               	return	
  9016  0046E0                     l4300:
  9017                           
  9018                           ;display.c: 293: cmd(((2UL<<30)|(((380+40)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9019  0046E0  0E00               	movlw	0
  9020  0046E2  6E1E               	movwf	cmd@command,c
  9021  0046E4  0EF0               	movlw	240
  9022  0046E6  6E1F               	movwf	cmd@command+1,c
  9023  0046E8  0E80               	movlw	128
  9024  0046EA  6E20               	movwf	cmd@command+2,c
  9025  0046EC  0EB4               	movlw	180
  9026  0046EE  6E21               	movwf	cmd@command+3,c
  9027  0046F0  ECD9  F02F         	call	_cmd	;wreg free
  9028                           
  9029                           ;display.c: 294: cmd(((2UL<<30)|(((380+40)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9030  0046F4  0E00               	movlw	0
  9031  0046F6  6E1E               	movwf	cmd@command,c
  9032  0046F8  0E30               	movlw	48
  9033  0046FA  6E1F               	movwf	cmd@command+1,c
  9034  0046FC  0E87               	movlw	135
  9035  0046FE  6E20               	movwf	cmd@command+2,c
  9036  004700  0EB4               	movlw	180
  9037  004702  6E21               	movwf	cmd@command+3,c
  9038  004704  ECD9  F02F         	call	_cmd	;wreg free
  9039                           
  9040                           ;display.c: 295: cmd(((2UL<<30)|(((380+39)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9041  004708  0E00               	movlw	0
  9042  00470A  6E1E               	movwf	cmd@command,c
  9043  00470C  0EF0               	movlw	240
  9044  00470E  6E1F               	movwf	cmd@command+1,c
  9045  004710  0E60               	movlw	96
  9046  004712  6E20               	movwf	cmd@command+2,c
  9047  004714  0EB4               	movlw	180
  9048  004716  6E21               	movwf	cmd@command+3,c
  9049  004718  ECD9  F02F         	call	_cmd	;wreg free
  9050                           
  9051                           ;display.c: 296: cmd(((2UL<<30)|(((380+20)&511UL)<<21)|(((0+30)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9052  00471C  0E00               	movlw	0
  9053  00471E  6E1E               	movwf	cmd@command,c
  9054  004720  0EE0               	movlw	224
  9055  004722  6E1F               	movwf	cmd@command+1,c
  9056  004724  0E01               	movlw	1
  9057  004726  6E20               	movwf	cmd@command+2,c
  9058  004728  0EB2               	movlw	178
  9059  00472A  6E21               	movwf	cmd@command+3,c
  9060  00472C  ECD9  F02F         	call	_cmd	;wreg free
  9061                           
  9062                           ;display.c: 297: cmd(((2UL<<30)|(((380+25)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9063  004730  0E00               	movlw	0
  9064  004732  6E1E               	movwf	cmd@command,c
  9065  004734  0E40               	movlw	64
  9066  004736  6E1F               	movwf	cmd@command+1,c
  9067  004738  0EA7               	movlw	167
  9068  00473A  6E20               	movwf	cmd@command+2,c
  9069  00473C  0EB2               	movlw	178
  9070  00473E  6E21               	movwf	cmd@command+3,c
  9071  004740  ECD9  F02F         	call	_cmd	;wreg free
  9072                           
  9073                           ;display.c: 298: cmd(((2UL<<30)|(((380+55)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9074  004744  0E00               	movlw	0
  9075  004746  6E1E               	movwf	cmd@command,c
  9076  004748  0E40               	movlw	64
  9077  00474A  6E1F               	movwf	cmd@command+1,c
  9078  00474C  0E67               	movlw	103
  9079  00474E  6E20               	movwf	cmd@command+2,c
  9080  004750  0EB6               	movlw	182
  9081  004752  6E21               	movwf	cmd@command+3,c
  9082  004754  ECD9  F02F         	call	_cmd	;wreg free
  9083                           
  9084                           ;display.c: 299: break;
  9085  004758  0012               	return	
  9086  00475A                     l4302:
  9087                           
  9088                           ;display.c: 301: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9089  00475A  0E00               	movlw	0
  9090  00475C  6E1E               	movwf	cmd@command,c
  9091  00475E  0EF0               	movlw	240
  9092  004760  6E1F               	movwf	cmd@command+1,c
  9093  004762  0E80               	movlw	128
  9094  004764  6E20               	movwf	cmd@command+2,c
  9095  004766  0EAF               	movlw	175
  9096  004768  6E21               	movwf	cmd@command+3,c
  9097  00476A  ECD9  F02F         	call	_cmd	;wreg free
  9098                           
  9099                           ;display.c: 302: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9100  00476E  0E00               	movlw	0
  9101  004770  6E1E               	movwf	cmd@command,c
  9102  004772  0EF0               	movlw	240
  9103  004774  6E1F               	movwf	cmd@command+1,c
  9104  004776  0E80               	movlw	128
  9105  004778  6E20               	movwf	cmd@command+2,c
  9106  00477A  0EB9               	movlw	185
  9107  00477C  6E21               	movwf	cmd@command+3,c
  9108  00477E  ECD9  F02F         	call	_cmd	;wreg free
  9109                           
  9110                           ;display.c: 303: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9111  004782  0E00               	movlw	0
  9112  004784  6E1E               	movwf	cmd@command,c
  9113  004786  0E00               	movlw	0
  9114  004788  6E1F               	movwf	cmd@command+1,c
  9115  00478A  0E81               	movlw	129
  9116  00478C  6E20               	movwf	cmd@command+2,c
  9117  00478E  0EB9               	movlw	185
  9118  004790  6E21               	movwf	cmd@command+3,c
  9119  004792  ECD9  F02F         	call	_cmd	;wreg free
  9120                           
  9121                           ;display.c: 304: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9122  004796  0E00               	movlw	0
  9123  004798  6E1E               	movwf	cmd@command,c
  9124  00479A  0E00               	movlw	0
  9125  00479C  6E1F               	movwf	cmd@command+1,c
  9126  00479E  0E84               	movlw	132
  9127  0047A0  6E20               	movwf	cmd@command+2,c
  9128  0047A2  0EB9               	movlw	185
  9129  0047A4  6E21               	movwf	cmd@command+3,c
  9130  0047A6  ECD9  F02F         	call	_cmd	;wreg free
  9131                           
  9132                           ;display.c: 305: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9133  0047AA  0E00               	movlw	0
  9134  0047AC  6E1E               	movwf	cmd@command,c
  9135  0047AE  0E10               	movlw	16
  9136  0047B0  6E1F               	movwf	cmd@command+1,c
  9137  0047B2  0E84               	movlw	132
  9138  0047B4  6E20               	movwf	cmd@command+2,c
  9139  0047B6  0EB9               	movlw	185
  9140  0047B8  6E21               	movwf	cmd@command+3,c
  9141  0047BA  ECD9  F02F         	call	_cmd	;wreg free
  9142                           
  9143                           ;display.c: 306: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9144  0047BE  0E00               	movlw	0
  9145  0047C0  6E1E               	movwf	cmd@command,c
  9146  0047C2  0E10               	movlw	16
  9147  0047C4  6E1F               	movwf	cmd@command+1,c
  9148  0047C6  0E84               	movlw	132
  9149  0047C8  6E20               	movwf	cmd@command+2,c
  9150  0047CA  0EAF               	movlw	175
  9151  0047CC  6E21               	movwf	cmd@command+3,c
  9152  0047CE  ECD9  F02F         	call	_cmd	;wreg free
  9153                           
  9154                           ;display.c: 307: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+66)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9155  0047D2  0E00               	movlw	0
  9156  0047D4  6E1E               	movwf	cmd@command,c
  9157  0047D6  0E20               	movlw	32
  9158  0047D8  6E1F               	movwf	cmd@command+1,c
  9159  0047DA  0E84               	movlw	132
  9160  0047DC  6E20               	movwf	cmd@command+2,c
  9161  0047DE  0EAF               	movlw	175
  9162  0047E0  6E21               	movwf	cmd@command+3,c
  9163  0047E2  ECD9  F02F         	call	_cmd	;wreg free
  9164                           
  9165                           ;display.c: 308: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  9166  0047E6  0E00               	movlw	0
  9167  0047E8  6E1E               	movwf	cmd@command,c
  9168  0047EA  0E30               	movlw	48
  9169  0047EC  6E1F               	movwf	cmd@command+1,c
  9170  0047EE  0E87               	movlw	135
  9171  0047F0  6E20               	movwf	cmd@command+2,c
  9172  0047F2  0EAF               	movlw	175
  9173  0047F4  6E21               	movwf	cmd@command+3,c
  9174  0047F6  ECD9  F02F         	call	_cmd	;wreg free
  9175                           
  9176                           ;display.c: 309: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9177  0047FA  0E00               	movlw	0
  9178  0047FC  6E1E               	movwf	cmd@command,c
  9179  0047FE  0E30               	movlw	48
  9180  004800  6E1F               	movwf	cmd@command+1,c
  9181  004802  0EA7               	movlw	167
  9182  004804  6E20               	movwf	cmd@command+2,c
  9183  004806  0EAF               	movlw	175
  9184  004808  6E21               	movwf	cmd@command+3,c
  9185  00480A  ECD9  F02F         	call	_cmd	;wreg free
  9186                           
  9187                           ;display.c: 310: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9188  00480E  0E00               	movlw	0
  9189  004810  6E1E               	movwf	cmd@command,c
  9190  004812  0E30               	movlw	48
  9191  004814  6E1F               	movwf	cmd@command+1,c
  9192  004816  0E87               	movlw	135
  9193  004818  6E20               	movwf	cmd@command+2,c
  9194  00481A  0EB9               	movlw	185
  9195  00481C  6E21               	movwf	cmd@command+3,c
  9196  00481E  ECD9  F02F         	call	_cmd	;wreg free
  9197                           
  9198                           ;display.c: 311: break;
  9199  004822  0012               	return	
  9200  004824                     l4304:
  9201                           
  9202                           ;display.c: 313: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9203  004824  0E00               	movlw	0
  9204  004826  6E1E               	movwf	cmd@command,c
  9205  004828  0EF0               	movlw	240
  9206  00482A  6E1F               	movwf	cmd@command+1,c
  9207  00482C  0E80               	movlw	128
  9208  00482E  6E20               	movwf	cmd@command+2,c
  9209  004830  0EAF               	movlw	175
  9210  004832  6E21               	movwf	cmd@command+3,c
  9211  004834  ECD9  F02F         	call	_cmd	;wreg free
  9212                           
  9213                           ;display.c: 314: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9214  004838  0E00               	movlw	0
  9215  00483A  6E1E               	movwf	cmd@command,c
  9216  00483C  0EF0               	movlw	240
  9217  00483E  6E1F               	movwf	cmd@command+1,c
  9218  004840  0E60               	movlw	96
  9219  004842  6E20               	movwf	cmd@command+2,c
  9220  004844  0EB9               	movlw	185
  9221  004846  6E21               	movwf	cmd@command+3,c
  9222  004848  ECD9  F02F         	call	_cmd	;wreg free
  9223                           
  9224                           ;display.c: 315: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9225  00484C  0E00               	movlw	0
  9226  00484E  6E1E               	movwf	cmd@command,c
  9227  004850  0E00               	movlw	0
  9228  004852  6E1F               	movwf	cmd@command+1,c
  9229  004854  0E81               	movlw	129
  9230  004856  6E20               	movwf	cmd@command+2,c
  9231  004858  0EB9               	movlw	185
  9232  00485A  6E21               	movwf	cmd@command+3,c
  9233  00485C  ECD9  F02F         	call	_cmd	;wreg free
  9234                           
  9235                           ;display.c: 316: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9236  004860  0E00               	movlw	0
  9237  004862  6E1E               	movwf	cmd@command,c
  9238  004864  0E30               	movlw	48
  9239  004866  6E1F               	movwf	cmd@command+1,c
  9240  004868  0E87               	movlw	135
  9241  00486A  6E20               	movwf	cmd@command+2,c
  9242  00486C  0EB9               	movlw	185
  9243  00486E  6E21               	movwf	cmd@command+3,c
  9244  004870  ECD9  F02F         	call	_cmd	;wreg free
  9245                           
  9246                           ;display.c: 317: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9247  004874  0E00               	movlw	0
  9248  004876  6E1E               	movwf	cmd@command,c
  9249  004878  0E10               	movlw	16
  9250  00487A  6E1F               	movwf	cmd@command+1,c
  9251  00487C  0E64               	movlw	100
  9252  00487E  6E20               	movwf	cmd@command+2,c
  9253  004880  0EB9               	movlw	185
  9254  004882  6E21               	movwf	cmd@command+3,c
  9255  004884  ECD9  F02F         	call	_cmd	;wreg free
  9256                           
  9257                           ;display.c: 318: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9258  004888  0E00               	movlw	0
  9259  00488A  6E1E               	movwf	cmd@command,c
  9260  00488C  0E10               	movlw	16
  9261  00488E  6E1F               	movwf	cmd@command+1,c
  9262  004890  0E84               	movlw	132
  9263  004892  6E20               	movwf	cmd@command+2,c
  9264  004894  0EAF               	movlw	175
  9265  004896  6E21               	movwf	cmd@command+3,c
  9266  004898  ECD9  F02F         	call	_cmd	;wreg free
  9267                           
  9268                           ;display.c: 319: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9269  00489C  0E00               	movlw	0
  9270  00489E  6E1E               	movwf	cmd@command,c
  9271  0048A0  0E30               	movlw	48
  9272  0048A2  6E1F               	movwf	cmd@command+1,c
  9273  0048A4  0EA7               	movlw	167
  9274  0048A6  6E20               	movwf	cmd@command+2,c
  9275  0048A8  0EAF               	movlw	175
  9276  0048AA  6E21               	movwf	cmd@command+3,c
  9277  0048AC  ECD9  F02F         	call	_cmd	;wreg free
  9278                           
  9279                           ;display.c: 320: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9280  0048B0  0E00               	movlw	0
  9281  0048B2  6E1E               	movwf	cmd@command,c
  9282  0048B4  0E30               	movlw	48
  9283  0048B6  6E1F               	movwf	cmd@command+1,c
  9284  0048B8  0E67               	movlw	103
  9285  0048BA  6E20               	movwf	cmd@command+2,c
  9286  0048BC  0EB9               	movlw	185
  9287  0048BE  6E21               	movwf	cmd@command+3,c
  9288  0048C0  ECD9  F02F         	call	_cmd	;wreg free
  9289                           
  9290                           ;display.c: 321: break;
  9291  0048C4  0012               	return	
  9292  0048C6                     l4306:
  9293                           
  9294                           ;display.c: 323: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9295  0048C6  0E00               	movlw	0
  9296  0048C8  6E1E               	movwf	cmd@command,c
  9297  0048CA  0EF0               	movlw	240
  9298  0048CC  6E1F               	movwf	cmd@command+1,c
  9299  0048CE  0E80               	movlw	128
  9300  0048D0  6E20               	movwf	cmd@command+2,c
  9301  0048D2  0EAF               	movlw	175
  9302  0048D4  6E21               	movwf	cmd@command+3,c
  9303  0048D6  ECD9  F02F         	call	_cmd	;wreg free
  9304                           
  9305                           ;display.c: 324: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9306  0048DA  0E00               	movlw	0
  9307  0048DC  6E1E               	movwf	cmd@command,c
  9308  0048DE  0E00               	movlw	0
  9309  0048E0  6E1F               	movwf	cmd@command+1,c
  9310  0048E2  0E84               	movlw	132
  9311  0048E4  6E20               	movwf	cmd@command+2,c
  9312  0048E6  0EAF               	movlw	175
  9313  0048E8  6E21               	movwf	cmd@command+3,c
  9314  0048EA  ECD9  F02F         	call	_cmd	;wreg free
  9315                           
  9316                           ;display.c: 325: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9317  0048EE  0E00               	movlw	0
  9318  0048F0  6E1E               	movwf	cmd@command,c
  9319  0048F2  0E00               	movlw	0
  9320  0048F4  6E1F               	movwf	cmd@command+1,c
  9321  0048F6  0E81               	movlw	129
  9322  0048F8  6E20               	movwf	cmd@command+2,c
  9323  0048FA  0EB9               	movlw	185
  9324  0048FC  6E21               	movwf	cmd@command+3,c
  9325  0048FE  ECD9  F02F         	call	_cmd	;wreg free
  9326                           
  9327                           ;display.c: 326: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9328  004902  0E00               	movlw	0
  9329  004904  6E1E               	movwf	cmd@command,c
  9330  004906  0E30               	movlw	48
  9331  004908  6E1F               	movwf	cmd@command+1,c
  9332  00490A  0E87               	movlw	135
  9333  00490C  6E20               	movwf	cmd@command+2,c
  9334  00490E  0EB9               	movlw	185
  9335  004910  6E21               	movwf	cmd@command+3,c
  9336  004912  ECD9  F02F         	call	_cmd	;wreg free
  9337                           
  9338                           ;display.c: 327: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9339  004916  0E00               	movlw	0
  9340  004918  6E1E               	movwf	cmd@command,c
  9341  00491A  0E10               	movlw	16
  9342  00491C  6E1F               	movwf	cmd@command+1,c
  9343  00491E  0E24               	movlw	36
  9344  004920  6E20               	movwf	cmd@command+2,c
  9345  004922  0EB9               	movlw	185
  9346  004924  6E21               	movwf	cmd@command+3,c
  9347  004926  ECD9  F02F         	call	_cmd	;wreg free
  9348                           
  9349                           ;display.c: 328: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  9350  00492A  0E00               	movlw	0
  9351  00492C  6E1E               	movwf	cmd@command,c
  9352  00492E  0E10               	movlw	16
  9353  004930  6E1F               	movwf	cmd@command+1,c
  9354  004932  0EA4               	movlw	164
  9355  004934  6E20               	movwf	cmd@command+2,c
  9356  004936  0EAF               	movlw	175
  9357  004938  6E21               	movwf	cmd@command+3,c
  9358  00493A  ECD9  F02F         	call	_cmd	;wreg free
  9359                           
  9360                           ;display.c: 329: break;
  9361  00493E  0012               	return	
  9362  004940                     l4308:
  9363                           
  9364                           ;display.c: 331: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9365  004940  0E00               	movlw	0
  9366  004942  6E1E               	movwf	cmd@command,c
  9367  004944  0EF0               	movlw	240
  9368  004946  6E1F               	movwf	cmd@command+1,c
  9369  004948  0E80               	movlw	128
  9370  00494A  6E20               	movwf	cmd@command+2,c
  9371  00494C  0EAF               	movlw	175
  9372  00494E  6E21               	movwf	cmd@command+3,c
  9373  004950  ECD9  F02F         	call	_cmd	;wreg free
  9374                           
  9375                           ;display.c: 332: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9376  004954  0E00               	movlw	0
  9377  004956  6E1E               	movwf	cmd@command,c
  9378  004958  0EF0               	movlw	240
  9379  00495A  6E1F               	movwf	cmd@command+1,c
  9380  00495C  0E60               	movlw	96
  9381  00495E  6E20               	movwf	cmd@command+2,c
  9382  004960  0EB9               	movlw	185
  9383  004962  6E21               	movwf	cmd@command+3,c
  9384  004964  ECD9  F02F         	call	_cmd	;wreg free
  9385                           
  9386                           ;display.c: 333: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9387  004968  0E00               	movlw	0
  9388  00496A  6E1E               	movwf	cmd@command,c
  9389  00496C  0E00               	movlw	0
  9390  00496E  6E1F               	movwf	cmd@command+1,c
  9391  004970  0E81               	movlw	129
  9392  004972  6E20               	movwf	cmd@command+2,c
  9393  004974  0EAF               	movlw	175
  9394  004976  6E21               	movwf	cmd@command+3,c
  9395  004978  ECD9  F02F         	call	_cmd	;wreg free
  9396                           
  9397                           ;display.c: 334: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9398  00497C  0E00               	movlw	0
  9399  00497E  6E1E               	movwf	cmd@command,c
  9400  004980  0E00               	movlw	0
  9401  004982  6E1F               	movwf	cmd@command+1,c
  9402  004984  0E84               	movlw	132
  9403  004986  6E20               	movwf	cmd@command+2,c
  9404  004988  0EAF               	movlw	175
  9405  00498A  6E21               	movwf	cmd@command+3,c
  9406  00498C  ECD9  F02F         	call	_cmd	;wreg free
  9407                           
  9408                           ;display.c: 335: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9409  004990  0E00               	movlw	0
  9410  004992  6E1E               	movwf	cmd@command,c
  9411  004994  0E10               	movlw	16
  9412  004996  6E1F               	movwf	cmd@command+1,c
  9413  004998  0E84               	movlw	132
  9414  00499A  6E20               	movwf	cmd@command+2,c
  9415  00499C  0EB9               	movlw	185
  9416  00499E  6E21               	movwf	cmd@command+3,c
  9417  0049A0  ECD9  F02F         	call	_cmd	;wreg free
  9418                           
  9419                           ;display.c: 336: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+114)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9420  0049A4  0E00               	movlw	0
  9421  0049A6  6E1E               	movwf	cmd@command,c
  9422  0049A8  0E20               	movlw	32
  9423  0049AA  6E1F               	movwf	cmd@command+1,c
  9424  0049AC  0E87               	movlw	135
  9425  0049AE  6E20               	movwf	cmd@command+2,c
  9426  0049B0  0EB9               	movlw	185
  9427  0049B2  6E21               	movwf	cmd@command+3,c
  9428  0049B4  ECD9  F02F         	call	_cmd	;wreg free
  9429                           
  9430                           ;display.c: 337: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9431  0049B8  0E00               	movlw	0
  9432  0049BA  6E1E               	movwf	cmd@command,c
  9433  0049BC  0E10               	movlw	16
  9434  0049BE  6E1F               	movwf	cmd@command+1,c
  9435  0049C0  0E24               	movlw	36
  9436  0049C2  6E20               	movwf	cmd@command+2,c
  9437  0049C4  0EB9               	movlw	185
  9438  0049C6  6E21               	movwf	cmd@command+3,c
  9439  0049C8  ECD9  F02F         	call	_cmd	;wreg free
  9440                           
  9441                           ;display.c: 338: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  9442  0049CC  0E00               	movlw	0
  9443  0049CE  6E1E               	movwf	cmd@command,c
  9444  0049D0  0E10               	movlw	16
  9445  0049D2  6E1F               	movwf	cmd@command+1,c
  9446  0049D4  0EA4               	movlw	164
  9447  0049D6  6E20               	movwf	cmd@command+2,c
  9448  0049D8  0EAF               	movlw	175
  9449  0049DA  6E21               	movwf	cmd@command+3,c
  9450  0049DC  ECD9  F02F         	call	_cmd	;wreg free
  9451                           
  9452                           ;display.c: 339: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9453  0049E0  0E00               	movlw	0
  9454  0049E2  6E1E               	movwf	cmd@command,c
  9455  0049E4  0E30               	movlw	48
  9456  0049E6  6E1F               	movwf	cmd@command+1,c
  9457  0049E8  0EA7               	movlw	167
  9458  0049EA  6E20               	movwf	cmd@command+2,c
  9459  0049EC  0EAF               	movlw	175
  9460  0049EE  6E21               	movwf	cmd@command+3,c
  9461  0049F0  ECD9  F02F         	call	_cmd	;wreg free
  9462                           
  9463                           ;display.c: 340: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9464  0049F4  0E00               	movlw	0
  9465  0049F6  6E1E               	movwf	cmd@command,c
  9466  0049F8  0E30               	movlw	48
  9467  0049FA  6E1F               	movwf	cmd@command+1,c
  9468  0049FC  0E67               	movlw	103
  9469  0049FE  6E20               	movwf	cmd@command+2,c
  9470  004A00  0EB9               	movlw	185
  9471  004A02  6E21               	movwf	cmd@command+3,c
  9472  004A04  ECD9  F02F         	call	_cmd	;wreg free
  9473                           
  9474                           ;display.c: 341: break;
  9475  004A08  0012               	return	
  9476  004A0A                     l4310:
  9477                           
  9478                           ;display.c: 343: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9479  004A0A  0E00               	movlw	0
  9480  004A0C  6E1E               	movwf	cmd@command,c
  9481  004A0E  0EF0               	movlw	240
  9482  004A10  6E1F               	movwf	cmd@command+1,c
  9483  004A12  0E80               	movlw	128
  9484  004A14  6E20               	movwf	cmd@command+2,c
  9485  004A16  0EAF               	movlw	175
  9486  004A18  6E21               	movwf	cmd@command+3,c
  9487  004A1A  ECD9  F02F         	call	_cmd	;wreg free
  9488                           
  9489                           ;display.c: 344: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9490  004A1E  0E00               	movlw	0
  9491  004A20  6E1E               	movwf	cmd@command,c
  9492  004A22  0EF0               	movlw	240
  9493  004A24  6E1F               	movwf	cmd@command+1,c
  9494  004A26  0E60               	movlw	96
  9495  004A28  6E20               	movwf	cmd@command+2,c
  9496  004A2A  0EB9               	movlw	185
  9497  004A2C  6E21               	movwf	cmd@command+3,c
  9498  004A2E  ECD9  F02F         	call	_cmd	;wreg free
  9499                           
  9500                           ;display.c: 345: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9501  004A32  0E00               	movlw	0
  9502  004A34  6E1E               	movwf	cmd@command,c
  9503  004A36  0E00               	movlw	0
  9504  004A38  6E1F               	movwf	cmd@command+1,c
  9505  004A3A  0E81               	movlw	129
  9506  004A3C  6E20               	movwf	cmd@command+2,c
  9507  004A3E  0EAF               	movlw	175
  9508  004A40  6E21               	movwf	cmd@command+3,c
  9509  004A42  ECD9  F02F         	call	_cmd	;wreg free
  9510                           
  9511                           ;display.c: 346: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  9512  004A46  0E00               	movlw	0
  9513  004A48  6E1E               	movwf	cmd@command,c
  9514  004A4A  0E30               	movlw	48
  9515  004A4C  6E1F               	movwf	cmd@command+1,c
  9516  004A4E  0E87               	movlw	135
  9517  004A50  6E20               	movwf	cmd@command+2,c
  9518  004A52  0EAF               	movlw	175
  9519  004A54  6E21               	movwf	cmd@command+3,c
  9520  004A56  ECD9  F02F         	call	_cmd	;wreg free
  9521                           
  9522                           ;display.c: 347: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9523  004A5A  0E00               	movlw	0
  9524  004A5C  6E1E               	movwf	cmd@command,c
  9525  004A5E  0E10               	movlw	16
  9526  004A60  6E1F               	movwf	cmd@command+1,c
  9527  004A62  0E84               	movlw	132
  9528  004A64  6E20               	movwf	cmd@command+2,c
  9529  004A66  0EB9               	movlw	185
  9530  004A68  6E21               	movwf	cmd@command+3,c
  9531  004A6A  ECD9  F02F         	call	_cmd	;wreg free
  9532                           
  9533                           ;display.c: 348: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+114)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9534  004A6E  0E00               	movlw	0
  9535  004A70  6E1E               	movwf	cmd@command,c
  9536  004A72  0E20               	movlw	32
  9537  004A74  6E1F               	movwf	cmd@command+1,c
  9538  004A76  0E87               	movlw	135
  9539  004A78  6E20               	movwf	cmd@command+2,c
  9540  004A7A  0EB9               	movlw	185
  9541  004A7C  6E21               	movwf	cmd@command+3,c
  9542  004A7E  ECD9  F02F         	call	_cmd	;wreg free
  9543                           
  9544                           ;display.c: 349: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9545  004A82  0E00               	movlw	0
  9546  004A84  6E1E               	movwf	cmd@command,c
  9547  004A86  0E10               	movlw	16
  9548  004A88  6E1F               	movwf	cmd@command+1,c
  9549  004A8A  0E24               	movlw	36
  9550  004A8C  6E20               	movwf	cmd@command+2,c
  9551  004A8E  0EB9               	movlw	185
  9552  004A90  6E21               	movwf	cmd@command+3,c
  9553  004A92  ECD9  F02F         	call	_cmd	;wreg free
  9554                           
  9555                           ;display.c: 350: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  9556  004A96  0E00               	movlw	0
  9557  004A98  6E1E               	movwf	cmd@command,c
  9558  004A9A  0E10               	movlw	16
  9559  004A9C  6E1F               	movwf	cmd@command+1,c
  9560  004A9E  0EA4               	movlw	164
  9561  004AA0  6E20               	movwf	cmd@command+2,c
  9562  004AA2  0EAF               	movlw	175
  9563  004AA4  6E21               	movwf	cmd@command+3,c
  9564  004AA6  ECD9  F02F         	call	_cmd	;wreg free
  9565                           
  9566                           ;display.c: 351: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9567  004AAA  0E00               	movlw	0
  9568  004AAC  6E1E               	movwf	cmd@command,c
  9569  004AAE  0E30               	movlw	48
  9570  004AB0  6E1F               	movwf	cmd@command+1,c
  9571  004AB2  0EA7               	movlw	167
  9572  004AB4  6E20               	movwf	cmd@command+2,c
  9573  004AB6  0EAF               	movlw	175
  9574  004AB8  6E21               	movwf	cmd@command+3,c
  9575  004ABA  ECD9  F02F         	call	_cmd	;wreg free
  9576                           
  9577                           ;display.c: 352: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9578  004ABE  0E00               	movlw	0
  9579  004AC0  6E1E               	movwf	cmd@command,c
  9580  004AC2  0E30               	movlw	48
  9581  004AC4  6E1F               	movwf	cmd@command+1,c
  9582  004AC6  0E67               	movlw	103
  9583  004AC8  6E20               	movwf	cmd@command+2,c
  9584  004ACA  0EB9               	movlw	185
  9585  004ACC  6E21               	movwf	cmd@command+3,c
  9586  004ACE  ECD9  F02F         	call	_cmd	;wreg free
  9587                           
  9588                           ;display.c: 357: }
  9589                           
  9590                           ;display.c: 356: break;
  9591                           
  9592                           ;display.c: 354: default:
  9593                           
  9594                           ;display.c: 353: break;
  9595  004AD2  0012               	return	
  9596  004AD4                     l4314:
  9597  004AD4  C025  F027         	movff	display_gear@gear,??_display_gear
  9598  004AD8  C026  F028         	movff	display_gear@gear+1,??_display_gear+1
  9599                           
  9600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9601                           ; Switch size 1, requested type "space"
  9602                           ; Number of cases is 1, Range of values is 0 to 0
  9603                           ; switch strategies available:
  9604                           ; Name         Instructions Cycles
  9605                           ; simple_byte            4     3 (average)
  9606                           ;	Chosen strategy is simple_byte
  9607  004ADC  5028               	movf	??_display_gear+1,w,c
  9608  004ADE  0A00               	xorlw	0	; case 0
  9609  004AE0  A4D8               	btfss	status,2,c
  9610  004AE2  0012               	return	
  9611                           
  9612                           ; Switch size 1, requested type "space"
  9613                           ; Number of cases is 7, Range of values is 0 to 6
  9614                           ; switch strategies available:
  9615                           ; Name         Instructions Cycles
  9616                           ; simple_byte           22    12 (average)
  9617                           ;	Chosen strategy is simple_byte
  9618  004AE4  5027               	movf	??_display_gear,w,c
  9619  004AE6  0A00               	xorlw	0	; case 0
  9620  004AE8  B4D8               	btfsc	status,2,c
  9621  004AEA  D5BD               	goto	l4298
  9622  004AEC  0A01               	xorlw	1	; case 1
  9623  004AEE  B4D8               	btfsc	status,2,c
  9624  004AF0  D5F7               	goto	l4300
  9625  004AF2  0A03               	xorlw	3	; case 2
  9626  004AF4  B4D8               	btfsc	status,2,c
  9627  004AF6  D631               	goto	l4302
  9628  004AF8  0A01               	xorlw	1	; case 3
  9629  004AFA  B4D8               	btfsc	status,2,c
  9630  004AFC  D693               	goto	l4304
  9631  004AFE  0A07               	xorlw	7	; case 4
  9632  004B00  B4D8               	btfsc	status,2,c
  9633  004B02  D6E1               	goto	l4306
  9634  004B04  0A01               	xorlw	1	; case 5
  9635  004B06  B4D8               	btfsc	status,2,c
  9636  004B08  D71B               	goto	l4308
  9637  004B0A  0A03               	xorlw	3	; case 6
  9638  004B0C  A4D8               	btfss	status,2,c
  9639  004B0E  0012               	return	
  9640  004B10  D77C               	goto	l4310
  9641  004B12                     __end_of_display_gear:
  9642                           	opt stack 0
  9643                           tblptru	equ	0xFF8
  9644                           tblptrh	equ	0xFF7
  9645                           tblptrl	equ	0xFF6
  9646                           tablat	equ	0xFF5
  9647                           prodh	equ	0xFF4
  9648                           prodl	equ	0xFF3
  9649                           intcon	equ	0xFF2
  9650                           postinc0	equ	0xFEE
  9651                           wreg	equ	0xFE8
  9652                           postdec1	equ	0xFE5
  9653                           plusw1	equ	0xFE3
  9654                           fsr1l	equ	0xFE1
  9655                           plusw2	equ	0xFDB
  9656                           status	equ	0xFD8
  9657                           
  9658 ;; *************** function _display_end *****************
  9659 ;; Defined at:
  9660 ;;		line 23 in file "display.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;		None
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;		None
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      void 
  9667 ;; Registers used:
  9668 ;;		wreg, status,2, status,0, cstack
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9678 ;;Total ram usage:        0 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:    7
  9681 ;; This function calls:
  9682 ;;		_cmd
  9683 ;;		_wr16
  9684 ;; This function is called by:
  9685 ;;		_display
  9686 ;;		_main
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text15
  9691  005E40                     __ptext15:
  9692                           	opt stack 0
  9693  005E40                     _display_end:
  9694                           	opt stack 23
  9695                           
  9696                           ;display.c: 24: cmd(((0UL<<24)));
  9697                           
  9698                           ;incstack = 0
  9699  005E40  0E00               	movlw	0
  9700  005E42  6E1E               	movwf	cmd@command,c
  9701  005E44  0E00               	movlw	0
  9702  005E46  6E1F               	movwf	cmd@command+1,c
  9703  005E48  0E00               	movlw	0
  9704  005E4A  6E20               	movwf	cmd@command+2,c
  9705  005E4C  0E00               	movlw	0
  9706  005E4E  6E21               	movwf	cmd@command+3,c
  9707  005E50  ECD9  F02F         	call	_cmd	;wreg free
  9708                           
  9709                           ;display.c: 25: cmd(4294967041UL);
  9710  005E54  0E01               	movlw	1
  9711  005E56  6E1E               	movwf	cmd@command,c
  9712  005E58  0EFF               	movlw	255
  9713  005E5A  6E1F               	movwf	cmd@command+1,c
  9714  005E5C  0EFF               	movlw	255
  9715  005E5E  6E20               	movwf	cmd@command+2,c
  9716  005E60  0EFF               	movlw	255
  9717  005E62  6E21               	movwf	cmd@command+3,c
  9718  005E64  ECD9  F02F         	call	_cmd	;wreg free
  9719                           
  9720                           ;display.c: 26: wr16(1058024UL, cmd_offset);
  9721  005E68  0EE8               	movlw	232
  9722  005E6A  6E11               	movwf	wr16@addr,c
  9723  005E6C  0E24               	movlw	36
  9724  005E6E  6E12               	movwf	wr16@addr+1,c
  9725  005E70  0E10               	movlw	16
  9726  005E72  6E13               	movwf	wr16@addr+2,c
  9727  005E74  C04A  F014         	movff	_cmd_offset,wr16@value
  9728  005E78  C04B  F015         	movff	_cmd_offset+1,wr16@value+1
  9729  005E7C  EC9E  F02F         	call	_wr16	;wreg free
  9730  005E80  0012               	return		;funcret
  9731  005E82                     __end_of_display_end:
  9732                           	opt stack 0
  9733                           tblptru	equ	0xFF8
  9734                           tblptrh	equ	0xFF7
  9735                           tblptrl	equ	0xFF6
  9736                           tablat	equ	0xFF5
  9737                           prodh	equ	0xFF4
  9738                           prodl	equ	0xFF3
  9739                           intcon	equ	0xFF2
  9740                           postinc0	equ	0xFEE
  9741                           wreg	equ	0xFE8
  9742                           postdec1	equ	0xFE5
  9743                           plusw1	equ	0xFE3
  9744                           fsr1l	equ	0xFE1
  9745                           plusw2	equ	0xFDB
  9746                           status	equ	0xFD8
  9747                           
  9748 ;; *************** function _display_bottom_section *****************
  9749 ;; Defined at:
  9750 ;;		line 360 in file "display.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;		None
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      void 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9768 ;;Total ram usage:        0 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:    7
  9771 ;; This function calls:
  9772 ;;		_cmd
  9773 ;; This function is called by:
  9774 ;;		_display
  9775 ;;		_main
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text16
  9780  005404                     __ptext16:
  9781                           	opt stack 0
  9782  005404                     _display_bottom_section:
  9783                           	opt stack 23
  9784                           
  9785                           ;display.c: 361: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  9786                           
  9787                           ;incstack = 0
  9788  005404  0E00               	movlw	0
  9789  005406  6E1E               	movwf	cmd@command,c
  9790  005408  0E00               	movlw	0
  9791  00540A  6E1F               	movwf	cmd@command+1,c
  9792  00540C  0EFF               	movlw	255
  9793  00540E  6E20               	movwf	cmd@command+2,c
  9794  005410  0E04               	movlw	4
  9795  005412  6E21               	movwf	cmd@command+3,c
  9796  005414  ECD9  F02F         	call	_cmd	;wreg free
  9797                           
  9798                           ;display.c: 362: cmd(((31UL<<24)|(((8UL)&15UL)<<0)));
  9799  005418  0E08               	movlw	8
  9800  00541A  6E1E               	movwf	cmd@command,c
  9801  00541C  0E00               	movlw	0
  9802  00541E  6E1F               	movwf	cmd@command+1,c
  9803  005420  0E00               	movlw	0
  9804  005422  6E20               	movwf	cmd@command+2,c
  9805  005424  0E1F               	movlw	31
  9806  005426  6E21               	movwf	cmd@command+3,c
  9807  005428  ECD9  F02F         	call	_cmd	;wreg free
  9808                           
  9809                           ;display.c: 363: cmd(((2UL<<30)|(((0)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|((
      +                          (0)&127UL)<<0)));
  9810  00542C  0E00               	movlw	0
  9811  00542E  6E1E               	movwf	cmd@command,c
  9812  005430  0E80               	movlw	128
  9813  005432  6E1F               	movwf	cmd@command+1,c
  9814  005434  0E0C               	movlw	12
  9815  005436  6E20               	movwf	cmd@command+2,c
  9816  005438  0E80               	movlw	128
  9817  00543A  6E21               	movwf	cmd@command+3,c
  9818  00543C  ECD9  F02F         	call	_cmd	;wreg free
  9819                           
  9820                           ;display.c: 364: cmd(((2UL<<30)|(((187)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9821  005440  0E00               	movlw	0
  9822  005442  6E1E               	movwf	cmd@command,c
  9823  005444  0E80               	movlw	128
  9824  005446  6E1F               	movwf	cmd@command+1,c
  9825  005448  0E6C               	movlw	108
  9826  00544A  6E20               	movwf	cmd@command+2,c
  9827  00544C  0E97               	movlw	151
  9828  00544E  6E21               	movwf	cmd@command+3,c
  9829  005450  ECD9  F02F         	call	_cmd	;wreg free
  9830                           
  9831                           ;display.c: 365: cmd(((2UL<<30)|(((216)&511UL)<<21)|(((173)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9832  005454  0E00               	movlw	0
  9833  005456  6E1E               	movwf	cmd@command,c
  9834  005458  0ED0               	movlw	208
  9835  00545A  6E1F               	movwf	cmd@command+1,c
  9836  00545C  0E0A               	movlw	10
  9837  00545E  6E20               	movwf	cmd@command+2,c
  9838  005460  0E9B               	movlw	155
  9839  005462  6E21               	movwf	cmd@command+3,c
  9840  005464  ECD9  F02F         	call	_cmd	;wreg free
  9841                           
  9842                           ;display.c: 366: cmd(((2UL<<30)|(((263)&511UL)<<21)|(((173)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9843  005468  0E00               	movlw	0
  9844  00546A  6E1E               	movwf	cmd@command,c
  9845  00546C  0ED0               	movlw	208
  9846  00546E  6E1F               	movwf	cmd@command+1,c
  9847  005470  0EEA               	movlw	234
  9848  005472  6E20               	movwf	cmd@command+2,c
  9849  005474  0EA0               	movlw	160
  9850  005476  6E21               	movwf	cmd@command+3,c
  9851  005478  ECD9  F02F         	call	_cmd	;wreg free
  9852                           
  9853                           ;display.c: 367: cmd(((2UL<<30)|(((292)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9854  00547C  0E00               	movlw	0
  9855  00547E  6E1E               	movwf	cmd@command,c
  9856  005480  0E80               	movlw	128
  9857  005482  6E1F               	movwf	cmd@command+1,c
  9858  005484  0E8C               	movlw	140
  9859  005486  6E20               	movwf	cmd@command+2,c
  9860  005488  0EA4               	movlw	164
  9861  00548A  6E21               	movwf	cmd@command+3,c
  9862  00548C  ECD9  F02F         	call	_cmd	;wreg free
  9863                           
  9864                           ;display.c: 368: cmd(((2UL<<30)|(((480)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9865  005490  0E00               	movlw	0
  9866  005492  6E1E               	movwf	cmd@command,c
  9867  005494  0E80               	movlw	128
  9868  005496  6E1F               	movwf	cmd@command+1,c
  9869  005498  0E0C               	movlw	12
  9870  00549A  6E20               	movwf	cmd@command+2,c
  9871  00549C  0EBC               	movlw	188
  9872  00549E  6E21               	movwf	cmd@command+3,c
  9873  0054A0  ECD9  F02F         	call	_cmd	;wreg free
  9874                           
  9875                           ;display.c: 370: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  9876  0054A4  0E00               	movlw	0
  9877  0054A6  6E1E               	movwf	cmd@command,c
  9878  0054A8  0E00               	movlw	0
  9879  0054AA  6E1F               	movwf	cmd@command+1,c
  9880  0054AC  0E00               	movlw	0
  9881  0054AE  6E20               	movwf	cmd@command+2,c
  9882  0054B0  0E04               	movlw	4
  9883  0054B2  6E21               	movwf	cmd@command+3,c
  9884  0054B4  ECD9  F02F         	call	_cmd	;wreg free
  9885                           
  9886                           ;display.c: 371: cmd(((31UL<<24)|(((8UL)&15UL)<<0)));
  9887  0054B8  0E08               	movlw	8
  9888  0054BA  6E1E               	movwf	cmd@command,c
  9889  0054BC  0E00               	movlw	0
  9890  0054BE  6E1F               	movwf	cmd@command+1,c
  9891  0054C0  0E00               	movlw	0
  9892  0054C2  6E20               	movwf	cmd@command+2,c
  9893  0054C4  0E1F               	movlw	31
  9894  0054C6  6E21               	movwf	cmd@command+3,c
  9895  0054C8  ECD9  F02F         	call	_cmd	;wreg free
  9896                           
  9897                           ;display.c: 372: cmd(((2UL<<30)|(((0)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<<7)|((
      +                          (0)&127UL)<<0)));
  9898  0054CC  0E00               	movlw	0
  9899  0054CE  6E1E               	movwf	cmd@command,c
  9900  0054D0  0ED0               	movlw	208
  9901  0054D2  6E1F               	movwf	cmd@command+1,c
  9902  0054D4  0E0C               	movlw	12
  9903  0054D6  6E20               	movwf	cmd@command+2,c
  9904  0054D8  0E80               	movlw	128
  9905  0054DA  6E21               	movwf	cmd@command+3,c
  9906  0054DC  ECD9  F02F         	call	_cmd	;wreg free
  9907                           
  9908                           ;display.c: 373: cmd(((2UL<<30)|(((189)&511UL)<<21)|(((204)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9909  0054E0  0E00               	movlw	0
  9910  0054E2  6E1E               	movwf	cmd@command,c
  9911  0054E4  0EC0               	movlw	192
  9912  0054E6  6E1F               	movwf	cmd@command+1,c
  9913  0054E8  0EAC               	movlw	172
  9914  0054EA  6E20               	movwf	cmd@command+2,c
  9915  0054EC  0E97               	movlw	151
  9916  0054EE  6E21               	movwf	cmd@command+3,c
  9917  0054F0  ECD9  F02F         	call	_cmd	;wreg free
  9918                           
  9919                           ;display.c: 374: cmd(((2UL<<30)|(((217)&511UL)<<21)|(((177)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9920  0054F4  0E00               	movlw	0
  9921  0054F6  6E1E               	movwf	cmd@command,c
  9922  0054F8  0E10               	movlw	16
  9923  0054FA  6E1F               	movwf	cmd@command+1,c
  9924  0054FC  0E2B               	movlw	43
  9925  0054FE  6E20               	movwf	cmd@command+2,c
  9926  005500  0E9B               	movlw	155
  9927  005502  6E21               	movwf	cmd@command+3,c
  9928  005504  ECD9  F02F         	call	_cmd	;wreg free
  9929                           
  9930                           ;display.c: 375: cmd(((2UL<<30)|(((261)&511UL)<<21)|(((177)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9931  005508  0E00               	movlw	0
  9932  00550A  6E1E               	movwf	cmd@command,c
  9933  00550C  0E10               	movlw	16
  9934  00550E  6E1F               	movwf	cmd@command+1,c
  9935  005510  0EAB               	movlw	171
  9936  005512  6E20               	movwf	cmd@command+2,c
  9937  005514  0EA0               	movlw	160
  9938  005516  6E21               	movwf	cmd@command+3,c
  9939  005518  ECD9  F02F         	call	_cmd	;wreg free
  9940                           
  9941                           ;display.c: 376: cmd(((2UL<<30)|(((289)&511UL)<<21)|(((204)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9942  00551C  0E00               	movlw	0
  9943  00551E  6E1E               	movwf	cmd@command,c
  9944  005520  0EC0               	movlw	192
  9945  005522  6E1F               	movwf	cmd@command+1,c
  9946  005524  0E2C               	movlw	44
  9947  005526  6E20               	movwf	cmd@command+2,c
  9948  005528  0EA4               	movlw	164
  9949  00552A  6E21               	movwf	cmd@command+3,c
  9950  00552C  ECD9  F02F         	call	_cmd	;wreg free
  9951                           
  9952                           ;display.c: 377: cmd(((2UL<<30)|(((483)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  9953  005530  0E00               	movlw	0
  9954  005532  6E1E               	movwf	cmd@command,c
  9955  005534  0ED0               	movlw	208
  9956  005536  6E1F               	movwf	cmd@command+1,c
  9957  005538  0E6C               	movlw	108
  9958  00553A  6E20               	movwf	cmd@command+2,c
  9959  00553C  0EBC               	movlw	188
  9960  00553E  6E21               	movwf	cmd@command+3,c
  9961  005540  ECD9  F02F         	call	_cmd	;wreg free
  9962  005544  0012               	return		;funcret
  9963  005546                     __end_of_display_bottom_section:
  9964                           	opt stack 0
  9965                           tblptru	equ	0xFF8
  9966                           tblptrh	equ	0xFF7
  9967                           tblptrl	equ	0xFF6
  9968                           tablat	equ	0xFF5
  9969                           prodh	equ	0xFF4
  9970                           prodl	equ	0xFF3
  9971                           intcon	equ	0xFF2
  9972                           postinc0	equ	0xFEE
  9973                           wreg	equ	0xFE8
  9974                           postdec1	equ	0xFE5
  9975                           plusw1	equ	0xFE3
  9976                           fsr1l	equ	0xFE1
  9977                           plusw2	equ	0xFDB
  9978                           status	equ	0xFD8
  9979                           
  9980 ;; *************** function _display_battery *****************
  9981 ;; Defined at:
  9982 ;;		line 205 in file "display.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;  volts           2   36[COMRAM] int 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9998 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10000 ;;Total ram usage:        5 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    7
 10003 ;; This function calls:
 10004 ;;		___awdiv
 10005 ;;		___awmod
 10006 ;;		_cmd
 10007 ;;		_cmd_incrementn
 10008 ;;		_wr16
 10009 ;;		_wr8s
 10010 ;; This function is called by:
 10011 ;;		_display
 10012 ;;		_main
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           	psect	text17
 10017  004B12                     __ptext17:
 10018                           	opt stack 0
 10019  004B12                     _display_battery:
 10020                           	opt stack 23
 10021                           
 10022                           ;display.c: 206: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(volts/10);
 10023                           
 10024                           ;incstack = 0
 10025  004B12  0E2E               	movlw	46
 10026  004B14  6E1E               	movwf	cmd@command,c
 10027  004B16  0EFF               	movlw	255
 10028  004B18  6E1F               	movwf	cmd@command+1,c
 10029  004B1A  0EFF               	movlw	255
 10030  004B1C  6E20               	movwf	cmd@command+2,c
 10031  004B1E  0EFF               	movlw	255
 10032  004B20  6E21               	movwf	cmd@command+3,c
 10033  004B22  ECD9  F02F         	call	_cmd	;wreg free
 10034  004B26  C04A  F027         	movff	_cmd_offset,??_display_battery
 10035  004B2A  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10036  004B2E  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10037  004B30  0E00               	movlw	0
 10038  004B32  2427               	addwf	??_display_battery,w,c
 10039  004B34  6E11               	movwf	wr16@addr,c
 10040  004B36  0E80               	movlw	128
 10041  004B38  2028               	addwfc	??_display_battery+1,w,c
 10042  004B3A  6E12               	movwf	wr16@addr+1,c
 10043  004B3C  0E10               	movlw	16
 10044  004B3E  2029               	addwfc	??_display_battery+2,w,c
 10045  004B40  6E13               	movwf	wr16@addr+2,c
 10046  004B42  0E00               	movlw	0
 10047  004B44  6E15               	movwf	wr16@value+1,c
 10048  004B46  0EF0               	movlw	240
 10049  004B48  6E14               	movwf	wr16@value,c
 10050  004B4A  EC9E  F02F         	call	_wr16	;wreg free
 10051  004B4E  0E02               	movlw	2
 10052  004B50  EC8C  F030         	call	_cmd_incrementn
 10053  004B54  C04A  F027         	movff	_cmd_offset,??_display_battery
 10054  004B58  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10055  004B5C  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10056  004B5E  0E00               	movlw	0
 10057  004B60  2427               	addwf	??_display_battery,w,c
 10058  004B62  6E11               	movwf	wr16@addr,c
 10059  004B64  0E80               	movlw	128
 10060  004B66  2028               	addwfc	??_display_battery+1,w,c
 10061  004B68  6E12               	movwf	wr16@addr+1,c
 10062  004B6A  0E10               	movlw	16
 10063  004B6C  2029               	addwfc	??_display_battery+2,w,c
 10064  004B6E  6E13               	movwf	wr16@addr+2,c
 10065  004B70  0E00               	movlw	0
 10066  004B72  6E15               	movwf	wr16@value+1,c
 10067  004B74  0EEC               	movlw	236
 10068  004B76  6E14               	movwf	wr16@value,c
 10069  004B78  EC9E  F02F         	call	_wr16	;wreg free
 10070  004B7C  0E02               	movlw	2
 10071  004B7E  EC8C  F030         	call	_cmd_incrementn
 10072  004B82  C04A  F027         	movff	_cmd_offset,??_display_battery
 10073  004B86  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10074  004B8A  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10075  004B8C  0E00               	movlw	0
 10076  004B8E  2427               	addwf	??_display_battery,w,c
 10077  004B90  6E11               	movwf	wr16@addr,c
 10078  004B92  0E80               	movlw	128
 10079  004B94  2028               	addwfc	??_display_battery+1,w,c
 10080  004B96  6E12               	movwf	wr16@addr+1,c
 10081  004B98  0E10               	movlw	16
 10082  004B9A  2029               	addwfc	??_display_battery+2,w,c
 10083  004B9C  6E13               	movwf	wr16@addr+2,c
 10084  004B9E  0E00               	movlw	0
 10085  004BA0  6E15               	movwf	wr16@value+1,c
 10086  004BA2  0E1E               	movlw	30
 10087  004BA4  6E14               	movwf	wr16@value,c
 10088  004BA6  EC9E  F02F         	call	_wr16	;wreg free
 10089  004BAA  0E02               	movlw	2
 10090  004BAC  EC8C  F030         	call	_cmd_incrementn
 10091  004BB0  C04A  F027         	movff	_cmd_offset,??_display_battery
 10092  004BB4  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10093  004BB8  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10094  004BBA  0E00               	movlw	0
 10095  004BBC  2427               	addwf	??_display_battery,w,c
 10096  004BBE  6E11               	movwf	wr16@addr,c
 10097  004BC0  0E80               	movlw	128
 10098  004BC2  2028               	addwfc	??_display_battery+1,w,c
 10099  004BC4  6E12               	movwf	wr16@addr+1,c
 10100  004BC6  0E10               	movlw	16
 10101  004BC8  2029               	addwfc	??_display_battery+2,w,c
 10102  004BCA  6E13               	movwf	wr16@addr+2,c
 10103  004BCC  0E08               	movlw	8
 10104  004BCE  6E15               	movwf	wr16@value+1,c
 10105  004BD0  0E00               	movlw	0
 10106  004BD2  6E14               	movwf	wr16@value,c
 10107  004BD4  EC9E  F02F         	call	_wr16	;wreg free
 10108  004BD8  0E02               	movlw	2
 10109  004BDA  EC8C  F030         	call	_cmd_incrementn
 10110  004BDE  C025  F010         	movff	display_battery@volts,___awdiv@dividend
 10111  004BE2  C026  F011         	movff	display_battery@volts+1,___awdiv@dividend+1
 10112  004BE6  0E00               	movlw	0
 10113  004BE8  6E13               	movwf	___awdiv@divisor+1,c
 10114  004BEA  0E0A               	movlw	10
 10115  004BEC  6E12               	movwf	___awdiv@divisor,c
 10116  004BEE  ECEE  F02D         	call	___awdiv	;wreg free
 10117  004BF2  C010  F01E         	movff	?___awdiv,cmd@command
 10118  004BF6  C011  F01F         	movff	?___awdiv+1,cmd@command+1
 10119  004BFA  0E00               	movlw	0
 10120  004BFC  BE1F               	btfsc	cmd@command+1,7,c
 10121  004BFE  0EFF               	movlw	-1
 10122  004C00  6E20               	movwf	cmd@command+2,c
 10123  004C02  6E21               	movwf	cmd@command+3,c
 10124  004C04  ECD9  F02F         	call	_cmd	;wreg free
 10125                           
 10126                           ;display.c: 207: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
 10127  004C08  0E0C               	movlw	12
 10128  004C0A  6E1E               	movwf	cmd@command,c
 10129  004C0C  0EFF               	movlw	255
 10130  004C0E  6E1F               	movwf	cmd@command+1,c
 10131  004C10  0EFF               	movlw	255
 10132  004C12  6E20               	movwf	cmd@command+2,c
 10133  004C14  0EFF               	movlw	255
 10134  004C16  6E21               	movwf	cmd@command+3,c
 10135  004C18  ECD9  F02F         	call	_cmd	;wreg free
 10136  004C1C  C04A  F027         	movff	_cmd_offset,??_display_battery
 10137  004C20  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10138  004C24  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10139  004C26  0E00               	movlw	0
 10140  004C28  2427               	addwf	??_display_battery,w,c
 10141  004C2A  6E11               	movwf	wr16@addr,c
 10142  004C2C  0E80               	movlw	128
 10143  004C2E  2028               	addwfc	??_display_battery+1,w,c
 10144  004C30  6E12               	movwf	wr16@addr+1,c
 10145  004C32  0E10               	movlw	16
 10146  004C34  2029               	addwfc	??_display_battery+2,w,c
 10147  004C36  6E13               	movwf	wr16@addr+2,c
 10148  004C38  0E00               	movlw	0
 10149  004C3A  6E15               	movwf	wr16@value+1,c
 10150  004C3C  0EF0               	movlw	240
 10151  004C3E  6E14               	movwf	wr16@value,c
 10152  004C40  EC9E  F02F         	call	_wr16	;wreg free
 10153  004C44  0E02               	movlw	2
 10154  004C46  EC8C  F030         	call	_cmd_incrementn
 10155  004C4A  C04A  F027         	movff	_cmd_offset,??_display_battery
 10156  004C4E  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10157  004C52  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10158  004C54  0E00               	movlw	0
 10159  004C56  2427               	addwf	??_display_battery,w,c
 10160  004C58  6E11               	movwf	wr16@addr,c
 10161  004C5A  0E80               	movlw	128
 10162  004C5C  2028               	addwfc	??_display_battery+1,w,c
 10163  004C5E  6E12               	movwf	wr16@addr+1,c
 10164  004C60  0E10               	movlw	16
 10165  004C62  2029               	addwfc	??_display_battery+2,w,c
 10166  004C64  6E13               	movwf	wr16@addr+2,c
 10167  004C66  0E00               	movlw	0
 10168  004C68  6E15               	movwf	wr16@value+1,c
 10169  004C6A  0EEC               	movlw	236
 10170  004C6C  6E14               	movwf	wr16@value,c
 10171  004C6E  EC9E  F02F         	call	_wr16	;wreg free
 10172  004C72  0E02               	movlw	2
 10173  004C74  EC8C  F030         	call	_cmd_incrementn
 10174  004C78  C04A  F027         	movff	_cmd_offset,??_display_battery
 10175  004C7C  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10176  004C80  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10177  004C82  0E00               	movlw	0
 10178  004C84  2427               	addwf	??_display_battery,w,c
 10179  004C86  6E11               	movwf	wr16@addr,c
 10180  004C88  0E80               	movlw	128
 10181  004C8A  2028               	addwfc	??_display_battery+1,w,c
 10182  004C8C  6E12               	movwf	wr16@addr+1,c
 10183  004C8E  0E10               	movlw	16
 10184  004C90  2029               	addwfc	??_display_battery+2,w,c
 10185  004C92  6E13               	movwf	wr16@addr+2,c
 10186  004C94  0E00               	movlw	0
 10187  004C96  6E15               	movwf	wr16@value+1,c
 10188  004C98  0E1E               	movlw	30
 10189  004C9A  6E14               	movwf	wr16@value,c
 10190  004C9C  EC9E  F02F         	call	_wr16	;wreg free
 10191  004CA0  0E02               	movlw	2
 10192  004CA2  EC8C  F030         	call	_cmd_incrementn
 10193  004CA6  C04A  F027         	movff	_cmd_offset,??_display_battery
 10194  004CAA  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10195  004CAE  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10196  004CB0  0E00               	movlw	0
 10197  004CB2  2427               	addwf	??_display_battery,w,c
 10198  004CB4  6E11               	movwf	wr16@addr,c
 10199  004CB6  0E80               	movlw	128
 10200  004CB8  2028               	addwfc	??_display_battery+1,w,c
 10201  004CBA  6E12               	movwf	wr16@addr+1,c
 10202  004CBC  0E10               	movlw	16
 10203  004CBE  2029               	addwfc	??_display_battery+2,w,c
 10204  004CC0  6E13               	movwf	wr16@addr+2,c
 10205  004CC2  0E00               	movlw	0
 10206  004CC4  6E15               	movwf	wr16@value+1,c
 10207  004CC6  0E00               	movlw	0
 10208  004CC8  6E14               	movwf	wr16@value,c
 10209  004CCA  EC9E  F02F         	call	_wr16	;wreg free
 10210  004CCE  0E02               	movlw	2
 10211  004CD0  EC8C  F030         	call	_cmd_incrementn
 10212  004CD4  C04A  F027         	movff	_cmd_offset,??_display_battery
 10213  004CD8  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10214  004CDC  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10215  004CDE  0E00               	movlw	0
 10216  004CE0  2427               	addwf	??_display_battery,w,c
 10217  004CE2  6E16               	movwf	wr8s@addr,c
 10218  004CE4  0E80               	movlw	128
 10219  004CE6  2028               	addwfc	??_display_battery+1,w,c
 10220  004CE8  6E17               	movwf	wr8s@addr+1,c
 10221  004CEA  0E10               	movlw	16
 10222  004CEC  2029               	addwfc	??_display_battery+2,w,c
 10223  004CEE  6E18               	movwf	wr8s@addr+2,c
 10224  004CF0  0E5C               	movlw	low STR_22
 10225  004CF2  6E19               	movwf	wr8s@s,c
 10226  004CF4  0E0F               	movlw	high STR_22
 10227  004CF6  6E1A               	movwf	wr8s@s+1,c
 10228  004CF8  EC64  F02D         	call	_wr8s	;wreg free
 10229  004CFC  EC8C  F030         	call	_cmd_incrementn
 10230                           
 10231                           ;display.c: 208: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 248);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 236);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(volts%10);
 10232  004D00  0E2E               	movlw	46
 10233  004D02  6E1E               	movwf	cmd@command,c
 10234  004D04  0EFF               	movlw	255
 10235  004D06  6E1F               	movwf	cmd@command+1,c
 10236  004D08  0EFF               	movlw	255
 10237  004D0A  6E20               	movwf	cmd@command+2,c
 10238  004D0C  0EFF               	movlw	255
 10239  004D0E  6E21               	movwf	cmd@command+3,c
 10240  004D10  ECD9  F02F         	call	_cmd	;wreg free
 10241  004D14  C04A  F027         	movff	_cmd_offset,??_display_battery
 10242  004D18  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10243  004D1C  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10244  004D1E  0E00               	movlw	0
 10245  004D20  2427               	addwf	??_display_battery,w,c
 10246  004D22  6E11               	movwf	wr16@addr,c
 10247  004D24  0E80               	movlw	128
 10248  004D26  2028               	addwfc	??_display_battery+1,w,c
 10249  004D28  6E12               	movwf	wr16@addr+1,c
 10250  004D2A  0E10               	movlw	16
 10251  004D2C  2029               	addwfc	??_display_battery+2,w,c
 10252  004D2E  6E13               	movwf	wr16@addr+2,c
 10253  004D30  0E00               	movlw	0
 10254  004D32  6E15               	movwf	wr16@value+1,c
 10255  004D34  0EF8               	movlw	248
 10256  004D36  6E14               	movwf	wr16@value,c
 10257  004D38  EC9E  F02F         	call	_wr16	;wreg free
 10258  004D3C  0E02               	movlw	2
 10259  004D3E  EC8C  F030         	call	_cmd_incrementn
 10260  004D42  C04A  F027         	movff	_cmd_offset,??_display_battery
 10261  004D46  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10262  004D4A  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10263  004D4C  0E00               	movlw	0
 10264  004D4E  2427               	addwf	??_display_battery,w,c
 10265  004D50  6E11               	movwf	wr16@addr,c
 10266  004D52  0E80               	movlw	128
 10267  004D54  2028               	addwfc	??_display_battery+1,w,c
 10268  004D56  6E12               	movwf	wr16@addr+1,c
 10269  004D58  0E10               	movlw	16
 10270  004D5A  2029               	addwfc	??_display_battery+2,w,c
 10271  004D5C  6E13               	movwf	wr16@addr+2,c
 10272  004D5E  0E00               	movlw	0
 10273  004D60  6E15               	movwf	wr16@value+1,c
 10274  004D62  0EEC               	movlw	236
 10275  004D64  6E14               	movwf	wr16@value,c
 10276  004D66  EC9E  F02F         	call	_wr16	;wreg free
 10277  004D6A  0E02               	movlw	2
 10278  004D6C  EC8C  F030         	call	_cmd_incrementn
 10279  004D70  C04A  F027         	movff	_cmd_offset,??_display_battery
 10280  004D74  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10281  004D78  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10282  004D7A  0E00               	movlw	0
 10283  004D7C  2427               	addwf	??_display_battery,w,c
 10284  004D7E  6E11               	movwf	wr16@addr,c
 10285  004D80  0E80               	movlw	128
 10286  004D82  2028               	addwfc	??_display_battery+1,w,c
 10287  004D84  6E12               	movwf	wr16@addr+1,c
 10288  004D86  0E10               	movlw	16
 10289  004D88  2029               	addwfc	??_display_battery+2,w,c
 10290  004D8A  6E13               	movwf	wr16@addr+2,c
 10291  004D8C  0E00               	movlw	0
 10292  004D8E  6E15               	movwf	wr16@value+1,c
 10293  004D90  0E1E               	movlw	30
 10294  004D92  6E14               	movwf	wr16@value,c
 10295  004D94  EC9E  F02F         	call	_wr16	;wreg free
 10296  004D98  0E02               	movlw	2
 10297  004D9A  EC8C  F030         	call	_cmd_incrementn
 10298  004D9E  C04A  F027         	movff	_cmd_offset,??_display_battery
 10299  004DA2  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10300  004DA6  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10301  004DA8  0E00               	movlw	0
 10302  004DAA  2427               	addwf	??_display_battery,w,c
 10303  004DAC  6E11               	movwf	wr16@addr,c
 10304  004DAE  0E80               	movlw	128
 10305  004DB0  2028               	addwfc	??_display_battery+1,w,c
 10306  004DB2  6E12               	movwf	wr16@addr+1,c
 10307  004DB4  0E10               	movlw	16
 10308  004DB6  2029               	addwfc	??_display_battery+2,w,c
 10309  004DB8  6E13               	movwf	wr16@addr+2,c
 10310  004DBA  0E00               	movlw	0
 10311  004DBC  6E15               	movwf	wr16@value+1,c
 10312  004DBE  0E00               	movlw	0
 10313  004DC0  6E14               	movwf	wr16@value,c
 10314  004DC2  EC9E  F02F         	call	_wr16	;wreg free
 10315  004DC6  0E02               	movlw	2
 10316  004DC8  EC8C  F030         	call	_cmd_incrementn
 10317  004DCC  C025  F018         	movff	display_battery@volts,___awmod@dividend
 10318  004DD0  C026  F019         	movff	display_battery@volts+1,___awmod@dividend+1
 10319  004DD4  0E00               	movlw	0
 10320  004DD6  6E1B               	movwf	___awmod@divisor+1,c
 10321  004DD8  0E0A               	movlw	10
 10322  004DDA  6E1A               	movwf	___awmod@divisor,c
 10323  004DDC  EC6C  F02E         	call	___awmod	;wreg free
 10324  004DE0  C018  F01E         	movff	?___awmod,cmd@command
 10325  004DE4  C019  F01F         	movff	?___awmod+1,cmd@command+1
 10326  004DE8  0E00               	movlw	0
 10327  004DEA  BE1F               	btfsc	cmd@command+1,7,c
 10328  004DEC  0EFF               	movlw	-1
 10329  004DEE  6E20               	movwf	cmd@command+2,c
 10330  004DF0  6E21               	movwf	cmd@command+3,c
 10331  004DF2  ECD9  F02F         	call	_cmd	;wreg free
 10332  004DF6  0012               	return		;funcret
 10333  004DF8                     __end_of_display_battery:
 10334                           	opt stack 0
 10335                           tblptru	equ	0xFF8
 10336                           tblptrh	equ	0xFF7
 10337                           tblptrl	equ	0xFF6
 10338                           tablat	equ	0xFF5
 10339                           prodh	equ	0xFF4
 10340                           prodl	equ	0xFF3
 10341                           intcon	equ	0xFF2
 10342                           postinc0	equ	0xFEE
 10343                           wreg	equ	0xFE8
 10344                           postdec1	equ	0xFE5
 10345                           plusw1	equ	0xFE3
 10346                           fsr1l	equ	0xFE1
 10347                           plusw2	equ	0xFDB
 10348                           status	equ	0xFD8
 10349                           
 10350 ;; *************** function _wr8s *****************
 10351 ;; Defined at:
 10352 ;;		line 43 in file "FT800.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  addr            3   21[COMRAM] unsigned um
 10355 ;;  s               2   24[COMRAM] PTR const unsigned char 
 10356 ;;		 -> STR_37(4), STR_36(2), STR_35(2), STR_34(3), 
 10357 ;;		 -> STR_33(3), STR_32(3), STR_31(2), STR_30(2), 
 10358 ;;		 -> STR_29(2), STR_28(2), STR_27(2), STR_26(2), 
 10359 ;;		 -> STR_25(2), STR_24(2), STR_23(2), STR_22(2), 
 10360 ;;		 -> STR_21(2), STR_20(2), STR_19(4), STR_18(6), 
 10361 ;;		 -> STR_17(4), STR_16(7), STR_15(5), STR_14(7), 
 10362 ;;		 -> STR_13(2), STR_12(3), STR_11(2), STR_10(2), 
 10363 ;;		 -> STR_9(5), STR_8(2), STR_7(2), STR_6(9), 
 10364 ;;		 -> STR_5(2), STR_4(2), STR_3(8), STR_2(10), 
 10365 ;;		 -> STR_1(4), 
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;  i               1   30[COMRAM] unsigned char 
 10368 ;;  l               1   29[COMRAM] unsigned char 
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1    wreg      unsigned char 
 10371 ;; Registers used:
 10372 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10373 ;; Tracked objects:
 10374 ;;		On entry : 0/0
 10375 ;;		On exit  : 0/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10378 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;Total ram usage:       10 bytes
 10383 ;; Hardware stack levels used:    1
 10384 ;; Hardware stack levels required when called:    5
 10385 ;; This function calls:
 10386 ;;		_SPI_Exchange8bit
 10387 ;;		_strlen
 10388 ;; This function is called by:
 10389 ;;		_display_labels
 10390 ;;		_display_status
 10391 ;;		_display_laptime
 10392 ;;		_display_battery
 10393 ;;		_display_rpm
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           	psect	text18
 10398  005AC8                     __ptext18:
 10399                           	opt stack 0
 10400  005AC8                     _wr8s:
 10401                           	opt stack 24
 10402                           
 10403                           ;FT800.c: 45: LATDbits.LATD0 = 0;
 10404                           
 10405                           ;incstack = 0
 10406  005AC8  908C               	bcf	3980,0,c	;volatile
 10407                           
 10408                           ;FT800.c: 46: SPI_Exchange8bit(0x80 | (addr >> 16));
 10409  005ACA  5018               	movf	wr8s@addr+2,w,c
 10410  005ACC  0980               	iorlw	128
 10411  005ACE  ECC8  F030         	call	_SPI_Exchange8bit
 10412                           
 10413                           ;FT800.c: 47: SPI_Exchange8bit(addr >> 8);
 10414  005AD2  C016  F01B         	movff	wr8s@addr,??_wr8s
 10415  005AD6  C017  F01C         	movff	wr8s@addr+1,??_wr8s+1
 10416  005ADA  C018  F01D         	movff	wr8s@addr+2,??_wr8s+2
 10417  005ADE  C01C  F01B         	movff	??_wr8s+1,??_wr8s
 10418  005AE2  C01D  F01C         	movff	??_wr8s+2,??_wr8s+1
 10419  005AE6  6A1D               	clrf	??_wr8s+2,c
 10420  005AE8  501B               	movf	??_wr8s,w,c
 10421  005AEA  ECC8  F030         	call	_SPI_Exchange8bit
 10422                           
 10423                           ;FT800.c: 48: SPI_Exchange8bit(addr);
 10424  005AEE  5016               	movf	wr8s@addr,w,c
 10425  005AF0  ECC8  F030         	call	_SPI_Exchange8bit
 10426                           
 10427                           ;FT800.c: 49: ft_uint8_t l = strlen(s);
 10428  005AF4  C019  F010         	movff	wr8s@s,strlen@s
 10429  005AF8  C01A  F011         	movff	wr8s@s+1,strlen@s+1
 10430  005AFC  EC41  F02F         	call	_strlen	;wreg free
 10431  005B00  5010               	movf	?_strlen,w,c
 10432  005B02  6E1E               	movwf	wr8s@l,c
 10433                           
 10434                           ;FT800.c: 50: ft_uint8_t i;
 10435                           ;FT800.c: 51: for(i=0;i<=l;i++){
 10436  005B04  0E00               	movlw	0
 10437  005B06  6E1F               	movwf	wr8s@i,c
 10438  005B08  D014               	goto	l3420
 10439  005B0A                     l3416:
 10440                           
 10441                           ;FT800.c: 52: SPI_Exchange8bit(s[i]);
 10442  005B0A  501F               	movf	wr8s@i,w,c
 10443  005B0C  0D01               	mullw	1
 10444  005B0E  C019  F01B         	movff	wr8s@s,??_wr8s
 10445  005B12  C01A  F01C         	movff	wr8s@s+1,??_wr8s+1
 10446  005B16  50F3               	movf	prodl,w,c
 10447  005B18  261B               	addwf	??_wr8s,f,c
 10448  005B1A  50F4               	movf	prodh,w,c
 10449  005B1C  221C               	addwfc	??_wr8s+1,f,c
 10450  005B1E  C01B  FFF6         	movff	??_wr8s,tblptrl
 10451  005B22  C01C  FFF7         	movff	??_wr8s+1,tblptrh
 10452  005B26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10453  005B26  6AF8               	clrf	tblptru,c
 10454  005B28                     	endif
 10455  005B28                     	if	0	;tblptru may be non-zero
 10456  005B28                     	endif
 10457  005B28  0008               	tblrd		*
 10458  005B2A  50F5               	movf	tablat,w,c
 10459  005B2C  ECC8  F030         	call	_SPI_Exchange8bit
 10460  005B30  2A1F               	incf	wr8s@i,f,c
 10461  005B32                     l3420:
 10462  005B32  501F               	movf	wr8s@i,w,c
 10463  005B34  5C1E               	subwf	wr8s@l,w,c
 10464  005B36  A0D8               	btfss	status,0,c
 10465  005B38  D005               	goto	l3426
 10466  005B3A  D7E7               	goto	l3416
 10467  005B3C                     l3422:
 10468                           
 10469                           ;FT800.c: 55: SPI_Exchange8bit(0);
 10470  005B3C  0E00               	movlw	0
 10471  005B3E  ECC8  F030         	call	_SPI_Exchange8bit
 10472  005B42  2A1F               	incf	wr8s@i,f,c
 10473  005B44                     l3426:
 10474  005B44  C01F  F01B         	movff	wr8s@i,??_wr8s
 10475  005B48  0E03               	movlw	3
 10476  005B4A  161B               	andwf	??_wr8s,f,c
 10477  005B4C  A4D8               	btfss	status,2,c
 10478  005B4E  D7F6               	goto	l3422
 10479                           
 10480                           ;FT800.c: 56: }
 10481                           ;FT800.c: 57: LATDbits.LATD0 = 1;
 10482  005B50  808C               	bsf	3980,0,c	;volatile
 10483                           
 10484                           ;FT800.c: 58: return i;
 10485  005B52  501F               	movf	wr8s@i,w,c
 10486  005B54  0012               	return	
 10487  005B56                     __end_of_wr8s:
 10488                           	opt stack 0
 10489                           tblptru	equ	0xFF8
 10490                           tblptrh	equ	0xFF7
 10491                           tblptrl	equ	0xFF6
 10492                           tablat	equ	0xFF5
 10493                           prodh	equ	0xFF4
 10494                           prodl	equ	0xFF3
 10495                           intcon	equ	0xFF2
 10496                           postinc0	equ	0xFEE
 10497                           wreg	equ	0xFE8
 10498                           postdec1	equ	0xFE5
 10499                           plusw1	equ	0xFE3
 10500                           fsr1l	equ	0xFE1
 10501                           plusw2	equ	0xFDB
 10502                           status	equ	0xFD8
 10503                           
 10504 ;; *************** function _strlen *****************
 10505 ;; Defined at:
 10506 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;  s               2   15[COMRAM] PTR const unsigned char 
 10509 ;;		 -> STR_37(4), STR_36(2), STR_35(2), STR_34(3), 
 10510 ;;		 -> STR_33(3), STR_32(3), STR_31(2), STR_30(2), 
 10511 ;;		 -> STR_29(2), STR_28(2), STR_27(2), STR_26(2), 
 10512 ;;		 -> STR_25(2), STR_24(2), STR_23(2), STR_22(2), 
 10513 ;;		 -> STR_21(2), STR_20(2), STR_19(4), STR_18(6), 
 10514 ;;		 -> STR_17(4), STR_16(7), STR_15(5), STR_14(7), 
 10515 ;;		 -> STR_13(2), STR_12(3), STR_11(2), STR_10(2), 
 10516 ;;		 -> STR_9(5), STR_8(2), STR_7(2), STR_6(9), 
 10517 ;;		 -> STR_5(2), STR_4(2), STR_3(8), STR_2(10), 
 10518 ;;		 -> STR_1(4), 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  cp              2   19[COMRAM] PTR const unsigned char 
 10521 ;;		 -> STR_37(4), STR_36(2), STR_35(2), STR_34(3), 
 10522 ;;		 -> STR_33(3), STR_32(3), STR_31(2), STR_30(2), 
 10523 ;;		 -> STR_29(2), STR_28(2), STR_27(2), STR_26(2), 
 10524 ;;		 -> STR_25(2), STR_24(2), STR_23(2), STR_22(2), 
 10525 ;;		 -> STR_21(2), STR_20(2), STR_19(4), STR_18(6), 
 10526 ;;		 -> STR_17(4), STR_16(7), STR_15(5), STR_14(7), 
 10527 ;;		 -> STR_13(2), STR_12(3), STR_11(2), STR_10(2), 
 10528 ;;		 -> STR_9(5), STR_8(2), STR_7(2), STR_6(9), 
 10529 ;;		 -> STR_5(2), STR_4(2), STR_3(8), STR_2(10), 
 10530 ;;		 -> STR_1(4), 
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  2   15[COMRAM] unsigned int 
 10533 ;; Registers used:
 10534 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10544 ;;Total ram usage:        6 bytes
 10545 ;; Hardware stack levels used:    1
 10546 ;; Hardware stack levels required when called:    4
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_wr8s
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           	psect	text19
 10555  005E82                     __ptext19:
 10556                           	opt stack 0
 10557  005E82                     _strlen:
 10558                           	opt stack 24
 10559                           
 10560                           ;incstack = 0
 10561  005E82  C010  F014         	movff	strlen@s,strlen@cp
 10562  005E86  C011  F015         	movff	strlen@s+1,strlen@cp+1
 10563  005E8A  D002               	goto	l3382
 10564  005E8C                     l3380:
 10565  005E8C  4A14               	infsnz	strlen@cp,f,c
 10566  005E8E  2A15               	incf	strlen@cp+1,f,c
 10567  005E90                     l3382:
 10568  005E90  C014  FFF6         	movff	strlen@cp,tblptrl
 10569  005E94  C015  FFF7         	movff	strlen@cp+1,tblptrh
 10570  005E98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10571  005E98  6AF8               	clrf	tblptru,c
 10572  005E9A                     	endif
 10573  005E9A                     	if	0	;tblptru may be non-zero
 10574  005E9A                     	endif
 10575  005E9A  0008               	tblrd		*
 10576  005E9C  50F5               	movf	tablat,w,c
 10577  005E9E  0900               	iorlw	0
 10578  005EA0  A4D8               	btfss	status,2,c
 10579  005EA2  D7F4               	goto	l3380
 10580  005EA4  C010  F012         	movff	strlen@s,??_strlen
 10581  005EA8  C011  F013         	movff	strlen@s+1,??_strlen+1
 10582  005EAC  1E12               	comf	??_strlen,f,c
 10583  005EAE  1E13               	comf	??_strlen+1,f,c
 10584  005EB0  4A12               	infsnz	??_strlen,f,c
 10585  005EB2  2A13               	incf	??_strlen+1,f,c
 10586  005EB4  5014               	movf	strlen@cp,w,c
 10587  005EB6  2412               	addwf	??_strlen,w,c
 10588  005EB8  6E10               	movwf	?_strlen,c
 10589  005EBA  5015               	movf	strlen@cp+1,w,c
 10590  005EBC  2013               	addwfc	??_strlen+1,w,c
 10591  005EBE  6E11               	movwf	?_strlen+1,c
 10592  005EC0  0012               	return	
 10593  005EC2                     __end_of_strlen:
 10594                           	opt stack 0
 10595                           tblptru	equ	0xFF8
 10596                           tblptrh	equ	0xFF7
 10597                           tblptrl	equ	0xFF6
 10598                           tablat	equ	0xFF5
 10599                           prodh	equ	0xFF4
 10600                           prodl	equ	0xFF3
 10601                           intcon	equ	0xFF2
 10602                           postinc0	equ	0xFEE
 10603                           wreg	equ	0xFE8
 10604                           postdec1	equ	0xFE5
 10605                           plusw1	equ	0xFE3
 10606                           fsr1l	equ	0xFE1
 10607                           plusw2	equ	0xFDB
 10608                           status	equ	0xFD8
 10609                           
 10610 ;; *************** function _cmd *****************
 10611 ;; Defined at:
 10612 ;;		line 126 in file "FT800.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;  command         4   29[COMRAM] unsigned long 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;		None
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, status,0, cstack
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;Total ram usage:        7 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:    6
 10633 ;; This function calls:
 10634 ;;		_cmd_incrementn
 10635 ;;		_wr32
 10636 ;; This function is called by:
 10637 ;;		_display_start
 10638 ;;		_display_end
 10639 ;;		_display_labels
 10640 ;;		_display_status
 10641 ;;		_display_laptime
 10642 ;;		_display_waterTemp
 10643 ;;		_display_oilTemp
 10644 ;;		_display_battery
 10645 ;;		_display_tp
 10646 ;;		_display_speed
 10647 ;;		_display_brake_bias
 10648 ;;		_display_rpm
 10649 ;;		_display_gear
 10650 ;;		_display_bottom_section
 10651 ;;		_display_fuel
 10652 ;;		_display_oilPress
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text20
 10657  005FB2                     __ptext20:
 10658                           	opt stack 0
 10659  005FB2                     _cmd:
 10660                           	opt stack 23
 10661                           
 10662                           ;FT800.c: 127: wr32(1081344UL + cmd_offset, command);cmd_incrementn(4);
 10663                           
 10664                           ;incstack = 0
 10665  005FB2  C04A  F022         	movff	_cmd_offset,??_cmd
 10666  005FB6  C04B  F023         	movff	_cmd_offset+1,??_cmd+1
 10667  005FBA  6A24               	clrf	(??_cmd+2)& (0+255),c
 10668  005FBC  0E00               	movlw	0
 10669  005FBE  2422               	addwf	??_cmd,w,c
 10670  005FC0  6E11               	movwf	wr32@addr,c
 10671  005FC2  0E80               	movlw	128
 10672  005FC4  2023               	addwfc	??_cmd+1,w,c
 10673  005FC6  6E12               	movwf	wr32@addr+1,c
 10674  005FC8  0E10               	movlw	16
 10675  005FCA  2024               	addwfc	??_cmd+2,w,c
 10676  005FCC  6E13               	movwf	wr32@addr+2,c
 10677  005FCE  C01E  F014         	movff	cmd@command,wr32@value
 10678  005FD2  C01F  F015         	movff	cmd@command+1,wr32@value+1
 10679  005FD6  C020  F016         	movff	cmd@command+2,wr32@value+2
 10680  005FDA  C021  F017         	movff	cmd@command+3,wr32@value+3
 10681  005FDE  EC30  F02E         	call	_wr32	;wreg free
 10682  005FE2  0E04               	movlw	4
 10683  005FE4  EC8C  F030         	call	_cmd_incrementn
 10684  005FE8  0012               	return		;funcret
 10685  005FEA                     __end_of_cmd:
 10686                           	opt stack 0
 10687                           tblptru	equ	0xFF8
 10688                           tblptrh	equ	0xFF7
 10689                           tblptrl	equ	0xFF6
 10690                           tablat	equ	0xFF5
 10691                           prodh	equ	0xFF4
 10692                           prodl	equ	0xFF3
 10693                           intcon	equ	0xFF2
 10694                           postinc0	equ	0xFEE
 10695                           wreg	equ	0xFE8
 10696                           postdec1	equ	0xFE5
 10697                           plusw1	equ	0xFE3
 10698                           fsr1l	equ	0xFE1
 10699                           plusw2	equ	0xFDB
 10700                           status	equ	0xFD8
 10701                           
 10702 ;; *************** function _cmd_incrementn *****************
 10703 ;; Defined at:
 10704 ;;		line 122 in file "FT800.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  n               1    wreg     unsigned char 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  n               1   17[COMRAM] unsigned char 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg, status,2, status,0
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10721 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10722 ;;Total ram usage:        3 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    4
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_cmd
 10729 ;;		_display_labels
 10730 ;;		_display_status
 10731 ;;		_display_laptime
 10732 ;;		_display_waterTemp
 10733 ;;		_display_oilTemp
 10734 ;;		_display_battery
 10735 ;;		_display_tp
 10736 ;;		_display_speed
 10737 ;;		_display_brake_bias
 10738 ;;		_display_rpm
 10739 ;;		_display_fuel
 10740 ;;		_display_oilPress
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text21
 10745  006118                     __ptext21:
 10746                           	opt stack 0
 10747  006118                     _cmd_incrementn:
 10748                           	opt stack 25
 10749                           
 10750                           ;incstack = 0
 10751                           ;cmd_incrementn@n stored from wreg
 10752  006118  6E12               	movwf	cmd_incrementn@n,c
 10753                           
 10754                           ;FT800.c: 123: cmd_offset=(cmd_offset+n)%4096;
 10755  00611A  5012               	movf	cmd_incrementn@n,w,c
 10756  00611C  244A               	addwf	_cmd_offset,w,c
 10757  00611E  6E10               	movwf	??_cmd_incrementn& (0+255),c
 10758  006120  0E00               	movlw	0
 10759  006122  204B               	addwfc	_cmd_offset+1,w,c
 10760  006124  6E11               	movwf	(??_cmd_incrementn+1)& (0+255),c
 10761  006126  0EFF               	movlw	255
 10762  006128  1410               	andwf	??_cmd_incrementn,w,c
 10763  00612A  6E4A               	movwf	_cmd_offset,c
 10764  00612C  0E0F               	movlw	15
 10765  00612E  1411               	andwf	??_cmd_incrementn+1,w,c
 10766  006130  6E4B               	movwf	_cmd_offset+1,c
 10767  006132  0012               	return		;funcret
 10768  006134                     __end_of_cmd_incrementn:
 10769                           	opt stack 0
 10770                           tblptru	equ	0xFF8
 10771                           tblptrh	equ	0xFF7
 10772                           tblptrl	equ	0xFF6
 10773                           tablat	equ	0xFF5
 10774                           prodh	equ	0xFF4
 10775                           prodl	equ	0xFF3
 10776                           intcon	equ	0xFF2
 10777                           postinc0	equ	0xFEE
 10778                           wreg	equ	0xFE8
 10779                           postdec1	equ	0xFE5
 10780                           plusw1	equ	0xFE3
 10781                           fsr1l	equ	0xFE1
 10782                           plusw2	equ	0xFDB
 10783                           status	equ	0xFD8
 10784                           
 10785 ;; *************** function ___awmod *****************
 10786 ;; Defined at:
 10787 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  dividend        2   23[COMRAM] int 
 10790 ;;  divisor         2   25[COMRAM] int 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  sign            1   28[COMRAM] unsigned char 
 10793 ;;  counter         1   27[COMRAM] unsigned char 
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  2   23[COMRAM] int 
 10796 ;; Registers used:
 10797 ;;		wreg, status,2, status,0
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10807 ;;Total ram usage:        6 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; Hardware stack levels required when called:    4
 10810 ;; This function calls:
 10811 ;;		Nothing
 10812 ;; This function is called by:
 10813 ;;		_display_battery
 10814 ;;		_display_rpm
 10815 ;;		_main
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           	psect	text22
 10820  005CD8                     __ptext22:
 10821                           	opt stack 0
 10822  005CD8                     ___awmod:
 10823                           	opt stack 25
 10824                           
 10825                           ;incstack = 0
 10826  005CD8  0E00               	movlw	0
 10827  005CDA  6E1D               	movwf	___awmod@sign,c
 10828  005CDC  AE19               	btfss	___awmod@dividend+1,7,c
 10829  005CDE  D006               	goto	l3502
 10830  005CE0  6C18               	negf	___awmod@dividend,c
 10831  005CE2  1E19               	comf	___awmod@dividend+1,f,c
 10832  005CE4  B0D8               	btfsc	status,0,c
 10833  005CE6  2A19               	incf	___awmod@dividend+1,f,c
 10834  005CE8  0E01               	movlw	1
 10835  005CEA  6E1D               	movwf	___awmod@sign,c
 10836  005CEC                     l3502:
 10837  005CEC  AE1B               	btfss	___awmod@divisor+1,7,c
 10838  005CEE  D004               	goto	l3506
 10839  005CF0  6C1A               	negf	___awmod@divisor,c
 10840  005CF2  1E1B               	comf	___awmod@divisor+1,f,c
 10841  005CF4  B0D8               	btfsc	status,0,c
 10842  005CF6  2A1B               	incf	___awmod@divisor+1,f,c
 10843  005CF8                     l3506:
 10844  005CF8  501A               	movf	___awmod@divisor,w,c
 10845  005CFA  101B               	iorwf	___awmod@divisor+1,w,c
 10846  005CFC  B4D8               	btfsc	status,2,c
 10847  005CFE  D018               	goto	l3522
 10848  005D00  0E01               	movlw	1
 10849  005D02  6E1C               	movwf	___awmod@counter,c
 10850  005D04  D004               	goto	l3512
 10851  005D06                     l3510:
 10852  005D06  90D8               	bcf	status,0,c
 10853  005D08  361A               	rlcf	___awmod@divisor,f,c
 10854  005D0A  361B               	rlcf	___awmod@divisor+1,f,c
 10855  005D0C  2A1C               	incf	___awmod@counter,f,c
 10856  005D0E                     l3512:
 10857  005D0E  AE1B               	btfss	___awmod@divisor+1,7,c
 10858  005D10  D7FA               	goto	l3510
 10859  005D12                     l3514:
 10860  005D12  501A               	movf	___awmod@divisor,w,c
 10861  005D14  5C18               	subwf	___awmod@dividend,w,c
 10862  005D16  501B               	movf	___awmod@divisor+1,w,c
 10863  005D18  5819               	subwfb	___awmod@dividend+1,w,c
 10864  005D1A  A0D8               	btfss	status,0,c
 10865  005D1C  D004               	goto	l3518
 10866  005D1E  501A               	movf	___awmod@divisor,w,c
 10867  005D20  5E18               	subwf	___awmod@dividend,f,c
 10868  005D22  501B               	movf	___awmod@divisor+1,w,c
 10869  005D24  5A19               	subwfb	___awmod@dividend+1,f,c
 10870  005D26                     l3518:
 10871  005D26  90D8               	bcf	status,0,c
 10872  005D28  321B               	rrcf	___awmod@divisor+1,f,c
 10873  005D2A  321A               	rrcf	___awmod@divisor,f,c
 10874  005D2C  2E1C               	decfsz	___awmod@counter,f,c
 10875  005D2E  D7F1               	goto	l3514
 10876  005D30                     l3522:
 10877  005D30  501D               	movf	___awmod@sign,w,c
 10878  005D32  B4D8               	btfsc	status,2,c
 10879  005D34  D004               	goto	l3526
 10880  005D36  6C18               	negf	___awmod@dividend,c
 10881  005D38  1E19               	comf	___awmod@dividend+1,f,c
 10882  005D3A  B0D8               	btfsc	status,0,c
 10883  005D3C  2A19               	incf	___awmod@dividend+1,f,c
 10884  005D3E                     l3526:
 10885  005D3E  C018  F018         	movff	___awmod@dividend,?___awmod
 10886  005D42  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
 10887  005D46  0012               	return	
 10888  005D48                     __end_of___awmod:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           intcon	equ	0xFF2
 10897                           postinc0	equ	0xFEE
 10898                           wreg	equ	0xFE8
 10899                           postdec1	equ	0xFE5
 10900                           plusw1	equ	0xFE3
 10901                           fsr1l	equ	0xFE1
 10902                           plusw2	equ	0xFDB
 10903                           status	equ	0xFD8
 10904                           
 10905 ;; *************** function ___awdiv *****************
 10906 ;; Defined at:
 10907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  dividend        2   15[COMRAM] int 
 10910 ;;  divisor         2   17[COMRAM] int 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  quotient        2   21[COMRAM] int 
 10913 ;;  sign            1   20[COMRAM] unsigned char 
 10914 ;;  counter         1   19[COMRAM] unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  2   15[COMRAM] int 
 10917 ;; Registers used:
 10918 ;;		wreg, status,2, status,0
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;Total ram usage:        8 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; Hardware stack levels required when called:    4
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_display_battery
 10935 ;;		_display_rpm
 10936 ;;		_main
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text23
 10941  005BDC                     __ptext23:
 10942                           	opt stack 0
 10943  005BDC                     ___awdiv:
 10944                           	opt stack 25
 10945                           
 10946                           ;incstack = 0
 10947  005BDC  0E00               	movlw	0
 10948  005BDE  6E15               	movwf	___awdiv@sign,c
 10949  005BE0  AE13               	btfss	___awdiv@divisor+1,7,c
 10950  005BE2  D006               	goto	l3458
 10951  005BE4  6C12               	negf	___awdiv@divisor,c
 10952  005BE6  1E13               	comf	___awdiv@divisor+1,f,c
 10953  005BE8  B0D8               	btfsc	status,0,c
 10954  005BEA  2A13               	incf	___awdiv@divisor+1,f,c
 10955  005BEC  0E01               	movlw	1
 10956  005BEE  6E15               	movwf	___awdiv@sign,c
 10957  005BF0                     l3458:
 10958  005BF0  AE11               	btfss	___awdiv@dividend+1,7,c
 10959  005BF2  D006               	goto	l3464
 10960  005BF4  6C10               	negf	___awdiv@dividend,c
 10961  005BF6  1E11               	comf	___awdiv@dividend+1,f,c
 10962  005BF8  B0D8               	btfsc	status,0,c
 10963  005BFA  2A11               	incf	___awdiv@dividend+1,f,c
 10964  005BFC  0E01               	movlw	1
 10965  005BFE  1A15               	xorwf	___awdiv@sign,f,c
 10966  005C00                     l3464:
 10967  005C00  0E00               	movlw	0
 10968  005C02  6E17               	movwf	___awdiv@quotient+1,c
 10969  005C04  0E00               	movlw	0
 10970  005C06  6E16               	movwf	___awdiv@quotient,c
 10971  005C08  5012               	movf	___awdiv@divisor,w,c
 10972  005C0A  1013               	iorwf	___awdiv@divisor+1,w,c
 10973  005C0C  B4D8               	btfsc	status,2,c
 10974  005C0E  D01C               	goto	l3486
 10975  005C10  0E01               	movlw	1
 10976  005C12  6E14               	movwf	___awdiv@counter,c
 10977  005C14  D004               	goto	l3472
 10978  005C16                     l3470:
 10979  005C16  90D8               	bcf	status,0,c
 10980  005C18  3612               	rlcf	___awdiv@divisor,f,c
 10981  005C1A  3613               	rlcf	___awdiv@divisor+1,f,c
 10982  005C1C  2A14               	incf	___awdiv@counter,f,c
 10983  005C1E                     l3472:
 10984  005C1E  AE13               	btfss	___awdiv@divisor+1,7,c
 10985  005C20  D7FA               	goto	l3470
 10986  005C22                     l3474:
 10987  005C22  90D8               	bcf	status,0,c
 10988  005C24  3616               	rlcf	___awdiv@quotient,f,c
 10989  005C26  3617               	rlcf	___awdiv@quotient+1,f,c
 10990  005C28  5012               	movf	___awdiv@divisor,w,c
 10991  005C2A  5C10               	subwf	___awdiv@dividend,w,c
 10992  005C2C  5013               	movf	___awdiv@divisor+1,w,c
 10993  005C2E  5811               	subwfb	___awdiv@dividend+1,w,c
 10994  005C30  A0D8               	btfss	status,0,c
 10995  005C32  D005               	goto	l3482
 10996  005C34  5012               	movf	___awdiv@divisor,w,c
 10997  005C36  5E10               	subwf	___awdiv@dividend,f,c
 10998  005C38  5013               	movf	___awdiv@divisor+1,w,c
 10999  005C3A  5A11               	subwfb	___awdiv@dividend+1,f,c
 11000  005C3C  8016               	bsf	___awdiv@quotient,0,c
 11001  005C3E                     l3482:
 11002  005C3E  90D8               	bcf	status,0,c
 11003  005C40  3213               	rrcf	___awdiv@divisor+1,f,c
 11004  005C42  3212               	rrcf	___awdiv@divisor,f,c
 11005  005C44  2E14               	decfsz	___awdiv@counter,f,c
 11006  005C46  D7ED               	goto	l3474
 11007  005C48                     l3486:
 11008  005C48  5015               	movf	___awdiv@sign,w,c
 11009  005C4A  B4D8               	btfsc	status,2,c
 11010  005C4C  D004               	goto	l3490
 11011  005C4E  6C16               	negf	___awdiv@quotient,c
 11012  005C50  1E17               	comf	___awdiv@quotient+1,f,c
 11013  005C52  B0D8               	btfsc	status,0,c
 11014  005C54  2A17               	incf	___awdiv@quotient+1,f,c
 11015  005C56                     l3490:
 11016  005C56  C016  F010         	movff	___awdiv@quotient,?___awdiv
 11017  005C5A  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 11018  005C5E  0012               	return	
 11019  005C60                     __end_of___awdiv:
 11020                           	opt stack 0
 11021                           tblptru	equ	0xFF8
 11022                           tblptrh	equ	0xFF7
 11023                           tblptrl	equ	0xFF6
 11024                           tablat	equ	0xFF5
 11025                           prodh	equ	0xFF4
 11026                           prodl	equ	0xFF3
 11027                           intcon	equ	0xFF2
 11028                           postinc0	equ	0xFEE
 11029                           wreg	equ	0xFE8
 11030                           postdec1	equ	0xFE5
 11031                           plusw1	equ	0xFE3
 11032                           fsr1l	equ	0xFE1
 11033                           plusw2	equ	0xFDB
 11034                           status	equ	0xFD8
 11035                           
 11036 ;; *************** function _TMR1_Reload *****************
 11037 ;; Defined at:
 11038 ;;		line 143 in file "mcc_generated_files/tmr1.c"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;		None
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;		None
 11043 ;; Return value:  Size  Location     Type
 11044 ;;                  1    wreg      void 
 11045 ;; Registers used:
 11046 ;;		wreg, status,2
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;Total ram usage:        0 bytes
 11057 ;; Hardware stack levels used:    1
 11058 ;; Hardware stack levels required when called:    4
 11059 ;; This function calls:
 11060 ;;		Nothing
 11061 ;; This function is called by:
 11062 ;;		_main
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           	psect	text24
 11067  0061BE                     __ptext24:
 11068                           	opt stack 0
 11069  0061BE                     _TMR1_Reload:
 11070                           	opt stack 26
 11071                           
 11072                           ;tmr1.c: 146: TMR1H = (timer1ReloadVal >> 8);
 11073                           
 11074                           ;incstack = 0
 11075  0061BE  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 11076  0061C0  6ECF               	movwf	4047,c	;volatile
 11077                           
 11078                           ;tmr1.c: 147: TMR1L = timer1ReloadVal;
 11079  0061C2  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 11080  0061C6  0012               	return		;funcret
 11081  0061C8                     __end_of_TMR1_Reload:
 11082                           	opt stack 0
 11083                           tblptru	equ	0xFF8
 11084                           tblptrh	equ	0xFF7
 11085                           tblptrl	equ	0xFF6
 11086                           tablat	equ	0xFF5
 11087                           prodh	equ	0xFF4
 11088                           prodl	equ	0xFF3
 11089                           intcon	equ	0xFF2
 11090                           postinc0	equ	0xFEE
 11091                           wreg	equ	0xFE8
 11092                           postdec1	equ	0xFE5
 11093                           plusw1	equ	0xFE3
 11094                           fsr1l	equ	0xFE1
 11095                           plusw2	equ	0xFDB
 11096                           status	equ	0xFD8
 11097                           
 11098 ;; *************** function _TMR0_StopTimer *****************
 11099 ;; Defined at:
 11100 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;		None
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		None
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;Total ram usage:        0 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:    4
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		_main
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text25
 11129  0061E4                     __ptext25:
 11130                           	opt stack 0
 11131  0061E4                     _TMR0_StopTimer:
 11132                           	opt stack 26
 11133                           
 11134                           ;tmr0.c: 104: T0CONbits.TMR0ON = 0;
 11135                           
 11136                           ;incstack = 0
 11137  0061E4  9ED5               	bcf	4053,7,c	;volatile
 11138  0061E6  0012               	return		;funcret
 11139  0061E8                     __end_of_TMR0_StopTimer:
 11140                           	opt stack 0
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodh	equ	0xFF4
 11146                           prodl	equ	0xFF3
 11147                           intcon	equ	0xFF2
 11148                           postinc0	equ	0xFEE
 11149                           wreg	equ	0xFE8
 11150                           postdec1	equ	0xFE5
 11151                           plusw1	equ	0xFE3
 11152                           fsr1l	equ	0xFE1
 11153                           plusw2	equ	0xFDB
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _SYSTEM_Initialize *****************
 11157 ;; Defined at:
 11158 ;;		line 111 in file "mcc_generated_files/mcc.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;Total ram usage:        0 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    6
 11179 ;; This function calls:
 11180 ;;		_ECAN_Initialize
 11181 ;;		_INTERRUPT_Initialize
 11182 ;;		_OSCILLATOR_Initialize
 11183 ;;		_PIN_MANAGER_Initialize
 11184 ;;		_SPI_Initialize
 11185 ;;		_TMR0_Initialize
 11186 ;;		_TMR1_Initialize
 11187 ;; This function is called by:
 11188 ;;		_main
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           	psect	text26
 11193  0060DC                     __ptext26:
 11194                           	opt stack 0
 11195  0060DC                     _SYSTEM_Initialize:
 11196                           	opt stack 24
 11197                           
 11198                           ;mcc.c: 114: INTERRUPT_Initialize();
 11199                           
 11200                           ;incstack = 0
 11201  0060DC  ECF8  F030         	call	_INTERRUPT_Initialize	;wreg free
 11202                           
 11203                           ;mcc.c: 115: PIN_MANAGER_Initialize();
 11204  0060E0  ECBC  F02F         	call	_PIN_MANAGER_Initialize	;wreg free
 11205                           
 11206                           ;mcc.c: 116: OSCILLATOR_Initialize();
 11207  0060E4  ECBF  F030         	call	_OSCILLATOR_Initialize	;wreg free
 11208                           
 11209                           ;mcc.c: 117: SPI_Initialize();
 11210  0060E8  ECD8  F030         	call	_SPI_Initialize	;wreg free
 11211                           
 11212                           ;mcc.c: 118: TMR1_Initialize();
 11213  0060EC  EC80  F02F         	call	_TMR1_Initialize	;wreg free
 11214                           
 11215                           ;mcc.c: 119: TMR0_Initialize();
 11216  0060F0  ECF5  F02F         	call	_TMR0_Initialize	;wreg free
 11217                           
 11218                           ;mcc.c: 120: ECAN_Initialize();
 11219  0060F4  EC9B  F02B         	call	_ECAN_Initialize	;wreg free
 11220  0060F8  0012               	return		;funcret
 11221  0060FA                     __end_of_SYSTEM_Initialize:
 11222                           	opt stack 0
 11223                           tblptru	equ	0xFF8
 11224                           tblptrh	equ	0xFF7
 11225                           tblptrl	equ	0xFF6
 11226                           tablat	equ	0xFF5
 11227                           prodh	equ	0xFF4
 11228                           prodl	equ	0xFF3
 11229                           intcon	equ	0xFF2
 11230                           postinc0	equ	0xFEE
 11231                           wreg	equ	0xFE8
 11232                           postdec1	equ	0xFE5
 11233                           plusw1	equ	0xFE3
 11234                           fsr1l	equ	0xFE1
 11235                           plusw2	equ	0xFDB
 11236                           status	equ	0xFD8
 11237                           
 11238 ;; *************** function _TMR1_Initialize *****************
 11239 ;; Defined at:
 11240 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 11241 ;; Parameters:    Size  Location     Type
 11242 ;;		None
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;		None
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      void 
 11247 ;; Registers used:
 11248 ;;		wreg, status,2, status,0, cstack
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11258 ;;Total ram usage:        2 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    5
 11261 ;; This function calls:
 11262 ;;		_TMR1_SetInterruptHandler
 11263 ;;		_TMR1_StartTimer
 11264 ;; This function is called by:
 11265 ;;		_SYSTEM_Initialize
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269                           	psect	text27
 11270  005F00                     __ptext27:
 11271                           	opt stack 0
 11272  005F00                     _TMR1_Initialize:
 11273                           	opt stack 24
 11274                           
 11275                           ;tmr1.c: 68: T1CON = 0x30;
 11276                           
 11277                           ;incstack = 0
 11278  005F00  0E30               	movlw	48
 11279  005F02  6ECD               	movwf	4045,c	;volatile
 11280                           
 11281                           ;tmr1.c: 71: T1GCON = 0x00;
 11282  005F04  0E00               	movlw	0
 11283  005F06  6EAA               	movwf	4010,c	;volatile
 11284                           
 11285                           ;tmr1.c: 74: TMR1H = 0x15;
 11286  005F08  0E15               	movlw	21
 11287  005F0A  6ECF               	movwf	4047,c	;volatile
 11288                           
 11289                           ;tmr1.c: 77: TMR1L = 0xA0;
 11290  005F0C  0EA0               	movlw	160
 11291  005F0E  6ECE               	movwf	4046,c	;volatile
 11292                           
 11293                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11294  005F10  50CE               	movf	4046,w,c	;volatile
 11295  005F12  CFCF F012          	movff	4047,??_TMR1_Initialize	;volatile
 11296  005F16  6A13               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 11297  005F18  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 11298  005F1C  6A12               	clrf	??_TMR1_Initialize,c
 11299  005F1E  1012               	iorwf	??_TMR1_Initialize,w,c
 11300  005F20  6E48               	movwf	_timer1ReloadVal,c	;volatile
 11301  005F22  5013               	movf	??_TMR1_Initialize+1,w,c
 11302  005F24  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
 11303                           
 11304                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 11305  005F26  909E               	bcf	3998,0,c	;volatile
 11306                           
 11307                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 11308  005F28  809D               	bsf	3997,0,c	;volatile
 11309                           
 11310                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 11311  005F2A  0EF4               	movlw	low _TMR1_DefaultInterruptHandler
 11312  005F2C  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
 11313  005F2E  0E61               	movlw	high _TMR1_DefaultInterruptHandler
 11314  005F30  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
 11315  005F32  ECE4  F030         	call	_TMR1_SetInterruptHandler	;wreg free
 11316                           
 11317                           ;tmr1.c: 92: TMR1_StartTimer();
 11318  005F36  ECF4  F030         	call	_TMR1_StartTimer	;wreg free
 11319  005F3A  0012               	return		;funcret
 11320  005F3C                     __end_of_TMR1_Initialize:
 11321                           	opt stack 0
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           intcon	equ	0xFF2
 11329                           postinc0	equ	0xFEE
 11330                           wreg	equ	0xFE8
 11331                           postdec1	equ	0xFE5
 11332                           plusw1	equ	0xFE3
 11333                           fsr1l	equ	0xFE1
 11334                           plusw2	equ	0xFDB
 11335                           status	equ	0xFD8
 11336                           
 11337 ;; *************** function _TMR1_StartTimer *****************
 11338 ;; Defined at:
 11339 ;;		line 95 in file "mcc_generated_files/tmr1.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		None
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;Total ram usage:        0 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    4
 11360 ;; This function calls:
 11361 ;;		Nothing
 11362 ;; This function is called by:
 11363 ;;		_TMR1_Initialize
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           	psect	text28
 11368  0061E8                     __ptext28:
 11369                           	opt stack 0
 11370  0061E8                     _TMR1_StartTimer:
 11371                           	opt stack 24
 11372                           
 11373                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
 11374                           
 11375                           ;incstack = 0
 11376  0061E8  80CD               	bsf	4045,0,c	;volatile
 11377  0061EA  0012               	return		;funcret
 11378  0061EC                     __end_of_TMR1_StartTimer:
 11379                           	opt stack 0
 11380                           tblptru	equ	0xFF8
 11381                           tblptrh	equ	0xFF7
 11382                           tblptrl	equ	0xFF6
 11383                           tablat	equ	0xFF5
 11384                           prodh	equ	0xFF4
 11385                           prodl	equ	0xFF3
 11386                           intcon	equ	0xFF2
 11387                           postinc0	equ	0xFEE
 11388                           wreg	equ	0xFE8
 11389                           postdec1	equ	0xFE5
 11390                           plusw1	equ	0xFE3
 11391                           fsr1l	equ	0xFE1
 11392                           plusw2	equ	0xFDB
 11393                           status	equ	0xFD8
 11394                           
 11395 ;; *************** function _TMR1_SetInterruptHandler *****************
 11396 ;; Defined at:
 11397 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 11400 ;;		 -> refresh(1), TMR1_DefaultInterruptHandler(1), 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;		None
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  1    wreg      void 
 11405 ;; Registers used:
 11406 ;;		wreg, status,2, status,0
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11416 ;;Total ram usage:        2 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    4
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_TMR1_Initialize
 11423 ;;		_main
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           	psect	text29
 11428  0061C8                     __ptext29:
 11429                           	opt stack 0
 11430  0061C8                     _TMR1_SetInterruptHandler:
 11431                           	opt stack 26
 11432                           
 11433                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
 11434                           
 11435                           ;incstack = 0
 11436  0061C8  C010  F046         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 11437  0061CC  C011  F047         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 11438  0061D0  0012               	return		;funcret
 11439  0061D2                     __end_of_TMR1_SetInterruptHandler:
 11440                           	opt stack 0
 11441                           tblptru	equ	0xFF8
 11442                           tblptrh	equ	0xFF7
 11443                           tblptrl	equ	0xFF6
 11444                           tablat	equ	0xFF5
 11445                           prodh	equ	0xFF4
 11446                           prodl	equ	0xFF3
 11447                           intcon	equ	0xFF2
 11448                           postinc0	equ	0xFEE
 11449                           wreg	equ	0xFE8
 11450                           postdec1	equ	0xFE5
 11451                           plusw1	equ	0xFE3
 11452                           fsr1l	equ	0xFE1
 11453                           plusw2	equ	0xFDB
 11454                           status	equ	0xFD8
 11455                           
 11456 ;; *************** function _TMR0_Initialize *****************
 11457 ;; Defined at:
 11458 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;		None
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1    wreg      void 
 11465 ;; Registers used:
 11466 ;;		wreg, status,2, status,0, cstack
 11467 ;; Tracked objects:
 11468 ;;		On entry : 0/0
 11469 ;;		On exit  : 0/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;Total ram usage:        2 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:    5
 11479 ;; This function calls:
 11480 ;;		_TMR0_SetInterruptHandler
 11481 ;;		_TMR0_StartTimer
 11482 ;; This function is called by:
 11483 ;;		_SYSTEM_Initialize
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           	psect	text30
 11488  005FEA                     __ptext30:
 11489                           	opt stack 0
 11490  005FEA                     _TMR0_Initialize:
 11491                           	opt stack 24
 11492                           
 11493                           ;tmr0.c: 71: T0CON = 0x15;
 11494                           
 11495                           ;incstack = 0
 11496  005FEA  0E15               	movlw	21
 11497  005FEC  6ED5               	movwf	4053,c	;volatile
 11498                           
 11499                           ;tmr0.c: 74: TMR0H = 0xCF;
 11500  005FEE  0ECF               	movlw	207
 11501  005FF0  6ED7               	movwf	4055,c	;volatile
 11502                           
 11503                           ;tmr0.c: 77: TMR0L = 0x2B;
 11504  005FF2  0E2B               	movlw	43
 11505  005FF4  6ED6               	movwf	4054,c	;volatile
 11506                           
 11507                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
 11508  005FF6  50D6               	movf	4054,w,c	;volatile
 11509  005FF8  CFD7 F012          	movff	4055,??_TMR0_Initialize	;volatile
 11510  005FFC  6A13               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 11511  005FFE  C012  F013         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 11512  006002  6A12               	clrf	??_TMR0_Initialize,c
 11513  006004  1012               	iorwf	??_TMR0_Initialize,w,c
 11514  006006  6E42               	movwf	_timer0ReloadVal,c	;volatile
 11515  006008  5013               	movf	??_TMR0_Initialize+1,w,c
 11516  00600A  6E43               	movwf	_timer0ReloadVal+1,c	;volatile
 11517                           
 11518                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
 11519  00600C  94F2               	bcf	intcon,2,c	;volatile
 11520                           
 11521                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
 11522  00600E  8AF2               	bsf	intcon,5,c	;volatile
 11523                           
 11524                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 11525  006010  0EF6               	movlw	low _TMR0_DefaultInterruptHandler
 11526  006012  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
 11527  006014  0E61               	movlw	high _TMR0_DefaultInterruptHandler
 11528  006016  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
 11529  006018  ECE9  F030         	call	_TMR0_SetInterruptHandler	;wreg free
 11530                           
 11531                           ;tmr0.c: 92: TMR0_StartTimer();
 11532  00601C  ECF6  F030         	call	_TMR0_StartTimer	;wreg free
 11533  006020  0012               	return		;funcret
 11534  006022                     __end_of_TMR0_Initialize:
 11535                           	opt stack 0
 11536                           tblptru	equ	0xFF8
 11537                           tblptrh	equ	0xFF7
 11538                           tblptrl	equ	0xFF6
 11539                           tablat	equ	0xFF5
 11540                           prodh	equ	0xFF4
 11541                           prodl	equ	0xFF3
 11542                           intcon	equ	0xFF2
 11543                           postinc0	equ	0xFEE
 11544                           wreg	equ	0xFE8
 11545                           postdec1	equ	0xFE5
 11546                           plusw1	equ	0xFE3
 11547                           fsr1l	equ	0xFE1
 11548                           plusw2	equ	0xFDB
 11549                           status	equ	0xFD8
 11550                           
 11551 ;; *************** function _TMR0_StartTimer *****************
 11552 ;; Defined at:
 11553 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;		None
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1    wreg      void 
 11560 ;; Registers used:
 11561 ;;		None
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11571 ;;Total ram usage:        0 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:    4
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_TMR0_Initialize
 11578 ;;		_main
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text31
 11583  0061EC                     __ptext31:
 11584                           	opt stack 0
 11585  0061EC                     _TMR0_StartTimer:
 11586                           	opt stack 26
 11587                           
 11588                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
 11589                           
 11590                           ;incstack = 0
 11591  0061EC  8ED5               	bsf	4053,7,c	;volatile
 11592  0061EE  0012               	return		;funcret
 11593  0061F0                     __end_of_TMR0_StartTimer:
 11594                           	opt stack 0
 11595                           tblptru	equ	0xFF8
 11596                           tblptrh	equ	0xFF7
 11597                           tblptrl	equ	0xFF6
 11598                           tablat	equ	0xFF5
 11599                           prodh	equ	0xFF4
 11600                           prodl	equ	0xFF3
 11601                           intcon	equ	0xFF2
 11602                           postinc0	equ	0xFEE
 11603                           wreg	equ	0xFE8
 11604                           postdec1	equ	0xFE5
 11605                           plusw1	equ	0xFE3
 11606                           fsr1l	equ	0xFE1
 11607                           plusw2	equ	0xFDB
 11608                           status	equ	0xFD8
 11609                           
 11610 ;; *************** function _TMR0_SetInterruptHandler *****************
 11611 ;; Defined at:
 11612 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 11615 ;;		 -> LED_blink(1), TMR0_DefaultInterruptHandler(1), 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;		None
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  1    wreg      void 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2, status,0
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11631 ;;Total ram usage:        2 bytes
 11632 ;; Hardware stack levels used:    1
 11633 ;; Hardware stack levels required when called:    4
 11634 ;; This function calls:
 11635 ;;		Nothing
 11636 ;; This function is called by:
 11637 ;;		_TMR0_Initialize
 11638 ;;		_main
 11639 ;; This function uses a non-reentrant model
 11640 ;;
 11641                           
 11642                           	psect	text32
 11643  0061D2                     __ptext32:
 11644                           	opt stack 0
 11645  0061D2                     _TMR0_SetInterruptHandler:
 11646                           	opt stack 26
 11647                           
 11648                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
 11649                           
 11650                           ;incstack = 0
 11651  0061D2  C010  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 11652  0061D6  C011  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 11653  0061DA  0012               	return		;funcret
 11654  0061DC                     __end_of_TMR0_SetInterruptHandler:
 11655                           	opt stack 0
 11656                           tblptru	equ	0xFF8
 11657                           tblptrh	equ	0xFF7
 11658                           tblptrl	equ	0xFF6
 11659                           tablat	equ	0xFF5
 11660                           prodh	equ	0xFF4
 11661                           prodl	equ	0xFF3
 11662                           intcon	equ	0xFF2
 11663                           postinc0	equ	0xFEE
 11664                           wreg	equ	0xFE8
 11665                           postdec1	equ	0xFE5
 11666                           plusw1	equ	0xFE3
 11667                           fsr1l	equ	0xFE1
 11668                           plusw2	equ	0xFDB
 11669                           status	equ	0xFD8
 11670                           
 11671 ;; *************** function _SPI_Initialize *****************
 11672 ;; Defined at:
 11673 ;;		line 63 in file "mcc_generated_files/spi.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      void 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:    4
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_SYSTEM_Initialize
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           	psect	text33
 11702  0061B0                     __ptext33:
 11703                           	opt stack 0
 11704  0061B0                     _SPI_Initialize:
 11705                           	opt stack 25
 11706                           
 11707                           ;spi.c: 68: SSPSTAT = 0x00;
 11708                           
 11709                           ;incstack = 0
 11710  0061B0  0E00               	movlw	0
 11711  0061B2  6EC7               	movwf	4039,c	;volatile
 11712                           
 11713                           ;spi.c: 71: SSPCON1 = 0x20;
 11714  0061B4  0E20               	movlw	32
 11715  0061B6  6EC6               	movwf	4038,c	;volatile
 11716                           
 11717                           ;spi.c: 74: SSPADD = 0x00;
 11718  0061B8  0E00               	movlw	0
 11719  0061BA  6EC8               	movwf	4040,c	;volatile
 11720  0061BC  0012               	return		;funcret
 11721  0061BE                     __end_of_SPI_Initialize:
 11722                           	opt stack 0
 11723                           tblptru	equ	0xFF8
 11724                           tblptrh	equ	0xFF7
 11725                           tblptrl	equ	0xFF6
 11726                           tablat	equ	0xFF5
 11727                           prodh	equ	0xFF4
 11728                           prodl	equ	0xFF3
 11729                           intcon	equ	0xFF2
 11730                           postinc0	equ	0xFEE
 11731                           wreg	equ	0xFE8
 11732                           postdec1	equ	0xFE5
 11733                           plusw1	equ	0xFE3
 11734                           fsr1l	equ	0xFE1
 11735                           plusw2	equ	0xFDB
 11736                           status	equ	0xFD8
 11737                           
 11738 ;; *************** function _PIN_MANAGER_Initialize *****************
 11739 ;; Defined at:
 11740 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;		None
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;		None
 11745 ;; Return value:  Size  Location     Type
 11746 ;;                  1    wreg      void 
 11747 ;; Registers used:
 11748 ;;		wreg, status,2
 11749 ;; Tracked objects:
 11750 ;;		On entry : 0/0
 11751 ;;		On exit  : 0/0
 11752 ;;		Unchanged: 0/0
 11753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;Total ram usage:        0 bytes
 11759 ;; Hardware stack levels used:    1
 11760 ;; Hardware stack levels required when called:    4
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_SYSTEM_Initialize
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           	psect	text34
 11769  005F78                     __ptext34:
 11770                           	opt stack 0
 11771  005F78                     _PIN_MANAGER_Initialize:
 11772                           	opt stack 25
 11773                           
 11774                           ;pin_manager.c: 57: LATE = 0x00;
 11775                           
 11776                           ;incstack = 0
 11777  005F78  0E00               	movlw	0
 11778  005F7A  6E8D               	movwf	3981,c	;volatile
 11779                           
 11780                           ;pin_manager.c: 58: LATD = 0x00;
 11781  005F7C  0E00               	movlw	0
 11782  005F7E  6E8C               	movwf	3980,c	;volatile
 11783                           
 11784                           ;pin_manager.c: 59: LATA = 0x00;
 11785  005F80  0E00               	movlw	0
 11786  005F82  6E89               	movwf	3977,c	;volatile
 11787                           
 11788                           ;pin_manager.c: 60: LATB = 0x00;
 11789  005F84  0E00               	movlw	0
 11790  005F86  6E8A               	movwf	3978,c	;volatile
 11791                           
 11792                           ;pin_manager.c: 61: LATC = 0x00;
 11793  005F88  0E00               	movlw	0
 11794  005F8A  6E8B               	movwf	3979,c	;volatile
 11795                           
 11796                           ;pin_manager.c: 66: TRISE = 0x07;
 11797  005F8C  0E07               	movlw	7
 11798  005F8E  6E96               	movwf	3990,c	;volatile
 11799                           
 11800                           ;pin_manager.c: 67: TRISA = 0xEC;
 11801  005F90  0EEC               	movlw	236
 11802  005F92  6E92               	movwf	3986,c	;volatile
 11803                           
 11804                           ;pin_manager.c: 68: TRISB = 0xDB;
 11805  005F94  0EDB               	movlw	219
 11806  005F96  6E93               	movwf	3987,c	;volatile
 11807                           
 11808                           ;pin_manager.c: 69: TRISC = 0xD5;
 11809  005F98  0ED5               	movlw	213
 11810  005F9A  6E94               	movwf	3988,c	;volatile
 11811                           
 11812                           ;pin_manager.c: 70: TRISD = 0xC2;
 11813  005F9C  0EC2               	movlw	194
 11814  005F9E  6E95               	movwf	3989,c	;volatile
 11815                           
 11816                           ;pin_manager.c: 75: ANCON0 = 0xFF;
 11817  005FA0  010F               	movlb	15	; () banked
 11818  005FA2  695D               	setf	93,b	;volatile
 11819                           
 11820                           ;pin_manager.c: 76: ANCON1 = 0x7D;
 11821  005FA4  0E7D               	movlw	125
 11822  005FA6  010F               	movlb	15	; () banked
 11823  005FA8  6F5C               	movwf	92,b	;volatile
 11824                           
 11825                           ;pin_manager.c: 81: WPUB = 0xCF;
 11826  005FAA  0ECF               	movlw	207
 11827  005FAC  010F               	movlb	15	; () banked
 11828  005FAE  6F5B               	movwf	91,b	;volatile
 11829                           
 11830                           ; BSR set to: 15
 11831  005FB0  0012               	return		;funcret
 11832  005FB2                     __end_of_PIN_MANAGER_Initialize:
 11833                           	opt stack 0
 11834                           tblptru	equ	0xFF8
 11835                           tblptrh	equ	0xFF7
 11836                           tblptrl	equ	0xFF6
 11837                           tablat	equ	0xFF5
 11838                           prodh	equ	0xFF4
 11839                           prodl	equ	0xFF3
 11840                           intcon	equ	0xFF2
 11841                           postinc0	equ	0xFEE
 11842                           wreg	equ	0xFE8
 11843                           postdec1	equ	0xFE5
 11844                           plusw1	equ	0xFE3
 11845                           fsr1l	equ	0xFE1
 11846                           plusw2	equ	0xFDB
 11847                           status	equ	0xFD8
 11848                           
 11849 ;; *************** function _OSCILLATOR_Initialize *****************
 11850 ;; Defined at:
 11851 ;;		line 123 in file "mcc_generated_files/mcc.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		wreg, status,2
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11869 ;;Total ram usage:        0 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    4
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_SYSTEM_Initialize
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text35
 11880  00617E                     __ptext35:
 11881                           	opt stack 0
 11882  00617E                     _OSCILLATOR_Initialize:
 11883                           	opt stack 25
 11884                           
 11885                           ;mcc.c: 126: OSCCON = 0x60;
 11886                           
 11887                           ; BSR set to: 15
 11888                           ;incstack = 0
 11889  00617E  0E60               	movlw	96
 11890  006180  6ED3               	movwf	4051,c	;volatile
 11891                           
 11892                           ;mcc.c: 128: OSCCON2 = 0x00;
 11893  006182  0E00               	movlw	0
 11894  006184  6ED2               	movwf	4050,c	;volatile
 11895                           
 11896                           ;mcc.c: 130: OSCTUNE = 0x00;
 11897  006186  0E00               	movlw	0
 11898  006188  6E9B               	movwf	3995,c	;volatile
 11899                           
 11900                           ;mcc.c: 132: REFOCON = 0x00;
 11901  00618A  0E00               	movlw	0
 11902  00618C  6E9A               	movwf	3994,c	;volatile
 11903  00618E  0012               	return		;funcret
 11904  006190                     __end_of_OSCILLATOR_Initialize:
 11905                           	opt stack 0
 11906                           tblptru	equ	0xFF8
 11907                           tblptrh	equ	0xFF7
 11908                           tblptrl	equ	0xFF6
 11909                           tablat	equ	0xFF5
 11910                           prodh	equ	0xFF4
 11911                           prodl	equ	0xFF3
 11912                           intcon	equ	0xFF2
 11913                           postinc0	equ	0xFEE
 11914                           wreg	equ	0xFE8
 11915                           postdec1	equ	0xFE5
 11916                           plusw1	equ	0xFE3
 11917                           fsr1l	equ	0xFE1
 11918                           plusw2	equ	0xFDB
 11919                           status	equ	0xFD8
 11920                           
 11921 ;; *************** function _INTERRUPT_Initialize *****************
 11922 ;; Defined at:
 11923 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;		None
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;		None
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  1    wreg      void 
 11930 ;; Registers used:
 11931 ;;		None
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11941 ;;Total ram usage:        0 bytes
 11942 ;; Hardware stack levels used:    1
 11943 ;; Hardware stack levels required when called:    4
 11944 ;; This function calls:
 11945 ;;		Nothing
 11946 ;; This function is called by:
 11947 ;;		_SYSTEM_Initialize
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text36
 11952  0061F0                     __ptext36:
 11953                           	opt stack 0
 11954  0061F0                     _INTERRUPT_Initialize:
 11955                           	opt stack 25
 11956                           
 11957                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
 11958                           
 11959                           ;incstack = 0
 11960  0061F0  9ED0               	bcf	4048,7,c	;volatile
 11961  0061F2  0012               	return		;funcret
 11962  0061F4                     __end_of_INTERRUPT_Initialize:
 11963                           	opt stack 0
 11964                           tblptru	equ	0xFF8
 11965                           tblptrh	equ	0xFF7
 11966                           tblptrl	equ	0xFF6
 11967                           tablat	equ	0xFF5
 11968                           prodh	equ	0xFF4
 11969                           prodl	equ	0xFF3
 11970                           intcon	equ	0xFF2
 11971                           postinc0	equ	0xFEE
 11972                           wreg	equ	0xFE8
 11973                           postdec1	equ	0xFE5
 11974                           plusw1	equ	0xFE3
 11975                           fsr1l	equ	0xFE1
 11976                           plusw2	equ	0xFDB
 11977                           status	equ	0xFD8
 11978                           
 11979 ;; *************** function _ECAN_Initialize *****************
 11980 ;; Defined at:
 11981 ;;		line 63 in file "mcc_generated_files/ecan.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;		None
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		wreg, status,2, status,0
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11999 ;;Total ram usage:        1 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; Hardware stack levels required when called:    4
 12002 ;; This function calls:
 12003 ;;		Nothing
 12004 ;; This function is called by:
 12005 ;;		_SYSTEM_Initialize
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text37
 12010  005736                     __ptext37:
 12011                           	opt stack 0
 12012  005736                     _ECAN_Initialize:
 12013                           	opt stack 25
 12014                           
 12015                           ;ecan.c: 65: CANCON = 0x80;
 12016                           
 12017                           ;incstack = 0
 12018  005736  0E80               	movlw	128
 12019  005738  6E6F               	movwf	3951,c	;volatile
 12020  00573A                     l3584:
 12021  00573A  506E               	movf	3950,w,c	;volatile
 12022  00573C  0BE0               	andlw	224
 12023  00573E  0A80               	xorlw	128
 12024  005740  A4D8               	btfss	status,2,c
 12025  005742  D7FB               	goto	l3584
 12026                           
 12027                           ;ecan.c: 71: ECANCON = 0x00;
 12028  005744  0E00               	movlw	0
 12029  005746  6E72               	movwf	3954,c	;volatile
 12030                           
 12031                           ;ecan.c: 85: RXM0EIDH = 0xFF;
 12032  005748  010E               	movlb	14	; () banked
 12033  00574A  69FA               	setf	250,b	;volatile
 12034                           
 12035                           ; BSR set to: 14
 12036                           ;ecan.c: 86: RXM0EIDL = 0xFF;
 12037  00574C  010E               	movlb	14	; () banked
 12038  00574E  69FB               	setf	251,b	;volatile
 12039                           
 12040                           ; BSR set to: 14
 12041                           ;ecan.c: 87: RXM0SIDH = 0xFF;
 12042  005750  010E               	movlb	14	; () banked
 12043  005752  69F8               	setf	248,b	;volatile
 12044                           
 12045                           ; BSR set to: 14
 12046                           ;ecan.c: 88: RXM0SIDL = 0xFF;
 12047  005754  010E               	movlb	14	; () banked
 12048  005756  69F9               	setf	249,b	;volatile
 12049                           
 12050                           ; BSR set to: 14
 12051                           ;ecan.c: 90: RXM1EIDH = 0xFF;
 12052  005758  010E               	movlb	14	; () banked
 12053  00575A  69FE               	setf	254,b	;volatile
 12054                           
 12055                           ; BSR set to: 14
 12056                           ;ecan.c: 91: RXM1EIDL = 0xFF;
 12057  00575C  010E               	movlb	14	; () banked
 12058  00575E  69FF               	setf	255,b	;volatile
 12059                           
 12060                           ; BSR set to: 14
 12061                           ;ecan.c: 92: RXM1SIDH = 0xFF;
 12062  005760  010E               	movlb	14	; () banked
 12063  005762  69FC               	setf	252,b	;volatile
 12064                           
 12065                           ; BSR set to: 14
 12066                           ;ecan.c: 93: RXM1SIDL = 0xFF;
 12067  005764  010E               	movlb	14	; () banked
 12068  005766  69FD               	setf	253,b	;volatile
 12069                           
 12070                           ;ecan.c: 99: RXF0EIDH = 0x00;
 12071  005768  0E00               	movlw	0
 12072  00576A  010E               	movlb	14	; () banked
 12073  00576C  6FE2               	movwf	226,b	;volatile
 12074                           
 12075                           ;ecan.c: 100: RXF0EIDL = 0x00;
 12076  00576E  0E00               	movlw	0
 12077  005770  010E               	movlb	14	; () banked
 12078  005772  6FE3               	movwf	227,b	;volatile
 12079                           
 12080                           ;ecan.c: 101: RXF0SIDH = 0x00;
 12081  005774  0E00               	movlw	0
 12082  005776  010E               	movlb	14	; () banked
 12083  005778  6FE0               	movwf	224,b	;volatile
 12084                           
 12085                           ;ecan.c: 102: RXF0SIDL = 0x00;
 12086  00577A  0E00               	movlw	0
 12087  00577C  010E               	movlb	14	; () banked
 12088  00577E  6FE1               	movwf	225,b	;volatile
 12089                           
 12090                           ;ecan.c: 104: RXF1EIDH = 0x00;
 12091  005780  0E00               	movlw	0
 12092  005782  010E               	movlb	14	; () banked
 12093  005784  6FE6               	movwf	230,b	;volatile
 12094                           
 12095                           ;ecan.c: 105: RXF1EIDL = 0x00;
 12096  005786  0E00               	movlw	0
 12097  005788  010E               	movlb	14	; () banked
 12098  00578A  6FE7               	movwf	231,b	;volatile
 12099                           
 12100                           ;ecan.c: 106: RXF1SIDH = 0x00;
 12101  00578C  0E00               	movlw	0
 12102  00578E  010E               	movlb	14	; () banked
 12103  005790  6FE4               	movwf	228,b	;volatile
 12104                           
 12105                           ;ecan.c: 107: RXF1SIDL = 0x00;
 12106  005792  0E00               	movlw	0
 12107  005794  010E               	movlb	14	; () banked
 12108  005796  6FE5               	movwf	229,b	;volatile
 12109                           
 12110                           ;ecan.c: 109: RXF2EIDH = 0x00;
 12111  005798  0E00               	movlw	0
 12112  00579A  010E               	movlb	14	; () banked
 12113  00579C  6FEA               	movwf	234,b	;volatile
 12114                           
 12115                           ;ecan.c: 110: RXF2EIDL = 0x00;
 12116  00579E  0E00               	movlw	0
 12117  0057A0  010E               	movlb	14	; () banked
 12118  0057A2  6FEB               	movwf	235,b	;volatile
 12119                           
 12120                           ;ecan.c: 111: RXF2SIDH = 0x00;
 12121  0057A4  0E00               	movlw	0
 12122  0057A6  010E               	movlb	14	; () banked
 12123  0057A8  6FE8               	movwf	232,b	;volatile
 12124                           
 12125                           ;ecan.c: 112: RXF2SIDL = 0x00;
 12126  0057AA  0E00               	movlw	0
 12127  0057AC  010E               	movlb	14	; () banked
 12128  0057AE  6FE9               	movwf	233,b	;volatile
 12129                           
 12130                           ;ecan.c: 114: RXF3EIDH = 0x00;
 12131  0057B0  0E00               	movlw	0
 12132  0057B2  010E               	movlb	14	; () banked
 12133  0057B4  6FEE               	movwf	238,b	;volatile
 12134                           
 12135                           ;ecan.c: 115: RXF3EIDL = 0x00;
 12136  0057B6  0E00               	movlw	0
 12137  0057B8  010E               	movlb	14	; () banked
 12138  0057BA  6FEF               	movwf	239,b	;volatile
 12139                           
 12140                           ;ecan.c: 116: RXF3SIDH = 0x00;
 12141  0057BC  0E00               	movlw	0
 12142  0057BE  010E               	movlb	14	; () banked
 12143  0057C0  6FEC               	movwf	236,b	;volatile
 12144                           
 12145                           ;ecan.c: 117: RXF3SIDL = 0x00;
 12146  0057C2  0E00               	movlw	0
 12147  0057C4  010E               	movlb	14	; () banked
 12148  0057C6  6FED               	movwf	237,b	;volatile
 12149                           
 12150                           ;ecan.c: 119: RXF4EIDH = 0x00;
 12151  0057C8  0E00               	movlw	0
 12152  0057CA  010E               	movlb	14	; () banked
 12153  0057CC  6FF2               	movwf	242,b	;volatile
 12154                           
 12155                           ;ecan.c: 120: RXF4EIDL = 0x00;
 12156  0057CE  0E00               	movlw	0
 12157  0057D0  010E               	movlb	14	; () banked
 12158  0057D2  6FF3               	movwf	243,b	;volatile
 12159                           
 12160                           ;ecan.c: 121: RXF4SIDH = 0x00;
 12161  0057D4  0E00               	movlw	0
 12162  0057D6  010E               	movlb	14	; () banked
 12163  0057D8  6FF0               	movwf	240,b	;volatile
 12164                           
 12165                           ;ecan.c: 122: RXF4SIDL = 0x00;
 12166  0057DA  0E00               	movlw	0
 12167  0057DC  010E               	movlb	14	; () banked
 12168  0057DE  6FF1               	movwf	241,b	;volatile
 12169                           
 12170                           ;ecan.c: 124: RXF5EIDH = 0x00;
 12171  0057E0  0E00               	movlw	0
 12172  0057E2  010E               	movlb	14	; () banked
 12173  0057E4  6FF6               	movwf	246,b	;volatile
 12174                           
 12175                           ;ecan.c: 125: RXF5EIDL = 0x00;
 12176  0057E6  0E00               	movlw	0
 12177  0057E8  010E               	movlb	14	; () banked
 12178  0057EA  6FF7               	movwf	247,b	;volatile
 12179                           
 12180                           ;ecan.c: 126: RXF5SIDH = 0x00;
 12181  0057EC  0E00               	movlw	0
 12182  0057EE  010E               	movlb	14	; () banked
 12183  0057F0  6FF4               	movwf	244,b	;volatile
 12184                           
 12185                           ;ecan.c: 127: RXF5SIDL = 0x00;
 12186  0057F2  0E00               	movlw	0
 12187  0057F4  010E               	movlb	14	; () banked
 12188  0057F6  6FF5               	movwf	245,b	;volatile
 12189                           
 12190                           ;ecan.c: 142: BRGCON1 = 0x03;
 12191  0057F8  0E03               	movlw	3
 12192  0057FA  010E               	movlb	14	; () banked
 12193  0057FC  6F43               	movwf	67,b	;volatile
 12194                           
 12195                           ;ecan.c: 143: BRGCON2 = 0x98;
 12196  0057FE  0E98               	movlw	152
 12197  005800  010E               	movlb	14	; () banked
 12198  005802  6F44               	movwf	68,b	;volatile
 12199                           
 12200                           ;ecan.c: 144: BRGCON3 = 0x01;
 12201  005804  0E01               	movlw	1
 12202  005806  010E               	movlb	14	; () banked
 12203  005808  6F45               	movwf	69,b	;volatile
 12204                           
 12205                           ;ecan.c: 146: CANCON = 0x00;
 12206  00580A  0E00               	movlw	0
 12207  00580C  6E6F               	movwf	3951,c	;volatile
 12208  00580E                     l3604:
 12209  00580E  CF6E F010          	movff	3950,??_ECAN_Initialize	;volatile
 12210  005812  0EE0               	movlw	224
 12211  005814  1610               	andwf	??_ECAN_Initialize,f,c
 12212  005816  B4D8               	btfsc	status,2,c
 12213  005818  0012               	return	
 12214  00581A  D7F9               	goto	l3604
 12215  00581C                     __end_of_ECAN_Initialize:
 12216                           	opt stack 0
 12217                           tblptru	equ	0xFF8
 12218                           tblptrh	equ	0xFF7
 12219                           tblptrl	equ	0xFF6
 12220                           tablat	equ	0xFF5
 12221                           prodh	equ	0xFF4
 12222                           prodl	equ	0xFF3
 12223                           intcon	equ	0xFF2
 12224                           postinc0	equ	0xFEE
 12225                           wreg	equ	0xFE8
 12226                           postdec1	equ	0xFE5
 12227                           plusw1	equ	0xFE3
 12228                           fsr1l	equ	0xFE1
 12229                           plusw2	equ	0xFDB
 12230                           status	equ	0xFD8
 12231                           
 12232 ;; *************** function _FT800_Init *****************
 12233 ;; Defined at:
 12234 ;;		line 143 in file "FT800.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;		None
 12237 ;; Auto vars:     Size  Location     Type
 12238 ;;		None
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  1    wreg      void 
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0, cstack
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12252 ;;Total ram usage:        2 bytes
 12253 ;; Hardware stack levels used:    1
 12254 ;; Hardware stack levels required when called:    6
 12255 ;; This function calls:
 12256 ;;		_host_command
 12257 ;;		_rd16
 12258 ;;		_wr16
 12259 ;;		_wr32
 12260 ;;		_wr8
 12261 ;; This function is called by:
 12262 ;;		_main
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text38
 12267  004DF8                     __ptext38:
 12268                           	opt stack 0
 12269  004DF8                     _FT800_Init:
 12270                           	opt stack 24
 12271                           
 12272                           ;FT800.c: 145: LATCbits.LATC1 = 0;
 12273                           
 12274                           ;incstack = 0
 12275  004DF8  928B               	bcf	3979,1,c	;volatile
 12276                           
 12277                           ;FT800.c: 146: _delay((unsigned long)((20)*(64000000/4000.0)));
 12278  004DFA  0E02               	movlw	2
 12279  004DFC  6E1D               	movwf	(??_FT800_Init+1)& (0+255),c
 12280  004DFE  0EA0               	movlw	160
 12281  004E00  6E1C               	movwf	??_FT800_Init& (0+255),c
 12282  004E02  0E92               	movlw	146
 12283  004E04                     u1627:
 12284  004E04  2EE8               	decfsz	wreg,f,c
 12285  004E06  D7FE               	bra	u1627
 12286  004E08  2E1C               	decfsz	??_FT800_Init& (0+255),f,c
 12287  004E0A  D7FC               	bra	u1627
 12288  004E0C  2E1D               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 12289  004E0E  D7FA               	bra	u1627
 12290  004E10  D000               	nop2	
 12291                           
 12292                           ;FT800.c: 147: LATCbits.LATC1 = 1;
 12293  004E12  828B               	bsf	3979,1,c	;volatile
 12294                           
 12295                           ;FT800.c: 148: _delay((unsigned long)((20)*(64000000/4000.0)));
 12296  004E14  0E02               	movlw	2
 12297  004E16  6E1D               	movwf	(??_FT800_Init+1)& (0+255),c
 12298  004E18  0EA0               	movlw	160
 12299  004E1A  6E1C               	movwf	??_FT800_Init& (0+255),c
 12300  004E1C  0E92               	movlw	146
 12301  004E1E                     u1637:
 12302  004E1E  2EE8               	decfsz	wreg,f,c
 12303  004E20  D7FE               	bra	u1637
 12304  004E22  2E1C               	decfsz	??_FT800_Init& (0+255),f,c
 12305  004E24  D7FC               	bra	u1637
 12306  004E26  2E1D               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 12307  004E28  D7FA               	bra	u1637
 12308  004E2A  D000               	nop2	
 12309                           
 12310                           ;FT800.c: 150: host_command(0x00);
 12311  004E2C  0E00               	movlw	0
 12312  004E2E  ECA7  F030         	call	_host_command
 12313                           
 12314                           ;FT800.c: 152: host_command(0x44);
 12315  004E32  0E44               	movlw	68
 12316  004E34  ECA7  F030         	call	_host_command
 12317                           
 12318                           ;FT800.c: 154: host_command(0x62);
 12319  004E38  0E62               	movlw	98
 12320  004E3A  ECA7  F030         	call	_host_command
 12321                           
 12322                           ;FT800.c: 157: wr16(1057840UL, 480);
 12323  004E3E  0E30               	movlw	48
 12324  004E40  6E11               	movwf	wr16@addr,c
 12325  004E42  0E24               	movlw	36
 12326  004E44  6E12               	movwf	wr16@addr+1,c
 12327  004E46  0E10               	movlw	16
 12328  004E48  6E13               	movwf	wr16@addr+2,c
 12329  004E4A  0E01               	movlw	1
 12330  004E4C  6E15               	movwf	wr16@value+1,c
 12331  004E4E  0EE0               	movlw	224
 12332  004E50  6E14               	movwf	wr16@value,c
 12333  004E52  EC9E  F02F         	call	_wr16	;wreg free
 12334                           
 12335                           ;FT800.c: 158: wr16(1057860UL, 272);
 12336  004E56  0E44               	movlw	68
 12337  004E58  6E11               	movwf	wr16@addr,c
 12338  004E5A  0E24               	movlw	36
 12339  004E5C  6E12               	movwf	wr16@addr+1,c
 12340  004E5E  0E10               	movlw	16
 12341  004E60  6E13               	movwf	wr16@addr+2,c
 12342  004E62  0E01               	movlw	1
 12343  004E64  6E15               	movwf	wr16@value+1,c
 12344  004E66  0E10               	movlw	16
 12345  004E68  6E14               	movwf	wr16@value,c
 12346  004E6A  EC9E  F02F         	call	_wr16	;wreg free
 12347                           
 12348                           ;FT800.c: 159: wr16(1057832UL, 525);
 12349  004E6E  0E28               	movlw	40
 12350  004E70  6E11               	movwf	wr16@addr,c
 12351  004E72  0E24               	movlw	36
 12352  004E74  6E12               	movwf	wr16@addr+1,c
 12353  004E76  0E10               	movlw	16
 12354  004E78  6E13               	movwf	wr16@addr+2,c
 12355  004E7A  0E02               	movlw	2
 12356  004E7C  6E15               	movwf	wr16@value+1,c
 12357  004E7E  0E0D               	movlw	13
 12358  004E80  6E14               	movwf	wr16@value,c
 12359  004E82  EC9E  F02F         	call	_wr16	;wreg free
 12360                           
 12361                           ;FT800.c: 160: wr16(1057844UL, 0);
 12362  004E86  0E34               	movlw	52
 12363  004E88  6E11               	movwf	wr16@addr,c
 12364  004E8A  0E24               	movlw	36
 12365  004E8C  6E12               	movwf	wr16@addr+1,c
 12366  004E8E  0E10               	movlw	16
 12367  004E90  6E13               	movwf	wr16@addr+2,c
 12368  004E92  0E00               	movlw	0
 12369  004E94  6E15               	movwf	wr16@value+1,c
 12370  004E96  0E00               	movlw	0
 12371  004E98  6E14               	movwf	wr16@value,c
 12372  004E9A  EC9E  F02F         	call	_wr16	;wreg free
 12373                           
 12374                           ;FT800.c: 161: wr16(1057848UL, 41);
 12375  004E9E  0E38               	movlw	56
 12376  004EA0  6E11               	movwf	wr16@addr,c
 12377  004EA2  0E24               	movlw	36
 12378  004EA4  6E12               	movwf	wr16@addr+1,c
 12379  004EA6  0E10               	movlw	16
 12380  004EA8  6E13               	movwf	wr16@addr+2,c
 12381  004EAA  0E00               	movlw	0
 12382  004EAC  6E15               	movwf	wr16@value+1,c
 12383  004EAE  0E29               	movlw	41
 12384  004EB0  6E14               	movwf	wr16@value,c
 12385  004EB2  EC9E  F02F         	call	_wr16	;wreg free
 12386                           
 12387                           ;FT800.c: 162: wr16(1057836UL, 43);
 12388  004EB6  0E2C               	movlw	44
 12389  004EB8  6E11               	movwf	wr16@addr,c
 12390  004EBA  0E24               	movlw	36
 12391  004EBC  6E12               	movwf	wr16@addr+1,c
 12392  004EBE  0E10               	movlw	16
 12393  004EC0  6E13               	movwf	wr16@addr+2,c
 12394  004EC2  0E00               	movlw	0
 12395  004EC4  6E15               	movwf	wr16@value+1,c
 12396  004EC6  0E2B               	movlw	43
 12397  004EC8  6E14               	movwf	wr16@value,c
 12398  004ECA  EC9E  F02F         	call	_wr16	;wreg free
 12399                           
 12400                           ;FT800.c: 163: wr16(1057852UL, 286);
 12401  004ECE  0E3C               	movlw	60
 12402  004ED0  6E11               	movwf	wr16@addr,c
 12403  004ED2  0E24               	movlw	36
 12404  004ED4  6E12               	movwf	wr16@addr+1,c
 12405  004ED6  0E10               	movlw	16
 12406  004ED8  6E13               	movwf	wr16@addr+2,c
 12407  004EDA  0E01               	movlw	1
 12408  004EDC  6E15               	movwf	wr16@value+1,c
 12409  004EDE  0E1E               	movlw	30
 12410  004EE0  6E14               	movwf	wr16@value,c
 12411  004EE2  EC9E  F02F         	call	_wr16	;wreg free
 12412                           
 12413                           ;FT800.c: 164: wr16(1057864UL, 0);
 12414  004EE6  0E48               	movlw	72
 12415  004EE8  6E11               	movwf	wr16@addr,c
 12416  004EEA  0E24               	movlw	36
 12417  004EEC  6E12               	movwf	wr16@addr+1,c
 12418  004EEE  0E10               	movlw	16
 12419  004EF0  6E13               	movwf	wr16@addr+2,c
 12420  004EF2  0E00               	movlw	0
 12421  004EF4  6E15               	movwf	wr16@value+1,c
 12422  004EF6  0E00               	movlw	0
 12423  004EF8  6E14               	movwf	wr16@value,c
 12424  004EFA  EC9E  F02F         	call	_wr16	;wreg free
 12425                           
 12426                           ;FT800.c: 165: wr16(1057868UL, 10);
 12427  004EFE  0E4C               	movlw	76
 12428  004F00  6E11               	movwf	wr16@addr,c
 12429  004F02  0E24               	movlw	36
 12430  004F04  6E12               	movwf	wr16@addr+1,c
 12431  004F06  0E10               	movlw	16
 12432  004F08  6E13               	movwf	wr16@addr+2,c
 12433  004F0A  0E00               	movlw	0
 12434  004F0C  6E15               	movwf	wr16@value+1,c
 12435  004F0E  0E0A               	movlw	10
 12436  004F10  6E14               	movwf	wr16@value,c
 12437  004F12  EC9E  F02F         	call	_wr16	;wreg free
 12438                           
 12439                           ;FT800.c: 166: wr16(1057856UL, 12);
 12440  004F16  0E40               	movlw	64
 12441  004F18  6E11               	movwf	wr16@addr,c
 12442  004F1A  0E24               	movlw	36
 12443  004F1C  6E12               	movwf	wr16@addr+1,c
 12444  004F1E  0E10               	movlw	16
 12445  004F20  6E13               	movwf	wr16@addr+2,c
 12446  004F22  0E00               	movlw	0
 12447  004F24  6E15               	movwf	wr16@value+1,c
 12448  004F26  0E0C               	movlw	12
 12449  004F28  6E14               	movwf	wr16@value,c
 12450  004F2A  EC9E  F02F         	call	_wr16	;wreg free
 12451                           
 12452                           ;FT800.c: 167: wr8(1057892UL, 0);
 12453  004F2E  0E64               	movlw	100
 12454  004F30  6E11               	movwf	wr8@addr,c
 12455  004F32  0E24               	movlw	36
 12456  004F34  6E12               	movwf	wr8@addr+1,c
 12457  004F36  0E10               	movlw	16
 12458  004F38  6E13               	movwf	wr8@addr+2,c
 12459  004F3A  0E00               	movlw	0
 12460  004F3C  6E14               	movwf	wr8@value,c
 12461  004F3E  EC11  F030         	call	_wr8	;wreg free
 12462                           
 12463                           ;FT800.c: 168: wr8(1057884UL, 0);
 12464  004F42  0E5C               	movlw	92
 12465  004F44  6E11               	movwf	wr8@addr,c
 12466  004F46  0E24               	movlw	36
 12467  004F48  6E12               	movwf	wr8@addr+1,c
 12468  004F4A  0E10               	movlw	16
 12469  004F4C  6E13               	movwf	wr8@addr+2,c
 12470  004F4E  0E00               	movlw	0
 12471  004F50  6E14               	movwf	wr8@value,c
 12472  004F52  EC11  F030         	call	_wr8	;wreg free
 12473                           
 12474                           ;FT800.c: 169: wr16(1057880UL, 0x01B6);
 12475  004F56  0E58               	movlw	88
 12476  004F58  6E11               	movwf	wr16@addr,c
 12477  004F5A  0E24               	movlw	36
 12478  004F5C  6E12               	movwf	wr16@addr+1,c
 12479  004F5E  0E10               	movlw	16
 12480  004F60  6E13               	movwf	wr16@addr+2,c
 12481  004F62  0E01               	movlw	1
 12482  004F64  6E15               	movwf	wr16@value+1,c
 12483  004F66  0EB6               	movlw	182
 12484  004F68  6E14               	movwf	wr16@value,c
 12485  004F6A  EC9E  F02F         	call	_wr16	;wreg free
 12486                           
 12487                           ;FT800.c: 170: wr8(1057888UL, 0x0000);
 12488  004F6E  0E60               	movlw	96
 12489  004F70  6E11               	movwf	wr8@addr,c
 12490  004F72  0E24               	movlw	36
 12491  004F74  6E12               	movwf	wr8@addr+1,c
 12492  004F76  0E10               	movlw	16
 12493  004F78  6E13               	movwf	wr8@addr+2,c
 12494  004F7A  0E00               	movlw	0
 12495  004F7C  6E14               	movwf	wr8@value,c
 12496  004F7E  EC11  F030         	call	_wr8	;wreg free
 12497                           
 12498                           ;FT800.c: 173: wr8(1057896UL, 0);
 12499  004F82  0E68               	movlw	104
 12500  004F84  6E11               	movwf	wr8@addr,c
 12501  004F86  0E24               	movlw	36
 12502  004F88  6E12               	movwf	wr8@addr+1,c
 12503  004F8A  0E10               	movlw	16
 12504  004F8C  6E13               	movwf	wr8@addr+2,c
 12505  004F8E  0E00               	movlw	0
 12506  004F90  6E14               	movwf	wr8@value,c
 12507  004F92  EC11  F030         	call	_wr8	;wreg free
 12508                           
 12509                           ;FT800.c: 175: wr8(1057876UL, 0);
 12510  004F96  0E54               	movlw	84
 12511  004F98  6E11               	movwf	wr8@addr,c
 12512  004F9A  0E24               	movlw	36
 12513  004F9C  6E12               	movwf	wr8@addr+1,c
 12514  004F9E  0E10               	movlw	16
 12515  004FA0  6E13               	movwf	wr8@addr+2,c
 12516  004FA2  0E00               	movlw	0
 12517  004FA4  6E14               	movwf	wr8@value,c
 12518  004FA6  EC11  F030         	call	_wr8	;wreg free
 12519                           
 12520                           ;FT800.c: 182: wr32(1048576UL+0,((2UL<<24)|(((0)&255UL)<<16)|(((26)&255UL)<<8)|(((0)&255
      +                          UL)<<0)));
 12521  004FAA  0E00               	movlw	0
 12522  004FAC  6E11               	movwf	wr32@addr,c
 12523  004FAE  0E00               	movlw	0
 12524  004FB0  6E12               	movwf	wr32@addr+1,c
 12525  004FB2  0E10               	movlw	16
 12526  004FB4  6E13               	movwf	wr32@addr+2,c
 12527  004FB6  0E00               	movlw	0
 12528  004FB8  6E14               	movwf	wr32@value,c
 12529  004FBA  0E1A               	movlw	26
 12530  004FBC  6E15               	movwf	wr32@value+1,c
 12531  004FBE  0E00               	movlw	0
 12532  004FC0  6E16               	movwf	wr32@value+2,c
 12533  004FC2  0E02               	movlw	2
 12534  004FC4  6E17               	movwf	wr32@value+3,c
 12535  004FC6  EC30  F02E         	call	_wr32	;wreg free
 12536                           
 12537                           ;FT800.c: 183: wr32(1048576UL+4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)
      +                          ));
 12538  004FCA  0E04               	movlw	4
 12539  004FCC  6E11               	movwf	wr32@addr,c
 12540  004FCE  0E00               	movlw	0
 12541  004FD0  6E12               	movwf	wr32@addr+1,c
 12542  004FD2  0E10               	movlw	16
 12543  004FD4  6E13               	movwf	wr32@addr+2,c
 12544  004FD6  0E07               	movlw	7
 12545  004FD8  6E14               	movwf	wr32@value,c
 12546  004FDA  0E00               	movlw	0
 12547  004FDC  6E15               	movwf	wr32@value+1,c
 12548  004FDE  0E00               	movlw	0
 12549  004FE0  6E16               	movwf	wr32@value+2,c
 12550  004FE2  0E26               	movlw	38
 12551  004FE4  6E17               	movwf	wr32@value+3,c
 12552  004FE6  EC30  F02E         	call	_wr32	;wreg free
 12553                           
 12554                           ;FT800.c: 184: wr32(1048576UL+8,((0UL<<24)));
 12555  004FEA  0E08               	movlw	8
 12556  004FEC  6E11               	movwf	wr32@addr,c
 12557  004FEE  0E00               	movlw	0
 12558  004FF0  6E12               	movwf	wr32@addr+1,c
 12559  004FF2  0E10               	movlw	16
 12560  004FF4  6E13               	movwf	wr32@addr+2,c
 12561  004FF6  0E00               	movlw	0
 12562  004FF8  6E14               	movwf	wr32@value,c
 12563  004FFA  0E00               	movlw	0
 12564  004FFC  6E15               	movwf	wr32@value+1,c
 12565  004FFE  0E00               	movlw	0
 12566  005000  6E16               	movwf	wr32@value+2,c
 12567  005002  0E00               	movlw	0
 12568  005004  6E17               	movwf	wr32@value+3,c
 12569  005006  EC30  F02E         	call	_wr32	;wreg free
 12570                           
 12571                           ;FT800.c: 186: wr8(1057872UL,2UL);
 12572  00500A  0E50               	movlw	80
 12573  00500C  6E11               	movwf	wr8@addr,c
 12574  00500E  0E24               	movlw	36
 12575  005010  6E12               	movwf	wr8@addr+1,c
 12576  005012  0E10               	movlw	16
 12577  005014  6E13               	movwf	wr8@addr+2,c
 12578  005016  0E02               	movlw	2
 12579  005018  6E14               	movwf	wr8@value,c
 12580  00501A  EC11  F030         	call	_wr8	;wreg free
 12581                           
 12582                           ;FT800.c: 191: wr8(1057932UL, 0xfc);
 12583  00501E  0E8C               	movlw	140
 12584  005020  6E11               	movwf	wr8@addr,c
 12585  005022  0E24               	movlw	36
 12586  005024  6E12               	movwf	wr8@addr+1,c
 12587  005026  0E10               	movlw	16
 12588  005028  6E13               	movwf	wr8@addr+2,c
 12589  00502A  0EFC               	movlw	252
 12590  00502C  6E14               	movwf	wr8@value,c
 12591  00502E  EC11  F030         	call	_wr8	;wreg free
 12592                           
 12593                           ;FT800.c: 192: wr8(1057936UL, 0xff);
 12594  005032  0E90               	movlw	144
 12595  005034  6E11               	movwf	wr8@addr,c
 12596  005036  0E24               	movlw	36
 12597  005038  6E12               	movwf	wr8@addr+1,c
 12598  00503A  0E10               	movlw	16
 12599  00503C  6E13               	movwf	wr8@addr+2,c
 12600  00503E  0EFF               	movlw	255
 12601  005040  6E14               	movwf	wr8@value,c
 12602  005042  EC11  F030         	call	_wr8	;wreg free
 12603                           
 12604                           ;FT800.c: 194: wr8(1057900UL,5);
 12605  005046  0E6C               	movlw	108
 12606  005048  6E11               	movwf	wr8@addr,c
 12607  00504A  0E24               	movlw	36
 12608  00504C  6E12               	movwf	wr8@addr+1,c
 12609  00504E  0E10               	movlw	16
 12610  005050  6E13               	movwf	wr8@addr+2,c
 12611  005052  0E05               	movlw	5
 12612  005054  6E14               	movwf	wr8@value,c
 12613  005056  EC11  F030         	call	_wr8	;wreg free
 12614                           
 12615                           ;FT800.c: 196: cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
 12616  00505A  0EE8               	movlw	232
 12617  00505C  6E11               	movwf	rd16@addr,c
 12618  00505E  0E24               	movlw	36
 12619  005060  6E12               	movwf	rd16@addr+1,c
 12620  005062  0E10               	movlw	16
 12621  005064  6E13               	movwf	rd16@addr+2,c
 12622  005066  ECD7  F02E         	call	_rd16	;wreg free
 12623  00506A  C011  F04A         	movff	?_rd16,_cmd_offset
 12624  00506E  C012  F04B         	movff	?_rd16+1,_cmd_offset+1
 12625  005072                     l4408:
 12626  005072  0EE4               	movlw	228
 12627  005074  6E11               	movwf	rd16@addr,c
 12628  005076  0E24               	movlw	36
 12629  005078  6E12               	movwf	rd16@addr+1,c
 12630  00507A  0E10               	movlw	16
 12631  00507C  6E13               	movwf	rd16@addr+2,c
 12632  00507E  ECD7  F02E         	call	_rd16	;wreg free
 12633  005082  504A               	movf	_cmd_offset,w,c
 12634  005084  1811               	xorwf	?_rd16,w,c
 12635  005086  E1F5               	bnz	l4408
 12636  005088  504B               	movf	_cmd_offset+1,w,c
 12637  00508A  1812               	xorwf	?_rd16+1,w,c
 12638  00508C  B4D8               	btfsc	status,2,c
 12639  00508E  0012               	return	
 12640  005090  D7F0               	goto	l4408
 12641  005092                     __end_of_FT800_Init:
 12642                           	opt stack 0
 12643                           tblptru	equ	0xFF8
 12644                           tblptrh	equ	0xFF7
 12645                           tblptrl	equ	0xFF6
 12646                           tablat	equ	0xFF5
 12647                           prodh	equ	0xFF4
 12648                           prodl	equ	0xFF3
 12649                           intcon	equ	0xFF2
 12650                           postinc0	equ	0xFEE
 12651                           wreg	equ	0xFE8
 12652                           postdec1	equ	0xFE5
 12653                           plusw1	equ	0xFE3
 12654                           fsr1l	equ	0xFE1
 12655                           plusw2	equ	0xFDB
 12656                           status	equ	0xFD8
 12657                           
 12658 ;; *************** function _wr8 *****************
 12659 ;; Defined at:
 12660 ;;		line 16 in file "FT800.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  addr            3   16[COMRAM] unsigned um
 12663 ;;  value           1   19[COMRAM] unsigned char 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1    wreg      void 
 12668 ;; Registers used:
 12669 ;;		wreg, status,2, status,0, cstack
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12678 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;Total ram usage:        7 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    5
 12682 ;; This function calls:
 12683 ;;		_SPI_Exchange8bit
 12684 ;; This function is called by:
 12685 ;;		_FT800_Init
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text39
 12690  006022                     __ptext39:
 12691                           	opt stack 0
 12692  006022                     _wr8:
 12693                           	opt stack 24
 12694                           
 12695                           ;FT800.c: 17: LATDbits.LATD0 = 0;
 12696                           
 12697                           ;incstack = 0
 12698  006022  908C               	bcf	3980,0,c	;volatile
 12699                           
 12700                           ;FT800.c: 18: SPI_Exchange8bit(0x80 | (addr >> 16));
 12701  006024  5013               	movf	wr8@addr+2,w,c
 12702  006026  0980               	iorlw	128
 12703  006028  ECC8  F030         	call	_SPI_Exchange8bit
 12704                           
 12705                           ;FT800.c: 19: SPI_Exchange8bit(addr >> 8);
 12706  00602C  C011  F015         	movff	wr8@addr,??_wr8
 12707  006030  C012  F016         	movff	wr8@addr+1,??_wr8+1
 12708  006034  C013  F017         	movff	wr8@addr+2,??_wr8+2
 12709  006038  C016  F015         	movff	??_wr8+1,??_wr8
 12710  00603C  C017  F016         	movff	??_wr8+2,??_wr8+1
 12711  006040  6A17               	clrf	??_wr8+2,c
 12712  006042  5015               	movf	??_wr8,w,c
 12713  006044  ECC8  F030         	call	_SPI_Exchange8bit
 12714                           
 12715                           ;FT800.c: 20: SPI_Exchange8bit(addr);
 12716  006048  5011               	movf	wr8@addr,w,c
 12717  00604A  ECC8  F030         	call	_SPI_Exchange8bit
 12718                           
 12719                           ;FT800.c: 21: SPI_Exchange8bit(value);
 12720  00604E  5014               	movf	wr8@value,w,c
 12721  006050  ECC8  F030         	call	_SPI_Exchange8bit
 12722                           
 12723                           ;FT800.c: 22: LATDbits.LATD0 = 1;
 12724  006054  808C               	bsf	3980,0,c	;volatile
 12725  006056  0012               	return		;funcret
 12726  006058                     __end_of_wr8:
 12727                           	opt stack 0
 12728                           tblptru	equ	0xFF8
 12729                           tblptrh	equ	0xFF7
 12730                           tblptrl	equ	0xFF6
 12731                           tablat	equ	0xFF5
 12732                           prodh	equ	0xFF4
 12733                           prodl	equ	0xFF3
 12734                           intcon	equ	0xFF2
 12735                           postinc0	equ	0xFEE
 12736                           wreg	equ	0xFE8
 12737                           postdec1	equ	0xFE5
 12738                           plusw1	equ	0xFE3
 12739                           fsr1l	equ	0xFE1
 12740                           plusw2	equ	0xFDB
 12741                           status	equ	0xFD8
 12742                           
 12743 ;; *************** function _wr32 *****************
 12744 ;; Defined at:
 12745 ;;		line 34 in file "FT800.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  addr            3   16[COMRAM] unsigned um
 12748 ;;  value           4   19[COMRAM] unsigned long 
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;		None
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  1    wreg      void 
 12753 ;; Registers used:
 12754 ;;		wreg, status,2, status,0, cstack
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12760 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12763 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12764 ;;Total ram usage:       11 bytes
 12765 ;; Hardware stack levels used:    1
 12766 ;; Hardware stack levels required when called:    5
 12767 ;; This function calls:
 12768 ;;		_SPI_Exchange8bit
 12769 ;; This function is called by:
 12770 ;;		_cmd
 12771 ;;		_FT800_Init
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text40
 12776  005C60                     __ptext40:
 12777                           	opt stack 0
 12778  005C60                     _wr32:
 12779                           	opt stack 23
 12780                           
 12781                           ;FT800.c: 35: LATDbits.LATD0 = 0;
 12782                           
 12783                           ;incstack = 0
 12784  005C60  908C               	bcf	3980,0,c	;volatile
 12785                           
 12786                           ;FT800.c: 36: SPI_Exchange8bit(0x80 | (addr >> 16));
 12787  005C62  5013               	movf	wr32@addr+2,w,c
 12788  005C64  0980               	iorlw	128
 12789  005C66  ECC8  F030         	call	_SPI_Exchange8bit
 12790                           
 12791                           ;FT800.c: 37: SPI_Exchange8bit(addr >> 8);
 12792  005C6A  C011  F018         	movff	wr32@addr,??_wr32
 12793  005C6E  C012  F019         	movff	wr32@addr+1,??_wr32+1
 12794  005C72  C013  F01A         	movff	wr32@addr+2,??_wr32+2
 12795  005C76  C019  F018         	movff	??_wr32+1,??_wr32
 12796  005C7A  C01A  F019         	movff	??_wr32+2,??_wr32+1
 12797  005C7E  6A1A               	clrf	??_wr32+2,c
 12798  005C80  5018               	movf	??_wr32,w,c
 12799  005C82  ECC8  F030         	call	_SPI_Exchange8bit
 12800                           
 12801                           ;FT800.c: 38: SPI_Exchange8bit(addr);
 12802  005C86  5011               	movf	wr32@addr,w,c
 12803  005C88  ECC8  F030         	call	_SPI_Exchange8bit
 12804                           
 12805                           ;FT800.c: 39: SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value) & 0
      +                          xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchange8bi
      +                          t(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
 12806  005C8C  5014               	movf	wr32@value,w,c
 12807  005C8E  ECC8  F030         	call	_SPI_Exchange8bit
 12808  005C92  5015               	movf	wr32@value+1,w,c
 12809  005C94  ECC8  F030         	call	_SPI_Exchange8bit
 12810  005C98  5016               	movf	wr32@value+2,w,c
 12811  005C9A  ECC8  F030         	call	_SPI_Exchange8bit
 12812  005C9E  C014  F018         	movff	wr32@value,??_wr32
 12813  005CA2  C015  F019         	movff	wr32@value+1,??_wr32+1
 12814  005CA6  C016  F01A         	movff	wr32@value+2,??_wr32+2
 12815  005CAA  C017  F01B         	movff	wr32@value+3,??_wr32+3
 12816  005CAE  0E11               	movlw	17
 12817  005CB0  D005               	goto	u850
 12818  005CB2                     u855:
 12819  005CB2  90D8               	bcf	status,0,c
 12820  005CB4  321B               	rrcf	??_wr32+3,f,c
 12821  005CB6  321A               	rrcf	??_wr32+2,f,c
 12822  005CB8  3219               	rrcf	??_wr32+1,f,c
 12823  005CBA  3218               	rrcf	??_wr32,f,c
 12824  005CBC                     u850:
 12825  005CBC  2EE8               	decfsz	wreg,f,c
 12826  005CBE  D7F9               	goto	u855
 12827  005CC0  C019  F018         	movff	??_wr32+1,??_wr32
 12828  005CC4  C01A  F019         	movff	??_wr32+2,??_wr32+1
 12829  005CC8  C01B  F01A         	movff	??_wr32+3,??_wr32+2
 12830  005CCC  6A1B               	clrf	??_wr32+3,c
 12831  005CCE  5018               	movf	??_wr32,w,c
 12832  005CD0  ECC8  F030         	call	_SPI_Exchange8bit
 12833                           
 12834                           ;FT800.c: 40: LATDbits.LATD0 = 1;
 12835  005CD4  808C               	bsf	3980,0,c	;volatile
 12836  005CD6  0012               	return		;funcret
 12837  005CD8                     __end_of_wr32:
 12838                           	opt stack 0
 12839                           tblptru	equ	0xFF8
 12840                           tblptrh	equ	0xFF7
 12841                           tblptrl	equ	0xFF6
 12842                           tablat	equ	0xFF5
 12843                           prodh	equ	0xFF4
 12844                           prodl	equ	0xFF3
 12845                           intcon	equ	0xFF2
 12846                           postinc0	equ	0xFEE
 12847                           wreg	equ	0xFE8
 12848                           postdec1	equ	0xFE5
 12849                           plusw1	equ	0xFE3
 12850                           fsr1l	equ	0xFE1
 12851                           plusw2	equ	0xFDB
 12852                           status	equ	0xFD8
 12853                           
 12854 ;; *************** function _wr16 *****************
 12855 ;; Defined at:
 12856 ;;		line 25 in file "FT800.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  addr            3   16[COMRAM] unsigned um
 12859 ;;  value           2   19[COMRAM] unsigned int 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;		None
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  1    wreg      void 
 12864 ;; Registers used:
 12865 ;;		wreg, status,2, status,0, cstack
 12866 ;; Tracked objects:
 12867 ;;		On entry : 0/0
 12868 ;;		On exit  : 0/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12871 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;Total ram usage:        8 bytes
 12876 ;; Hardware stack levels used:    1
 12877 ;; Hardware stack levels required when called:    5
 12878 ;; This function calls:
 12879 ;;		_SPI_Exchange8bit
 12880 ;; This function is called by:
 12881 ;;		_FT800_Init
 12882 ;;		_display_end
 12883 ;;		_display_labels
 12884 ;;		_display_status
 12885 ;;		_display_laptime
 12886 ;;		_display_waterTemp
 12887 ;;		_display_oilTemp
 12888 ;;		_display_battery
 12889 ;;		_display_tp
 12890 ;;		_display_speed
 12891 ;;		_display_brake_bias
 12892 ;;		_display_rpm
 12893 ;;		_display_fuel
 12894 ;;		_display_oilPress
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text41
 12899  005F3C                     __ptext41:
 12900                           	opt stack 0
 12901  005F3C                     _wr16:
 12902                           	opt stack 24
 12903                           
 12904                           ;FT800.c: 26: LATDbits.LATD0 = 0;
 12905                           
 12906                           ;incstack = 0
 12907  005F3C  908C               	bcf	3980,0,c	;volatile
 12908                           
 12909                           ;FT800.c: 27: SPI_Exchange8bit(0x80 | (addr >> 16));
 12910  005F3E  5013               	movf	wr16@addr+2,w,c
 12911  005F40  0980               	iorlw	128
 12912  005F42  ECC8  F030         	call	_SPI_Exchange8bit
 12913                           
 12914                           ;FT800.c: 28: SPI_Exchange8bit(addr >> 8);
 12915  005F46  C011  F016         	movff	wr16@addr,??_wr16
 12916  005F4A  C012  F017         	movff	wr16@addr+1,??_wr16+1
 12917  005F4E  C013  F018         	movff	wr16@addr+2,??_wr16+2
 12918  005F52  C017  F016         	movff	??_wr16+1,??_wr16
 12919  005F56  C018  F017         	movff	??_wr16+2,??_wr16+1
 12920  005F5A  6A18               	clrf	??_wr16+2,c
 12921  005F5C  5016               	movf	??_wr16,w,c
 12922  005F5E  ECC8  F030         	call	_SPI_Exchange8bit
 12923                           
 12924                           ;FT800.c: 29: SPI_Exchange8bit(addr);
 12925  005F62  5011               	movf	wr16@addr,w,c
 12926  005F64  ECC8  F030         	call	_SPI_Exchange8bit
 12927                           
 12928                           ;FT800.c: 30: SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xFF);
 12929  005F68  5014               	movf	wr16@value,w,c
 12930  005F6A  ECC8  F030         	call	_SPI_Exchange8bit
 12931  005F6E  5015               	movf	wr16@value+1,w,c
 12932  005F70  ECC8  F030         	call	_SPI_Exchange8bit
 12933                           
 12934                           ;FT800.c: 31: LATDbits.LATD0 = 1;
 12935  005F74  808C               	bsf	3980,0,c	;volatile
 12936  005F76  0012               	return		;funcret
 12937  005F78                     __end_of_wr16:
 12938                           	opt stack 0
 12939                           tblptru	equ	0xFF8
 12940                           tblptrh	equ	0xFF7
 12941                           tblptrl	equ	0xFF6
 12942                           tablat	equ	0xFF5
 12943                           prodh	equ	0xFF4
 12944                           prodl	equ	0xFF3
 12945                           intcon	equ	0xFF2
 12946                           postinc0	equ	0xFEE
 12947                           wreg	equ	0xFE8
 12948                           postdec1	equ	0xFE5
 12949                           plusw1	equ	0xFE3
 12950                           fsr1l	equ	0xFE1
 12951                           plusw2	equ	0xFDB
 12952                           status	equ	0xFD8
 12953                           
 12954 ;; *************** function _rd16 *****************
 12955 ;; Defined at:
 12956 ;;		line 72 in file "FT800.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  addr            3   16[COMRAM] unsigned um
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;  temp            1   22[COMRAM] unsigned char 
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  2   16[COMRAM] unsigned int 
 12963 ;; Registers used:
 12964 ;;		wreg, status,2, cstack
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12970 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12972 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12974 ;;Total ram usage:        7 bytes
 12975 ;; Hardware stack levels used:    1
 12976 ;; Hardware stack levels required when called:    5
 12977 ;; This function calls:
 12978 ;;		_SPI_Exchange8bit
 12979 ;; This function is called by:
 12980 ;;		_FT800_Init
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text42
 12985  005DAE                     __ptext42:
 12986                           	opt stack 0
 12987  005DAE                     _rd16:
 12988                           	opt stack 24
 12989                           
 12990                           ;FT800.c: 73: LATDbits.LATD0 = 0;
 12991                           
 12992                           ;incstack = 0
 12993  005DAE  908C               	bcf	3980,0,c	;volatile
 12994                           
 12995                           ;FT800.c: 74: SPI_Exchange8bit(addr >> 16);
 12996  005DB0  5013               	movf	rd16@addr+2,w,c
 12997  005DB2  ECC8  F030         	call	_SPI_Exchange8bit
 12998                           
 12999                           ;FT800.c: 75: SPI_Exchange8bit(addr >> 8);
 13000  005DB6  C011  F014         	movff	rd16@addr,??_rd16
 13001  005DBA  C012  F015         	movff	rd16@addr+1,??_rd16+1
 13002  005DBE  C013  F016         	movff	rd16@addr+2,??_rd16+2
 13003  005DC2  C015  F014         	movff	??_rd16+1,??_rd16
 13004  005DC6  C016  F015         	movff	??_rd16+2,??_rd16+1
 13005  005DCA  6A16               	clrf	??_rd16+2,c
 13006  005DCC  5014               	movf	??_rd16,w,c
 13007  005DCE  ECC8  F030         	call	_SPI_Exchange8bit
 13008                           
 13009                           ;FT800.c: 76: SPI_Exchange8bit(addr);
 13010  005DD2  5011               	movf	rd16@addr,w,c
 13011  005DD4  ECC8  F030         	call	_SPI_Exchange8bit
 13012                           
 13013                           ;FT800.c: 77: SPI_Exchange8bit(0);
 13014  005DD8  0E00               	movlw	0
 13015  005DDA  ECC8  F030         	call	_SPI_Exchange8bit
 13016                           
 13017                           ;FT800.c: 78: SPI_Exchange8bit(0);
 13018  005DDE  0E00               	movlw	0
 13019  005DE0  ECC8  F030         	call	_SPI_Exchange8bit
 13020                           
 13021                           ;FT800.c: 79: ft_uint8_t temp = SSPBUF;
 13022  005DE4  CFC9 F017          	movff	4041,rd16@temp	;volatile
 13023                           
 13024                           ;FT800.c: 80: SPI_Exchange8bit(0);
 13025  005DE8  0E00               	movlw	0
 13026  005DEA  ECC8  F030         	call	_SPI_Exchange8bit
 13027                           
 13028                           ;FT800.c: 81: LATDbits.LATD0 = 1;
 13029  005DEE  808C               	bsf	3980,0,c	;volatile
 13030                           
 13031                           ;FT800.c: 82: return ((ft_uint16_t)SSPBUF << 8) | temp;
 13032  005DF0  50C9               	movf	4041,w,c	;volatile
 13033  005DF2  6E14               	movwf	??_rd16& (0+255),c
 13034  005DF4  5017               	movf	rd16@temp,w,c
 13035  005DF6  6E11               	movwf	?_rd16,c
 13036  005DF8  C014  F012         	movff	??_rd16,?_rd16+1
 13037  005DFC  0012               	return	
 13038  005DFE                     __end_of_rd16:
 13039                           	opt stack 0
 13040                           tblptru	equ	0xFF8
 13041                           tblptrh	equ	0xFF7
 13042                           tblptrl	equ	0xFF6
 13043                           tablat	equ	0xFF5
 13044                           prodh	equ	0xFF4
 13045                           prodl	equ	0xFF3
 13046                           intcon	equ	0xFF2
 13047                           postinc0	equ	0xFEE
 13048                           wreg	equ	0xFE8
 13049                           postdec1	equ	0xFE5
 13050                           plusw1	equ	0xFE3
 13051                           fsr1l	equ	0xFE1
 13052                           plusw2	equ	0xFDB
 13053                           status	equ	0xFD8
 13054                           
 13055 ;; *************** function _host_command *****************
 13056 ;; Defined at:
 13057 ;;		line 8 in file "FT800.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  command         1    wreg     unsigned char 
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;  command         1   16[COMRAM] unsigned char 
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  1    wreg      void 
 13064 ;; Registers used:
 13065 ;;		wreg, status,2, cstack
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;Total ram usage:        1 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; Hardware stack levels required when called:    5
 13078 ;; This function calls:
 13079 ;;		_SPI_Exchange8bit
 13080 ;; This function is called by:
 13081 ;;		_FT800_Init
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           	psect	text43
 13086  00614E                     __ptext43:
 13087                           	opt stack 0
 13088  00614E                     _host_command:
 13089                           	opt stack 24
 13090                           
 13091                           ;incstack = 0
 13092                           ;host_command@command stored from wreg
 13093  00614E  6E11               	movwf	host_command@command,c
 13094                           
 13095                           ;FT800.c: 9: LATDbits.LATD0 = 0;
 13096  006150  908C               	bcf	3980,0,c	;volatile
 13097                           
 13098                           ;FT800.c: 10: SPI_Exchange8bit(command);
 13099  006152  5011               	movf	host_command@command,w,c
 13100  006154  ECC8  F030         	call	_SPI_Exchange8bit
 13101                           
 13102                           ;FT800.c: 11: SPI_Exchange8bit(0);
 13103  006158  0E00               	movlw	0
 13104  00615A  ECC8  F030         	call	_SPI_Exchange8bit
 13105                           
 13106                           ;FT800.c: 12: SPI_Exchange8bit(0);
 13107  00615E  0E00               	movlw	0
 13108  006160  ECC8  F030         	call	_SPI_Exchange8bit
 13109                           
 13110                           ;FT800.c: 13: LATDbits.LATD0 = 1;
 13111  006164  808C               	bsf	3980,0,c	;volatile
 13112  006166  0012               	return		;funcret
 13113  006168                     __end_of_host_command:
 13114                           	opt stack 0
 13115                           tblptru	equ	0xFF8
 13116                           tblptrh	equ	0xFF7
 13117                           tblptrl	equ	0xFF6
 13118                           tablat	equ	0xFF5
 13119                           prodh	equ	0xFF4
 13120                           prodl	equ	0xFF3
 13121                           intcon	equ	0xFF2
 13122                           postinc0	equ	0xFEE
 13123                           wreg	equ	0xFE8
 13124                           postdec1	equ	0xFE5
 13125                           plusw1	equ	0xFE3
 13126                           fsr1l	equ	0xFE1
 13127                           plusw2	equ	0xFDB
 13128                           status	equ	0xFD8
 13129                           
 13130 ;; *************** function _SPI_Exchange8bit *****************
 13131 ;; Defined at:
 13132 ;;		line 77 in file "mcc_generated_files/spi.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  data            1    wreg     unsigned char 
 13135 ;; Auto vars:     Size  Location     Type
 13136 ;;  data            1   15[COMRAM] unsigned char 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  1    wreg      unsigned char 
 13139 ;; Registers used:
 13140 ;;		wreg, status,2
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13150 ;;Total ram usage:        1 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:    4
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_host_command
 13157 ;;		_wr8
 13158 ;;		_wr16
 13159 ;;		_wr32
 13160 ;;		_wr8s
 13161 ;;		_rd16
 13162 ;;		_rd8
 13163 ;;		_rd32
 13164 ;;		_SPI_Exchange8bitBuffer
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text44
 13169  006190                     __ptext44:
 13170                           	opt stack 0
 13171  006190                     _SPI_Exchange8bit:
 13172                           	opt stack 24
 13173                           
 13174                           ;incstack = 0
 13175                           ;SPI_Exchange8bit@data stored from wreg
 13176  006190  6E10               	movwf	SPI_Exchange8bit@data,c
 13177                           
 13178                           ;spi.c: 80: SSPCON1bits.WCOL = 0;
 13179  006192  9EC6               	bcf	4038,7,c	;volatile
 13180                           
 13181                           ;spi.c: 82: SSPBUF = data;
 13182  006194  C010  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 13183  006198                     l180:
 13184  006198  A0C7               	btfss	4039,0,c	;volatile
 13185  00619A  D7FE               	goto	l180
 13186                           
 13187                           ;spi.c: 86: }
 13188                           ;spi.c: 88: return (SSPBUF);
 13189  00619C  50C9               	movf	4041,w,c	;volatile
 13190  00619E  0012               	return		;funcret
 13191  0061A0                     __end_of_SPI_Exchange8bit:
 13192                           	opt stack 0
 13193                           tblptru	equ	0xFF8
 13194                           tblptrh	equ	0xFF7
 13195                           tblptrl	equ	0xFF6
 13196                           tablat	equ	0xFF5
 13197                           prodh	equ	0xFF4
 13198                           prodl	equ	0xFF3
 13199                           intcon	equ	0xFF2
 13200                           postinc0	equ	0xFEE
 13201                           wreg	equ	0xFE8
 13202                           postdec1	equ	0xFE5
 13203                           plusw1	equ	0xFE3
 13204                           fsr1l	equ	0xFE1
 13205                           plusw2	equ	0xFDB
 13206                           status	equ	0xFD8
 13207                           
 13208 ;; *************** function _CAN_receive *****************
 13209 ;; Defined at:
 13210 ;;		line 239 in file "mcc_generated_files/ecan.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;  tempCanMsg      2   34[COMRAM] PTR struct .
 13213 ;;		 -> canMessage(14), 
 13214 ;; Auto vars:     Size  Location     Type
 13215 ;;  returnValue     1   36[COMRAM] unsigned char 
 13216 ;; Return value:  Size  Location     Type
 13217 ;;                  1    wreg      unsigned char 
 13218 ;; Registers used:
 13219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13220 ;; Tracked objects:
 13221 ;;		On entry : 0/0
 13222 ;;		On exit  : 0/0
 13223 ;;		Unchanged: 0/0
 13224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13228 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13229 ;;Total ram usage:        3 bytes
 13230 ;; Hardware stack levels used:    1
 13231 ;; Hardware stack levels required when called:    5
 13232 ;; This function calls:
 13233 ;;		_convertReg2ExtendedCANid
 13234 ;;		_convertReg2StandardCANid
 13235 ;; This function is called by:
 13236 ;;		_main
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text45
 13241  005092                     __ptext45:
 13242                           	opt stack 0
 13243  005092                     _CAN_receive:
 13244                           	opt stack 25
 13245                           
 13246                           ;ecan.c: 240: unsigned char returnValue = 0;
 13247                           
 13248                           ;incstack = 0
 13249  005092  0E00               	movlw	0
 13250  005094  6E25               	movwf	CAN_receive@returnValue,c
 13251                           
 13252                           ;ecan.c: 244: {
 13253                           ;ecan.c: 247: if (RXB0CONbits.RXFUL != 0)
 13254  005096  AE60               	btfss	3936,7,c	;volatile
 13255  005098  D083               	goto	l461
 13256                           
 13257                           ;ecan.c: 248: {
 13258                           ;ecan.c: 249: if ((RXB0SIDL & 0x08) == 0x08)
 13259  00509A  A662               	btfss	3938,3,c	;volatile
 13260  00509C  D01E               	goto	l4432
 13261                           
 13262                           ;ecan.c: 250: {
 13263                           ;ecan.c: 252: tempCanMsg->frame.idType = (unsigned char) 2;
 13264  00509E  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13265  0050A2  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13266  0050A6  0E02               	movlw	2
 13267  0050A8  6EDF               	movwf	indf2,c
 13268                           
 13269                           ;ecan.c: 253: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
 13270  0050AA  CF64 F010          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 13271  0050AE  CF61 F011          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 13272  0050B2  CF62 F012          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 13273  0050B6  5063               	movf	3939,w,c	;volatile
 13274  0050B8  EC5E  F029         	call	_convertReg2ExtendedCANid
 13275  0050BC  EE20 F001          	lfsr	2,1
 13276  0050C0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13277  0050C2  26D9               	addwf	fsr2l,f,c
 13278  0050C4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13279  0050C6  22DA               	addwfc	fsr2h,f,c
 13280  0050C8  C010  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 13281  0050CC  C011  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 13282  0050D0  C012  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 13283  0050D4  C013  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 13284                           
 13285                           ;ecan.c: 254: } else {
 13286  0050D8  D019               	goto	l4436
 13287  0050DA                     l4432:
 13288                           
 13289                           ;ecan.c: 256: tempCanMsg->frame.idType = (unsigned char) 1;
 13290  0050DA  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13291  0050DE  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13292  0050E2  0E01               	movlw	1
 13293  0050E4  6EDF               	movwf	indf2,c
 13294                           
 13295                           ;ecan.c: 257: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
 13296  0050E6  CF62 F010          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 13297  0050EA  5061               	movf	3937,w,c	;volatile
 13298  0050EC  ECAB  F02D         	call	_convertReg2StandardCANid
 13299  0050F0  EE20 F001          	lfsr	2,1
 13300  0050F4  5023               	movf	CAN_receive@tempCanMsg,w,c
 13301  0050F6  26D9               	addwf	fsr2l,f,c
 13302  0050F8  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13303  0050FA  22DA               	addwfc	fsr2h,f,c
 13304  0050FC  C010  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 13305  005100  C011  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 13306  005104  C012  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 13307  005108  C013  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 13308  00510C                     l4436:
 13309                           
 13310                           ;ecan.c: 258: }
 13311                           ;ecan.c: 260: tempCanMsg->frame.dlc = RXB0DLC;
 13312  00510C  EE20 F005          	lfsr	2,5
 13313  005110  5023               	movf	CAN_receive@tempCanMsg,w,c
 13314  005112  26D9               	addwf	fsr2l,f,c
 13315  005114  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13316  005116  22DA               	addwfc	fsr2h,f,c
 13317  005118  CF65 FFDF          	movff	3941,indf2	;volatile
 13318                           
 13319                           ;ecan.c: 261: tempCanMsg->frame.data0 = RXB0D0;
 13320  00511C  EE20 F006          	lfsr	2,6
 13321  005120  5023               	movf	CAN_receive@tempCanMsg,w,c
 13322  005122  26D9               	addwf	fsr2l,f,c
 13323  005124  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13324  005126  22DA               	addwfc	fsr2h,f,c
 13325  005128  CF66 FFDF          	movff	3942,indf2	;volatile
 13326                           
 13327                           ;ecan.c: 262: tempCanMsg->frame.data1 = RXB0D1;
 13328  00512C  EE20 F007          	lfsr	2,7
 13329  005130  5023               	movf	CAN_receive@tempCanMsg,w,c
 13330  005132  26D9               	addwf	fsr2l,f,c
 13331  005134  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13332  005136  22DA               	addwfc	fsr2h,f,c
 13333  005138  CF67 FFDF          	movff	3943,indf2	;volatile
 13334                           
 13335                           ;ecan.c: 263: tempCanMsg->frame.data2 = RXB0D2;
 13336  00513C  EE20 F008          	lfsr	2,8
 13337  005140  5023               	movf	CAN_receive@tempCanMsg,w,c
 13338  005142  26D9               	addwf	fsr2l,f,c
 13339  005144  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13340  005146  22DA               	addwfc	fsr2h,f,c
 13341  005148  CF68 FFDF          	movff	3944,indf2	;volatile
 13342                           
 13343                           ;ecan.c: 264: tempCanMsg->frame.data3 = RXB0D3;
 13344  00514C  EE20 F009          	lfsr	2,9
 13345  005150  5023               	movf	CAN_receive@tempCanMsg,w,c
 13346  005152  26D9               	addwf	fsr2l,f,c
 13347  005154  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13348  005156  22DA               	addwfc	fsr2h,f,c
 13349  005158  CF69 FFDF          	movff	3945,indf2	;volatile
 13350                           
 13351                           ;ecan.c: 265: tempCanMsg->frame.data4 = RXB0D4;
 13352  00515C  EE20 F00A          	lfsr	2,10
 13353  005160  5023               	movf	CAN_receive@tempCanMsg,w,c
 13354  005162  26D9               	addwf	fsr2l,f,c
 13355  005164  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13356  005166  22DA               	addwfc	fsr2h,f,c
 13357  005168  CF6A FFDF          	movff	3946,indf2	;volatile
 13358                           
 13359                           ;ecan.c: 266: tempCanMsg->frame.data5 = RXB0D5;
 13360  00516C  EE20 F00B          	lfsr	2,11
 13361  005170  5023               	movf	CAN_receive@tempCanMsg,w,c
 13362  005172  26D9               	addwf	fsr2l,f,c
 13363  005174  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13364  005176  22DA               	addwfc	fsr2h,f,c
 13365  005178  CF6B FFDF          	movff	3947,indf2	;volatile
 13366                           
 13367                           ;ecan.c: 267: tempCanMsg->frame.data6 = RXB0D6;
 13368  00517C  EE20 F00C          	lfsr	2,12
 13369  005180  5023               	movf	CAN_receive@tempCanMsg,w,c
 13370  005182  26D9               	addwf	fsr2l,f,c
 13371  005184  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13372  005186  22DA               	addwfc	fsr2h,f,c
 13373  005188  CF6C FFDF          	movff	3948,indf2	;volatile
 13374                           
 13375                           ;ecan.c: 268: tempCanMsg->frame.data7 = RXB0D7;
 13376  00518C  EE20 F00D          	lfsr	2,13
 13377  005190  5023               	movf	CAN_receive@tempCanMsg,w,c
 13378  005192  26D9               	addwf	fsr2l,f,c
 13379  005194  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13380  005196  22DA               	addwfc	fsr2h,f,c
 13381  005198  CF6D FFDF          	movff	3949,indf2	;volatile
 13382                           
 13383                           ;ecan.c: 269: RXB0CONbits.RXFUL = 0;
 13384  00519C  9E60               	bcf	3936,7,c	;volatile
 13385  00519E  D089               	goto	l4488
 13386  0051A0                     l461:
 13387  0051A0  010F               	movlb	15	; () banked
 13388  0051A2  AF30               	btfss	48,7,b	;volatile
 13389  0051A4  D088               	goto	l4490
 13390                           
 13391                           ; BSR set to: 15
 13392                           ;ecan.c: 272: {
 13393                           ;ecan.c: 273: if ((RXB1SIDL & 0x08) == 0x08)
 13394  0051A6  010F               	movlb	15	; () banked
 13395  0051A8  A732               	btfss	50,3,b	;volatile
 13396  0051AA  D01F               	goto	l4464
 13397                           
 13398                           ; BSR set to: 15
 13399                           ;ecan.c: 274: {
 13400                           ;ecan.c: 276: tempCanMsg->frame.idType = (unsigned char) 2;
 13401  0051AC  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13402  0051B0  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13403  0051B4  0E02               	movlw	2
 13404  0051B6  6EDF               	movwf	indf2,c
 13405                           
 13406                           ; BSR set to: 15
 13407                           ;ecan.c: 277: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
 13408  0051B8  CF34 F010          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 13409  0051BC  CF31 F011          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 13410  0051C0  CF32 F012          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 13411  0051C4  010F               	movlb	15	; () banked
 13412  0051C6  5133               	movf	51,w,b	;volatile
 13413  0051C8  EC5E  F029         	call	_convertReg2ExtendedCANid
 13414  0051CC  EE20 F001          	lfsr	2,1
 13415  0051D0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13416  0051D2  26D9               	addwf	fsr2l,f,c
 13417  0051D4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13418  0051D6  22DA               	addwfc	fsr2h,f,c
 13419  0051D8  C010  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 13420  0051DC  C011  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 13421  0051E0  C012  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 13422  0051E4  C013  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 13423                           
 13424                           ;ecan.c: 278: }
 13425  0051E8  D01A               	goto	l4468
 13426  0051EA                     l4464:
 13427                           
 13428                           ;ecan.c: 279: else
 13429                           ;ecan.c: 280: {
 13430                           ;ecan.c: 282: tempCanMsg->frame.idType = (unsigned char) 1;
 13431  0051EA  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13432  0051EE  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13433  0051F2  0E01               	movlw	1
 13434  0051F4  6EDF               	movwf	indf2,c
 13435                           
 13436                           ;ecan.c: 283: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
 13437  0051F6  CF32 F010          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 13438  0051FA  010F               	movlb	15	; () banked
 13439  0051FC  5131               	movf	49,w,b	;volatile
 13440  0051FE  ECAB  F02D         	call	_convertReg2StandardCANid
 13441  005202  EE20 F001          	lfsr	2,1
 13442  005206  5023               	movf	CAN_receive@tempCanMsg,w,c
 13443  005208  26D9               	addwf	fsr2l,f,c
 13444  00520A  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13445  00520C  22DA               	addwfc	fsr2h,f,c
 13446  00520E  C010  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 13447  005212  C011  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 13448  005216  C012  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 13449  00521A  C013  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 13450  00521E                     l4468:
 13451                           
 13452                           ;ecan.c: 284: }
 13453                           ;ecan.c: 286: tempCanMsg->frame.dlc = RXB1DLC;
 13454  00521E  EE20 F005          	lfsr	2,5
 13455  005222  5023               	movf	CAN_receive@tempCanMsg,w,c
 13456  005224  26D9               	addwf	fsr2l,f,c
 13457  005226  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13458  005228  22DA               	addwfc	fsr2h,f,c
 13459  00522A  CF35 FFDF          	movff	3893,indf2	;volatile
 13460                           
 13461                           ;ecan.c: 287: tempCanMsg->frame.data0 = RXB1D0;
 13462  00522E  EE20 F006          	lfsr	2,6
 13463  005232  5023               	movf	CAN_receive@tempCanMsg,w,c
 13464  005234  26D9               	addwf	fsr2l,f,c
 13465  005236  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13466  005238  22DA               	addwfc	fsr2h,f,c
 13467  00523A  CF36 FFDF          	movff	3894,indf2	;volatile
 13468                           
 13469                           ;ecan.c: 288: tempCanMsg->frame.data1 = RXB1D1;
 13470  00523E  EE20 F007          	lfsr	2,7
 13471  005242  5023               	movf	CAN_receive@tempCanMsg,w,c
 13472  005244  26D9               	addwf	fsr2l,f,c
 13473  005246  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13474  005248  22DA               	addwfc	fsr2h,f,c
 13475  00524A  CF37 FFDF          	movff	3895,indf2	;volatile
 13476                           
 13477                           ;ecan.c: 289: tempCanMsg->frame.data2 = RXB1D2;
 13478  00524E  EE20 F008          	lfsr	2,8
 13479  005252  5023               	movf	CAN_receive@tempCanMsg,w,c
 13480  005254  26D9               	addwf	fsr2l,f,c
 13481  005256  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13482  005258  22DA               	addwfc	fsr2h,f,c
 13483  00525A  CF38 FFDF          	movff	3896,indf2	;volatile
 13484                           
 13485                           ;ecan.c: 290: tempCanMsg->frame.data3 = RXB1D3;
 13486  00525E  EE20 F009          	lfsr	2,9
 13487  005262  5023               	movf	CAN_receive@tempCanMsg,w,c
 13488  005264  26D9               	addwf	fsr2l,f,c
 13489  005266  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13490  005268  22DA               	addwfc	fsr2h,f,c
 13491  00526A  CF39 FFDF          	movff	3897,indf2	;volatile
 13492                           
 13493                           ;ecan.c: 291: tempCanMsg->frame.data4 = RXB1D4;
 13494  00526E  EE20 F00A          	lfsr	2,10
 13495  005272  5023               	movf	CAN_receive@tempCanMsg,w,c
 13496  005274  26D9               	addwf	fsr2l,f,c
 13497  005276  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13498  005278  22DA               	addwfc	fsr2h,f,c
 13499  00527A  CF3A FFDF          	movff	3898,indf2	;volatile
 13500                           
 13501                           ;ecan.c: 292: tempCanMsg->frame.data5 = RXB1D5;
 13502  00527E  EE20 F00B          	lfsr	2,11
 13503  005282  5023               	movf	CAN_receive@tempCanMsg,w,c
 13504  005284  26D9               	addwf	fsr2l,f,c
 13505  005286  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13506  005288  22DA               	addwfc	fsr2h,f,c
 13507  00528A  CF3B FFDF          	movff	3899,indf2	;volatile
 13508                           
 13509                           ;ecan.c: 293: tempCanMsg->frame.data6 = RXB1D6;
 13510  00528E  EE20 F00C          	lfsr	2,12
 13511  005292  5023               	movf	CAN_receive@tempCanMsg,w,c
 13512  005294  26D9               	addwf	fsr2l,f,c
 13513  005296  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13514  005298  22DA               	addwfc	fsr2h,f,c
 13515  00529A  CF3C FFDF          	movff	3900,indf2	;volatile
 13516                           
 13517                           ;ecan.c: 294: tempCanMsg->frame.data7 = RXB1D7;
 13518  00529E  EE20 F00D          	lfsr	2,13
 13519  0052A2  5023               	movf	CAN_receive@tempCanMsg,w,c
 13520  0052A4  26D9               	addwf	fsr2l,f,c
 13521  0052A6  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13522  0052A8  22DA               	addwfc	fsr2h,f,c
 13523  0052AA  CF3D FFDF          	movff	3901,indf2	;volatile
 13524                           
 13525                           ;ecan.c: 295: RXB1CONbits.RXFUL = 0;
 13526  0052AE  010F               	movlb	15	; () banked
 13527  0052B0  9F30               	bcf	48,7,b	;volatile
 13528  0052B2                     l4488:
 13529                           
 13530                           ; BSR set to: 15
 13531                           ;ecan.c: 296: returnValue = 1;
 13532  0052B2  0E01               	movlw	1
 13533  0052B4  6E25               	movwf	CAN_receive@returnValue,c
 13534  0052B6                     l4490:
 13535                           
 13536                           ;ecan.c: 297: }
 13537                           ;ecan.c: 300: PIR5bits.RXB1IF = 0;
 13538  0052B6  9277               	bcf	3959,1,c	;volatile
 13539                           
 13540                           ;ecan.c: 301: }
 13541                           ;ecan.c: 304: return (returnValue);
 13542  0052B8  5025               	movf	CAN_receive@returnValue,w,c
 13543  0052BA  0012               	return	
 13544  0052BC                     __end_of_CAN_receive:
 13545                           	opt stack 0
 13546                           tblptru	equ	0xFF8
 13547                           tblptrh	equ	0xFF7
 13548                           tblptrl	equ	0xFF6
 13549                           tablat	equ	0xFF5
 13550                           prodh	equ	0xFF4
 13551                           prodl	equ	0xFF3
 13552                           intcon	equ	0xFF2
 13553                           postinc0	equ	0xFEE
 13554                           wreg	equ	0xFE8
 13555                           postdec1	equ	0xFE5
 13556                           plusw1	equ	0xFE3
 13557                           fsr1l	equ	0xFE1
 13558                           indf2	equ	0xFDF
 13559                           postinc2	equ	0xFDE
 13560                           plusw2	equ	0xFDB
 13561                           fsr2h	equ	0xFDA
 13562                           fsr2l	equ	0xFD9
 13563                           status	equ	0xFD8
 13564                           
 13565 ;; *************** function _convertReg2StandardCANid *****************
 13566 ;; Defined at:
 13567 ;;		line 385 in file "mcc_generated_files/ecan.c"
 13568 ;; Parameters:    Size  Location     Type
 13569 ;;  tempRXBn_SID    1    wreg     unsigned char 
 13570 ;;  tempRXBn_SID    1   15[COMRAM] unsigned char 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  tempRXBn_SID    1   21[COMRAM] unsigned char 
 13573 ;;  ConvertedID     4   26[COMRAM] unsigned long 
 13574 ;;  returnValue     4   22[COMRAM] unsigned long 
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  4   15[COMRAM] unsigned long 
 13577 ;; Registers used:
 13578 ;;		wreg, status,2, status,0
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13588 ;;Total ram usage:       15 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; Hardware stack levels required when called:    4
 13591 ;; This function calls:
 13592 ;;		Nothing
 13593 ;; This function is called by:
 13594 ;;		_CAN_receive
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text46
 13599  005B56                     __ptext46:
 13600                           	opt stack 0
 13601  005B56                     _convertReg2StandardCANid:
 13602                           	opt stack 25
 13603                           
 13604                           ;incstack = 0
 13605                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
 13606  005B56  6E16               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
 13607                           
 13608                           ;ecan.c: 386: unsigned long returnValue = 0;
 13609  005B58  0E00               	movlw	0
 13610  005B5A  6E17               	movwf	convertReg2StandardCANid@returnValue,c
 13611  005B5C  0E00               	movlw	0
 13612  005B5E  6E18               	movwf	convertReg2StandardCANid@returnValue+1,c
 13613  005B60  0E00               	movlw	0
 13614  005B62  6E19               	movwf	convertReg2StandardCANid@returnValue+2,c
 13615  005B64  0E00               	movlw	0
 13616  005B66  6E1A               	movwf	convertReg2StandardCANid@returnValue+3,c
 13617                           
 13618                           ;ecan.c: 387: unsigned long ConvertedID;
 13619                           ;ecan.c: 391: ConvertedID = (tempRXBn_SIDH << 3);
 13620  005B68  5016               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
 13621  005B6A  6E14               	movwf	??_convertReg2StandardCANid& (0+255),c
 13622  005B6C  6A15               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
 13623  005B6E  90D8               	bcf	status,0,c
 13624  005B70  3614               	rlcf	??_convertReg2StandardCANid,f,c
 13625  005B72  3615               	rlcf	??_convertReg2StandardCANid+1,f,c
 13626  005B74  90D8               	bcf	status,0,c
 13627  005B76  3614               	rlcf	??_convertReg2StandardCANid,f,c
 13628  005B78  3615               	rlcf	??_convertReg2StandardCANid+1,f,c
 13629  005B7A  90D8               	bcf	status,0,c
 13630  005B7C  3614               	rlcf	??_convertReg2StandardCANid,f,c
 13631  005B7E  3615               	rlcf	??_convertReg2StandardCANid+1,f,c
 13632  005B80  C014  F01B         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
 13633  005B84  C015  F01C         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
 13634  005B88  0E00               	movlw	0
 13635  005B8A  BE1C               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
 13636  005B8C  0EFF               	movlw	-1
 13637  005B8E  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 13638  005B90  6E1E               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 13639                           
 13640                           ;ecan.c: 392: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
 13641  005B92  C010  F014         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
 13642  005B96  0E05               	movlw	5
 13643  005B98  6E15               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
 13644  005B9A                     u1065:
 13645  005B9A  90D8               	bcf	status,0,c
 13646  005B9C  3214               	rrcf	??_convertReg2StandardCANid,f,c
 13647  005B9E  2E15               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
 13648  005BA0  D7FC               	goto	u1065
 13649  005BA2  5014               	movf	??_convertReg2StandardCANid,w,c
 13650  005BA4  241B               	addwf	convertReg2StandardCANid@ConvertedID,w,c
 13651  005BA6  6E1B               	movwf	convertReg2StandardCANid@ConvertedID,c
 13652  005BA8  0E00               	movlw	0
 13653  005BAA  201C               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
 13654  005BAC  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+1,c
 13655  005BAE  0E00               	movlw	0
 13656  005BB0  201D               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
 13657  005BB2  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 13658  005BB4  0E00               	movlw	0
 13659  005BB6  201E               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
 13660  005BB8  6E1E               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 13661                           
 13662                           ;ecan.c: 393: returnValue = ConvertedID;
 13663  005BBA  C01B  F017         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
 13664  005BBE  C01C  F018         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
 13665  005BC2  C01D  F019         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
 13666  005BC6  C01E  F01A         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
 13667                           
 13668                           ;ecan.c: 394: return (returnValue);
 13669  005BCA  C017  F010         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
 13670  005BCE  C018  F011         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
 13671  005BD2  C019  F012         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
 13672  005BD6  C01A  F013         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
 13673  005BDA  0012               	return	
 13674  005BDC                     __end_of_convertReg2StandardCANid:
 13675                           	opt stack 0
 13676                           tblptru	equ	0xFF8
 13677                           tblptrh	equ	0xFF7
 13678                           tblptrl	equ	0xFF6
 13679                           tablat	equ	0xFF5
 13680                           prodh	equ	0xFF4
 13681                           prodl	equ	0xFF3
 13682                           intcon	equ	0xFF2
 13683                           postinc0	equ	0xFEE
 13684                           wreg	equ	0xFE8
 13685                           postdec1	equ	0xFE5
 13686                           plusw1	equ	0xFE3
 13687                           fsr1l	equ	0xFE1
 13688                           indf2	equ	0xFDF
 13689                           postinc2	equ	0xFDE
 13690                           plusw2	equ	0xFDB
 13691                           fsr2h	equ	0xFDA
 13692                           fsr2l	equ	0xFD9
 13693                           status	equ	0xFD8
 13694                           
 13695 ;; *************** function _convertReg2ExtendedCANid *****************
 13696 ;; Defined at:
 13697 ;;		line 365 in file "mcc_generated_files/ecan.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;  tempRXBn_EID    1    wreg     unsigned char 
 13700 ;;  tempRXBn_EID    1   15[COMRAM] unsigned char 
 13701 ;;  tempRXBn_SID    1   16[COMRAM] unsigned char 
 13702 ;;  tempRXBn_SID    1   17[COMRAM] unsigned char 
 13703 ;; Auto vars:     Size  Location     Type
 13704 ;;  tempRXBn_EID    1   23[COMRAM] unsigned char 
 13705 ;;  ConvertedID     4   30[COMRAM] unsigned long 
 13706 ;;  returnValue     4   24[COMRAM] unsigned long 
 13707 ;;  CAN_standard    1   29[COMRAM] unsigned char 
 13708 ;;  CAN_standard    1   28[COMRAM] unsigned char 
 13709 ;; Return value:  Size  Location     Type
 13710 ;;                  4   15[COMRAM] unsigned long 
 13711 ;; Registers used:
 13712 ;;		wreg, status,2, status,0
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/0
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13719 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13721 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13722 ;;Total ram usage:       19 bytes
 13723 ;; Hardware stack levels used:    1
 13724 ;; Hardware stack levels required when called:    4
 13725 ;; This function calls:
 13726 ;;		Nothing
 13727 ;; This function is called by:
 13728 ;;		_CAN_receive
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           	psect	text47
 13733  0052BC                     __ptext47:
 13734                           	opt stack 0
 13735  0052BC                     _convertReg2ExtendedCANid:
 13736                           	opt stack 25
 13737                           
 13738                           ;incstack = 0
 13739                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
 13740  0052BC  6E18               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
 13741                           
 13742                           ;ecan.c: 366: unsigned long returnValue = 0;
 13743  0052BE  0E00               	movlw	0
 13744  0052C0  6E19               	movwf	convertReg2ExtendedCANid@returnValue,c
 13745  0052C2  0E00               	movlw	0
 13746  0052C4  6E1A               	movwf	convertReg2ExtendedCANid@returnValue+1,c
 13747  0052C6  0E00               	movlw	0
 13748  0052C8  6E1B               	movwf	convertReg2ExtendedCANid@returnValue+2,c
 13749  0052CA  0E00               	movlw	0
 13750  0052CC  6E1C               	movwf	convertReg2ExtendedCANid@returnValue+3,c
 13751                           
 13752                           ;ecan.c: 367: unsigned long ConvertedID = 0;
 13753  0052CE  0E00               	movlw	0
 13754  0052D0  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13755  0052D2  0E00               	movlw	0
 13756  0052D4  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13757  0052D6  0E00               	movlw	0
 13758  0052D8  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13759  0052DA  0E00               	movlw	0
 13760  0052DC  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13761                           
 13762                           ;ecan.c: 368: unsigned char CAN_standardLo_ID_lo2bits;
 13763                           ;ecan.c: 369: unsigned char CAN_standardLo_ID_hi3bits;
 13764                           ;ecan.c: 371: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
 13765  0052DE  5012               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 13766  0052E0  0B03               	andlw	3
 13767  0052E2  6E1D               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
 13768                           
 13769                           ;ecan.c: 372: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
 13770  0052E4  3812               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 13771  0052E6  42E8               	rrncf	wreg,f,c
 13772  0052E8  0B07               	andlw	7
 13773  0052EA  6E1E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
 13774                           
 13775                           ;ecan.c: 373: ConvertedID = (tempRXBn_SIDH << 3);
 13776  0052EC  5011               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
 13777  0052EE  6E14               	movwf	??_convertReg2ExtendedCANid& (0+255),c
 13778  0052F0  6A15               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
 13779  0052F2  90D8               	bcf	status,0,c
 13780  0052F4  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13781  0052F6  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13782  0052F8  90D8               	bcf	status,0,c
 13783  0052FA  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13784  0052FC  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13785  0052FE  90D8               	bcf	status,0,c
 13786  005300  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13787  005302  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13788  005304  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13789  005308  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13790  00530C  0E00               	movlw	0
 13791  00530E  BE20               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
 13792  005310  0EFF               	movlw	-1
 13793  005312  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13794  005314  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13795                           
 13796                           ;ecan.c: 374: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
 13797  005316  501E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
 13798  005318  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13799  00531A  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13800  00531C  0E00               	movlw	0
 13801  00531E  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13802  005320  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13803  005322  0E00               	movlw	0
 13804  005324  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13805  005326  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13806  005328  0E00               	movlw	0
 13807  00532A  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13808  00532C  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13809                           
 13810                           ;ecan.c: 375: ConvertedID = (ConvertedID << 2);
 13811  00532E  C01F  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
 13812  005332  C020  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
 13813  005336  C021  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
 13814  00533A  C022  F017         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
 13815  00533E  0E02               	movlw	2
 13816  005340                     u1055:
 13817  005340  90D8               	bcf	status,0,c
 13818  005342  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13819  005344  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13820  005346  3616               	rlcf	??_convertReg2ExtendedCANid+2,f,c
 13821  005348  3617               	rlcf	??_convertReg2ExtendedCANid+3,f,c
 13822  00534A  2EE8               	decfsz	wreg,f,c
 13823  00534C  D7F9               	goto	u1055
 13824  00534E  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13825  005352  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13826  005356  C016  F021         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 13827  00535A  C017  F022         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 13828                           
 13829                           ;ecan.c: 376: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
 13830  00535E  501D               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
 13831  005360  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13832  005362  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13833  005364  0E00               	movlw	0
 13834  005366  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13835  005368  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13836  00536A  0E00               	movlw	0
 13837  00536C  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13838  00536E  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13839  005370  0E00               	movlw	0
 13840  005372  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13841  005374  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13842                           
 13843                           ;ecan.c: 377: ConvertedID = (ConvertedID << 8);
 13844  005376  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 13845  00537A  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 13846  00537E  C021  F017         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 13847  005382  6A14               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 13848  005384  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13849  005388  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13850  00538C  C016  F021         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 13851  005390  C017  F022         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 13852                           
 13853                           ;ecan.c: 378: ConvertedID = ConvertedID + tempRXBn_EIDH;
 13854  005394  5018               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
 13855  005396  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13856  005398  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13857  00539A  0E00               	movlw	0
 13858  00539C  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13859  00539E  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13860  0053A0  0E00               	movlw	0
 13861  0053A2  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13862  0053A4  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13863  0053A6  0E00               	movlw	0
 13864  0053A8  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13865  0053AA  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13866                           
 13867                           ;ecan.c: 379: ConvertedID = (ConvertedID << 8);
 13868  0053AC  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 13869  0053B0  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 13870  0053B4  C021  F017         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 13871  0053B8  6A14               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 13872  0053BA  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13873  0053BE  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13874  0053C2  C016  F021         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 13875  0053C6  C017  F022         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 13876                           
 13877                           ;ecan.c: 380: ConvertedID = ConvertedID + tempRXBn_EIDL;
 13878  0053CA  5010               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
 13879  0053CC  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13880  0053CE  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13881  0053D0  0E00               	movlw	0
 13882  0053D2  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13883  0053D4  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13884  0053D6  0E00               	movlw	0
 13885  0053D8  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13886  0053DA  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13887  0053DC  0E00               	movlw	0
 13888  0053DE  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13889  0053E0  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13890                           
 13891                           ;ecan.c: 381: returnValue = ConvertedID;
 13892  0053E2  C01F  F019         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
 13893  0053E6  C020  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
 13894  0053EA  C021  F01B         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
 13895  0053EE  C022  F01C         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
 13896                           
 13897                           ;ecan.c: 382: return (returnValue);
 13898  0053F2  C019  F010         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
 13899  0053F6  C01A  F011         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
 13900  0053FA  C01B  F012         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
 13901  0053FE  C01C  F013         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
 13902  005402  0012               	return	
 13903  005404                     __end_of_convertReg2ExtendedCANid:
 13904                           	opt stack 0
 13905                           tblptru	equ	0xFF8
 13906                           tblptrh	equ	0xFF7
 13907                           tblptrl	equ	0xFF6
 13908                           tablat	equ	0xFF5
 13909                           prodh	equ	0xFF4
 13910                           prodl	equ	0xFF3
 13911                           intcon	equ	0xFF2
 13912                           postinc0	equ	0xFEE
 13913                           wreg	equ	0xFE8
 13914                           postdec1	equ	0xFE5
 13915                           plusw1	equ	0xFE3
 13916                           fsr1l	equ	0xFE1
 13917                           indf2	equ	0xFDF
 13918                           postinc2	equ	0xFDE
 13919                           plusw2	equ	0xFDB
 13920                           fsr2h	equ	0xFDA
 13921                           fsr2l	equ	0xFD9
 13922                           status	equ	0xFD8
 13923                           
 13924 ;; *************** function _INTERRUPT_InterruptManager *****************
 13925 ;; Defined at:
 13926 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;		None
 13929 ;; Auto vars:     Size  Location     Type
 13930 ;;		None
 13931 ;; Return value:  Size  Location     Type
 13932 ;;                  1    wreg      void 
 13933 ;; Registers used:
 13934 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13935 ;; Tracked objects:
 13936 ;;		On entry : 0/0
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13942 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13943 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;Total ram usage:       14 bytes
 13945 ;; Hardware stack levels used:    1
 13946 ;; Hardware stack levels required when called:    3
 13947 ;; This function calls:
 13948 ;;		_TMR0_ISR
 13949 ;;		_TMR1_ISR
 13950 ;; This function is called by:
 13951 ;;		Interrupt level 2
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           	psect	intcode
 13956  000008                     __pintcode:
 13957                           	opt stack 0
 13958  000008                     _INTERRUPT_InterruptManager:
 13959                           	opt stack 22
 13960                           
 13961                           ;incstack = 0
 13962  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13963  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 13964  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13965  000012  CFE9 F004          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13966  000016  CFEA F005          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13967  00001A  CFE1 F006          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13968  00001E  CFE2 F007          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13969  000022  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13970  000026  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13971  00002A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13972  00002E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13973  000032  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13974  000036  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13975  00003A  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13976  00003E  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13977                           
 13978                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
 13979  000042  BCF2               	btfsc	intcon,6,c	;volatile
 13980  000044  A09D               	btfss	3997,0,c	;volatile
 13981  000046  D005               	goto	i2l516
 13982  000048  A09E               	btfss	3998,0,c	;volatile
 13983  00004A  D003               	goto	i2l516
 13984                           
 13985                           ;interrupt_manager.c: 61: {
 13986                           ;interrupt_manager.c: 62: TMR1_ISR();
 13987  00004C  ECD0  F030         	call	_TMR1_ISR	;wreg free
 13988                           
 13989                           ;interrupt_manager.c: 63: }
 13990  000050  D005               	goto	i2l520
 13991  000052                     i2l516:
 13992                           
 13993                           ;interrupt_manager.c: 64: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 13994  000052  BAF2               	btfsc	intcon,5,c	;volatile
 13995  000054  A4F2               	btfss	intcon,2,c	;volatile
 13996  000056  D002               	goto	i2l520
 13997                           
 13998                           ;interrupt_manager.c: 65: {
 13999                           ;interrupt_manager.c: 66: TMR0_ISR();
 14000  000058  EC47  F030         	call	_TMR0_ISR	;wreg free
 14001  00005C                     i2l520:
 14002  00005C  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 14003  000060  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 14004  000064  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 14005  000068  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 14006  00006C  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 14007  000070  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 14008  000074  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 14009  000078  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 14010  00007C  C007  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 14011  000080  C006  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 14012  000084  C005  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 14013  000088  C004  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 14014  00008C  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14015  000090  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14016  000094  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14017  000096  0011               	retfie		f
 14018  000098                     __end_of_INTERRUPT_InterruptManager:
 14019                           	opt stack 0
 14020                           pclatu	equ	0xFFB
 14021                           pclath	equ	0xFFA
 14022                           tblptru	equ	0xFF8
 14023                           tblptrh	equ	0xFF7
 14024                           tblptrl	equ	0xFF6
 14025                           tablat	equ	0xFF5
 14026                           prodh	equ	0xFF4
 14027                           prodl	equ	0xFF3
 14028                           intcon	equ	0xFF2
 14029                           postinc0	equ	0xFEE
 14030                           fsr0h	equ	0xFEA
 14031                           fsr0l	equ	0xFE9
 14032                           wreg	equ	0xFE8
 14033                           postdec1	equ	0xFE5
 14034                           plusw1	equ	0xFE3
 14035                           fsr1h	equ	0xFE2
 14036                           fsr1l	equ	0xFE1
 14037                           indf2	equ	0xFDF
 14038                           postinc2	equ	0xFDE
 14039                           plusw2	equ	0xFDB
 14040                           fsr2h	equ	0xFDA
 14041                           fsr2l	equ	0xFD9
 14042                           status	equ	0xFD8
 14043                           
 14044 ;; *************** function _TMR1_ISR *****************
 14045 ;; Defined at:
 14046 ;;		line 160 in file "mcc_generated_files/tmr1.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;		None
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;		None
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  1    wreg      void 
 14053 ;; Registers used:
 14054 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;Total ram usage:        0 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:    2
 14067 ;; This function calls:
 14068 ;;		_TMR1_CallBack
 14069 ;; This function is called by:
 14070 ;;		_INTERRUPT_InterruptManager
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text49
 14075  0061A0                     __ptext49:
 14076                           	opt stack 0
 14077  0061A0                     _TMR1_ISR:
 14078                           	opt stack 22
 14079                           
 14080                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
 14081                           
 14082                           ;incstack = 0
 14083  0061A0  909E               	bcf	3998,0,c	;volatile
 14084                           
 14085                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 14086  0061A2  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 14087  0061A4  6ECF               	movwf	4047,c	;volatile
 14088                           
 14089                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
 14090  0061A6  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 14091                           
 14092                           ;tmr1.c: 171: TMR1_CallBack();
 14093  0061AA  EC7D  F030         	call	_TMR1_CallBack	;wreg free
 14094  0061AE  0012               	return		;funcret
 14095  0061B0                     __end_of_TMR1_ISR:
 14096                           	opt stack 0
 14097                           pclatu	equ	0xFFB
 14098                           pclath	equ	0xFFA
 14099                           tblptru	equ	0xFF8
 14100                           tblptrh	equ	0xFF7
 14101                           tblptrl	equ	0xFF6
 14102                           tablat	equ	0xFF5
 14103                           prodh	equ	0xFF4
 14104                           prodl	equ	0xFF3
 14105                           intcon	equ	0xFF2
 14106                           postinc0	equ	0xFEE
 14107                           fsr0h	equ	0xFEA
 14108                           fsr0l	equ	0xFE9
 14109                           wreg	equ	0xFE8
 14110                           postdec1	equ	0xFE5
 14111                           plusw1	equ	0xFE3
 14112                           fsr1h	equ	0xFE2
 14113                           fsr1l	equ	0xFE1
 14114                           indf2	equ	0xFDF
 14115                           postinc2	equ	0xFDE
 14116                           plusw2	equ	0xFDB
 14117                           fsr2h	equ	0xFDA
 14118                           fsr2l	equ	0xFD9
 14119                           status	equ	0xFD8
 14120                           
 14121 ;; *************** function _TMR1_CallBack *****************
 14122 ;; Defined at:
 14123 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;		None
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  1    wreg      void 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14141 ;;Total ram usage:        0 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:    1
 14144 ;; This function calls:
 14145 ;;		Absolute function
 14146 ;;		_TMR1_DefaultInterruptHandler
 14147 ;;		_refresh
 14148 ;; This function is called by:
 14149 ;;		_TMR1_ISR
 14150 ;; This function uses a non-reentrant model
 14151 ;;
 14152                           
 14153                           	psect	text50
 14154  0060FA                     __ptext50:
 14155                           	opt stack 0
 14156  0060FA                     _TMR1_CallBack:
 14157                           	opt stack 22
 14158                           
 14159                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 14160                           
 14161                           ;incstack = 0
 14162  0060FA  5046               	movf	_TMR1_InterruptHandler,w,c
 14163  0060FC  1047               	iorwf	_TMR1_InterruptHandler+1,w,c
 14164  0060FE  B4D8               	btfsc	status,2,c
 14165  006100  0012               	return	
 14166                           
 14167                           ;tmr1.c: 178: {
 14168                           ;tmr1.c: 179: TMR1_InterruptHandler();
 14169  006102  D801               	call	i2u102_48
 14170  006104  0012               	return	
 14171  006106                     i2u102_48:
 14172  006106  0005               	push	
 14173  006108  6EFA               	movwf	pclath,c
 14174  00610A  5046               	movf	_TMR1_InterruptHandler,w,c
 14175  00610C  6EFD               	movwf	tosl,c
 14176  00610E  5047               	movf	_TMR1_InterruptHandler+1,w,c
 14177  006110  6EFE               	movwf	tosh,c
 14178  006112  6AFF               	clrf	tosu,c
 14179  006114  50FA               	movf	pclath,w,c
 14180  006116  0012               	return		;indir
 14181  006118                     __end_of_TMR1_CallBack:
 14182                           	opt stack 0
 14183                           tosu	equ	0xFFF
 14184                           tosh	equ	0xFFE
 14185                           tosl	equ	0xFFD
 14186                           pclatu	equ	0xFFB
 14187                           pclath	equ	0xFFA
 14188                           tblptru	equ	0xFF8
 14189                           tblptrh	equ	0xFF7
 14190                           tblptrl	equ	0xFF6
 14191                           tablat	equ	0xFF5
 14192                           prodh	equ	0xFF4
 14193                           prodl	equ	0xFF3
 14194                           intcon	equ	0xFF2
 14195                           postinc0	equ	0xFEE
 14196                           fsr0h	equ	0xFEA
 14197                           fsr0l	equ	0xFE9
 14198                           wreg	equ	0xFE8
 14199                           postdec1	equ	0xFE5
 14200                           plusw1	equ	0xFE3
 14201                           fsr1h	equ	0xFE2
 14202                           fsr1l	equ	0xFE1
 14203                           indf2	equ	0xFDF
 14204                           postinc2	equ	0xFDE
 14205                           plusw2	equ	0xFDB
 14206                           fsr2h	equ	0xFDA
 14207                           fsr2l	equ	0xFD9
 14208                           status	equ	0xFD8
 14209                           
 14210 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 14211 ;; Defined at:
 14212 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;		None
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;		None
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  1    wreg      void 
 14219 ;; Registers used:
 14220 ;;		None
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14230 ;;Total ram usage:        0 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; This function calls:
 14233 ;;		Nothing
 14234 ;; This function is called by:
 14235 ;;		_TMR1_Initialize
 14236 ;;		_TMR1_CallBack
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           	psect	text51
 14241  0061F4                     __ptext51:
 14242                           	opt stack 0
 14243  0061F4                     _TMR1_DefaultInterruptHandler:
 14244                           	opt stack 22
 14245                           
 14246                           ;incstack = 0
 14247  0061F4  0012               	return		;funcret
 14248  0061F6                     __end_of_TMR1_DefaultInterruptHandler:
 14249                           	opt stack 0
 14250                           tosu	equ	0xFFF
 14251                           tosh	equ	0xFFE
 14252                           tosl	equ	0xFFD
 14253                           pclatu	equ	0xFFB
 14254                           pclath	equ	0xFFA
 14255                           tblptru	equ	0xFF8
 14256                           tblptrh	equ	0xFF7
 14257                           tblptrl	equ	0xFF6
 14258                           tablat	equ	0xFF5
 14259                           prodh	equ	0xFF4
 14260                           prodl	equ	0xFF3
 14261                           intcon	equ	0xFF2
 14262                           postinc0	equ	0xFEE
 14263                           fsr0h	equ	0xFEA
 14264                           fsr0l	equ	0xFE9
 14265                           wreg	equ	0xFE8
 14266                           postdec1	equ	0xFE5
 14267                           plusw1	equ	0xFE3
 14268                           fsr1h	equ	0xFE2
 14269                           fsr1l	equ	0xFE1
 14270                           indf2	equ	0xFDF
 14271                           postinc2	equ	0xFDE
 14272                           plusw2	equ	0xFDB
 14273                           fsr2h	equ	0xFDA
 14274                           fsr2l	equ	0xFD9
 14275                           status	equ	0xFD8
 14276                           
 14277 ;; *************** function _refresh *****************
 14278 ;; Defined at:
 14279 ;;		line 31 in file "main.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;		None
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  1    wreg      void 
 14286 ;; Registers used:
 14287 ;;		wreg, status,2
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14297 ;;Total ram usage:        0 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; This function calls:
 14300 ;;		Nothing
 14301 ;; This function is called by:
 14302 ;;		_main
 14303 ;;		_TMR1_CallBack
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           	psect	text52
 14308  0061DC                     __ptext52:
 14309                           	opt stack 0
 14310  0061DC                     _refresh:
 14311                           	opt stack 22
 14312                           
 14313                           ;main.c: 32: refresh_screen = 1;
 14314                           
 14315                           ;incstack = 0
 14316  0061DC  0E01               	movlw	1
 14317  0061DE  0100               	movlb	0	; () banked
 14318  0061E0  6FBA               	movwf	_refresh_screen& (0+255),b
 14319                           
 14320                           ; BSR set to: 0
 14321  0061E2  0012               	return		;funcret
 14322  0061E4                     __end_of_refresh:
 14323                           	opt stack 0
 14324                           tosu	equ	0xFFF
 14325                           tosh	equ	0xFFE
 14326                           tosl	equ	0xFFD
 14327                           pclatu	equ	0xFFB
 14328                           pclath	equ	0xFFA
 14329                           tblptru	equ	0xFF8
 14330                           tblptrh	equ	0xFF7
 14331                           tblptrl	equ	0xFF6
 14332                           tablat	equ	0xFF5
 14333                           prodh	equ	0xFF4
 14334                           prodl	equ	0xFF3
 14335                           intcon	equ	0xFF2
 14336                           postinc0	equ	0xFEE
 14337                           fsr0h	equ	0xFEA
 14338                           fsr0l	equ	0xFE9
 14339                           wreg	equ	0xFE8
 14340                           postdec1	equ	0xFE5
 14341                           plusw1	equ	0xFE3
 14342                           fsr1h	equ	0xFE2
 14343                           fsr1l	equ	0xFE1
 14344                           indf2	equ	0xFDF
 14345                           postinc2	equ	0xFDE
 14346                           plusw2	equ	0xFDB
 14347                           fsr2h	equ	0xFDA
 14348                           fsr2l	equ	0xFD9
 14349                           status	equ	0xFD8
 14350                           
 14351 ;; *************** function _TMR0_ISR *****************
 14352 ;; Defined at:
 14353 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 14354 ;; Parameters:    Size  Location     Type
 14355 ;;		None
 14356 ;; Auto vars:     Size  Location     Type
 14357 ;;		None
 14358 ;; Return value:  Size  Location     Type
 14359 ;;                  1    wreg      void 
 14360 ;; Registers used:
 14361 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14362 ;; Tracked objects:
 14363 ;;		On entry : 0/0
 14364 ;;		On exit  : 0/0
 14365 ;;		Unchanged: 0/0
 14366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14371 ;;Total ram usage:        0 bytes
 14372 ;; Hardware stack levels used:    1
 14373 ;; Hardware stack levels required when called:    1
 14374 ;; This function calls:
 14375 ;;		Absolute function
 14376 ;;		_LED_blink
 14377 ;;		_TMR0_DefaultInterruptHandler
 14378 ;; This function is called by:
 14379 ;;		_INTERRUPT_InterruptManager
 14380 ;; This function uses a non-reentrant model
 14381 ;;
 14382                           
 14383                           	psect	text53
 14384  00608E                     __ptext53:
 14385                           	opt stack 0
 14386  00608E                     _TMR0_ISR:
 14387                           	opt stack 23
 14388                           
 14389                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;incstack = 0
 14393  00608E  94F2               	bcf	intcon,2,c	;volatile
 14394                           
 14395                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
 14396  006090  5043               	movf	_timer0ReloadVal+1,w,c	;volatile
 14397  006092  6ED7               	movwf	4055,c	;volatile
 14398                           
 14399                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
 14400  006094  C042  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14401                           
 14402                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
 14403  006098  5044               	movf	_TMR0_InterruptHandler,w,c
 14404  00609A  1045               	iorwf	_TMR0_InterruptHandler+1,w,c
 14405  00609C  B4D8               	btfsc	status,2,c
 14406  00609E  0012               	return	
 14407                           
 14408                           ;tmr0.c: 146: {
 14409                           ;tmr0.c: 147: TMR0_InterruptHandler();
 14410  0060A0  D801               	call	i2u35_48
 14411  0060A2  0012               	return	
 14412  0060A4                     i2u35_48:
 14413  0060A4  0005               	push	
 14414  0060A6  6EFA               	movwf	pclath,c
 14415  0060A8  5044               	movf	_TMR0_InterruptHandler,w,c
 14416  0060AA  6EFD               	movwf	tosl,c
 14417  0060AC  5045               	movf	_TMR0_InterruptHandler+1,w,c
 14418  0060AE  6EFE               	movwf	tosh,c
 14419  0060B0  6AFF               	clrf	tosu,c
 14420  0060B2  50FA               	movf	pclath,w,c
 14421  0060B4  0012               	return		;indir
 14422  0060B6                     __end_of_TMR0_ISR:
 14423                           	opt stack 0
 14424                           tosu	equ	0xFFF
 14425                           tosh	equ	0xFFE
 14426                           tosl	equ	0xFFD
 14427                           pclatu	equ	0xFFB
 14428                           pclath	equ	0xFFA
 14429                           tblptru	equ	0xFF8
 14430                           tblptrh	equ	0xFF7
 14431                           tblptrl	equ	0xFF6
 14432                           tablat	equ	0xFF5
 14433                           prodh	equ	0xFF4
 14434                           prodl	equ	0xFF3
 14435                           intcon	equ	0xFF2
 14436                           postinc0	equ	0xFEE
 14437                           fsr0h	equ	0xFEA
 14438                           fsr0l	equ	0xFE9
 14439                           wreg	equ	0xFE8
 14440                           postdec1	equ	0xFE5
 14441                           plusw1	equ	0xFE3
 14442                           fsr1h	equ	0xFE2
 14443                           fsr1l	equ	0xFE1
 14444                           indf2	equ	0xFDF
 14445                           postinc2	equ	0xFDE
 14446                           plusw2	equ	0xFDB
 14447                           fsr2h	equ	0xFDA
 14448                           fsr2l	equ	0xFD9
 14449                           status	equ	0xFD8
 14450                           
 14451 ;; *************** function _LED_blink *****************
 14452 ;; Defined at:
 14453 ;;		line 35 in file "main.c"
 14454 ;; Parameters:    Size  Location     Type
 14455 ;;		None
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;		None
 14458 ;; Return value:  Size  Location     Type
 14459 ;;                  1    wreg      void 
 14460 ;; Registers used:
 14461 ;;		wreg, status,2, status,0
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/0
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14471 ;;Total ram usage:        1 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; This function calls:
 14474 ;;		Nothing
 14475 ;; This function is called by:
 14476 ;;		_main
 14477 ;;		_TMR0_ISR
 14478 ;; This function uses a non-reentrant model
 14479 ;;
 14480                           
 14481                           	psect	text54
 14482  006058                     __ptext54:
 14483                           	opt stack 0
 14484  006058                     _LED_blink:
 14485                           	opt stack 23
 14486                           
 14487                           ;main.c: 36: (INTCONbits.PEIE = 0);
 14488                           
 14489                           ;incstack = 0
 14490  006058  9CF2               	bcf	intcon,6,c	;volatile
 14491                           
 14492                           ;main.c: 37: LATAbits.LATA1 = !PORTAbits.RA1;
 14493  00605A  B280               	btfsc	3968,1,c	;volatile
 14494  00605C  D003               	goto	i2u25_40
 14495  00605E  6A01               	clrf	??_LED_blink& (0+255),c
 14496  006060  2A01               	incf	??_LED_blink& (0+255),f,c
 14497  006062  D001               	goto	i2u26_48
 14498  006064                     i2u25_40:
 14499  006064  6A01               	clrf	??_LED_blink& (0+255),c
 14500  006066                     i2u26_48:
 14501  006066  4601               	rlncf	??_LED_blink,f,c
 14502  006068  5089               	movf	3977,w,c	;volatile
 14503  00606A  1801               	xorwf	??_LED_blink,w,c
 14504  00606C  0BFD               	andlw	-3
 14505  00606E  1801               	xorwf	??_LED_blink,w,c
 14506  006070  6E89               	movwf	3977,c	;volatile
 14507                           
 14508                           ;main.c: 38: LATDbits.LATD4 = !PORTDbits.RD4;
 14509  006072  B883               	btfsc	3971,4,c	;volatile
 14510  006074  D003               	goto	i2u27_40
 14511  006076  6A01               	clrf	??_LED_blink& (0+255),c
 14512  006078  2A01               	incf	??_LED_blink& (0+255),f,c
 14513  00607A  D001               	goto	i2u28_48
 14514  00607C                     i2u27_40:
 14515  00607C  6A01               	clrf	??_LED_blink& (0+255),c
 14516  00607E                     i2u28_48:
 14517  00607E  3A01               	swapf	??_LED_blink,f,c
 14518  006080  508C               	movf	3980,w,c	;volatile
 14519  006082  1801               	xorwf	??_LED_blink,w,c
 14520  006084  0BEF               	andlw	-17
 14521  006086  1801               	xorwf	??_LED_blink,w,c
 14522  006088  6E8C               	movwf	3980,c	;volatile
 14523                           
 14524                           ;main.c: 39: (INTCONbits.PEIE = 1);
 14525  00608A  8CF2               	bsf	intcon,6,c	;volatile
 14526  00608C  0012               	return		;funcret
 14527  00608E                     __end_of_LED_blink:
 14528                           	opt stack 0
 14529                           tosu	equ	0xFFF
 14530                           tosh	equ	0xFFE
 14531                           tosl	equ	0xFFD
 14532                           pclatu	equ	0xFFB
 14533                           pclath	equ	0xFFA
 14534                           tblptru	equ	0xFF8
 14535                           tblptrh	equ	0xFF7
 14536                           tblptrl	equ	0xFF6
 14537                           tablat	equ	0xFF5
 14538                           prodh	equ	0xFF4
 14539                           prodl	equ	0xFF3
 14540                           intcon	equ	0xFF2
 14541                           postinc0	equ	0xFEE
 14542                           fsr0h	equ	0xFEA
 14543                           fsr0l	equ	0xFE9
 14544                           wreg	equ	0xFE8
 14545                           postdec1	equ	0xFE5
 14546                           plusw1	equ	0xFE3
 14547                           fsr1h	equ	0xFE2
 14548                           fsr1l	equ	0xFE1
 14549                           indf2	equ	0xFDF
 14550                           postinc2	equ	0xFDE
 14551                           plusw2	equ	0xFDB
 14552                           fsr2h	equ	0xFDA
 14553                           fsr2l	equ	0xFD9
 14554                           status	equ	0xFD8
 14555                           
 14556 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14557 ;; Defined at:
 14558 ;;		line 158 in file "mcc_generated_files/tmr0.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		None
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;Total ram usage:        0 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; This function calls:
 14579 ;;		Nothing
 14580 ;; This function is called by:
 14581 ;;		_TMR0_Initialize
 14582 ;;		_TMR0_ISR
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text55
 14587  0061F6                     __ptext55:
 14588                           	opt stack 0
 14589  0061F6                     _TMR0_DefaultInterruptHandler:
 14590                           	opt stack 23
 14591                           
 14592                           ;incstack = 0
 14593  0061F6  0012               	return		;funcret
 14594  0061F8                     __end_of_TMR0_DefaultInterruptHandler:
 14595                           	opt stack 0
 14596                           tosu	equ	0xFFF
 14597                           tosh	equ	0xFFE
 14598                           tosl	equ	0xFFD
 14599                           pclatu	equ	0xFFB
 14600                           pclath	equ	0xFFA
 14601                           tblptru	equ	0xFF8
 14602                           tblptrh	equ	0xFF7
 14603                           tblptrl	equ	0xFF6
 14604                           tablat	equ	0xFF5
 14605                           prodh	equ	0xFF4
 14606                           prodl	equ	0xFF3
 14607                           intcon	equ	0xFF2
 14608                           postinc0	equ	0xFEE
 14609                           fsr0h	equ	0xFEA
 14610                           fsr0l	equ	0xFE9
 14611                           wreg	equ	0xFE8
 14612                           postdec1	equ	0xFE5
 14613                           plusw1	equ	0xFE3
 14614                           fsr1h	equ	0xFE2
 14615                           fsr1l	equ	0xFE1
 14616                           indf2	equ	0xFDF
 14617                           postinc2	equ	0xFDE
 14618                           plusw2	equ	0xFDB
 14619                           fsr2h	equ	0xFDA
 14620                           fsr2l	equ	0xFD9
 14621                           status	equ	0xFD8
 14622                           tosu	equ	0xFFF
 14623                           tosh	equ	0xFFE
 14624                           tosl	equ	0xFFD
 14625                           pclatu	equ	0xFFB
 14626                           pclath	equ	0xFFA
 14627                           tblptru	equ	0xFF8
 14628                           tblptrh	equ	0xFF7
 14629                           tblptrl	equ	0xFF6
 14630                           tablat	equ	0xFF5
 14631                           prodh	equ	0xFF4
 14632                           prodl	equ	0xFF3
 14633                           intcon	equ	0xFF2
 14634                           postinc0	equ	0xFEE
 14635                           fsr0h	equ	0xFEA
 14636                           fsr0l	equ	0xFE9
 14637                           wreg	equ	0xFE8
 14638                           postdec1	equ	0xFE5
 14639                           plusw1	equ	0xFE3
 14640                           fsr1h	equ	0xFE2
 14641                           fsr1l	equ	0xFE1
 14642                           indf2	equ	0xFDF
 14643                           postinc2	equ	0xFDE
 14644                           plusw2	equ	0xFDB
 14645                           fsr2h	equ	0xFDA
 14646                           fsr2l	equ	0xFD9
 14647                           status	equ	0xFD8
 14648                           
 14649                           	psect	text56
 14650  000000                     __ptext56:
 14651                           	opt stack 0
 14652                           tosu	equ	0xFFF
 14653                           tosh	equ	0xFFE
 14654                           tosl	equ	0xFFD
 14655                           pclatu	equ	0xFFB
 14656                           pclath	equ	0xFFA
 14657                           tblptru	equ	0xFF8
 14658                           tblptrh	equ	0xFF7
 14659                           tblptrl	equ	0xFF6
 14660                           tablat	equ	0xFF5
 14661                           prodh	equ	0xFF4
 14662                           prodl	equ	0xFF3
 14663                           intcon	equ	0xFF2
 14664                           postinc0	equ	0xFEE
 14665                           fsr0h	equ	0xFEA
 14666                           fsr0l	equ	0xFE9
 14667                           wreg	equ	0xFE8
 14668                           postdec1	equ	0xFE5
 14669                           plusw1	equ	0xFE3
 14670                           fsr1h	equ	0xFE2
 14671                           fsr1l	equ	0xFE1
 14672                           indf2	equ	0xFDF
 14673                           postinc2	equ	0xFDE
 14674                           plusw2	equ	0xFDB
 14675                           fsr2h	equ	0xFDA
 14676                           fsr2l	equ	0xFD9
 14677                           status	equ	0xFD8
 14678                           
 14679                           	psect	rparam
 14680  0000                     tosu	equ	0xFFF
 14681                           tosh	equ	0xFFE
 14682                           tosl	equ	0xFFD
 14683                           pclatu	equ	0xFFB
 14684                           pclath	equ	0xFFA
 14685                           tblptru	equ	0xFF8
 14686                           tblptrh	equ	0xFF7
 14687                           tblptrl	equ	0xFF6
 14688                           tablat	equ	0xFF5
 14689                           prodh	equ	0xFF4
 14690                           prodl	equ	0xFF3
 14691                           intcon	equ	0xFF2
 14692                           postinc0	equ	0xFEE
 14693                           fsr0h	equ	0xFEA
 14694                           fsr0l	equ	0xFE9
 14695                           wreg	equ	0xFE8
 14696                           postdec1	equ	0xFE5
 14697                           plusw1	equ	0xFE3
 14698                           fsr1h	equ	0xFE2
 14699                           fsr1l	equ	0xFE1
 14700                           indf2	equ	0xFDF
 14701                           postinc2	equ	0xFDE
 14702                           plusw2	equ	0xFDB
 14703                           fsr2h	equ	0xFDA
 14704                           fsr2l	equ	0xFD9
 14705                           status	equ	0xFD8
 14706                           
 14707                           	psect	temp
 14708  00004F                     btemp:
 14709                           	opt stack 0
 14710  00004F                     	ds	1
 14711  0000                     int$flags	set	btemp
 14712                           tosu	equ	0xFFF
 14713                           tosh	equ	0xFFE
 14714                           tosl	equ	0xFFD
 14715                           pclatu	equ	0xFFB
 14716                           pclath	equ	0xFFA
 14717                           tblptru	equ	0xFF8
 14718                           tblptrh	equ	0xFF7
 14719                           tblptrl	equ	0xFF6
 14720                           tablat	equ	0xFF5
 14721                           prodh	equ	0xFF4
 14722                           prodl	equ	0xFF3
 14723                           intcon	equ	0xFF2
 14724                           postinc0	equ	0xFEE
 14725                           fsr0h	equ	0xFEA
 14726                           fsr0l	equ	0xFE9
 14727                           wreg	equ	0xFE8
 14728                           postdec1	equ	0xFE5
 14729                           plusw1	equ	0xFE3
 14730                           fsr1h	equ	0xFE2
 14731                           fsr1l	equ	0xFE1
 14732                           indf2	equ	0xFDF
 14733                           postinc2	equ	0xFDE
 14734                           plusw2	equ	0xFDB
 14735                           fsr2h	equ	0xFDA
 14736                           fsr2l	equ	0xFD9
 14737                           status	equ	0xFD8


Data Sizes:
    Strings     113
    Constant    0
    Data        22
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      78
    BANK0           160     70     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[4]), STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[4]), STR_16(CODE[7]), STR_15(CODE[5]), STR_14(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[9]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[8]), STR_2(CODE[10]), 
		 -> STR_1(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[4]), STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[4]), STR_16(CODE[7]), STR_15(CODE[5]), STR_14(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[9]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[8]), STR_2(CODE[10]), 
		 -> STR_1(CODE[4]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LED_blink(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LED_blink(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(BANK0[14]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    wr8s@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[4]), STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[4]), STR_16(CODE[7]), STR_15(CODE[5]), STR_14(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[2]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[9]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[8]), STR_2(CODE[10]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display_status->_cmd
    _display_laptime->_cmd
    _display_brake_bias->_cmd
    _display->_display_rpm
    _display_waterTemp->_cmd
    _display_tp->_cmd
    _display_start->_cmd
    _display_speed->_cmd
    _display_rpm->_cmd
    _display_oilTemp->_cmd
    _display_labels->_cmd
    _display_gear->_cmd
    _display_end->_cmd
    _display_bottom_section->_cmd
    _display_battery->_cmd
    _wr8s->_strlen
    _cmd->___awmod
    ___awmod->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _FT800_Init->_wr32
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->_SPI_Exchange8bit
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_LED_blink

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0 1200474
                                              0 BANK0     70    70      0
                        _CAN_receive
                         _FT800_Init
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                            ___awdiv
                            ___awmod
                            _display
                    _display_battery
             _display_bottom_section
                 _display_brake_bias
                        _display_end
                       _display_gear
                     _display_labels
                    _display_laptime
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                     _display_status
                         _display_tp
                  _display_waterTemp
                          _wait2secs
 ---------------------------------------------------------------------------------
 (1) _wait2secs                                            2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_status                                       8     4      4   58994
                                             36 COMRAM     8     4      4
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_laptime                                     23     7     16   59256
                                             36 COMRAM    23     7     16
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_brake_bias                                   5     3      2   52532
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display                                             18     0     18  492367
                                             47 COMRAM    18     0     18
                    _display_battery
             _display_bottom_section
                        _display_end
                       _display_gear
                     _display_labels
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                         _display_tp
                  _display_waterTemp
 ---------------------------------------------------------------------------------
 (1) _display_waterTemp                                    5     3      2   52608
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_tp                                           5     3      2   52608
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_start                                        0     0      0   15800
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_speed                                        5     3      2   52608
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_rpm                                         11     9      2   61554
                                             36 COMRAM    11     9      2
                            ___awdiv
                            ___awmod
                             ___wmul
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_oilTemp                                      5     3      2   52608
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_labels                                       5     5      0   58471
                                             36 COMRAM     5     5      0
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_gear                                         4     2      2   15974
                                             36 COMRAM     4     2      2
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_end                                          0     0      0   52412
                                _cmd
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_bottom_section                               0     0      0   15800
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_battery                                      5     3      2   61086
                                             36 COMRAM     5     3      2
                            ___awdiv
                            ___awmod
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) _wr8s                                                10     5      5    6036
                                             21 COMRAM    10     5      5
                   _SPI_Exchange8bit
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  7     3      4   15800
                                             29 COMRAM     7     3      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                     _cmd_incrementn
                               _wr32
 ---------------------------------------------------------------------------------
 (2) _cmd_incrementn                                       3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1516
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             17 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           2     2      0   39181
                                             27 COMRAM     2     2      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  7     3      4    1478
                                             16 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _wr32                                                11     4      7     784
                                             16 COMRAM    11     4      7
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 8     3      5   36612
                                             16 COMRAM     8     3      5
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     4      3     263
                                             16 COMRAM     7     4      3
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      44
                                             16 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             34 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                             15 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                             15 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              1 COMRAM    14    14      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                            _refresh *
 ---------------------------------------------------------------------------------
 (9) _refresh                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
                          _LED_blink *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LED_blink                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR0_StopTimer
   _TMR1_Reload
   _TMR1_SetInterruptHandler
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _display
     _display_battery
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_bottom_section
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_end
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _wr16
         _SPI_Exchange8bit
     _display_gear
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_labels
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_oilTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_rpm
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_speed
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_start
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_tp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_waterTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
   _display_battery
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_bottom_section
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_brake_bias
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_end
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
   _display_gear
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_labels
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_laptime
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_oilTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_rpm
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_speed
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_start
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_status
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_tp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_waterTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _wait2secs

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _LED_blink *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _refresh *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      4E       1       83.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD       6        0.0%
DATA                 0      0      CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Mar 21 12:55:30 2018

                                   _SPI_Initialize 61B0                                        _SSPSTATbits 000FC7  
                                     ?_display_end 0001                                       ?_display_rpm 0025  
                                     ___awdiv@sign 0015                           __size_of_ECAN_Initialize 00E6  
                              ___wmul@multiplicand 0012                                        __CFG_BORV$3 000000  
                                  _timer0ReloadVal 0042                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                             __end_of_display_labels 319A  
                                    ?_display_gear 0025                                                l180 6198  
                                              l461 51A0                                                l650 32E8  
                                              l660 3710                                                l652 3340  
                                              l644 31E0                                                l662 3838  
                                              l654 3398                                                l646 3238  
                                              l656 34C0                                                l648 3290  
                                              l658 35E8                                       __CFG_CPB$OFF 000000  
                                     __CFG_CPD$OFF 000000                                                u850 5CBC  
                                              u855 5CB2                                    _timer1ReloadVal 0048  
                                              _cmd 5FB2                                                _dli 004C  
                                              _wr8 6022                                       ___awmod@sign 001D  
                           __end_of_display_status 3932                                                tosl 000FFD  
                                              wreg 000FE8                            __end_of_display_battery 4DF8  
                       ??_convertReg2StandardCANid 0014                                __size_of_FT800_Init 029A  
                                      main@engTemp 0088                                               ?_cmd 001E  
                                             l3420 5B32                                               l4300 46E0  
                                             l3510 5D06                                               l3502 5CEC  
                                             l3422 5B3C                                               l4310 4A0A  
                                             l4302 475A                                               l5110 42E2  
                                             l5102 4282                                               l3512 5D0E  
                                             l3416 5B0A                                               l4304 4824  
                                             l3514 5D12                                               l3522 5D30  
                                             l3506 5CF8                                               l3426 5B44  
                                             l4306 48C6                                               l4314 4AD4  
                                             l5114 43E0                                               l5106 42AE  
                                             l3604 580E                                               l3380 5E8C  
                                             l4308 4940                                               l3470 5C16  
                                             l3526 5D3E                                               l3518 5D26  
                                             l3382 5E90                                               l3702 157A  
                                             l4432 50DA                                               l4408 5072  
                                             l3472 5C1E                                               l3464 5C00  
                                             l5160 460E                                               l5128 450E  
                                             l3490 5C56                                               l3482 5C3E  
                                             l3474 5C22                                               l3458 5BF0  
                                             l4436 510C                                               l3486 5C48  
                                             l4542 3224                                               l4464 51EA  
                                             l3584 573A                                               l3664 1230  
                                             l4640 3D8C                                               l4560 332C  
                                             l4536 31CC                                               l5168 461C  
                                             l5088 41B8                                               l4490 52B6  
                                             l4298 4666                                               l3666 13B6  
                                             l4554 32D4                                               l4468 521E  
                                             l4636 3C80                                               l4548 327C  
                                             l4590 36FC                                               l4582 35D4  
                                             l4574 34AC                                               l4566 3384  
                                             l4488 52B2                                               l4598 3824  
                                             ?_wr8 0011                                               STR_1 0F3A  
                                             STR_2 0F01                                               STR_3 0F14  
                                             STR_4 0F2E                                               STR_5 0F6C  
                                             STR_6 0F0B                                               STR_7 0F2E  
                                             STR_8 0F6C                                               STR_9 0F35  
                                             u1230 3B72                                               u1055 5340  
                                             u1071 122E                                               u1065 5B9A  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               u1617 613E  
                                             u1561 43F8                                               u1481 4054  
                                             u1627 4E04                                               u1555 431E  
                                             u1491 4072                                               u1637 4E1E  
                          __end_of_display_laptime 404A                                display_oilTemp@temp 0025  
                          __end_of_display_oilTemp 5AC8                                               _WPUB 000F5B  
                                   ?_display_speed 0025                                        main@oilTemp 008A  
                                   ?_display_start 0001                                        main@message 0062  
                                      display@gear 003A                                        display@oilP 0032  
                                             _rd16 5DAE                                               _wr32 5C60  
                                             _wr16 5F3C                                               _main 404A  
                                             _wr8s 5AC8                                    _TMR0_StartTimer 61EC  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               fsr0l 000FE9  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 004F  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 0098                                      __CFG_IESO$OFF 000000  
                                    __CFG_FOSC$HS2 000000                             __end_of_SPI_Initialize 61BE  
                       ??_TMR1_SetInterruptHandler 0012                                      __CFG_MCLRE$ON 000000  
                               __size_of_LED_blink 0036                                       ___param_bank 000000  
                       __end_of_display_brake_bias 563E                                              ??_cmd 0022  
                                            ??_wr8 0015                            __end_of_TMR0_Initialize 6022  
                   ??_TMR0_DefaultInterruptHandler 0001                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 6190                                              ?_rd16 0011  
                                   ??_display_gear 0027                                              ?_wr32 0011  
                                            ?_wr16 0011                                              ?_main 0001  
                                  __end_of___awdiv 5C60                                              ?_wr8s 0016  
                                            STR_10 0F56                                              STR_11 0F6E  
                                            STR_20 0F58                                              STR_12 0F53  
                                            STR_13 0F56                                              STR_21 0F5A  
                                            STR_30 0F68                                              STR_22 0F5C  
                                            STR_14 0F1C                                              STR_23 0F5C  
                                            STR_31 0F6A                                              STR_15 0F30  
                                            STR_24 0F51                                              STR_32 0F4A  
                                            STR_16 0F23                                              STR_25 0F5E  
                                            STR_33 0F4D                                              STR_17 0F46  
                                            STR_26 0F60                                              STR_34 0F50  
                                            STR_18 0F2A                                    ?_display_labels 0001  
                                            STR_35 0F5C                                              STR_27 0F62  
                                            STR_19 0F42                                              STR_36 0F70  
                                            STR_28 0F64                                    __end_of___awmod 5D48  
                                            STR_29 0F66                                              STR_37 0F3E  
                                  _TMR1_StartTimer 61E8                                       main@lap_time 0090  
                                            _T0CON 000FD5                                    ___awdiv@divisor 0012  
                                            _T1CON 000FCD                                              i2l520 005C  
                                            i2l516 0052                                    ___awdiv@counter 0014  
                                            _TMR0H 000FD7                                              _TMR1H 000FCF  
                                            _TMR0L 000FD6                                              _TMR1L 000FCE  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                  __size_of_TMR0_SetInterruptHandler 000A  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                    ?_display_status 0025  
                        ?_TMR0_SetInterruptHandler 0010                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0023  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                     display@fuelP 0034                                   __end_of_TMR0_ISR 60B6  
                                 __end_of_TMR1_ISR 61B0                                      __CFG_WRTB$OFF 000000  
                                  __end_of_display 5DAE                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                       display@speed 0038  
                                   __CFG_EBTRB$OFF 000000                            __size_of_cmd_incrementn 001C  
                                  __end_of_refresh 61E4                            __end_of_TMR1_Initialize 5F3C  
                                            pclath 000FFA                                              wr8s@i 001F  
                                            wr8s@l 001E                                              wr8s@s 0019  
                                            tablat 000FF5                                              plusw1 000FE3  
                                            plusw2 000FDB                                       display_tp@tp 0025  
              convertReg2ExtendedCANid@ConvertedID 001F                                              status 000FD8  
                                  ?_SPI_Initialize 0001                                    __initialization 5DFE  
                             __size_of_CAN_receive 022A                                       __end_of_rd16 5DFE  
                                     __end_of_wr16 5F78                                       __end_of_wr32 5CD8  
                                     __end_of_main 4628                                       __end_of_wr8s 5B56  
                                    main@battVolts 008C                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_rd16 0014                                             ??_wr32 0018  
                                           ??_wr16 0016                                             ??_main 0060  
                                           ??_wr8s 001B                                      __activetblptr 000003  
                                   __CFG_PLLCFG$ON 000000                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 0010                                     _refresh_screen 00BA  
                         __end_of_SPI_Exchange8bit 61A0                                  __end_of_LED_blink 608E  
                                 ?_display_battery 0025                            __end_of_TMR0_StartTimer 61F0  
                                           _CANCON 000F6F                                    ??_display_speed 0027  
                                  ??_display_start 0025                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                   ___awdiv@dividend 0010  
                                    main@autoShift 0077                                             _T1GCON 000FAA  
                                  __CFG_BBSIZ$BB2K 000000                                   ?_display_laptime 0025  
                                   __CFG_WDTEN$OFF 000000                                   ?_display_oilTemp 0025  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                                     __CFG_XINST$OFF 000000  
                                     ??_FT800_Init 001C               __end_of_TMR1_DefaultInterruptHandler 61F6  
            __size_of_TMR1_DefaultInterruptHandler 0002                       _TMR1_DefaultInterruptHandler 61F4  
                          __end_of_TMR1_StartTimer 61EC                                       ?_TMR1_Reload 0001  
                                           ___wmul 60B6                                          ??___awdiv 0014  
                                   __CFG_STVREN$ON 000000                                          ??___awmod 001C  
                                 ?_TMR0_Initialize 0001                                             clear_0 5E24  
                                           clear_1 5E30                                   ___awdiv@quotient 0016  
                                  ___awmod@divisor 001A                                    ___awmod@counter 001C  
                             __size_of_display_end 0042                                             main@tp 0082  
                                           _strlen 5E82                                          ??_display 0042  
                             __size_of_display_rpm 1570                              display_labels@y_start 0028  
                                        ??_refresh 0001                                       __mediumconst 0000  
                 __end_of_convertReg2StandardCANid 5BDC                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
         TMR0_SetInterruptHandler@InterruptHandler 0010           TMR1_SetInterruptHandler@InterruptHandler 0010  
                               __end_of_FT800_Init 5092                      __size_of_INTERRUPT_Initialize 0004  
                            __end_of_TMR1_CallBack 6118                                   ?_TMR1_Initialize 0001  
                                _SYSTEM_Initialize 60DC                                      ?_host_command 0001  
                                       __accesstop 0060                            __end_of__initialization 5E36  
                             __end_of_display_gear 4B12                                 ?_SYSTEM_Initialize 0001  
                         _convertReg2ExtendedCANid 52BC                             CAN_receive@returnValue 0025  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                                     __pidataBANK0 6168                                ??_SYSTEM_Initialize 0014  
                                        ?_TMR0_ISR 0001                                          ?_TMR1_ISR 0001  
                    ?_TMR1_DefaultInterruptHandler 0001                                         _canMessage 00BB  
                                  cmd_incrementn@n 0012                                     _cmd_incrementn 6118  
            convertReg2StandardCANid@tempRXBn_SIDH 0016              convertReg2StandardCANid@tempRXBn_SIDL 0010  
                            display_waterTemp@temp 0025                                   ?_TMR0_StartTimer 0001  
                        __end_of_SYSTEM_Initialize 60FA                                         __pbssBANK0 00A6  
                                   ??_host_command 0011                                         _cmd_offset 004A  
                 __end_of_TMR0_SetInterruptHandler 61DC                            __size_of_TMR0_StopTimer 0004  
                                          ?___wmul 0010                                   ??_display_labels 0025  
                                 ?_TMR1_StartTimer 0001                                         ??_TMR0_ISR 0002  
                                       ??_TMR1_ISR 0001                                 __size_of_wait2secs 001A  
                                          _ECANCON 000F72                                            _CANSTAT 000F6E  
                                 ??_display_status 0029                         display_laptime@current_dec 0027  
                       display_laptime@current_int 0025                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                          ?_strlen 0010                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                             __end_of_cmd_incrementn 6134  
                                          _OSCCON2 000FD2                                 _display_brake_bias 5546  
                         ??_display_bottom_section 0025                                            i2u25_40 6064  
                                          _RXB0DLC 000F65                                            i2u27_40 607C  
                                          i2u26_48 6066                                            _RXB1DLC 000F35  
                                          i2u35_48 60A4                                            i2u28_48 607E  
                                          _OSCTUNE 000F9B                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                             display_battery@volts 0025                                            _SSPCON1 000FC6  
                                       _display_tp 581C                                            _SSPSTAT 000FC7  
                                       cmd@command 001E                                ?_display_brake_bias 0025  
                                 ??_SPI_Initialize 0010                                    __CFG_PWRTEN$OFF 000000  
                                   display@engTemp 003C                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 0010                                     display@oilTemp 003E  
                                          ___awdiv 5BDC                                            ___awmod 5CD8  
                                  __size_of___wmul 0026                                    _ECAN_Initialize 5736  
                                     __psmallconst 0F00                               ??_display_brake_bias 0027  
                             __size_of_TMR1_Reload 000A                                            __pcinit 5DFE  
                                          __ramtop 0F00                                            __ptext0 404A  
                                          __ptext1 6134                                            __ptext2 319A  
                                          __ptext3 3932                                            __ptext4 5546  
                                          __ptext5 5D48                                            __ptext6 563E  
                                          __ptext7 581C                                            __ptext8 5EC2  
                                          __ptext9 5900                                            _display 5D48  
                                        _T0CONbits 000FD5                     ??_TMR1_DefaultInterruptHandler 0001  
                                  __size_of_strlen 0040                                          _T1CONbits 000FCD  
                            _OSCILLATOR_Initialize 617E                                       __size_of_cmd 0038  
                                     __size_of_wr8 0036                                   ___awmod@dividend 0018  
                __size_of_TMR1_SetInterruptHandler 000A                                            _refresh 61DC  
                         ??_PIN_MANAGER_Initialize 0010                                    ?_cmd_incrementn 0001  
                        ?_TMR1_SetInterruptHandler 0010                                  __CFG_MSSPMSK$MSK7 000000  
                              display_status@radio 0028                                  ?_SPI_Exchange8bit 0001  
                       __size_of_SYSTEM_Initialize 001E                                            main@drs 0079  
                            __size_of_display_gear 04EA                                            main@rpm 008E  
                             end_of_initialization 5E36                                            wr8@addr 0011  
                               ??_SPI_Exchange8bit 0010                               SPI_Exchange8bit@data 0010  
                                __end_of_wait2secs 614E                                          _LED_blink 6058  
                                    ??_CAN_receive 0025                            display_rpm@second_digit 002C  
                                          postdec1 000FE5                                            postinc0 000FEE  
                                          postinc2 000FDE                                         main@F15413 00A6  
                                       main@F15405 00C9                                     display_rpm@val 002A  
                                   display_rpm@rpm 0025                                            strlen@s 0010  
                             __end_of_host_command 6168                           _TMR0_SetInterruptHandler 61D2  
                                        _PORTAbits 000F80                                          _PORTDbits 000F83  
                                     _display_gear 4628                                 display_laptime@lap 0031  
                  __size_of_display_bottom_section 0142                         ??_convertReg2ExtendedCANid 0014  
                                      ?_display_tp 0025                              __end_of_display_speed 59E4  
                                       ?_LED_blink 0001                              __end_of_display_start 5F00  
                                       main@clutch 0078                                         main@launch 0076  
                         __size_of_display_battery 02E6                                         display@rpm 0030  
                          __end_of_ECAN_Initialize 581C                           __size_of_display_laptime 0718  
                                   _TMR0_StopTimer 61E4                           __size_of_display_oilTemp 00E4  
                     __end_of_INTERRUPT_Initialize 61F4                                __end_of_CAN_receive 52BC  
                                    ??_display_end 0025                                      ??_display_rpm 0027  
                                   __end_of___wmul 60DC                                  __size_of_TMR0_ISR 0028  
                                __size_of_TMR1_ISR 0010                             ?_OSCILLATOR_Initialize 0001  
                                   __end_of_strlen 5EC2                                start_initialization 5DFE  
                         __size_of_TMR0_Initialize 0038                    __size_of_PIN_MANAGER_Initialize 003A  
                                      __end_of_cmd 5FEA                                        __end_of_wr8 6058  
                                 display@battVolts 0040                convertReg2StandardCANid@returnValue 0017  
                           __end_of_TMR0_StopTimer 61E8                           __size_of_TMR1_Initialize 003C  
                           _display_bottom_section 5404                                           ??___wmul 0014  
                              __size_of_display_tp 00E4                                        __pdataBANK0 00C9  
                           __size_of_TMR1_CallBack 001E                                           ??_strlen 0012  
                           display_rpm@first_digit 002E                                  main@timer_started 0081  
                              __end_of_display_end 5E82                                __end_of_display_rpm 24E4  
                                      __pbssCOMRAM 0042                                      __pcstackBANK0 0060  
                               display_speed@speed 0025                                        ??_LED_blink 0001  
                            _TMR0_InterruptHandler 0044                           __size_of_TMR0_StartTimer 0004  
                                      _CAN_receive 5092                                   ?_ECAN_Initialize 0001  
                                  ?_TMR0_StopTimer 0001                             _PIN_MANAGER_Initialize 5F78  
                            __size_of_host_command 001A                                          __pintcode 0008  
                 __end_of_TMR1_SetInterruptHandler 61D2                                           ?___awdiv 0010  
                                         ?___awmod 0018                                  ??_display_battery 0027  
                          display_laptime@best_dec 002B                            display_laptime@best_lap 0033  
                          display_laptime@best_int 0029                                   ??_cmd_incrementn 0010  
                     ??_INTERRUPT_InterruptManager 0002                                  ??_display_laptime 0035  
                                ??_display_oilTemp 0027                                           ?_display 0030  
                                      __smallconst 0F00                           __size_of_TMR1_StartTimer 0004  
                                      _COMSTATbits 000F71                            display_laptime@last_dec 002F  
                          display_laptime@last_int 002D                                           ?_refresh 0001  
                 __end_of_convertReg2ExtendedCANid 5404                               _INTERRUPT_Initialize 61F0  
                                    _TMR1_CallBack 60FA                                  ??_TMR0_Initialize 0012  
                                     _host_command 614E                                     ___wmul@product 0014  
                                         _LATAbits 000F89                                           _LATBbits 000F8A  
                                         _LATCbits 000F8B                                           _LATDbits 000F8C  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
                                        _wait2secs 6134                                           i2u102_48 6106  
              __size_of_INTERRUPT_InterruptManager 0090                         ??_TMR0_SetInterruptHandler 0012  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                        __size_of_SPI_Exchange8bit 0010                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                    ??_TMR1_Reload 0010                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _TMR0_ISR 608E  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 61A0                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                          wr32@value 0014  
                                        wr16@value 0014                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                        _display_end 5E40  
                                      _display_rpm 0F74                        __size_of_display_brake_bias 00F8  
                                ??_TMR1_Initialize 0012                                  ___wmul@multiplier 0010  
                                 __CFG_SOSCSEL$DIG 000000                                  _display_waterTemp 563E  
                                        main@fuelP 007C                                          main@radio 0080  
                                        display@tp 0036                                 ?_display_waterTemp 0025  
                                        main@speed 0084                            __size_of_display_labels 0CB6  
                                     ??_display_tp 0027                            __size_of_display_status 0798  
                                        copy_data0 5E12                              ?_INTERRUPT_Initialize 0001  
                                   ?_TMR1_CallBack 0001                                ??_display_waterTemp 0027  
                         _convertReg2StandardCANid 5B56              convertReg2ExtendedCANid@tempRXBn_EIDH 0018  
            convertReg2ExtendedCANid@tempRXBn_EIDL 0010              convertReg2ExtendedCANid@tempRXBn_SIDH 0011  
                                       ?_wait2secs 0001              convertReg2ExtendedCANid@tempRXBn_SIDL 0012  
                                         __Hrparam 0000                                         _FT800_Init 4DF8  
                                         __Lrparam 0000                                 __CFG_BOREN$SBORDIS 000000  
                          __size_of_SPI_Initialize 000E                            ??_OSCILLATOR_Initialize 0010  
                                ??_TMR0_StartTimer 0010                                   __size_of___awdiv 0084  
                                       _CIOCONbits 000F70                                   __size_of___awmod 0070  
                        __end_of_display_waterTemp 5736                                 __end_of_display_tp 5900  
                                         rd16@addr 0011                           _TMR1_SetInterruptHandler 61C8  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 001E                                           rd16@temp 0017  
                              __end_of_TMR1_Reload 61C8                              _TMR1_InterruptHandler 0046  
                                 __size_of_display 0066  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 001D  
                                 display_gear@gear 0025                                   __size_of_refresh 0008  
                                         __ptext10 0F74                                           __ptext11 60B6  
                                         __ptext20 5FB2                                           __ptext12 59E4  
                                         __ptext21 6118                                           __ptext13 24E4  
                                       _T1GCONbits 000FAA                                           __ptext30 5FEA  
                                         __ptext22 5CD8                                           __ptext14 4628  
                                         __ptext31 61EC                                           __ptext23 5BDC  
                                         __ptext15 5E40                                           __ptext40 5C60  
                                         __ptext32 61D2                                           __ptext24 61BE  
                                         __ptext16 5404                                           __ptext41 5F3C  
                                         __ptext33 61B0                                           __ptext25 61E4  
                                         __ptext17 4B12                                           __ptext50 60FA  
                                         __ptext42 5DAE                                           __ptext34 5F78  
                                         __ptext26 60DC                                           __ptext18 5AC8  
                                         __ptext51 61F4                                           __ptext43 614E  
                                         __ptext35 617E                                           __ptext27 5F00  
                                         __ptext19 5E82                                           __ptext52 61DC  
                                         __ptext44 6190                                           __ptext36 61F0  
                                         __ptext28 61E8                                           __ptext53 608E  
                                         __ptext45 5092                                           __ptext37 5736  
                                         __ptext29 61C8                                           __ptext54 6058  
                                         __ptext46 5B56                                           __ptext38 4DF8  
                                         __ptext55 61F6                                           __ptext47 52BC  
                                         __ptext39 6022                                           __ptext56 0000  
                                         __ptext49 61A0                                  ??_TMR1_StartTimer 0010  
              convertReg2StandardCANid@ConvertedID 001B                                      __size_of_rd16 0050  
                                    __size_of_wr16 003C                                      __size_of_wr32 0078  
                                    __size_of_main 05DE                                      __size_of_wr8s 008E  
                          ?_display_bottom_section 0001                                  display_status@drs 0027  
             __end_of_TMR0_DefaultInterruptHandler 61F8              __size_of_TMR0_DefaultInterruptHandler 0002  
                     _TMR0_DefaultInterruptHandler 61F6                convertReg2ExtendedCANid@returnValue 0019  
                __size_of_convertReg2ExtendedCANid 0148                                           wr32@addr 0011  
                                         wr16@addr 0011                          ?_convertReg2ExtendedCANid 0010  
                             display_status@clutch 0026                               display_status@launch 002C  
                                         _up_blink 004E                                           int$flags 004F  
               __end_of_INTERRUPT_InterruptManager 0098                         _INTERRUPT_InterruptManager 0008  
                                         main@bias 007E                                           main@gear 0086  
                                         main@oilP 007A                                __CFG_INTOSCSEL$HIGH 000000  
                           __size_of_display_speed 00E4                             __size_of_display_start 003E  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                                           wr8@value 0014  
                           ??_INTERRUPT_Initialize 0010                                    ??_TMR1_CallBack 0001  
                                         wr8s@addr 0016                                           intlevel2 0000  
                                 ??_TMR0_StopTimer 0010                     __end_of_display_bottom_section 5546  
                                  _display_battery 4B12                            ?_PIN_MANAGER_Initialize 0001  
                                      _TXB0CONbits 000F20                                       ?_CAN_receive 0023  
                                      _TXB1CONbits 000F10                                        ??_wait2secs 0010  
                                  _display_laptime 3932                                        _TXB2CONbits 000F00  
                                  _display_oilTemp 59E4                                        ?_FT800_Init 0001  
                    ?_TMR0_DefaultInterruptHandler 0001                                   _SPI_Exchange8bit 6190  
                                      _TMR1_Reload 61BE                                 __CFG_WDTPS$1048576 000000  
                              host_command@command 0011                         __size_of_display_waterTemp 00F8  
                                  _TMR0_Initialize 5FEA                                     _display_labels 24E4  
                                         strlen@cp 0014                            display_status@autoShift 0025  
                                      _SSPCON1bits 000FC6                                     _display_status 319A  
           display_laptime@time_difference_decimal 0038                     __end_of_PIN_MANAGER_Initialize 5FB2  
                                    _display_speed 5900                                __CFG_BORPWR$ZPBORMV 000000  
                                    _display_start 5EC2             display_laptime@time_difference_integer 003A  
                           display_brake_bias@bias 0025                                    _TMR1_Initialize 5F00  
