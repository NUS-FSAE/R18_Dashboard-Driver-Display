

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jan 26 21:51:38 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 1.42
    74                           ; Generated 13/04/2017 GMT
    75                           ; 
    76                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F46K80 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK0
   109  0063C8                     __pidataBANK0:
   110                           	opt stack 0
   111                           
   112                           ;initializer for main@F15312
   113  0063C8  0000               	dw	0
   114  0063CA  0001               	dw	1
   115  0063CC  0000               	dw	0
   116  0063CE  0000               	dw	0
   117  0063D0  0000               	dw	0
   118  0063D2  0000               	dw	0
   119  0063D4  0000               	dw	0
   120  0063D6  270F               	dw	9999
   121  0063D8  0000               	dw	0
   122  0063DA  0063               	dw	99
   123  0063DC  0063               	dw	99
   124  0000                     _BRGCON3	set	3653
   125  0000                     _BRGCON2	set	3652
   126  0000                     _BRGCON1	set	3651
   127  0000                     _RXF5SIDL	set	3829
   128  0000                     _RXF5SIDH	set	3828
   129  0000                     _RXF5EIDL	set	3831
   130  0000                     _RXF5EIDH	set	3830
   131  0000                     _RXF4SIDL	set	3825
   132  0000                     _RXF4SIDH	set	3824
   133  0000                     _RXF4EIDL	set	3827
   134  0000                     _RXF4EIDH	set	3826
   135  0000                     _RXF3SIDL	set	3821
   136  0000                     _RXF3SIDH	set	3820
   137  0000                     _RXF3EIDL	set	3823
   138  0000                     _RXF3EIDH	set	3822
   139  0000                     _RXF2SIDL	set	3817
   140  0000                     _RXF2SIDH	set	3816
   141  0000                     _RXF2EIDL	set	3819
   142  0000                     _RXF2EIDH	set	3818
   143  0000                     _RXF1SIDL	set	3813
   144  0000                     _RXF1SIDH	set	3812
   145  0000                     _RXF1EIDL	set	3815
   146  0000                     _RXF1EIDH	set	3814
   147  0000                     _RXF0SIDL	set	3809
   148  0000                     _RXF0SIDH	set	3808
   149  0000                     _RXF0EIDL	set	3811
   150  0000                     _RXF0EIDH	set	3810
   151  0000                     _RXM1SIDL	set	3837
   152  0000                     _RXM1SIDH	set	3836
   153  0000                     _RXM1EIDL	set	3839
   154  0000                     _RXM1EIDH	set	3838
   155  0000                     _RXM0SIDL	set	3833
   156  0000                     _RXM0SIDH	set	3832
   157  0000                     _RXM0EIDL	set	3835
   158  0000                     _RXM0EIDH	set	3834
   159  0000                     _RXB1D7	set	3901
   160  0000                     _RXB1D6	set	3900
   161  0000                     _RXB1D5	set	3899
   162  0000                     _RXB1D4	set	3898
   163  0000                     _RXB1D3	set	3897
   164  0000                     _RXB1D2	set	3896
   165  0000                     _RXB1D1	set	3895
   166  0000                     _RXB1D0	set	3894
   167  0000                     _RXB1DLC	set	3893
   168  0000                     _RXB1SIDH	set	3889
   169  0000                     _RXB1EIDL	set	3892
   170  0000                     _RXB1EIDH	set	3891
   171  0000                     _RXB1SIDL	set	3890
   172  0000                     _RXB1CONbits	set	3888
   173  0000                     _TXB2D7	set	3853
   174  0000                     _TXB2D6	set	3852
   175  0000                     _TXB2D5	set	3851
   176  0000                     _TXB2D4	set	3850
   177  0000                     _TXB2D3	set	3849
   178  0000                     _TXB2D2	set	3848
   179  0000                     _TXB2D1	set	3847
   180  0000                     _TXB2D0	set	3846
   181  0000                     _TXB2DLC	set	3845
   182  0000                     _TXB2SIDL	set	3842
   183  0000                     _TXB2SIDH	set	3841
   184  0000                     _TXB2EIDL	set	3844
   185  0000                     _TXB2EIDH	set	3843
   186  0000                     _TXB2CONbits	set	3840
   187  0000                     _TXB1D7	set	3869
   188  0000                     _TXB1D6	set	3868
   189  0000                     _TXB1D5	set	3867
   190  0000                     _TXB1D4	set	3866
   191  0000                     _TXB1D3	set	3865
   192  0000                     _TXB1D2	set	3864
   193  0000                     _TXB1D1	set	3863
   194  0000                     _TXB1D0	set	3862
   195  0000                     _TXB1DLC	set	3861
   196  0000                     _TXB1SIDL	set	3858
   197  0000                     _TXB1SIDH	set	3857
   198  0000                     _TXB1EIDL	set	3860
   199  0000                     _TXB1EIDH	set	3859
   200  0000                     _TXB1CONbits	set	3856
   201  0000                     _TXB0D7	set	3885
   202  0000                     _TXB0D6	set	3884
   203  0000                     _TXB0D5	set	3883
   204  0000                     _TXB0D4	set	3882
   205  0000                     _TXB0D3	set	3881
   206  0000                     _TXB0D2	set	3880
   207  0000                     _TXB0D1	set	3879
   208  0000                     _TXB0D0	set	3878
   209  0000                     _TXB0DLC	set	3877
   210  0000                     _TXB0SIDL	set	3874
   211  0000                     _TXB0SIDH	set	3873
   212  0000                     _TXB0EIDL	set	3876
   213  0000                     _TXB0EIDH	set	3875
   214  0000                     _TXB0CONbits	set	3872
   215  0000                     _WPUB	set	3931
   216  0000                     _ANCON1	set	3932
   217  0000                     _ANCON0	set	3933
   218  0000                     _T0CONbits	set	4053
   219  0000                     _TMR0L	set	4054
   220  0000                     _TMR0H	set	4055
   221  0000                     _T0CON	set	4053
   222  0000                     _LATBbits	set	3978
   223  0000                     _CIOCONbits	set	3952
   224  0000                     _PORTDbits	set	3971
   225  0000                     _PORTAbits	set	3968
   226  0000                     _LATAbits	set	3977
   227  0000                     _REFOCON	set	3994
   228  0000                     _OSCTUNE	set	3995
   229  0000                     _OSCCON2	set	4050
   230  0000                     _OSCCON	set	4051
   231  0000                     _INTCONbits	set	4082
   232  0000                     _RCONbits	set	4048
   233  0000                     _COMSTATbits	set	3953
   234  0000                     _RXB0D7	set	3949
   235  0000                     _RXB0D6	set	3948
   236  0000                     _RXB0D5	set	3947
   237  0000                     _RXB0D4	set	3946
   238  0000                     _RXB0D3	set	3945
   239  0000                     _RXB0D2	set	3944
   240  0000                     _RXB0D1	set	3943
   241  0000                     _RXB0D0	set	3942
   242  0000                     _RXB0DLC	set	3941
   243  0000                     _RXB0SIDH	set	3937
   244  0000                     _RXB0EIDL	set	3940
   245  0000                     _RXB0EIDH	set	3939
   246  0000                     _RXB0SIDL	set	3938
   247  0000                     _RXB0CONbits	set	3936
   248  0000                     _PIE5bits	set	3958
   249  0000                     _PIR5bits	set	3959
   250  0000                     _ECANCON	set	3954
   251  0000                     _CANSTAT	set	3950
   252  0000                     _CANCON	set	3951
   253  0000                     _SSPSTATbits	set	4039
   254  0000                     _SSPCON1bits	set	4038
   255  0000                     _SSPADD	set	4040
   256  0000                     _SSPCON1	set	4038
   257  0000                     _SSPSTAT	set	4039
   258  0000                     _TRISD	set	3989
   259  0000                     _TRISC	set	3988
   260  0000                     _TRISB	set	3987
   261  0000                     _TRISA	set	3986
   262  0000                     _TRISE	set	3990
   263  0000                     _LATC	set	3979
   264  0000                     _LATB	set	3978
   265  0000                     _LATA	set	3977
   266  0000                     _LATD	set	3980
   267  0000                     _LATE	set	3981
   268  0000                     _T1GCONbits	set	4010
   269  0000                     _T1CONbits	set	4045
   270  0000                     _PIE1bits	set	3997
   271  0000                     _PIR1bits	set	3998
   272  0000                     _TMR1L	set	4046
   273  0000                     _TMR1H	set	4047
   274  0000                     _T1GCON	set	4010
   275  0000                     _T1CON	set	4045
   276  0000                     _LATCbits	set	3979
   277  0000                     _SSPBUF	set	4041
   278  0000                     _LATDbits	set	3980
   279                           
   280                           	psect	smallconst
   281  000F00                     __psmallconst:
   282                           	opt stack 0
   283  000F00  00                 	db	0
   284  000F01  44                 	db	68	;'D'
   285  000F02  52                 	db	82	;'R'
   286  000F03  53                 	db	83	;'S'
   287  000F04  20                 	db	32
   288  000F05  26                 	db	38
   289  000F06  20                 	db	32
   290  000F07  41                 	db	65	;'A'
   291  000F08  75                 	db	117	;'u'
   292  000F09  74                 	db	116	;'t'
   293  000F0A  6F                 	db	111	;'o'
   294  000F0B  53                 	db	83	;'S'
   295  000F0C  68                 	db	104	;'h'
   296  000F0D  69                 	db	105	;'i'
   297  000F0E  66                 	db	102	;'f'
   298  000F0F  74                 	db	116	;'t'
   299  000F10  20                 	db	32
   300  000F11  4F                 	db	79	;'O'
   301  000F12  4E                 	db	78	;'N'
   302  000F13  00                 	db	0
   303  000F14  52                 	db	82	;'R'
   304  000F15  61                 	db	97	;'a'
   305  000F16  64                 	db	100	;'d'
   306  000F17  69                 	db	105	;'i'
   307  000F18  6F                 	db	111	;'o'
   308  000F19  20                 	db	32
   309  000F1A  4F                 	db	79	;'O'
   310  000F1B  4E                 	db	78	;'N'
   311  000F1C  00                 	db	0
   312  000F1D                     STR_12:
   313  000F1D  53                 	db	83	;'S'
   314  000F1E  50                 	db	80	;'P'
   315  000F1F  45                 	db	69	;'E'
   316  000F20  45                 	db	69	;'E'
   317  000F21  44                 	db	68	;'D'
   318  000F22  00                 	db	0
   319  000F23                     STR_2:
   320  000F23  57                 	db	87	;'W'
   321  000F24  41                 	db	65	;'A'
   322  000F25  54                 	db	84	;'T'
   323  000F26  45                 	db	69	;'E'
   324  000F27  52                 	db	82	;'R'
   325  000F28  00                 	db	0
   326  000F29                     STR_7:
   327  000F29  50                 	db	80	;'P'
   328  000F2A  52                 	db	82	;'R'
   329  000F2B  45                 	db	69	;'E'
   330  000F2C  53                 	db	83	;'S'
   331  000F2D  53                 	db	83	;'S'
   332  000F2E  00                 	db	0
   333  000F2F                     STR_9:
   334  000F2F  56                 	db	86	;'V'
   335  000F30  4F                 	db	79	;'O'
   336  000F31  4C                 	db	76	;'L'
   337  000F32  54                 	db	84	;'T'
   338  000F33  53                 	db	83	;'S'
   339  000F34  00                 	db	0
   340  000F35                     STR_1:
   341  000F35  68                 	db	104	;'h'
   342  000F36  65                 	db	101	;'e'
   343  000F37  6C                 	db	108	;'l'
   344  000F38  6C                 	db	108	;'l'
   345  000F39  6F                 	db	111	;'o'
   346  000F3A  00                 	db	0
   347  000F3B  52                 	db	82	;'R'
   348  000F3C  31                 	db	49	;'1'
   349  000F3D  38                 	db	56	;'8'
   350  000F3E  20                 	db	32
   351  000F3F  00                 	db	0
   352  000F40                     STR_6:
   353  000F40  46                 	db	70	;'F'
   354  000F41  55                 	db	85	;'U'
   355  000F42  45                 	db	69	;'E'
   356  000F43  4C                 	db	76	;'L'
   357  000F44  00                 	db	0
   358  000F45                     STR_3:
   359  000F45  54                 	db	84	;'T'
   360  000F46  45                 	db	69	;'E'
   361  000F47  4D                 	db	77	;'M'
   362  000F48  50                 	db	80	;'P'
   363  000F49  00                 	db	0
   364  000F4A                     STR_16:
   365  000F4A  4C                 	db	76	;'L'
   366  000F4B  41                 	db	65	;'A'
   367  000F4C  53                 	db	83	;'S'
   368  000F4D  54                 	db	84	;'T'
   369  000F4E  00                 	db	0
   370  000F4F                     STR_17:
   371  000F4F  42                 	db	66	;'B'
   372  000F50  45                 	db	69	;'E'
   373  000F51  53                 	db	83	;'S'
   374  000F52  54                 	db	84	;'T'
   375  000F53  00                 	db	0
   376  000F54                     STR_8:
   377  000F54  42                 	db	66	;'B'
   378  000F55  41                 	db	65	;'A'
   379  000F56  54                 	db	84	;'T'
   380  000F57  54                 	db	84	;'T'
   381  000F58  00                 	db	0
   382  000F59                     STR_13:
   383  000F59  4B                 	db	75	;'K'
   384  000F5A  50                 	db	80	;'P'
   385  000F5B  48                 	db	72	;'H'
   386  000F5C  00                 	db	0
   387  000F5D                     STR_4:
   388  000F5D  4F                 	db	79	;'O'
   389  000F5E  49                 	db	73	;'I'
   390  000F5F  4C                 	db	76	;'L'
   391  000F60  00                 	db	0
   392  000F61                     STR_36:
   393  000F61  52                 	db	82	;'R'
   394  000F62  50                 	db	80	;'P'
   395  000F63  4D                 	db	77	;'M'
   396  000F64  00                 	db	0
   397  000F65                     STR_18:
   398  000F65  4C                 	db	76	;'L'
   399  000F66  41                 	db	65	;'A'
   400  000F67  50                 	db	80	;'P'
   401  000F68  00                 	db	0
   402  000F69                     STR_31:
   403  000F69  31                 	db	49	;'1'
   404  000F6A  30                 	db	48	;'0'
   405  000F6B  00                 	db	0
   406  000F6C                     STR_32:
   407  000F6C  31                 	db	49	;'1'
   408  000F6D  31                 	db	49	;'1'
   409  000F6E  00                 	db	0
   410  000F6F                     STR_33:
   411  000F6F  31                 	db	49	;'1'
   412  000F70  32                 	db	50	;'2'
   413  000F71  00                 	db	0
   414  000F72                     STR_14:
   415  000F72  54                 	db	84	;'T'
   416  000F73  50                 	db	80	;'P'
   417  000F74  00                 	db	0
   418  000F75                     STR_15:
   419  000F75  25                 	db	37
   420  000F76  00                 	db	0
   421  000F77                     STR_22:
   422  000F77  2E                 	db	46
   423  000F78  00                 	db	0
   424  000F79                     STR_24:
   425  000F79  33                 	db	51	;'3'
   426  000F7A  00                 	db	0
   427  000F7B                     STR_25:
   428  000F7B  34                 	db	52	;'4'
   429  000F7C  00                 	db	0
   430  000F7D                     STR_26:
   431  000F7D  35                 	db	53	;'5'
   432  000F7E  00                 	db	0
   433  000F7F                     STR_27:
   434  000F7F  36                 	db	54	;'6'
   435  000F80  00                 	db	0
   436  000F81                     STR_28:
   437  000F81  37                 	db	55	;'7'
   438  000F82  00                 	db	0
   439  000F83                     STR_29:
   440  000F83  38                 	db	56	;'8'
   441  000F84  00                 	db	0
   442  000F85                     STR_30:
   443  000F85  39                 	db	57	;'9'
   444  000F86  00                 	db	0
   445  000F87                     STR_19:
   446  000F87  3A                 	db	58	;':'
   447  000F88  00                 	db	0
   448  000F89                     STR_35:
   449  000F89  6B                 	db	107	;'k'
   450  000F8A  00                 	db	0
   451  0000                     
   452                           ; #config settings
   453  000F8B  00                 	db	0	; dummy byte at the end
   454  0000                     
   455                           	psect	cinit
   456  006058                     __pcinit:
   457                           	opt stack 0
   458  006058                     start_initialization:
   459                           	opt stack 0
   460  006058                     __initialization:
   461                           	opt stack 0
   462                           
   463                           ; Initialize objects allocated to BANK0 (22 bytes)
   464                           ; load TBLPTR registers with __pidataBANK0
   465  006058  0EC8               	movlw	low __pidataBANK0
   466  00605A  6EF6               	movwf	tblptrl,c
   467  00605C  0E63               	movlw	high __pidataBANK0
   468  00605E  6EF7               	movwf	tblptrh,c
   469  006060  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   470  006062  6EF8               	movwf	tblptru,c
   471  006064  EE00  F08D         	lfsr	0,__pdataBANK0
   472  006068  EE10 F016          	lfsr	1,22
   473  00606C                     copy_data0:
   474  00606C  0009               	tblrd		*+
   475  00606E  CFF5 FFEE          	movff	tablat,postinc0
   476  006072  50E5               	movf	postdec1,w,c
   477  006074  50E1               	movf	fsr1l,w,c
   478  006076  E1FA               	bnz	copy_data0
   479                           
   480                           ; Clear objects allocated to BANK0 (15 bytes)
   481  006078  EE00  F0A3         	lfsr	0,__pbssBANK0
   482  00607C  0E0F               	movlw	15
   483  00607E                     clear_0:
   484  00607E  6AEE               	clrf	postinc0,c
   485  006080  06E8               	decf	wreg,f,c
   486  006082  E1FD               	bnz	clear_0
   487                           
   488                           ; Clear objects allocated to COMRAM (13 bytes)
   489  006084  EE00  F042         	lfsr	0,__pbssCOMRAM
   490  006088  0E0D               	movlw	13
   491  00608A                     clear_1:
   492  00608A  6AEE               	clrf	postinc0,c
   493  00608C  06E8               	decf	wreg,f,c
   494  00608E  E1FD               	bnz	clear_1
   495  006090                     end_of_initialization:
   496                           	opt stack 0
   497  006090                     __end_of__initialization:
   498                           	opt stack 0
   499  006090  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   500  006092  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   501  006094  0100               	movlb	0
   502  006096  EF15  F021         	goto	_main	;jump to C main() function
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssCOMRAM
   513  000042                     __pbssCOMRAM:
   514                           	opt stack 0
   515  000042                     _timer0ReloadVal:
   516                           	opt stack 0
   517  000042                     	ds	2
   518  000044                     _TMR0_InterruptHandler:
   519                           	opt stack 0
   520  000044                     	ds	2
   521  000046                     _TMR1_InterruptHandler:
   522                           	opt stack 0
   523  000046                     	ds	2
   524  000048                     _timer1ReloadVal:
   525                           	opt stack 0
   526  000048                     	ds	2
   527  00004A                     _cmd_offset:
   528                           	opt stack 0
   529  00004A                     	ds	2
   530  00004C                     _dli:
   531                           	opt stack 0
   532  00004C                     	ds	2
   533  00004E                     _up_blink:
   534                           	opt stack 0
   535  00004E                     	ds	1
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           postdec1	equ	0xFE5
   543                           fsr1l	equ	0xFE1
   544                           
   545                           	psect	bssBANK0
   546  0000A3                     __pbssBANK0:
   547                           	opt stack 0
   548  0000A3                     _refresh_screen:
   549                           	opt stack 0
   550  0000A3                     	ds	1
   551  0000A4                     _canMessage:
   552                           	opt stack 0
   553  0000A4                     	ds	14
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	dataBANK0
   564  00008D                     __pdataBANK0:
   565                           	opt stack 0
   566  00008D                     main@F15312:
   567                           	opt stack 0
   568  00008D                     	ds	22
   569                           tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           postdec1	equ	0xFE5
   576                           fsr1l	equ	0xFE1
   577                           
   578                           	psect	cstackBANK0
   579  000060                     __pcstackBANK0:
   580                           	opt stack 0
   581  000060                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x0
   584  000060                     	ds	2
   585  000062                     main@message:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x2
   589  000062                     	ds	2
   590  000064                     main@fuelP:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x4
   594  000064                     	ds	2
   595  000066                     main@timer_started:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x6
   599  000066                     	ds	1
   600  000067                     main@oilP:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x7
   604  000067                     	ds	2
   605  000069                     main@tp:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x9
   609  000069                     	ds	2
   610  00006B                     main@speed:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0xB
   614  00006B                     	ds	2
   615  00006D                     main@gear:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0xD
   619  00006D                     	ds	2
   620  00006F                     main@engTemp:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0xF
   624  00006F                     	ds	2
   625  000071                     main@oilTemp:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x11
   629  000071                     	ds	2
   630  000073                     main@battVolts:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x13
   634  000073                     	ds	2
   635  000075                     main@rpm:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x15
   639  000075                     	ds	2
   640  000077                     main@lap_time:
   641                           	opt stack 0
   642                           
   643                           ; 22 bytes @ 0x17
   644  000077                     	ds	22
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           postinc0	equ	0xFEE
   650                           wreg	equ	0xFE8
   651                           postdec1	equ	0xFE5
   652                           fsr1l	equ	0xFE1
   653                           
   654                           	psect	cstackCOMRAM
   655  000001                     __pcstackCOMRAM:
   656                           	opt stack 0
   657  000001                     ??_LED_blink:
   658  000001                     
   659                           ; 1 bytes @ 0x0
   660  000001                     	ds	1
   661  000002                     ??_INTERRUPT_InterruptManager:
   662                           
   663                           ; 1 bytes @ 0x1
   664  000002                     	ds	14
   665  000010                     ??_cmd_incrementn:
   666  000010                     ??_ECAN_Initialize:
   667  000010                     ??_wait2secs:
   668  000010                     ?_strlen:
   669                           	opt stack 0
   670  000010                     ?___wmul:
   671                           	opt stack 0
   672  000010                     ?___awdiv:
   673                           	opt stack 0
   674  000010                     ?_convertReg2ExtendedCANid:
   675                           	opt stack 0
   676  000010                     ?_convertReg2StandardCANid:
   677                           	opt stack 0
   678  000010                     SPI_Exchange8bit@data:
   679                           	opt stack 0
   680  000010                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   681                           	opt stack 0
   682  000010                     convertReg2StandardCANid@tempRXBn_SIDL:
   683                           	opt stack 0
   684  000010                     TMR1_SetInterruptHandler@InterruptHandler:
   685                           	opt stack 0
   686  000010                     TMR0_SetInterruptHandler@InterruptHandler:
   687                           	opt stack 0
   688  000010                     ___wmul@multiplier:
   689                           	opt stack 0
   690  000010                     ___awdiv@dividend:
   691                           	opt stack 0
   692  000010                     strlen@s:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0xF
   696  000010                     	ds	1
   697  000011                     ?_rd16:
   698                           	opt stack 0
   699  000011                     host_command@command:
   700                           	opt stack 0
   701  000011                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   702                           	opt stack 0
   703  000011                     wr8@addr:
   704                           	opt stack 0
   705  000011                     wr16@addr:
   706                           	opt stack 0
   707  000011                     wr32@addr:
   708                           	opt stack 0
   709  000011                     rd16@addr:
   710                           	opt stack 0
   711                           
   712                           ; 3 bytes @ 0x10
   713  000011                     	ds	1
   714  000012                     ??_strlen:
   715  000012                     ??_TMR0_Initialize:
   716  000012                     ??_TMR1_Initialize:
   717  000012                     cmd_incrementn@n:
   718                           	opt stack 0
   719  000012                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   720                           	opt stack 0
   721  000012                     ___wmul@multiplicand:
   722                           	opt stack 0
   723  000012                     ___awdiv@divisor:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x11
   727  000012                     	ds	2
   728  000014                     ??_convertReg2ExtendedCANid:
   729  000014                     ??_convertReg2StandardCANid:
   730  000014                     ??_rd16:
   731  000014                     wr8@value:
   732                           	opt stack 0
   733  000014                     ___awdiv@counter:
   734                           	opt stack 0
   735  000014                     wr16@value:
   736                           	opt stack 0
   737  000014                     ___wmul@product:
   738                           	opt stack 0
   739  000014                     strlen@cp:
   740                           	opt stack 0
   741  000014                     wr32@value:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x13
   745  000014                     	ds	1
   746  000015                     ??_wr8:
   747  000015                     ___awdiv@sign:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x14
   751  000015                     	ds	1
   752  000016                     ??_wr16:
   753  000016                     convertReg2StandardCANid@tempRXBn_SIDH:
   754                           	opt stack 0
   755  000016                     ___awdiv@quotient:
   756                           	opt stack 0
   757  000016                     wr8s@addr:
   758                           	opt stack 0
   759                           
   760                           ; 3 bytes @ 0x15
   761  000016                     	ds	1
   762  000017                     rd16@temp:
   763                           	opt stack 0
   764  000017                     convertReg2StandardCANid@returnValue:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x16
   768  000017                     	ds	1
   769  000018                     ??_wr32:
   770  000018                     ?___awmod:
   771                           	opt stack 0
   772  000018                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   773                           	opt stack 0
   774  000018                     ___awmod@dividend:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x17
   778  000018                     	ds	1
   779  000019                     wr8s@s:
   780                           	opt stack 0
   781  000019                     convertReg2ExtendedCANid@returnValue:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x18
   785  000019                     	ds	1
   786  00001A                     ___awmod@divisor:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x19
   790  00001A                     	ds	1
   791  00001B                     ??_wr8s:
   792  00001B                     convertReg2StandardCANid@ConvertedID:
   793                           	opt stack 0
   794                           
   795                           ; 4 bytes @ 0x1A
   796  00001B                     	ds	1
   797  00001C                     ??_FT800_Init:
   798  00001C                     ___awmod@counter:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x1B
   802  00001C                     	ds	1
   803  00001D                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   804                           	opt stack 0
   805  00001D                     ___awmod@sign:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x1C
   809  00001D                     	ds	1
   810  00001E                     wr8s@l:
   811                           	opt stack 0
   812  00001E                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   813                           	opt stack 0
   814  00001E                     cmd@command:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x1D
   818  00001E                     	ds	1
   819  00001F                     wr8s@i:
   820                           	opt stack 0
   821  00001F                     convertReg2ExtendedCANid@ConvertedID:
   822                           	opt stack 0
   823                           
   824                           ; 4 bytes @ 0x1E
   825  00001F                     	ds	3
   826  000022                     ??_cmd:
   827                           
   828                           ; 1 bytes @ 0x21
   829  000022                     	ds	1
   830  000023                     CAN_receive@tempCanMsg:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x22
   834  000023                     	ds	2
   835  000025                     ??_display_labels:
   836  000025                     CAN_receive@returnValue:
   837                           	opt stack 0
   838  000025                     display_message@message:
   839                           	opt stack 0
   840  000025                     display_laptime@current_int:
   841                           	opt stack 0
   842  000025                     display_waterTemp@temp:
   843                           	opt stack 0
   844  000025                     display_oilTemp@temp:
   845                           	opt stack 0
   846  000025                     display_fuel@level:
   847                           	opt stack 0
   848  000025                     display_battery@volts:
   849                           	opt stack 0
   850  000025                     display_oilPress@pressure:
   851                           	opt stack 0
   852  000025                     display_tp@tp:
   853                           	opt stack 0
   854  000025                     display_speed@speed:
   855                           	opt stack 0
   856  000025                     display_rpm@rpm:
   857                           	opt stack 0
   858  000025                     display_gear@gear:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x24
   862  000025                     	ds	2
   863  000027                     ??_display_waterTemp:
   864  000027                     ??_display_oilTemp:
   865  000027                     ??_display_fuel:
   866  000027                     ??_display_battery:
   867  000027                     ??_display_oilPress:
   868  000027                     ??_display_gear:
   869  000027                     ??_display_rpm:
   870  000027                     ??_display_speed:
   871  000027                     ??_display_tp:
   872  000027                     ??_display_message:
   873  000027                     display_laptime@current_dec:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x26
   877  000027                     	ds	1
   878  000028                     display_labels@y_start:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x27
   882  000028                     	ds	1
   883  000029                     display_laptime@best_int:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x28
   887  000029                     	ds	1
   888  00002A                     display_rpm@val:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x29
   892  00002A                     	ds	1
   893  00002B                     display_laptime@best_dec:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x2A
   897  00002B                     	ds	1
   898  00002C                     display_rpm@second_digit:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x2B
   902  00002C                     	ds	1
   903  00002D                     display_laptime@last_int:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x2C
   907  00002D                     	ds	1
   908  00002E                     display_rpm@first_digit:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x2D
   912  00002E                     	ds	1
   913  00002F                     display_laptime@last_dec:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x2E
   917  00002F                     	ds	1
   918  000030                     display@rpm:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x2F
   922  000030                     	ds	1
   923  000031                     display_laptime@lap:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x30
   927  000031                     	ds	1
   928  000032                     display@oilP:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x31
   932  000032                     	ds	1
   933  000033                     display_laptime@best_lap:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x32
   937  000033                     	ds	1
   938  000034                     display@fuelP:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x33
   942  000034                     	ds	1
   943  000035                     ??_display_laptime:
   944                           
   945                           ; 1 bytes @ 0x34
   946  000035                     	ds	1
   947  000036                     display@tp:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x35
   951  000036                     	ds	2
   952  000038                     display@speed:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0x37
   956  000038                     	ds	2
   957  00003A                     display@gear:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x39
   961  00003A                     	ds	2
   962  00003C                     display@engTemp:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x3B
   966  00003C                     	ds	2
   967  00003E                     display@oilTemp:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x3D
   971  00003E                     	ds	2
   972  000040                     display@battVolts:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x3F
   976  000040                     	ds	2
   977  000042                     tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           
   986                           ; 1 bytes @ 0x41
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 38 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  lap_time       22   23[BANK0 ] struct .
   997 ;;  rpm             2   21[BANK0 ] int 
   998 ;;  battVolts       2   19[BANK0 ] int 
   999 ;;  oilTemp         2   17[BANK0 ] int 
  1000 ;;  engTemp         2   15[BANK0 ] int 
  1001 ;;  gear            2   13[BANK0 ] int 
  1002 ;;  speed           2   11[BANK0 ] int 
  1003 ;;  tp              2    9[BANK0 ] int 
  1004 ;;  oilP            2    7[BANK0 ] int 
  1005 ;;  fuelP           2    4[BANK0 ] int 
  1006 ;;  message         2    2[BANK0 ] PTR unsigned char 
  1007 ;;  timer_starte    1    6[BANK0 ] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1018 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1019 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1020 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1021 ;;Total ram usage:       45 bytes
  1022 ;; Hardware stack levels required when called:    8
  1023 ;; This function calls:
  1024 ;;		_CAN_receive
  1025 ;;		_FT800_Init
  1026 ;;		_SYSTEM_Initialize
  1027 ;;		_TMR0_SetInterruptHandler
  1028 ;;		_TMR0_StartTimer
  1029 ;;		_TMR0_StopTimer
  1030 ;;		_TMR1_Reload
  1031 ;;		_TMR1_SetInterruptHandler
  1032 ;;		___awdiv
  1033 ;;		___awmod
  1034 ;;		_display
  1035 ;;		_display_battery
  1036 ;;		_display_end
  1037 ;;		_display_fuel
  1038 ;;		_display_gear
  1039 ;;		_display_labels
  1040 ;;		_display_laptime
  1041 ;;		_display_message
  1042 ;;		_display_oilPress
  1043 ;;		_display_oilTemp
  1044 ;;		_display_rpm
  1045 ;;		_display_speed
  1046 ;;		_display_start
  1047 ;;		_display_tp
  1048 ;;		_display_waterTemp
  1049 ;;		_wait2secs
  1050 ;; This function is called by:
  1051 ;;		Startup code after reset
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text0
  1056  00422A                     __ptext0:
  1057                           	opt stack 0
  1058  00422A                     _main:
  1059                           	opt stack 23
  1060                           
  1061                           ;main.c: 39: Lap_time lap_time= {0,1,0,0,0,0,0,9999,0,99,99};
  1062                           
  1063                           ;incstack = 0
  1064  00422A  EE20  F08D         	lfsr	2,main@F15312
  1065  00422E  EE10  F077         	lfsr	1,main@lap_time
  1066  004232  0E15               	movlw	21
  1067  004234                     u1241:
  1068  004234  CFDB FFE3          	movff	plusw2,plusw1
  1069  004238  06E8               	decf	wreg,f,c
  1070  00423A  E2FC               	bc	u1241
  1071                           
  1072                           ;main.c: 40: bool timer_started = 0;
  1073  00423C  0E00               	movlw	0
  1074  00423E  0100               	movlb	0	; () banked
  1075  004240  6F66               	movwf	main@timer_started& (0+255),b
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 41: char* message;
  1079                           ;main.c: 42: int rpm = 0, oilP = 0, fuelP = 0, tp = 0, speed = 0, gear = 0, engTemp = 0,
      +                           oilTemp = 0, battVolts = 0;
  1080  004242  0E00               	movlw	0
  1081  004244  0100               	movlb	0	; () banked
  1082  004246  6F76               	movwf	(main@rpm+1)& (0+255),b
  1083  004248  0E00               	movlw	0
  1084  00424A  6F75               	movwf	main@rpm& (0+255),b
  1085                           
  1086                           ; BSR set to: 0
  1087  00424C  0E00               	movlw	0
  1088  00424E  0100               	movlb	0	; () banked
  1089  004250  6F68               	movwf	(main@oilP+1)& (0+255),b
  1090  004252  0E00               	movlw	0
  1091  004254  6F67               	movwf	main@oilP& (0+255),b
  1092                           
  1093                           ; BSR set to: 0
  1094  004256  0E00               	movlw	0
  1095  004258  0100               	movlb	0	; () banked
  1096  00425A  6F65               	movwf	(main@fuelP+1)& (0+255),b
  1097  00425C  0E00               	movlw	0
  1098  00425E  6F64               	movwf	main@fuelP& (0+255),b
  1099                           
  1100                           ; BSR set to: 0
  1101  004260  0E00               	movlw	0
  1102  004262  0100               	movlb	0	; () banked
  1103  004264  6F6A               	movwf	(main@tp+1)& (0+255),b
  1104  004266  0E00               	movlw	0
  1105  004268  6F69               	movwf	main@tp& (0+255),b
  1106                           
  1107                           ; BSR set to: 0
  1108  00426A  0E00               	movlw	0
  1109  00426C  0100               	movlb	0	; () banked
  1110  00426E  6F6C               	movwf	(main@speed+1)& (0+255),b
  1111  004270  0E00               	movlw	0
  1112  004272  6F6B               	movwf	main@speed& (0+255),b
  1113                           
  1114                           ; BSR set to: 0
  1115  004274  0E00               	movlw	0
  1116  004276  0100               	movlb	0	; () banked
  1117  004278  6F6E               	movwf	(main@gear+1)& (0+255),b
  1118  00427A  0E00               	movlw	0
  1119  00427C  6F6D               	movwf	main@gear& (0+255),b
  1120                           
  1121                           ; BSR set to: 0
  1122  00427E  0E00               	movlw	0
  1123  004280  0100               	movlb	0	; () banked
  1124  004282  6F70               	movwf	(main@engTemp+1)& (0+255),b
  1125  004284  0E00               	movlw	0
  1126  004286  6F6F               	movwf	main@engTemp& (0+255),b
  1127                           
  1128                           ; BSR set to: 0
  1129  004288  0E00               	movlw	0
  1130  00428A  0100               	movlb	0	; () banked
  1131  00428C  6F72               	movwf	(main@oilTemp+1)& (0+255),b
  1132  00428E  0E00               	movlw	0
  1133  004290  6F71               	movwf	main@oilTemp& (0+255),b
  1134                           
  1135                           ; BSR set to: 0
  1136  004292  0E00               	movlw	0
  1137  004294  0100               	movlb	0	; () banked
  1138  004296  6F74               	movwf	(main@battVolts+1)& (0+255),b
  1139  004298  0E00               	movlw	0
  1140  00429A  6F73               	movwf	main@battVolts& (0+255),b
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 43: wait2secs();
  1144  00429C  ECCA  F031         	call	_wait2secs	;wreg free
  1145                           
  1146                           ;main.c: 46: SYSTEM_Initialize();
  1147  0042A0  ECAD  F031         	call	_SYSTEM_Initialize	;wreg free
  1148                           
  1149                           ;main.c: 49: CIOCONbits.CLKSEL = 1;
  1150  0042A4  8070               	bsf	3952,0,c	;volatile
  1151                           
  1152                           ;main.c: 50: CIOCONbits.ENDRHI = 1;
  1153  0042A6  8A70               	bsf	3952,5,c	;volatile
  1154                           
  1155                           ;main.c: 51: CIOCONbits.TX2SRC = 0;
  1156  0042A8  9E70               	bcf	3952,7,c	;volatile
  1157                           
  1158                           ;main.c: 52: CIOCONbits.TX2EN = 1;
  1159  0042AA  8C70               	bsf	3952,6,c	;volatile
  1160                           
  1161                           ;main.c: 53: RXB0CONbits.RXM0 = 1;
  1162  0042AC  8A60               	bsf	3936,5,c	;volatile
  1163                           
  1164                           ;main.c: 54: RXB0CONbits.RXM1 = 0;
  1165  0042AE  9C60               	bcf	3936,6,c	;volatile
  1166                           
  1167                           ;main.c: 55: RXB0CONbits.RB0DBEN = 0;
  1168  0042B0  9460               	bcf	3936,2,c	;volatile
  1169                           
  1170                           ;main.c: 56: PIE5bits.RXB0IE = 0;
  1171  0042B2  9076               	bcf	3958,0,c	;volatile
  1172                           
  1173                           ;main.c: 57: PIE5bits.RXB1IE = 0;
  1174  0042B4  9276               	bcf	3958,1,c	;volatile
  1175                           
  1176                           ;main.c: 58: PIR5bits.ERRIF = 0;
  1177  0042B6  9A77               	bcf	3959,5,c	;volatile
  1178                           
  1179                           ;main.c: 59: PIR5bits.WAKIF = 0;
  1180  0042B8  9C77               	bcf	3959,6,c	;volatile
  1181                           
  1182                           ;main.c: 67: RXF2SIDH = 0xC8;
  1183  0042BA  0EC8               	movlw	200
  1184  0042BC  010E               	movlb	14	; () banked
  1185  0042BE  6FE8               	movwf	232,b	;volatile
  1186                           
  1187                           ; BSR set to: 14
  1188                           ;main.c: 68: RXF2SIDL = 0x40;
  1189  0042C0  0E40               	movlw	64
  1190  0042C2  010E               	movlb	14	; () banked
  1191  0042C4  6FE9               	movwf	233,b	;volatile
  1192                           
  1193                           ; BSR set to: 14
  1194                           ;main.c: 69: RXM0SIDH = 0xFF;
  1195  0042C6  010E               	movlb	14	; () banked
  1196  0042C8  69F8               	setf	248,b	;volatile
  1197                           
  1198                           ; BSR set to: 14
  1199                           ;main.c: 70: RXM0SIDL = 0b11011111;
  1200  0042CA  0EDF               	movlw	223
  1201  0042CC  010E               	movlb	14	; () banked
  1202  0042CE  6FF9               	movwf	249,b	;volatile
  1203                           
  1204                           ; BSR set to: 14
  1205                           ;main.c: 71: RXM1SIDH = 0xFF;
  1206  0042D0  010E               	movlb	14	; () banked
  1207  0042D2  69FC               	setf	252,b	;volatile
  1208                           
  1209                           ; BSR set to: 14
  1210                           ;main.c: 72: RXM1SIDL = 0x11011111;
  1211  0042D4  0E11               	movlw	17
  1212  0042D6  010E               	movlb	14	; () banked
  1213  0042D8  6FFD               	movwf	253,b	;volatile
  1214                           
  1215                           ; BSR set to: 14
  1216                           ;main.c: 75: SSPSTATbits.SMP = 0;
  1217  0042DA  9EC7               	bcf	4039,7,c	;volatile
  1218                           
  1219                           ; BSR set to: 14
  1220                           ;main.c: 76: SSPSTATbits.CKE = 1;
  1221  0042DC  8CC7               	bsf	4039,6,c	;volatile
  1222                           
  1223                           ; BSR set to: 14
  1224                           ;main.c: 77: SSPCON1bits.SSPEN = 1;
  1225  0042DE  8AC6               	bsf	4038,5,c	;volatile
  1226                           
  1227                           ; BSR set to: 14
  1228                           ;main.c: 78: SSPCON1bits.CKP = 1;
  1229  0042E0  88C6               	bsf	4038,4,c	;volatile
  1230                           
  1231                           ; BSR set to: 14
  1232                           ;main.c: 79: SSPCON1bits.SSPM = 0b0010;
  1233  0042E2  50C6               	movf	4038,w,c	;volatile
  1234  0042E4  0BF0               	andlw	-16
  1235  0042E6  0902               	iorlw	2
  1236  0042E8  6EC6               	movwf	4038,c	;volatile
  1237                           
  1238                           ; BSR set to: 14
  1239                           ;main.c: 80: FT800_Init();
  1240  0042EA  ECA3  F027         	call	_FT800_Init	;wreg free
  1241                           
  1242                           ;main.c: 82: wait2secs();
  1243  0042EE  ECCA  F031         	call	_wait2secs	;wreg free
  1244                           
  1245                           ;main.c: 83: SSPCON1bits.SSPM = 0b0001;
  1246  0042F2  50C6               	movf	4038,w,c	;volatile
  1247  0042F4  0BF0               	andlw	-16
  1248  0042F6  0901               	iorlw	1
  1249  0042F8  6EC6               	movwf	4038,c	;volatile
  1250                           
  1251                           ;main.c: 85: do { LATAbits.LATA1 = 0; } while(0);
  1252  0042FA  9289               	bcf	3977,1,c	;volatile
  1253                           
  1254                           ;main.c: 86: do { LATDbits.LATD4 = 0; } while(0);
  1255  0042FC  988C               	bcf	3980,4,c	;volatile
  1256                           
  1257                           ;main.c: 87: do { LATAbits.LATA0 = 0; } while(0);
  1258  0042FE  9089               	bcf	3977,0,c	;volatile
  1259                           
  1260                           ;main.c: 88: do { LATBbits.LATB5 = 1; } while(0);
  1261  004300  8A8A               	bsf	3978,5,c	;volatile
  1262                           
  1263                           ;main.c: 89: do { LATDbits.LATD5 = 0; } while(0);
  1264  004302  9A8C               	bcf	3980,5,c	;volatile
  1265                           
  1266                           ;main.c: 90: do { LATDbits.LATD3 = 1; } while(0);
  1267  004304  868C               	bsf	3980,3,c	;volatile
  1268                           
  1269                           ;main.c: 92: display(rpm, oilP, fuelP, tp, speed, gear, engTemp, oilTemp, battVolts);
  1270  004306  C075  F030         	movff	main@rpm,display@rpm
  1271  00430A  C076  F031         	movff	main@rpm+1,display@rpm+1
  1272  00430E  C067  F032         	movff	main@oilP,display@oilP
  1273  004312  C068  F033         	movff	main@oilP+1,display@oilP+1
  1274  004316  C064  F034         	movff	main@fuelP,display@fuelP
  1275  00431A  C065  F035         	movff	main@fuelP+1,display@fuelP+1
  1276  00431E  C069  F036         	movff	main@tp,display@tp
  1277  004322  C06A  F037         	movff	main@tp+1,display@tp+1
  1278  004326  C06B  F038         	movff	main@speed,display@speed
  1279  00432A  C06C  F039         	movff	main@speed+1,display@speed+1
  1280  00432E  C06D  F03A         	movff	main@gear,display@gear
  1281  004332  C06E  F03B         	movff	main@gear+1,display@gear+1
  1282  004336  C06F  F03C         	movff	main@engTemp,display@engTemp
  1283  00433A  C070  F03D         	movff	main@engTemp+1,display@engTemp+1
  1284  00433E  C071  F03E         	movff	main@oilTemp,display@oilTemp
  1285  004342  C072  F03F         	movff	main@oilTemp+1,display@oilTemp+1
  1286  004346  C073  F040         	movff	main@battVolts,display@battVolts
  1287  00434A  C074  F041         	movff	main@battVolts+1,display@battVolts+1
  1288  00434E  ECC8  F02E         	call	_display	;wreg free
  1289                           
  1290                           ;main.c: 94: TMR1_SetInterruptHandler(&refresh);
  1291  004352  0E2C               	movlw	low _refresh
  1292  004354  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1293  004356  0E64               	movlw	high _refresh
  1294  004358  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1295  00435A  EC0C  F032         	call	_TMR1_SetInterruptHandler	;wreg free
  1296                           
  1297                           ;main.c: 95: TMR0_SetInterruptHandler(*LED_blink);
  1298  00435E  0EB2               	movlw	low _LED_blink
  1299  004360  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1300  004362  0E62               	movlw	high _LED_blink
  1301  004364  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1302  004366  EC11  F032         	call	_TMR0_SetInterruptHandler	;wreg free
  1303                           
  1304                           ;main.c: 96: TMR0_StopTimer();
  1305  00436A  EC1A  F032         	call	_TMR0_StopTimer	;wreg free
  1306                           
  1307                           ;main.c: 97: (INTCONbits.GIE = 1);
  1308  00436E  8EF2               	bsf	intcon,7,c	;volatile
  1309                           
  1310                           ;main.c: 98: (INTCONbits.PEIE = 1);
  1311  004370  8CF2               	bsf	intcon,6,c	;volatile
  1312  004372                     l5193:
  1313                           
  1314                           ;main.c: 101: if (CAN_receive(&canMessage)) {
  1315  004372  0EA4               	movlw	low _canMessage
  1316  004374  6E23               	movwf	CAN_receive@tempCanMsg,c
  1317  004376  0E00               	movlw	high _canMessage
  1318  004378  6E24               	movwf	CAN_receive@tempCanMsg+1,c
  1319  00437A  ECF0  F028         	call	_CAN_receive	;wreg free
  1320  00437E  0900               	iorlw	0
  1321  004380  B4D8               	btfsc	status,2,c
  1322  004382  D173               	goto	l5241
  1323                           
  1324                           ;main.c: 102: if (canMessage.frame.id == 0x640) {
  1325  004384  0E40               	movlw	64
  1326  004386  0100               	movlb	0	; () banked
  1327  004388  19A5               	xorwf	(_canMessage+1)& (0+255),w,b
  1328  00438A  E158               	bnz	l5207
  1329  00438C  0E06               	movlw	6
  1330  00438E  0100               	movlb	0	; () banked
  1331  004390  19A6               	xorwf	(_canMessage+2)& (0+255),w,b
  1332  004392  0100               	movlb	0	; () banked
  1333  004394  11A7               	iorwf	(_canMessage+3)& (0+255),w,b
  1334  004396  0100               	movlb	0	; () banked
  1335  004398  11A8               	iorwf	(_canMessage+4)& (0+255),w,b
  1336  00439A  A4D8               	btfss	status,2,c
  1337  00439C  D04F               	goto	l5207
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main.c: 103: rpm = ((canMessage.frame.data0 << 8) | canMessage.frame.data1);
  1341  00439E  0100               	movlb	0	; () banked
  1342  0043A0  51AB               	movf	(_canMessage+7)& (0+255),w,b
  1343  0043A2  C0AA  F060         	movff	_canMessage+6,??_main
  1344  0043A6  0100               	movlb	0	; () banked
  1345  0043A8  6B61               	clrf	(??_main+1)& (0+255),b
  1346  0043AA  C060  F061         	movff	??_main,??_main+1
  1347  0043AE  0100               	movlb	0	; () banked
  1348  0043B0  6B60               	clrf	??_main& (0+255),b
  1349  0043B2  0100               	movlb	0	; () banked
  1350  0043B4  1160               	iorwf	??_main& (0+255),w,b
  1351  0043B6  0100               	movlb	0	; () banked
  1352  0043B8  6F75               	movwf	main@rpm& (0+255),b
  1353  0043BA  0100               	movlb	0	; () banked
  1354  0043BC  5161               	movf	(??_main+1)& (0+255),w,b
  1355  0043BE  0100               	movlb	0	; () banked
  1356  0043C0  6F76               	movwf	(main@rpm+1)& (0+255),b
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 104: oilP = ((canMessage.frame.data2 << 8) | canMessage.frame.data3) / 10;
  1360  0043C2  0100               	movlb	0	; () banked
  1361  0043C4  51AD               	movf	(_canMessage+9)& (0+255),w,b
  1362  0043C6  C0AC  F060         	movff	_canMessage+8,??_main
  1363  0043CA  0100               	movlb	0	; () banked
  1364  0043CC  6B61               	clrf	(??_main+1)& (0+255),b
  1365  0043CE  C060  F061         	movff	??_main,??_main+1
  1366  0043D2  0100               	movlb	0	; () banked
  1367  0043D4  6B60               	clrf	??_main& (0+255),b
  1368  0043D6  0100               	movlb	0	; () banked
  1369  0043D8  1160               	iorwf	??_main& (0+255),w,b
  1370  0043DA  6E10               	movwf	___awdiv@dividend,c
  1371  0043DC  0100               	movlb	0	; () banked
  1372  0043DE  5161               	movf	(??_main+1)& (0+255),w,b
  1373  0043E0  6E11               	movwf	___awdiv@dividend+1,c
  1374  0043E2  0E00               	movlw	0
  1375  0043E4  6E13               	movwf	___awdiv@divisor+1,c
  1376  0043E6  0E0A               	movlw	10
  1377  0043E8  6E12               	movwf	___awdiv@divisor,c
  1378  0043EA  EC4E  F02F         	call	___awdiv	;wreg free
  1379  0043EE  C010  F067         	movff	?___awdiv,main@oilP
  1380  0043F2  C011  F068         	movff	?___awdiv+1,main@oilP+1
  1381                           
  1382                           ;main.c: 105: fuelP = ((canMessage.frame.data4 << 8) | canMessage.frame.data5) / 10;
  1383  0043F6  0100               	movlb	0	; () banked
  1384  0043F8  51AF               	movf	(_canMessage+11)& (0+255),w,b
  1385  0043FA  C0AE  F060         	movff	_canMessage+10,??_main
  1386  0043FE  0100               	movlb	0	; () banked
  1387  004400  6B61               	clrf	(??_main+1)& (0+255),b
  1388  004402  C060  F061         	movff	??_main,??_main+1
  1389  004406  0100               	movlb	0	; () banked
  1390  004408  6B60               	clrf	??_main& (0+255),b
  1391  00440A  0100               	movlb	0	; () banked
  1392  00440C  1160               	iorwf	??_main& (0+255),w,b
  1393  00440E  6E10               	movwf	___awdiv@dividend,c
  1394  004410  0100               	movlb	0	; () banked
  1395  004412  5161               	movf	(??_main+1)& (0+255),w,b
  1396  004414  6E11               	movwf	___awdiv@dividend+1,c
  1397  004416  0E00               	movlw	0
  1398  004418  6E13               	movwf	___awdiv@divisor+1,c
  1399  00441A  0E0A               	movlw	10
  1400  00441C  6E12               	movwf	___awdiv@divisor,c
  1401  00441E  EC4E  F02F         	call	___awdiv	;wreg free
  1402  004422  C010  F064         	movff	?___awdiv,main@fuelP
  1403  004426  C011  F065         	movff	?___awdiv+1,main@fuelP+1
  1404                           
  1405                           ;main.c: 106: tp = canMessage.frame.data6;
  1406  00442A  C0B0  F069         	movff	_canMessage+12,main@tp
  1407  00442E  0100               	movlb	0	; () banked
  1408  004430  6B6A               	clrf	(main@tp+1)& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 107: speed = canMessage.frame.data7;
  1412  004432  C0B1  F06B         	movff	_canMessage+13,main@speed
  1413  004436  0100               	movlb	0	; () banked
  1414  004438  6B6C               	clrf	(main@speed+1)& (0+255),b
  1415                           
  1416                           ;main.c: 108: } else if (canMessage.frame.id == 0x641) {
  1417  00443A  D117               	goto	l5241
  1418  00443C                     l5207:
  1419                           
  1420                           ; BSR set to: 0
  1421  00443C  0E41               	movlw	65
  1422  00443E  0100               	movlb	0	; () banked
  1423  004440  19A5               	xorwf	(_canMessage+1)& (0+255),w,b
  1424  004442  E10E               	bnz	l5211
  1425  004444  0E06               	movlw	6
  1426  004446  0100               	movlb	0	; () banked
  1427  004448  19A6               	xorwf	(_canMessage+2)& (0+255),w,b
  1428  00444A  0100               	movlb	0	; () banked
  1429  00444C  11A7               	iorwf	(_canMessage+3)& (0+255),w,b
  1430  00444E  0100               	movlb	0	; () banked
  1431  004450  11A8               	iorwf	(_canMessage+4)& (0+255),w,b
  1432  004452  A4D8               	btfss	status,2,c
  1433  004454  D005               	goto	l5211
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;main.c: 109: gear = canMessage.frame.data6;
  1437  004456  C0B0  F06D         	movff	_canMessage+12,main@gear
  1438  00445A  0100               	movlb	0	; () banked
  1439  00445C  6B6E               	clrf	(main@gear+1)& (0+255),b
  1440                           
  1441                           ;main.c: 110: } else if (canMessage.frame.id == 0x642) {
  1442  00445E  D105               	goto	l5241
  1443  004460                     l5211:
  1444                           
  1445                           ; BSR set to: 0
  1446  004460  0E42               	movlw	66
  1447  004462  0100               	movlb	0	; () banked
  1448  004464  19A5               	xorwf	(_canMessage+1)& (0+255),w,b
  1449  004466  E116               	bnz	l5215
  1450  004468  0E06               	movlw	6
  1451  00446A  0100               	movlb	0	; () banked
  1452  00446C  19A6               	xorwf	(_canMessage+2)& (0+255),w,b
  1453  00446E  0100               	movlb	0	; () banked
  1454  004470  11A7               	iorwf	(_canMessage+3)& (0+255),w,b
  1455  004472  0100               	movlb	0	; () banked
  1456  004474  11A8               	iorwf	(_canMessage+4)& (0+255),w,b
  1457  004476  A4D8               	btfss	status,2,c
  1458  004478  D00D               	goto	l5215
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 111: engTemp = canMessage.frame.data0;
  1462  00447A  C0AA  F06F         	movff	_canMessage+6,main@engTemp
  1463  00447E  0100               	movlb	0	; () banked
  1464  004480  6B70               	clrf	(main@engTemp+1)& (0+255),b
  1465                           
  1466                           ;main.c: 112: oilTemp = canMessage.frame.data1;
  1467  004482  C0AB  F071         	movff	_canMessage+7,main@oilTemp
  1468  004486  0100               	movlb	0	; () banked
  1469  004488  6B72               	clrf	(main@oilTemp+1)& (0+255),b
  1470                           
  1471                           ;main.c: 113: battVolts = canMessage.frame.data2;
  1472  00448A  C0AC  F073         	movff	_canMessage+8,main@battVolts
  1473  00448E  0100               	movlb	0	; () banked
  1474  004490  6B74               	clrf	(main@battVolts+1)& (0+255),b
  1475                           
  1476                           ;main.c: 114: } else if (canMessage.frame.id == 0x643) {
  1477  004492  D0EB               	goto	l5241
  1478  004494                     l5215:
  1479                           
  1480                           ; BSR set to: 0
  1481  004494  0E43               	movlw	67
  1482  004496  0100               	movlb	0	; () banked
  1483  004498  19A5               	xorwf	(_canMessage+1)& (0+255),w,b
  1484  00449A  E150               	bnz	l5227
  1485  00449C  0E06               	movlw	6
  1486  00449E  0100               	movlb	0	; () banked
  1487  0044A0  19A6               	xorwf	(_canMessage+2)& (0+255),w,b
  1488  0044A2  0100               	movlb	0	; () banked
  1489  0044A4  11A7               	iorwf	(_canMessage+3)& (0+255),w,b
  1490  0044A6  0100               	movlb	0	; () banked
  1491  0044A8  11A8               	iorwf	(_canMessage+4)& (0+255),w,b
  1492  0044AA  A4D8               	btfss	status,2,c
  1493  0044AC  D047               	goto	l5227
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;main.c: 121: }
  1497                           ;main.c: 122: LATAbits.LATA0 = canMessage.frame.data0 >> 5;
  1498                           
  1499                           ; BSR set to: 0
  1500                           
  1501                           ; BSR set to: 0
  1502                           
  1503                           ; BSR set to: 0
  1504                           
  1505                           ;main.c: 120: *message = "R18 ";
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;main.c: 119: } else {
  1509                           
  1510                           ; BSR set to: 0
  1511                           
  1512                           ; BSR set to: 0
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 117: } else if(canMessage.frame.data0 >> 6) {
  1516                           
  1517                           ; BSR set to: 0
  1518  0044AE  C0AA  F060         	movff	_canMessage+6,??_main
  1519  0044B2  0E05               	movlw	5
  1520  0044B4  0100               	movlb	0	; () banked
  1521  0044B6  6F61               	movwf	(??_main+1)& (0+255),b
  1522  0044B8                     u1305:
  1523  0044B8  0100               	movlb	0	; () banked
  1524  0044BA  90D8               	bcf	status,0,c
  1525  0044BC  3360               	rrcf	??_main& (0+255),f,b
  1526  0044BE  0100               	movlb	0	; () banked
  1527  0044C0  2F61               	decfsz	(??_main+1)& (0+255),f,b
  1528  0044C2  D7FA               	goto	u1305
  1529  0044C4  5089               	movf	3977,w,c	;volatile
  1530  0044C6  0100               	movlb	0	; () banked
  1531  0044C8  1960               	xorwf	??_main& (0+255),w,b
  1532  0044CA  0BFE               	andlw	-2
  1533  0044CC  1960               	xorwf	??_main& (0+255),w,b
  1534  0044CE  6E89               	movwf	3977,c	;volatile
  1535                           
  1536                           ;main.c: 123: LATBbits.LATB5 = canMessage.frame.data0 >> 4;
  1537  0044D0  C0AA  F060         	movff	_canMessage+6,??_main
  1538  0044D4  0100               	movlb	0	; () banked
  1539  0044D6  3B60               	swapf	??_main& (0+255),f,b
  1540  0044D8  0E0F               	movlw	15
  1541  0044DA  1760               	andwf	??_main& (0+255),f,b
  1542  0044DC  0100               	movlb	0	; () banked
  1543  0044DE  3B60               	swapf	??_main& (0+255),f,b
  1544  0044E0  4760               	rlncf	??_main& (0+255),f,b
  1545  0044E2  508A               	movf	3978,w,c	;volatile
  1546  0044E4  0100               	movlb	0	; () banked
  1547  0044E6  1960               	xorwf	??_main& (0+255),w,b
  1548  0044E8  0BDF               	andlw	-33
  1549  0044EA  1960               	xorwf	??_main& (0+255),w,b
  1550  0044EC  6E8A               	movwf	3978,c	;volatile
  1551                           
  1552                           ;main.c: 124: LATDbits.LATD3 = canMessage.frame.data0 >> 3;
  1553  0044EE  C0AA  F060         	movff	_canMessage+6,??_main
  1554  0044F2  0100               	movlb	0	; () banked
  1555  0044F4  90D8               	bcf	status,0,c
  1556  0044F6  3360               	rrcf	??_main& (0+255),f,b
  1557  0044F8  0100               	movlb	0	; () banked
  1558  0044FA  90D8               	bcf	status,0,c
  1559  0044FC  3360               	rrcf	??_main& (0+255),f,b
  1560  0044FE  0100               	movlb	0	; () banked
  1561  004500  90D8               	bcf	status,0,c
  1562  004502  3360               	rrcf	??_main& (0+255),f,b
  1563  004504  0100               	movlb	0	; () banked
  1564  004506  4760               	rlncf	??_main& (0+255),f,b
  1565  004508  4760               	rlncf	??_main& (0+255),f,b
  1566  00450A  4760               	rlncf	??_main& (0+255),f,b
  1567  00450C  508C               	movf	3980,w,c	;volatile
  1568  00450E  0100               	movlb	0	; () banked
  1569  004510  1960               	xorwf	??_main& (0+255),w,b
  1570  004512  0BF7               	andlw	-9
  1571  004514  1960               	xorwf	??_main& (0+255),w,b
  1572  004516  6E8C               	movwf	3980,c	;volatile
  1573                           
  1574                           ;main.c: 125: LATDbits.LATD5 = canMessage.frame.data0 >> 2;
  1575  004518  C0AA  F060         	movff	_canMessage+6,??_main
  1576  00451C  0100               	movlb	0	; () banked
  1577  00451E  90D8               	bcf	status,0,c
  1578  004520  3360               	rrcf	??_main& (0+255),f,b
  1579  004522  0100               	movlb	0	; () banked
  1580  004524  90D8               	bcf	status,0,c
  1581  004526  3360               	rrcf	??_main& (0+255),f,b
  1582  004528  0100               	movlb	0	; () banked
  1583  00452A  3B60               	swapf	??_main& (0+255),f,b
  1584  00452C  4760               	rlncf	??_main& (0+255),f,b
  1585  00452E  508C               	movf	3980,w,c	;volatile
  1586  004530  0100               	movlb	0	; () banked
  1587  004532  1960               	xorwf	??_main& (0+255),w,b
  1588  004534  0BDF               	andlw	-33
  1589  004536  1960               	xorwf	??_main& (0+255),w,b
  1590  004538  6E8C               	movwf	3980,c	;volatile
  1591                           
  1592                           ;main.c: 127: } else if (canMessage.frame.id == 0x644) {
  1593  00453A  D097               	goto	l5241
  1594  00453C                     l5227:
  1595                           
  1596                           ; BSR set to: 0
  1597  00453C  0E44               	movlw	68
  1598  00453E  0100               	movlb	0	; () banked
  1599  004540  19A5               	xorwf	(_canMessage+1)& (0+255),w,b
  1600  004542  E108               	bnz	u1311
  1601  004544  0E06               	movlw	6
  1602  004546  0100               	movlb	0	; () banked
  1603  004548  19A6               	xorwf	(_canMessage+2)& (0+255),w,b
  1604  00454A  0100               	movlb	0	; () banked
  1605  00454C  11A7               	iorwf	(_canMessage+3)& (0+255),w,b
  1606  00454E  0100               	movlb	0	; () banked
  1607  004550  11A8               	iorwf	(_canMessage+4)& (0+255),w,b
  1608  004552  A4D8               	btfss	status,2,c
  1609  004554                     u1311:
  1610  004554  D08A               	goto	l5241
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;main.c: 128: lap_time.last = ((canMessage.frame.data0 << 8) | canMessage.frame.data1);
  1614  004556  0100               	movlb	0	; () banked
  1615  004558  51AB               	movf	(_canMessage+7)& (0+255),w,b
  1616  00455A  C0AA  F060         	movff	_canMessage+6,??_main
  1617  00455E  0100               	movlb	0	; () banked
  1618  004560  6B61               	clrf	(??_main+1)& (0+255),b
  1619  004562  C060  F061         	movff	??_main,??_main+1
  1620  004566  0100               	movlb	0	; () banked
  1621  004568  6B60               	clrf	??_main& (0+255),b
  1622  00456A  0100               	movlb	0	; () banked
  1623  00456C  1160               	iorwf	??_main& (0+255),w,b
  1624  00456E  0100               	movlb	0	; () banked
  1625  004570  6F7F               	movwf	(main@lap_time+8)& (0+255),b
  1626  004572  0100               	movlb	0	; () banked
  1627  004574  5161               	movf	(??_main+1)& (0+255),w,b
  1628  004576  0100               	movlb	0	; () banked
  1629  004578  6F80               	movwf	(main@lap_time+9)& (0+255),b
  1630                           
  1631                           ;main.c: 129: lap_time.current = ((canMessage.frame.data2 << 8) | canMessage.frame.data3
      +                          );
  1632  00457A  0100               	movlb	0	; () banked
  1633  00457C  51AD               	movf	(_canMessage+9)& (0+255),w,b
  1634  00457E  C0AC  F060         	movff	_canMessage+8,??_main
  1635  004582  0100               	movlb	0	; () banked
  1636  004584  6B61               	clrf	(??_main+1)& (0+255),b
  1637  004586  C060  F061         	movff	??_main,??_main+1
  1638  00458A  0100               	movlb	0	; () banked
  1639  00458C  6B60               	clrf	??_main& (0+255),b
  1640  00458E  0100               	movlb	0	; () banked
  1641  004590  1160               	iorwf	??_main& (0+255),w,b
  1642  004592  0100               	movlb	0	; () banked
  1643  004594  6F77               	movwf	main@lap_time& (0+255),b
  1644  004596  0100               	movlb	0	; () banked
  1645  004598  5161               	movf	(??_main+1)& (0+255),w,b
  1646  00459A  0100               	movlb	0	; () banked
  1647  00459C  6F78               	movwf	(main@lap_time+1)& (0+255),b
  1648                           
  1649                           ;main.c: 130: lap_time.current_number = ((canMessage.frame.data4 << 8) | canMessage.fram
      +                          e.data5);
  1650  00459E  0100               	movlb	0	; () banked
  1651  0045A0  51AF               	movf	(_canMessage+11)& (0+255),w,b
  1652  0045A2  C0AE  F060         	movff	_canMessage+10,??_main
  1653  0045A6  0100               	movlb	0	; () banked
  1654  0045A8  6B61               	clrf	(??_main+1)& (0+255),b
  1655  0045AA  C060  F061         	movff	??_main,??_main+1
  1656  0045AE  0100               	movlb	0	; () banked
  1657  0045B0  6B60               	clrf	??_main& (0+255),b
  1658  0045B2  0100               	movlb	0	; () banked
  1659  0045B4  1160               	iorwf	??_main& (0+255),w,b
  1660  0045B6  0100               	movlb	0	; () banked
  1661  0045B8  6F79               	movwf	(main@lap_time+2)& (0+255),b
  1662  0045BA  0100               	movlb	0	; () banked
  1663  0045BC  5161               	movf	(??_main+1)& (0+255),w,b
  1664  0045BE  0100               	movlb	0	; () banked
  1665  0045C0  6F7A               	movwf	(main@lap_time+3)& (0+255),b
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 131: lap_time.last_int = lap_time.last/100;
  1669  0045C2  C07F  F010         	movff	main@lap_time+8,___awdiv@dividend
  1670  0045C6  C080  F011         	movff	main@lap_time+9,___awdiv@dividend+1
  1671  0045CA  0E00               	movlw	0
  1672  0045CC  6E13               	movwf	___awdiv@divisor+1,c
  1673  0045CE  0E64               	movlw	100
  1674  0045D0  6E12               	movwf	___awdiv@divisor,c
  1675  0045D2  EC4E  F02F         	call	___awdiv	;wreg free
  1676  0045D6  C010  F081         	movff	?___awdiv,main@lap_time+10
  1677  0045DA  C011  F082         	movff	?___awdiv+1,main@lap_time+11
  1678                           
  1679                           ;main.c: 132: lap_time.last_dec = lap_time.last%100;
  1680  0045DE  C07F  F018         	movff	main@lap_time+8,___awmod@dividend
  1681  0045E2  C080  F019         	movff	main@lap_time+9,___awmod@dividend+1
  1682  0045E6  0E00               	movlw	0
  1683  0045E8  6E1B               	movwf	___awmod@divisor+1,c
  1684  0045EA  0E64               	movlw	100
  1685  0045EC  6E1A               	movwf	___awmod@divisor,c
  1686  0045EE  ECCC  F02F         	call	___awmod	;wreg free
  1687  0045F2  C018  F083         	movff	?___awmod,main@lap_time+12
  1688  0045F6  C019  F084         	movff	?___awmod+1,main@lap_time+13
  1689                           
  1690                           ;main.c: 133: lap_time.current_int = lap_time.current/100;
  1691  0045FA  C077  F010         	movff	main@lap_time,___awdiv@dividend
  1692  0045FE  C078  F011         	movff	main@lap_time+1,___awdiv@dividend+1
  1693  004602  0E00               	movlw	0
  1694  004604  6E13               	movwf	___awdiv@divisor+1,c
  1695  004606  0E64               	movlw	100
  1696  004608  6E12               	movwf	___awdiv@divisor,c
  1697  00460A  EC4E  F02F         	call	___awdiv	;wreg free
  1698  00460E  C010  F07B         	movff	?___awdiv,main@lap_time+4
  1699  004612  C011  F07C         	movff	?___awdiv+1,main@lap_time+5
  1700                           
  1701                           ;main.c: 134: lap_time.current_dec = lap_time.current%100;
  1702  004616  C077  F018         	movff	main@lap_time,___awmod@dividend
  1703  00461A  C078  F019         	movff	main@lap_time+1,___awmod@dividend+1
  1704  00461E  0E00               	movlw	0
  1705  004620  6E1B               	movwf	___awmod@divisor+1,c
  1706  004622  0E64               	movlw	100
  1707  004624  6E1A               	movwf	___awmod@divisor,c
  1708  004626  ECCC  F02F         	call	___awmod	;wreg free
  1709  00462A  C018  F07D         	movff	?___awmod,main@lap_time+6
  1710  00462E  C019  F07E         	movff	?___awmod+1,main@lap_time+7
  1711                           
  1712                           ;main.c: 135: if(lap_time.current < lap_time.best) {
  1713  004632  0100               	movlb	0	; () banked
  1714  004634  5185               	movf	(main@lap_time+14)& (0+255),w,b
  1715  004636  0100               	movlb	0	; () banked
  1716  004638  5D77               	subwf	main@lap_time& (0+255),w,b
  1717  00463A  0100               	movlb	0	; () banked
  1718  00463C  5178               	movf	(main@lap_time+1)& (0+255),w,b
  1719  00463E  0A80               	xorlw	128
  1720  004640  0100               	movlb	0	; () banked
  1721  004642  6F60               	movwf	??_main& (0+255),b
  1722  004644  0100               	movlb	0	; () banked
  1723  004646  5186               	movf	(main@lap_time+15)& (0+255),w,b
  1724  004648  0A80               	xorlw	128
  1725  00464A  0100               	movlb	0	; () banked
  1726  00464C  5960               	subwfb	??_main& (0+255),w,b
  1727  00464E  B0D8               	btfsc	status,0,c
  1728  004650  D00C               	goto	l5241
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 136: lap_time.best = lap_time.current;
  1732  004652  C077  F085         	movff	main@lap_time,main@lap_time+14
  1733  004656  C078  F086         	movff	main@lap_time+1,main@lap_time+15
  1734                           
  1735                           ;main.c: 137: lap_time.best_int = lap_time.current_int;
  1736  00465A  C07B  F089         	movff	main@lap_time+4,main@lap_time+18
  1737  00465E  C07C  F08A         	movff	main@lap_time+5,main@lap_time+19
  1738                           
  1739                           ;main.c: 138: lap_time.best_dec = lap_time.current_dec;
  1740  004662  C07D  F08B         	movff	main@lap_time+6,main@lap_time+20
  1741  004666  C07E  F08C         	movff	main@lap_time+7,main@lap_time+21
  1742  00466A                     l5241:
  1743                           
  1744                           ;main.c: 139: }
  1745                           ;main.c: 140: }
  1746                           ;main.c: 141: }
  1747                           ;main.c: 142: if(refresh_screen) {
  1748  00466A  0100               	movlb	0	; () banked
  1749  00466C  51A3               	movf	_refresh_screen& (0+255),w,b
  1750  00466E  B4D8               	btfsc	status,2,c
  1751  004670  D680               	goto	l5193
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;main.c: 143: display_start();
  1755  004672  EC8E  F030         	call	_display_start	;wreg free
  1756                           
  1757                           ;main.c: 144: display_labels();
  1758  004676  ECD4  F019         	call	_display_labels	;wreg free
  1759                           
  1760                           ;main.c: 145: display_waterTemp(engTemp);
  1761  00467A  C06F  F025         	movff	main@engTemp,display_waterTemp@temp
  1762  00467E  C070  F026         	movff	main@engTemp+1,display_waterTemp@temp+1
  1763  004682  EC58  F02B         	call	_display_waterTemp	;wreg free
  1764                           
  1765                           ;main.c: 146: display_oilTemp(oilTemp);
  1766  004686  C071  F025         	movff	main@oilTemp,display_oilTemp@temp
  1767  00468A  C072  F026         	movff	main@oilTemp+1,display_oilTemp@temp+1
  1768  00468E  EC2B  F02D         	call	_display_oilTemp	;wreg free
  1769                           
  1770                           ;main.c: 147: display_fuel(4.3);
  1771  004692  0E00               	movlw	0
  1772  004694  6E26               	movwf	display_fuel@level+1,c
  1773  004696  0E04               	movlw	4
  1774  004698  6E25               	movwf	display_fuel@level,c
  1775  00469A  EC0F  F02E         	call	_display_fuel	;wreg free
  1776                           
  1777                           ;main.c: 148: display_battery(battVolts);
  1778  00469E  C073  F025         	movff	main@battVolts,display_battery@volts
  1779  0046A2  C074  F026         	movff	main@battVolts+1,display_battery@volts+1
  1780  0046A6  EC30  F026         	call	_display_battery	;wreg free
  1781                           
  1782                           ;main.c: 149: display_oilPress(oilP);
  1783  0046AA  C067  F025         	movff	main@oilP,display_oilPress@pressure
  1784  0046AE  C068  F026         	movff	main@oilP+1,display_oilPress@pressure+1
  1785  0046B2  EC9D  F02D         	call	_display_oilPress	;wreg free
  1786                           
  1787                           ;main.c: 150: display_gear(gear);
  1788  0046B6  C06D  F025         	movff	main@gear,display_gear@gear
  1789  0046BA  C06E  F026         	movff	main@gear+1,display_gear@gear+1
  1790  0046BE  ECBB  F023         	call	_display_gear	;wreg free
  1791                           
  1792                           ;main.c: 151: display_rpm(rpm);
  1793  0046C2  C075  F025         	movff	main@rpm,display_rpm@rpm
  1794  0046C6  C076  F026         	movff	main@rpm+1,display_rpm@rpm+1
  1795  0046CA  ECC6  F007         	call	_display_rpm	;wreg free
  1796                           
  1797                           ;main.c: 152: display_speed(speed);
  1798  0046CE  C06B  F025         	movff	main@speed,display_speed@speed
  1799  0046D2  C06C  F026         	movff	main@speed+1,display_speed@speed+1
  1800  0046D6  ECB9  F02C         	call	_display_speed	;wreg free
  1801                           
  1802                           ;main.c: 153: display_tp(tp);
  1803  0046DA  C069  F025         	movff	main@tp,display_tp@tp
  1804  0046DE  C06A  F026         	movff	main@tp+1,display_tp@tp+1
  1805  0046E2  EC47  F02C         	call	_display_tp	;wreg free
  1806                           
  1807                           ;main.c: 154: display_laptime(lap_time.current_int, lap_time.current_dec, lap_time.best_
      +                          int, lap_time.best_dec,
  1808                           ;main.c: 155: lap_time.last_int, lap_time.last_dec, lap_time.current_number, lap_time.be
      +                          st_number);
  1809  0046E6  C07B  F025         	movff	main@lap_time+4,display_laptime@current_int
  1810  0046EA  C07C  F026         	movff	main@lap_time+5,display_laptime@current_int+1
  1811  0046EE  C07D  F027         	movff	main@lap_time+6,display_laptime@current_dec
  1812  0046F2  C07E  F028         	movff	main@lap_time+7,display_laptime@current_dec+1
  1813  0046F6  C089  F029         	movff	main@lap_time+18,display_laptime@best_int
  1814  0046FA  C08A  F02A         	movff	main@lap_time+19,display_laptime@best_int+1
  1815  0046FE  C08B  F02B         	movff	main@lap_time+20,display_laptime@best_dec
  1816  004702  C08C  F02C         	movff	main@lap_time+21,display_laptime@best_dec+1
  1817  004706  C081  F02D         	movff	main@lap_time+10,display_laptime@last_int
  1818  00470A  C082  F02E         	movff	main@lap_time+11,display_laptime@last_int+1
  1819  00470E  C083  F02F         	movff	main@lap_time+12,display_laptime@last_dec
  1820  004712  C084  F030         	movff	main@lap_time+13,display_laptime@last_dec+1
  1821  004716  C079  F031         	movff	main@lap_time+2,display_laptime@lap
  1822  00471A  C07A  F032         	movff	main@lap_time+3,display_laptime@lap+1
  1823  00471E  C087  F033         	movff	main@lap_time+16,display_laptime@best_lap
  1824  004722  C088  F034         	movff	main@lap_time+17,display_laptime@best_lap+1
  1825  004726  EC38  F012         	call	_display_laptime	;wreg free
  1826                           
  1827                           ;main.c: 156: display_message(message);
  1828  00472A  C062  F025         	movff	main@message,display_message@message
  1829  00472E  C063  F026         	movff	main@message+1,display_message@message+1
  1830  004732  EC05  F02A         	call	_display_message	;wreg free
  1831                           
  1832                           ;main.c: 157: display_end();
  1833  004736  EC4D  F030         	call	_display_end	;wreg free
  1834                           
  1835                           ;main.c: 158: if(rpm == 0 && !timer_started) {
  1836  00473A  0100               	movlb	0	; () banked
  1837  00473C  5175               	movf	main@rpm& (0+255),w,b
  1838  00473E  0100               	movlb	0	; () banked
  1839  004740  1176               	iorwf	(main@rpm+1)& (0+255),w,b
  1840  004742  A4D8               	btfss	status,2,c
  1841  004744  D00B               	goto	l5271
  1842                           
  1843                           ; BSR set to: 0
  1844  004746  0100               	movlb	0	; () banked
  1845  004748  5166               	movf	main@timer_started& (0+255),w,b
  1846  00474A  0100               	movlb	0	; () banked
  1847  00474C  A4D8               	btfss	status,2,c
  1848  00474E  D006               	goto	l5271
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;main.c: 159: TMR0_StartTimer();
  1852  004750  EC1E  F032         	call	_TMR0_StartTimer	;wreg free
  1853                           
  1854                           ;main.c: 160: timer_started = 1;
  1855  004754  0E01               	movlw	1
  1856  004756  0100               	movlb	0	; () banked
  1857  004758  6F66               	movwf	main@timer_started& (0+255),b
  1858                           
  1859                           ;main.c: 161: } else {
  1860  00475A  D007               	goto	l5279
  1861  00475C                     l5271:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;main.c: 162: TMR0_StopTimer();
  1865  00475C  EC1A  F032         	call	_TMR0_StopTimer	;wreg free
  1866                           
  1867                           ;main.c: 163: timer_started = 0;
  1868  004760  0E00               	movlw	0
  1869  004762  0100               	movlb	0	; () banked
  1870  004764  6F66               	movwf	main@timer_started& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           
  1874                           ; BSR set to: 0
  1875                           
  1876                           ;main.c: 164: do { LATAbits.LATA1 = 0; } while(0);
  1877  004766  9289               	bcf	3977,1,c	;volatile
  1878                           
  1879                           ; BSR set to: 0
  1880                           
  1881                           ; BSR set to: 0
  1882                           
  1883                           ;main.c: 165: do { LATDbits.LATD4 = 0; } while(0);
  1884                           
  1885                           ; BSR set to: 0
  1886  004768  988C               	bcf	3980,4,c	;volatile
  1887  00476A                     l5279:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;main.c: 166: }
  1891                           ;main.c: 167: refresh_screen = 0;
  1892  00476A  0E00               	movlw	0
  1893  00476C  0100               	movlb	0	; () banked
  1894  00476E  6FA3               	movwf	_refresh_screen& (0+255),b
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;main.c: 168: TMR1_Reload();
  1898  004770  EC07  F032         	call	_TMR1_Reload	;wreg free
  1899  004774  D5FE               	goto	l5193
  1900  004776                     __end_of_main:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           intcon	equ	0xFF2
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postdec1	equ	0xFE5
  1910                           plusw1	equ	0xFE3
  1911                           fsr1l	equ	0xFE1
  1912                           plusw2	equ	0xFDB
  1913                           status	equ	0xFD8
  1914                           
  1915 ;; *************** function _wait2secs *****************
  1916 ;; Defined at:
  1917 ;;		line 25 in file "main.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    3
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text1
  1946  006394                     __ptext1:
  1947                           	opt stack 0
  1948  006394                     _wait2secs:
  1949                           	opt stack 27
  1950                           
  1951                           ;main.c: 26: _delay((unsigned long)((2000)*(64000000/4000.0)));
  1952                           
  1953                           ;incstack = 0
  1954  006394  0EA3               	movlw	163
  1955  006396  6E11               	movwf	(??_wait2secs+1)& (0+255),c
  1956  006398  0E57               	movlw	87
  1957  00639A  6E10               	movwf	??_wait2secs& (0+255),c
  1958  00639C  0E02               	movlw	2
  1959  00639E                     u1367:
  1960  00639E  2EE8               	decfsz	wreg,f,c
  1961  0063A0  D7FE               	bra	u1367
  1962  0063A2  2E10               	decfsz	??_wait2secs& (0+255),f,c
  1963  0063A4  D7FC               	bra	u1367
  1964  0063A6  2E11               	decfsz	(??_wait2secs+1)& (0+255),f,c
  1965  0063A8  D7FA               	bra	u1367
  1966  0063AA  D000               	nop2	
  1967  0063AC  0012               	return		;funcret
  1968  0063AE                     __end_of_wait2secs:
  1969                           	opt stack 0
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           intcon	equ	0xFF2
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           plusw1	equ	0xFE3
  1979                           fsr1l	equ	0xFE1
  1980                           plusw2	equ	0xFDB
  1981                           status	equ	0xFD8
  1982                           
  1983 ;; *************** function _display_laptime *****************
  1984 ;; Defined at:
  1985 ;;		line 72 in file "display.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  current_int     2   36[COMRAM] int 
  1988 ;;  current_dec     2   38[COMRAM] int 
  1989 ;;  best_int        2   40[COMRAM] int 
  1990 ;;  best_dec        2   42[COMRAM] int 
  1991 ;;  last_int        2   44[COMRAM] int 
  1992 ;;  last_dec        2   46[COMRAM] int 
  1993 ;;  lap             2   48[COMRAM] int 
  1994 ;;  best_lap        2   50[COMRAM] int 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2006 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2008 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;Total ram usage:       19 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    6
  2013 ;; This function calls:
  2014 ;;		_cmd
  2015 ;;		_cmd_incrementn
  2016 ;;		_wr16
  2017 ;;		_wr8s
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text2
  2024  002470                     __ptext2:
  2025                           	opt stack 0
  2026  002470                     _display_laptime:
  2027                           	opt stack 24
  2028                           
  2029                           ;display.c: 73: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2030                           
  2031                           ;incstack = 0
  2032  002470  0E00               	movlw	0
  2033  002472  6E1E               	movwf	cmd@command,c
  2034  002474  0E00               	movlw	0
  2035  002476  6E1F               	movwf	cmd@command+1,c
  2036  002478  0EFF               	movlw	255
  2037  00247A  6E20               	movwf	cmd@command+2,c
  2038  00247C  0E04               	movlw	4
  2039  00247E  6E21               	movwf	cmd@command+3,c
  2040  002480  EC06  F031         	call	_cmd	;wreg free
  2041                           
  2042                           ;display.c: 74: cmd(((31UL<<24)|(((8UL)&15UL)<<0)));
  2043  002484  0E08               	movlw	8
  2044  002486  6E1E               	movwf	cmd@command,c
  2045  002488  0E00               	movlw	0
  2046  00248A  6E1F               	movwf	cmd@command+1,c
  2047  00248C  0E00               	movlw	0
  2048  00248E  6E20               	movwf	cmd@command+2,c
  2049  002490  0E1F               	movlw	31
  2050  002492  6E21               	movwf	cmd@command+3,c
  2051  002494  EC06  F031         	call	_cmd	;wreg free
  2052                           
  2053                           ;display.c: 75: cmd(((2UL<<30)|(((0)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|(((
      +                          0)&127UL)<<0)));
  2054  002498  0E00               	movlw	0
  2055  00249A  6E1E               	movwf	cmd@command,c
  2056  00249C  0E80               	movlw	128
  2057  00249E  6E1F               	movwf	cmd@command+1,c
  2058  0024A0  0E0C               	movlw	12
  2059  0024A2  6E20               	movwf	cmd@command+2,c
  2060  0024A4  0E80               	movlw	128
  2061  0024A6  6E21               	movwf	cmd@command+3,c
  2062  0024A8  EC06  F031         	call	_cmd	;wreg free
  2063                           
  2064                           ;display.c: 76: cmd(((2UL<<30)|(((187)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2065  0024AC  0E00               	movlw	0
  2066  0024AE  6E1E               	movwf	cmd@command,c
  2067  0024B0  0E80               	movlw	128
  2068  0024B2  6E1F               	movwf	cmd@command+1,c
  2069  0024B4  0E6C               	movlw	108
  2070  0024B6  6E20               	movwf	cmd@command+2,c
  2071  0024B8  0E97               	movlw	151
  2072  0024BA  6E21               	movwf	cmd@command+3,c
  2073  0024BC  EC06  F031         	call	_cmd	;wreg free
  2074                           
  2075                           ;display.c: 77: cmd(((2UL<<30)|(((216)&511UL)<<21)|(((173)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2076  0024C0  0E00               	movlw	0
  2077  0024C2  6E1E               	movwf	cmd@command,c
  2078  0024C4  0ED0               	movlw	208
  2079  0024C6  6E1F               	movwf	cmd@command+1,c
  2080  0024C8  0E0A               	movlw	10
  2081  0024CA  6E20               	movwf	cmd@command+2,c
  2082  0024CC  0E9B               	movlw	155
  2083  0024CE  6E21               	movwf	cmd@command+3,c
  2084  0024D0  EC06  F031         	call	_cmd	;wreg free
  2085                           
  2086                           ;display.c: 78: cmd(((2UL<<30)|(((263)&511UL)<<21)|(((173)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2087  0024D4  0E00               	movlw	0
  2088  0024D6  6E1E               	movwf	cmd@command,c
  2089  0024D8  0ED0               	movlw	208
  2090  0024DA  6E1F               	movwf	cmd@command+1,c
  2091  0024DC  0EEA               	movlw	234
  2092  0024DE  6E20               	movwf	cmd@command+2,c
  2093  0024E0  0EA0               	movlw	160
  2094  0024E2  6E21               	movwf	cmd@command+3,c
  2095  0024E4  EC06  F031         	call	_cmd	;wreg free
  2096                           
  2097                           ;display.c: 79: cmd(((2UL<<30)|(((292)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2098  0024E8  0E00               	movlw	0
  2099  0024EA  6E1E               	movwf	cmd@command,c
  2100  0024EC  0E80               	movlw	128
  2101  0024EE  6E1F               	movwf	cmd@command+1,c
  2102  0024F0  0E8C               	movlw	140
  2103  0024F2  6E20               	movwf	cmd@command+2,c
  2104  0024F4  0EA4               	movlw	164
  2105  0024F6  6E21               	movwf	cmd@command+3,c
  2106  0024F8  EC06  F031         	call	_cmd	;wreg free
  2107                           
  2108                           ;display.c: 80: cmd(((2UL<<30)|(((480)&511UL)<<21)|(((200)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2109  0024FC  0E00               	movlw	0
  2110  0024FE  6E1E               	movwf	cmd@command,c
  2111  002500  0E80               	movlw	128
  2112  002502  6E1F               	movwf	cmd@command+1,c
  2113  002504  0E0C               	movlw	12
  2114  002506  6E20               	movwf	cmd@command+2,c
  2115  002508  0EBC               	movlw	188
  2116  00250A  6E21               	movwf	cmd@command+3,c
  2117  00250C  EC06  F031         	call	_cmd	;wreg free
  2118                           
  2119                           ;display.c: 82: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  2120  002510  0E00               	movlw	0
  2121  002512  6E1E               	movwf	cmd@command,c
  2122  002514  0E00               	movlw	0
  2123  002516  6E1F               	movwf	cmd@command+1,c
  2124  002518  0E00               	movlw	0
  2125  00251A  6E20               	movwf	cmd@command+2,c
  2126  00251C  0E04               	movlw	4
  2127  00251E  6E21               	movwf	cmd@command+3,c
  2128  002520  EC06  F031         	call	_cmd	;wreg free
  2129                           
  2130                           ;display.c: 83: cmd(((31UL<<24)|(((8UL)&15UL)<<0)));
  2131  002524  0E08               	movlw	8
  2132  002526  6E1E               	movwf	cmd@command,c
  2133  002528  0E00               	movlw	0
  2134  00252A  6E1F               	movwf	cmd@command+1,c
  2135  00252C  0E00               	movlw	0
  2136  00252E  6E20               	movwf	cmd@command+2,c
  2137  002530  0E1F               	movlw	31
  2138  002532  6E21               	movwf	cmd@command+3,c
  2139  002534  EC06  F031         	call	_cmd	;wreg free
  2140                           
  2141                           ;display.c: 84: cmd(((2UL<<30)|(((0)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<<7)|(((
      +                          0)&127UL)<<0)));
  2142  002538  0E00               	movlw	0
  2143  00253A  6E1E               	movwf	cmd@command,c
  2144  00253C  0ED0               	movlw	208
  2145  00253E  6E1F               	movwf	cmd@command+1,c
  2146  002540  0E0C               	movlw	12
  2147  002542  6E20               	movwf	cmd@command+2,c
  2148  002544  0E80               	movlw	128
  2149  002546  6E21               	movwf	cmd@command+3,c
  2150  002548  EC06  F031         	call	_cmd	;wreg free
  2151                           
  2152                           ;display.c: 85: cmd(((2UL<<30)|(((189)&511UL)<<21)|(((204)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2153  00254C  0E00               	movlw	0
  2154  00254E  6E1E               	movwf	cmd@command,c
  2155  002550  0EC0               	movlw	192
  2156  002552  6E1F               	movwf	cmd@command+1,c
  2157  002554  0EAC               	movlw	172
  2158  002556  6E20               	movwf	cmd@command+2,c
  2159  002558  0E97               	movlw	151
  2160  00255A  6E21               	movwf	cmd@command+3,c
  2161  00255C  EC06  F031         	call	_cmd	;wreg free
  2162                           
  2163                           ;display.c: 86: cmd(((2UL<<30)|(((217)&511UL)<<21)|(((177)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2164  002560  0E00               	movlw	0
  2165  002562  6E1E               	movwf	cmd@command,c
  2166  002564  0E10               	movlw	16
  2167  002566  6E1F               	movwf	cmd@command+1,c
  2168  002568  0E2B               	movlw	43
  2169  00256A  6E20               	movwf	cmd@command+2,c
  2170  00256C  0E9B               	movlw	155
  2171  00256E  6E21               	movwf	cmd@command+3,c
  2172  002570  EC06  F031         	call	_cmd	;wreg free
  2173                           
  2174                           ;display.c: 87: cmd(((2UL<<30)|(((261)&511UL)<<21)|(((177)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2175  002574  0E00               	movlw	0
  2176  002576  6E1E               	movwf	cmd@command,c
  2177  002578  0E10               	movlw	16
  2178  00257A  6E1F               	movwf	cmd@command+1,c
  2179  00257C  0EAB               	movlw	171
  2180  00257E  6E20               	movwf	cmd@command+2,c
  2181  002580  0EA0               	movlw	160
  2182  002582  6E21               	movwf	cmd@command+3,c
  2183  002584  EC06  F031         	call	_cmd	;wreg free
  2184                           
  2185                           ;display.c: 88: cmd(((2UL<<30)|(((289)&511UL)<<21)|(((204)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2186  002588  0E00               	movlw	0
  2187  00258A  6E1E               	movwf	cmd@command,c
  2188  00258C  0EC0               	movlw	192
  2189  00258E  6E1F               	movwf	cmd@command+1,c
  2190  002590  0E2C               	movlw	44
  2191  002592  6E20               	movwf	cmd@command+2,c
  2192  002594  0EA4               	movlw	164
  2193  002596  6E21               	movwf	cmd@command+3,c
  2194  002598  EC06  F031         	call	_cmd	;wreg free
  2195                           
  2196                           ;display.c: 89: cmd(((2UL<<30)|(((483)&511UL)<<21)|(((205)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  2197  00259C  0E00               	movlw	0
  2198  00259E  6E1E               	movwf	cmd@command,c
  2199  0025A0  0ED0               	movlw	208
  2200  0025A2  6E1F               	movwf	cmd@command+1,c
  2201  0025A4  0E6C               	movlw	108
  2202  0025A6  6E20               	movwf	cmd@command+2,c
  2203  0025A8  0EBC               	movlw	188
  2204  0025AA  6E21               	movwf	cmd@command+3,c
  2205  0025AC  EC06  F031         	call	_cmd	;wreg free
  2206                           
  2207                           ;display.c: 92: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<<0)))
      +                          ;
  2208  0025B0  0E00               	movlw	0
  2209  0025B2  6E1E               	movwf	cmd@command,c
  2210  0025B4  0E7D               	movlw	125
  2211  0025B6  6E1F               	movwf	cmd@command+1,c
  2212  0025B8  0EFF               	movlw	255
  2213  0025BA  6E20               	movwf	cmd@command+2,c
  2214  0025BC  0E04               	movlw	4
  2215  0025BE  6E21               	movwf	cmd@command+3,c
  2216  0025C0  EC06  F031         	call	_cmd	;wreg free
  2217                           
  2218                           ;display.c: 93: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, 207);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_o
      +                          ff
  2219  0025C4  0E0C               	movlw	12
  2220  0025C6  6E1E               	movwf	cmd@command,c
  2221  0025C8  0EFF               	movlw	255
  2222  0025CA  6E1F               	movwf	cmd@command+1,c
  2223  0025CC  0EFF               	movlw	255
  2224  0025CE  6E20               	movwf	cmd@command+2,c
  2225  0025D0  0EFF               	movlw	255
  2226  0025D2  6E21               	movwf	cmd@command+3,c
  2227  0025D4  EC06  F031         	call	_cmd	;wreg free
  2228  0025D8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2229  0025DC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2230  0025E0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2231  0025E2  0E00               	movlw	0
  2232  0025E4  2435               	addwf	??_display_laptime,w,c
  2233  0025E6  6E11               	movwf	wr16@addr,c
  2234  0025E8  0E80               	movlw	128
  2235  0025EA  2036               	addwfc	??_display_laptime+1,w,c
  2236  0025EC  6E12               	movwf	wr16@addr+1,c
  2237  0025EE  0E10               	movlw	16
  2238  0025F0  2037               	addwfc	??_display_laptime+2,w,c
  2239  0025F2  6E13               	movwf	wr16@addr+2,c
  2240  0025F4  0E00               	movlw	0
  2241  0025F6  6E15               	movwf	wr16@value+1,c
  2242  0025F8  0E05               	movlw	5
  2243  0025FA  6E14               	movwf	wr16@value,c
  2244  0025FC  ECCB  F030         	call	_wr16	;wreg free
  2245  002600  0E02               	movlw	2
  2246  002602  ECBC  F031         	call	_cmd_incrementn
  2247  002606  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2248  00260A  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2249  00260E  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2250  002610  0E00               	movlw	0
  2251  002612  2435               	addwf	??_display_laptime,w,c
  2252  002614  6E11               	movwf	wr16@addr,c
  2253  002616  0E80               	movlw	128
  2254  002618  2036               	addwfc	??_display_laptime+1,w,c
  2255  00261A  6E12               	movwf	wr16@addr+1,c
  2256  00261C  0E10               	movlw	16
  2257  00261E  2037               	addwfc	??_display_laptime+2,w,c
  2258  002620  6E13               	movwf	wr16@addr+2,c
  2259  002622  0E00               	movlw	0
  2260  002624  6E15               	movwf	wr16@value+1,c
  2261  002626  0ECF               	movlw	207
  2262  002628  6E14               	movwf	wr16@value,c
  2263  00262A  ECCB  F030         	call	_wr16	;wreg free
  2264  00262E  0E02               	movlw	2
  2265  002630  ECBC  F031         	call	_cmd_incrementn
  2266  002634  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2267  002638  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2268  00263C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2269  00263E  0E00               	movlw	0
  2270  002640  2435               	addwf	??_display_laptime,w,c
  2271  002642  6E11               	movwf	wr16@addr,c
  2272  002644  0E80               	movlw	128
  2273  002646  2036               	addwfc	??_display_laptime+1,w,c
  2274  002648  6E12               	movwf	wr16@addr+1,c
  2275  00264A  0E10               	movlw	16
  2276  00264C  2037               	addwfc	??_display_laptime+2,w,c
  2277  00264E  6E13               	movwf	wr16@addr+2,c
  2278  002650  0E00               	movlw	0
  2279  002652  6E15               	movwf	wr16@value+1,c
  2280  002654  0E1B               	movlw	27
  2281  002656  6E14               	movwf	wr16@value,c
  2282  002658  ECCB  F030         	call	_wr16	;wreg free
  2283  00265C  0E02               	movlw	2
  2284  00265E  ECBC  F031         	call	_cmd_incrementn
  2285  002662  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2286  002666  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2287  00266A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2288  00266C  0E00               	movlw	0
  2289  00266E  2435               	addwf	??_display_laptime,w,c
  2290  002670  6E11               	movwf	wr16@addr,c
  2291  002672  0E80               	movlw	128
  2292  002674  2036               	addwfc	??_display_laptime+1,w,c
  2293  002676  6E12               	movwf	wr16@addr+1,c
  2294  002678  0E10               	movlw	16
  2295  00267A  2037               	addwfc	??_display_laptime+2,w,c
  2296  00267C  6E13               	movwf	wr16@addr+2,c
  2297  00267E  0E00               	movlw	0
  2298  002680  6E15               	movwf	wr16@value+1,c
  2299  002682  0E00               	movlw	0
  2300  002684  6E14               	movwf	wr16@value,c
  2301  002686  ECCB  F030         	call	_wr16	;wreg free
  2302  00268A  0E02               	movlw	2
  2303  00268C  ECBC  F031         	call	_cmd_incrementn
  2304  002690  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2305  002694  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2306  002698  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2307  00269A  0E00               	movlw	0
  2308  00269C  2435               	addwf	??_display_laptime,w,c
  2309  00269E  6E16               	movwf	wr8s@addr,c
  2310  0026A0  0E80               	movlw	128
  2311  0026A2  2036               	addwfc	??_display_laptime+1,w,c
  2312  0026A4  6E17               	movwf	wr8s@addr+1,c
  2313  0026A6  0E10               	movlw	16
  2314  0026A8  2037               	addwfc	??_display_laptime+2,w,c
  2315  0026AA  6E18               	movwf	wr8s@addr+2,c
  2316  0026AC  0E4A               	movlw	low STR_16
  2317  0026AE  6E19               	movwf	wr8s@s,c
  2318  0026B0  0E0F               	movlw	high STR_16
  2319  0026B2  6E1A               	movwf	wr8s@s+1,c
  2320  0026B4  EC81  F02E         	call	_wr8s	;wreg free
  2321  0026B8  ECBC  F031         	call	_cmd_incrementn
  2322                           
  2323                           ;display.c: 94: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 66);cmd_incrementn(2);wr16(
      +                          1081344UL+cmd_offset, 217);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd(lap);
  2324  0026BC  0E2E               	movlw	46
  2325  0026BE  6E1E               	movwf	cmd@command,c
  2326  0026C0  0EFF               	movlw	255
  2327  0026C2  6E1F               	movwf	cmd@command+1,c
  2328  0026C4  0EFF               	movlw	255
  2329  0026C6  6E20               	movwf	cmd@command+2,c
  2330  0026C8  0EFF               	movlw	255
  2331  0026CA  6E21               	movwf	cmd@command+3,c
  2332  0026CC  EC06  F031         	call	_cmd	;wreg free
  2333  0026D0  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2334  0026D4  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2335  0026D8  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2336  0026DA  0E00               	movlw	0
  2337  0026DC  2435               	addwf	??_display_laptime,w,c
  2338  0026DE  6E11               	movwf	wr16@addr,c
  2339  0026E0  0E80               	movlw	128
  2340  0026E2  2036               	addwfc	??_display_laptime+1,w,c
  2341  0026E4  6E12               	movwf	wr16@addr+1,c
  2342  0026E6  0E10               	movlw	16
  2343  0026E8  2037               	addwfc	??_display_laptime+2,w,c
  2344  0026EA  6E13               	movwf	wr16@addr+2,c
  2345  0026EC  0E00               	movlw	0
  2346  0026EE  6E15               	movwf	wr16@value+1,c
  2347  0026F0  0E42               	movlw	66
  2348  0026F2  6E14               	movwf	wr16@value,c
  2349  0026F4  ECCB  F030         	call	_wr16	;wreg free
  2350  0026F8  0E02               	movlw	2
  2351  0026FA  ECBC  F031         	call	_cmd_incrementn
  2352  0026FE  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2353  002702  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2354  002706  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2355  002708  0E00               	movlw	0
  2356  00270A  2435               	addwf	??_display_laptime,w,c
  2357  00270C  6E11               	movwf	wr16@addr,c
  2358  00270E  0E80               	movlw	128
  2359  002710  2036               	addwfc	??_display_laptime+1,w,c
  2360  002712  6E12               	movwf	wr16@addr+1,c
  2361  002714  0E10               	movlw	16
  2362  002716  2037               	addwfc	??_display_laptime+2,w,c
  2363  002718  6E13               	movwf	wr16@addr+2,c
  2364  00271A  0E00               	movlw	0
  2365  00271C  6E15               	movwf	wr16@value+1,c
  2366  00271E  0ED9               	movlw	217
  2367  002720  6E14               	movwf	wr16@value,c
  2368  002722  ECCB  F030         	call	_wr16	;wreg free
  2369  002726  0E02               	movlw	2
  2370  002728  ECBC  F031         	call	_cmd_incrementn
  2371  00272C  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2372  002730  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2373  002734  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2374  002736  0E00               	movlw	0
  2375  002738  2435               	addwf	??_display_laptime,w,c
  2376  00273A  6E11               	movwf	wr16@addr,c
  2377  00273C  0E80               	movlw	128
  2378  00273E  2036               	addwfc	??_display_laptime+1,w,c
  2379  002740  6E12               	movwf	wr16@addr+1,c
  2380  002742  0E10               	movlw	16
  2381  002744  2037               	addwfc	??_display_laptime+2,w,c
  2382  002746  6E13               	movwf	wr16@addr+2,c
  2383  002748  0E00               	movlw	0
  2384  00274A  6E15               	movwf	wr16@value+1,c
  2385  00274C  0E1B               	movlw	27
  2386  00274E  6E14               	movwf	wr16@value,c
  2387  002750  ECCB  F030         	call	_wr16	;wreg free
  2388  002754  0E02               	movlw	2
  2389  002756  ECBC  F031         	call	_cmd_incrementn
  2390  00275A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2391  00275E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2392  002762  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2393  002764  0E00               	movlw	0
  2394  002766  2435               	addwf	??_display_laptime,w,c
  2395  002768  6E11               	movwf	wr16@addr,c
  2396  00276A  0E80               	movlw	128
  2397  00276C  2036               	addwfc	??_display_laptime+1,w,c
  2398  00276E  6E12               	movwf	wr16@addr+1,c
  2399  002770  0E10               	movlw	16
  2400  002772  2037               	addwfc	??_display_laptime+2,w,c
  2401  002774  6E13               	movwf	wr16@addr+2,c
  2402  002776  0E06               	movlw	6
  2403  002778  6E15               	movwf	wr16@value+1,c
  2404  00277A  0E00               	movlw	0
  2405  00277C  6E14               	movwf	wr16@value,c
  2406  00277E  ECCB  F030         	call	_wr16	;wreg free
  2407  002782  0E02               	movlw	2
  2408  002784  ECBC  F031         	call	_cmd_incrementn
  2409  002788  C031  F01E         	movff	display_laptime@lap,cmd@command
  2410  00278C  C032  F01F         	movff	display_laptime@lap+1,cmd@command+1
  2411  002790  0E00               	movlw	0
  2412  002792  BE1F               	btfsc	cmd@command+1,7,c
  2413  002794  0EFF               	movlw	-1
  2414  002796  6E20               	movwf	cmd@command+2,c
  2415  002798  6E21               	movwf	cmd@command+3,c
  2416  00279A  EC06  F031         	call	_cmd	;wreg free
  2417                           
  2418                           ;display.c: 95: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 448);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 207);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+
  2419  00279E  0E0C               	movlw	12
  2420  0027A0  6E1E               	movwf	cmd@command,c
  2421  0027A2  0EFF               	movlw	255
  2422  0027A4  6E1F               	movwf	cmd@command+1,c
  2423  0027A6  0EFF               	movlw	255
  2424  0027A8  6E20               	movwf	cmd@command+2,c
  2425  0027AA  0EFF               	movlw	255
  2426  0027AC  6E21               	movwf	cmd@command+3,c
  2427  0027AE  EC06  F031         	call	_cmd	;wreg free
  2428  0027B2  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2429  0027B6  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2430  0027BA  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2431  0027BC  0E00               	movlw	0
  2432  0027BE  2435               	addwf	??_display_laptime,w,c
  2433  0027C0  6E11               	movwf	wr16@addr,c
  2434  0027C2  0E80               	movlw	128
  2435  0027C4  2036               	addwfc	??_display_laptime+1,w,c
  2436  0027C6  6E12               	movwf	wr16@addr+1,c
  2437  0027C8  0E10               	movlw	16
  2438  0027CA  2037               	addwfc	??_display_laptime+2,w,c
  2439  0027CC  6E13               	movwf	wr16@addr+2,c
  2440  0027CE  0E01               	movlw	1
  2441  0027D0  6E15               	movwf	wr16@value+1,c
  2442  0027D2  0EC0               	movlw	192
  2443  0027D4  6E14               	movwf	wr16@value,c
  2444  0027D6  ECCB  F030         	call	_wr16	;wreg free
  2445  0027DA  0E02               	movlw	2
  2446  0027DC  ECBC  F031         	call	_cmd_incrementn
  2447  0027E0  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2448  0027E4  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2449  0027E8  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2450  0027EA  0E00               	movlw	0
  2451  0027EC  2435               	addwf	??_display_laptime,w,c
  2452  0027EE  6E11               	movwf	wr16@addr,c
  2453  0027F0  0E80               	movlw	128
  2454  0027F2  2036               	addwfc	??_display_laptime+1,w,c
  2455  0027F4  6E12               	movwf	wr16@addr+1,c
  2456  0027F6  0E10               	movlw	16
  2457  0027F8  2037               	addwfc	??_display_laptime+2,w,c
  2458  0027FA  6E13               	movwf	wr16@addr+2,c
  2459  0027FC  0E00               	movlw	0
  2460  0027FE  6E15               	movwf	wr16@value+1,c
  2461  002800  0ECF               	movlw	207
  2462  002802  6E14               	movwf	wr16@value,c
  2463  002804  ECCB  F030         	call	_wr16	;wreg free
  2464  002808  0E02               	movlw	2
  2465  00280A  ECBC  F031         	call	_cmd_incrementn
  2466  00280E  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2467  002812  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2468  002816  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2469  002818  0E00               	movlw	0
  2470  00281A  2435               	addwf	??_display_laptime,w,c
  2471  00281C  6E11               	movwf	wr16@addr,c
  2472  00281E  0E80               	movlw	128
  2473  002820  2036               	addwfc	??_display_laptime+1,w,c
  2474  002822  6E12               	movwf	wr16@addr+1,c
  2475  002824  0E10               	movlw	16
  2476  002826  2037               	addwfc	??_display_laptime+2,w,c
  2477  002828  6E13               	movwf	wr16@addr+2,c
  2478  00282A  0E00               	movlw	0
  2479  00282C  6E15               	movwf	wr16@value+1,c
  2480  00282E  0E1B               	movlw	27
  2481  002830  6E14               	movwf	wr16@value,c
  2482  002832  ECCB  F030         	call	_wr16	;wreg free
  2483  002836  0E02               	movlw	2
  2484  002838  ECBC  F031         	call	_cmd_incrementn
  2485  00283C  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2486  002840  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2487  002844  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2488  002846  0E00               	movlw	0
  2489  002848  2435               	addwf	??_display_laptime,w,c
  2490  00284A  6E11               	movwf	wr16@addr,c
  2491  00284C  0E80               	movlw	128
  2492  00284E  2036               	addwfc	??_display_laptime+1,w,c
  2493  002850  6E12               	movwf	wr16@addr+1,c
  2494  002852  0E10               	movlw	16
  2495  002854  2037               	addwfc	??_display_laptime+2,w,c
  2496  002856  6E13               	movwf	wr16@addr+2,c
  2497  002858  0E08               	movlw	8
  2498  00285A  6E15               	movwf	wr16@value+1,c
  2499  00285C  0E00               	movlw	0
  2500  00285E  6E14               	movwf	wr16@value,c
  2501  002860  ECCB  F030         	call	_wr16	;wreg free
  2502  002864  0E02               	movlw	2
  2503  002866  ECBC  F031         	call	_cmd_incrementn
  2504  00286A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2505  00286E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2506  002872  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2507  002874  0E00               	movlw	0
  2508  002876  2435               	addwf	??_display_laptime,w,c
  2509  002878  6E16               	movwf	wr8s@addr,c
  2510  00287A  0E80               	movlw	128
  2511  00287C  2036               	addwfc	??_display_laptime+1,w,c
  2512  00287E  6E17               	movwf	wr8s@addr+1,c
  2513  002880  0E10               	movlw	16
  2514  002882  2037               	addwfc	??_display_laptime+2,w,c
  2515  002884  6E18               	movwf	wr8s@addr+2,c
  2516  002886  0E4F               	movlw	low STR_17
  2517  002888  6E19               	movwf	wr8s@s,c
  2518  00288A  0E0F               	movlw	high STR_17
  2519  00288C  6E1A               	movwf	wr8s@s+1,c
  2520  00288E  EC81  F02E         	call	_wr8s	;wreg free
  2521  002892  ECBC  F031         	call	_cmd_incrementn
  2522                           
  2523                           ;display.c: 96: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 475);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 207);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(best_lap);
  2524  002896  0E2E               	movlw	46
  2525  002898  6E1E               	movwf	cmd@command,c
  2526  00289A  0EFF               	movlw	255
  2527  00289C  6E1F               	movwf	cmd@command+1,c
  2528  00289E  0EFF               	movlw	255
  2529  0028A0  6E20               	movwf	cmd@command+2,c
  2530  0028A2  0EFF               	movlw	255
  2531  0028A4  6E21               	movwf	cmd@command+3,c
  2532  0028A6  EC06  F031         	call	_cmd	;wreg free
  2533  0028AA  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2534  0028AE  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2535  0028B2  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2536  0028B4  0E00               	movlw	0
  2537  0028B6  2435               	addwf	??_display_laptime,w,c
  2538  0028B8  6E11               	movwf	wr16@addr,c
  2539  0028BA  0E80               	movlw	128
  2540  0028BC  2036               	addwfc	??_display_laptime+1,w,c
  2541  0028BE  6E12               	movwf	wr16@addr+1,c
  2542  0028C0  0E10               	movlw	16
  2543  0028C2  2037               	addwfc	??_display_laptime+2,w,c
  2544  0028C4  6E13               	movwf	wr16@addr+2,c
  2545  0028C6  0E01               	movlw	1
  2546  0028C8  6E15               	movwf	wr16@value+1,c
  2547  0028CA  0EDB               	movlw	219
  2548  0028CC  6E14               	movwf	wr16@value,c
  2549  0028CE  ECCB  F030         	call	_wr16	;wreg free
  2550  0028D2  0E02               	movlw	2
  2551  0028D4  ECBC  F031         	call	_cmd_incrementn
  2552  0028D8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2553  0028DC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2554  0028E0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2555  0028E2  0E00               	movlw	0
  2556  0028E4  2435               	addwf	??_display_laptime,w,c
  2557  0028E6  6E11               	movwf	wr16@addr,c
  2558  0028E8  0E80               	movlw	128
  2559  0028EA  2036               	addwfc	??_display_laptime+1,w,c
  2560  0028EC  6E12               	movwf	wr16@addr+1,c
  2561  0028EE  0E10               	movlw	16
  2562  0028F0  2037               	addwfc	??_display_laptime+2,w,c
  2563  0028F2  6E13               	movwf	wr16@addr+2,c
  2564  0028F4  0E00               	movlw	0
  2565  0028F6  6E15               	movwf	wr16@value+1,c
  2566  0028F8  0ECF               	movlw	207
  2567  0028FA  6E14               	movwf	wr16@value,c
  2568  0028FC  ECCB  F030         	call	_wr16	;wreg free
  2569  002900  0E02               	movlw	2
  2570  002902  ECBC  F031         	call	_cmd_incrementn
  2571  002906  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2572  00290A  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2573  00290E  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2574  002910  0E00               	movlw	0
  2575  002912  2435               	addwf	??_display_laptime,w,c
  2576  002914  6E11               	movwf	wr16@addr,c
  2577  002916  0E80               	movlw	128
  2578  002918  2036               	addwfc	??_display_laptime+1,w,c
  2579  00291A  6E12               	movwf	wr16@addr+1,c
  2580  00291C  0E10               	movlw	16
  2581  00291E  2037               	addwfc	??_display_laptime+2,w,c
  2582  002920  6E13               	movwf	wr16@addr+2,c
  2583  002922  0E00               	movlw	0
  2584  002924  6E15               	movwf	wr16@value+1,c
  2585  002926  0E1B               	movlw	27
  2586  002928  6E14               	movwf	wr16@value,c
  2587  00292A  ECCB  F030         	call	_wr16	;wreg free
  2588  00292E  0E02               	movlw	2
  2589  002930  ECBC  F031         	call	_cmd_incrementn
  2590  002934  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2591  002938  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2592  00293C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2593  00293E  0E00               	movlw	0
  2594  002940  2435               	addwf	??_display_laptime,w,c
  2595  002942  6E11               	movwf	wr16@addr,c
  2596  002944  0E80               	movlw	128
  2597  002946  2036               	addwfc	??_display_laptime+1,w,c
  2598  002948  6E12               	movwf	wr16@addr+1,c
  2599  00294A  0E10               	movlw	16
  2600  00294C  2037               	addwfc	??_display_laptime+2,w,c
  2601  00294E  6E13               	movwf	wr16@addr+2,c
  2602  002950  0E08               	movlw	8
  2603  002952  6E15               	movwf	wr16@value+1,c
  2604  002954  0E00               	movlw	0
  2605  002956  6E14               	movwf	wr16@value,c
  2606  002958  ECCB  F030         	call	_wr16	;wreg free
  2607  00295C  0E02               	movlw	2
  2608  00295E  ECBC  F031         	call	_cmd_incrementn
  2609  002962  C033  F01E         	movff	display_laptime@best_lap,cmd@command
  2610  002966  C034  F01F         	movff	display_laptime@best_lap+1,cmd@command+1
  2611  00296A  0E00               	movlw	0
  2612  00296C  BE1F               	btfsc	cmd@command+1,7,c
  2613  00296E  0EFF               	movlw	-1
  2614  002970  6E20               	movwf	cmd@command+2,c
  2615  002972  6E21               	movwf	cmd@command+3,c
  2616  002974  EC06  F031         	call	_cmd	;wreg free
  2617                           
  2618                           ;display.c: 97: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 165);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 27);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+
  2619  002978  0E0C               	movlw	12
  2620  00297A  6E1E               	movwf	cmd@command,c
  2621  00297C  0EFF               	movlw	255
  2622  00297E  6E1F               	movwf	cmd@command+1,c
  2623  002980  0EFF               	movlw	255
  2624  002982  6E20               	movwf	cmd@command+2,c
  2625  002984  0EFF               	movlw	255
  2626  002986  6E21               	movwf	cmd@command+3,c
  2627  002988  EC06  F031         	call	_cmd	;wreg free
  2628  00298C  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2629  002990  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2630  002994  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2631  002996  0E00               	movlw	0
  2632  002998  2435               	addwf	??_display_laptime,w,c
  2633  00299A  6E11               	movwf	wr16@addr,c
  2634  00299C  0E80               	movlw	128
  2635  00299E  2036               	addwfc	??_display_laptime+1,w,c
  2636  0029A0  6E12               	movwf	wr16@addr+1,c
  2637  0029A2  0E10               	movlw	16
  2638  0029A4  2037               	addwfc	??_display_laptime+2,w,c
  2639  0029A6  6E13               	movwf	wr16@addr+2,c
  2640  0029A8  0E00               	movlw	0
  2641  0029AA  6E15               	movwf	wr16@value+1,c
  2642  0029AC  0EF0               	movlw	240
  2643  0029AE  6E14               	movwf	wr16@value,c
  2644  0029B0  ECCB  F030         	call	_wr16	;wreg free
  2645  0029B4  0E02               	movlw	2
  2646  0029B6  ECBC  F031         	call	_cmd_incrementn
  2647  0029BA  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2648  0029BE  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2649  0029C2  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2650  0029C4  0E00               	movlw	0
  2651  0029C6  2435               	addwf	??_display_laptime,w,c
  2652  0029C8  6E11               	movwf	wr16@addr,c
  2653  0029CA  0E80               	movlw	128
  2654  0029CC  2036               	addwfc	??_display_laptime+1,w,c
  2655  0029CE  6E12               	movwf	wr16@addr+1,c
  2656  0029D0  0E10               	movlw	16
  2657  0029D2  2037               	addwfc	??_display_laptime+2,w,c
  2658  0029D4  6E13               	movwf	wr16@addr+2,c
  2659  0029D6  0E00               	movlw	0
  2660  0029D8  6E15               	movwf	wr16@value+1,c
  2661  0029DA  0EA5               	movlw	165
  2662  0029DC  6E14               	movwf	wr16@value,c
  2663  0029DE  ECCB  F030         	call	_wr16	;wreg free
  2664  0029E2  0E02               	movlw	2
  2665  0029E4  ECBC  F031         	call	_cmd_incrementn
  2666  0029E8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2667  0029EC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2668  0029F0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2669  0029F2  0E00               	movlw	0
  2670  0029F4  2435               	addwf	??_display_laptime,w,c
  2671  0029F6  6E11               	movwf	wr16@addr,c
  2672  0029F8  0E80               	movlw	128
  2673  0029FA  2036               	addwfc	??_display_laptime+1,w,c
  2674  0029FC  6E12               	movwf	wr16@addr+1,c
  2675  0029FE  0E10               	movlw	16
  2676  002A00  2037               	addwfc	??_display_laptime+2,w,c
  2677  002A02  6E13               	movwf	wr16@addr+2,c
  2678  002A04  0E00               	movlw	0
  2679  002A06  6E15               	movwf	wr16@value+1,c
  2680  002A08  0E1B               	movlw	27
  2681  002A0A  6E14               	movwf	wr16@value,c
  2682  002A0C  ECCB  F030         	call	_wr16	;wreg free
  2683  002A10  0E02               	movlw	2
  2684  002A12  ECBC  F031         	call	_cmd_incrementn
  2685  002A16  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2686  002A1A  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2687  002A1E  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2688  002A20  0E00               	movlw	0
  2689  002A22  2435               	addwf	??_display_laptime,w,c
  2690  002A24  6E11               	movwf	wr16@addr,c
  2691  002A26  0E80               	movlw	128
  2692  002A28  2036               	addwfc	??_display_laptime+1,w,c
  2693  002A2A  6E12               	movwf	wr16@addr+1,c
  2694  002A2C  0E10               	movlw	16
  2695  002A2E  2037               	addwfc	??_display_laptime+2,w,c
  2696  002A30  6E13               	movwf	wr16@addr+2,c
  2697  002A32  0E06               	movlw	6
  2698  002A34  6E15               	movwf	wr16@value+1,c
  2699  002A36  0E00               	movlw	0
  2700  002A38  6E14               	movwf	wr16@value,c
  2701  002A3A  ECCB  F030         	call	_wr16	;wreg free
  2702  002A3E  0E02               	movlw	2
  2703  002A40  ECBC  F031         	call	_cmd_incrementn
  2704  002A44  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2705  002A48  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2706  002A4C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2707  002A4E  0E00               	movlw	0
  2708  002A50  2435               	addwf	??_display_laptime,w,c
  2709  002A52  6E16               	movwf	wr8s@addr,c
  2710  002A54  0E80               	movlw	128
  2711  002A56  2036               	addwfc	??_display_laptime+1,w,c
  2712  002A58  6E17               	movwf	wr8s@addr+1,c
  2713  002A5A  0E10               	movlw	16
  2714  002A5C  2037               	addwfc	??_display_laptime+2,w,c
  2715  002A5E  6E18               	movwf	wr8s@addr+2,c
  2716  002A60  0E65               	movlw	low STR_18
  2717  002A62  6E19               	movwf	wr8s@s,c
  2718  002A64  0E0F               	movlw	high STR_18
  2719  002A66  6E1A               	movwf	wr8s@s+1,c
  2720  002A68  EC81  F02E         	call	_wr8s	;wreg free
  2721  002A6C  ECBC  F031         	call	_cmd_incrementn
  2722                           
  2723                           ;display.c: 98: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 190);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 29);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd(lap+1);
  2724  002A70  0E2E               	movlw	46
  2725  002A72  6E1E               	movwf	cmd@command,c
  2726  002A74  0EFF               	movlw	255
  2727  002A76  6E1F               	movwf	cmd@command+1,c
  2728  002A78  0EFF               	movlw	255
  2729  002A7A  6E20               	movwf	cmd@command+2,c
  2730  002A7C  0EFF               	movlw	255
  2731  002A7E  6E21               	movwf	cmd@command+3,c
  2732  002A80  EC06  F031         	call	_cmd	;wreg free
  2733  002A84  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2734  002A88  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2735  002A8C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2736  002A8E  0E00               	movlw	0
  2737  002A90  2435               	addwf	??_display_laptime,w,c
  2738  002A92  6E11               	movwf	wr16@addr,c
  2739  002A94  0E80               	movlw	128
  2740  002A96  2036               	addwfc	??_display_laptime+1,w,c
  2741  002A98  6E12               	movwf	wr16@addr+1,c
  2742  002A9A  0E10               	movlw	16
  2743  002A9C  2037               	addwfc	??_display_laptime+2,w,c
  2744  002A9E  6E13               	movwf	wr16@addr+2,c
  2745  002AA0  0E00               	movlw	0
  2746  002AA2  6E15               	movwf	wr16@value+1,c
  2747  002AA4  0EF0               	movlw	240
  2748  002AA6  6E14               	movwf	wr16@value,c
  2749  002AA8  ECCB  F030         	call	_wr16	;wreg free
  2750  002AAC  0E02               	movlw	2
  2751  002AAE  ECBC  F031         	call	_cmd_incrementn
  2752  002AB2  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2753  002AB6  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2754  002ABA  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2755  002ABC  0E00               	movlw	0
  2756  002ABE  2435               	addwf	??_display_laptime,w,c
  2757  002AC0  6E11               	movwf	wr16@addr,c
  2758  002AC2  0E80               	movlw	128
  2759  002AC4  2036               	addwfc	??_display_laptime+1,w,c
  2760  002AC6  6E12               	movwf	wr16@addr+1,c
  2761  002AC8  0E10               	movlw	16
  2762  002ACA  2037               	addwfc	??_display_laptime+2,w,c
  2763  002ACC  6E13               	movwf	wr16@addr+2,c
  2764  002ACE  0E00               	movlw	0
  2765  002AD0  6E15               	movwf	wr16@value+1,c
  2766  002AD2  0EBE               	movlw	190
  2767  002AD4  6E14               	movwf	wr16@value,c
  2768  002AD6  ECCB  F030         	call	_wr16	;wreg free
  2769  002ADA  0E02               	movlw	2
  2770  002ADC  ECBC  F031         	call	_cmd_incrementn
  2771  002AE0  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2772  002AE4  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2773  002AE8  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2774  002AEA  0E00               	movlw	0
  2775  002AEC  2435               	addwf	??_display_laptime,w,c
  2776  002AEE  6E11               	movwf	wr16@addr,c
  2777  002AF0  0E80               	movlw	128
  2778  002AF2  2036               	addwfc	??_display_laptime+1,w,c
  2779  002AF4  6E12               	movwf	wr16@addr+1,c
  2780  002AF6  0E10               	movlw	16
  2781  002AF8  2037               	addwfc	??_display_laptime+2,w,c
  2782  002AFA  6E13               	movwf	wr16@addr+2,c
  2783  002AFC  0E00               	movlw	0
  2784  002AFE  6E15               	movwf	wr16@value+1,c
  2785  002B00  0E1D               	movlw	29
  2786  002B02  6E14               	movwf	wr16@value,c
  2787  002B04  ECCB  F030         	call	_wr16	;wreg free
  2788  002B08  0E02               	movlw	2
  2789  002B0A  ECBC  F031         	call	_cmd_incrementn
  2790  002B0E  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2791  002B12  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2792  002B16  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2793  002B18  0E00               	movlw	0
  2794  002B1A  2435               	addwf	??_display_laptime,w,c
  2795  002B1C  6E11               	movwf	wr16@addr,c
  2796  002B1E  0E80               	movlw	128
  2797  002B20  2036               	addwfc	??_display_laptime+1,w,c
  2798  002B22  6E12               	movwf	wr16@addr+1,c
  2799  002B24  0E10               	movlw	16
  2800  002B26  2037               	addwfc	??_display_laptime+2,w,c
  2801  002B28  6E13               	movwf	wr16@addr+2,c
  2802  002B2A  0E06               	movlw	6
  2803  002B2C  6E15               	movwf	wr16@value+1,c
  2804  002B2E  0E00               	movlw	0
  2805  002B30  6E14               	movwf	wr16@value,c
  2806  002B32  ECCB  F030         	call	_wr16	;wreg free
  2807  002B36  0E02               	movlw	2
  2808  002B38  ECBC  F031         	call	_cmd_incrementn
  2809  002B3C  0E01               	movlw	1
  2810  002B3E  2431               	addwf	display_laptime@lap,w,c
  2811  002B40  6E35               	movwf	??_display_laptime& (0+255),c
  2812  002B42  0E00               	movlw	0
  2813  002B44  2032               	addwfc	display_laptime@lap+1,w,c
  2814  002B46  6E36               	movwf	(??_display_laptime+1)& (0+255),c
  2815  002B48  C035  F01E         	movff	??_display_laptime,cmd@command
  2816  002B4C  C036  F01F         	movff	??_display_laptime+1,cmd@command+1
  2817  002B50  0E00               	movlw	0
  2818  002B52  BE1F               	btfsc	cmd@command+1,7,c
  2819  002B54  0EFF               	movlw	-1
  2820  002B56  6E20               	movwf	cmd@command+2,c
  2821  002B58  6E21               	movwf	cmd@command+3,c
  2822  002B5A  EC06  F031         	call	_cmd	;wreg free
  2823                           
  2824                           ;display.c: 101: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  2825  002B5E  0EFF               	movlw	255
  2826  002B60  6E1E               	movwf	cmd@command,c
  2827  002B62  0EFF               	movlw	255
  2828  002B64  6E1F               	movwf	cmd@command+1,c
  2829  002B66  0EFF               	movlw	255
  2830  002B68  6E20               	movwf	cmd@command+2,c
  2831  002B6A  0E04               	movlw	4
  2832  002B6C  6E21               	movwf	cmd@command+3,c
  2833  002B6E  EC06  F031         	call	_cmd	;wreg free
  2834                           
  2835                           ;display.c: 102: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 36);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(last_int);
  2836  002B72  0E2E               	movlw	46
  2837  002B74  6E1E               	movwf	cmd@command,c
  2838  002B76  0EFF               	movlw	255
  2839  002B78  6E1F               	movwf	cmd@command+1,c
  2840  002B7A  0EFF               	movlw	255
  2841  002B7C  6E20               	movwf	cmd@command+2,c
  2842  002B7E  0EFF               	movlw	255
  2843  002B80  6E21               	movwf	cmd@command+3,c
  2844  002B82  EC06  F031         	call	_cmd	;wreg free
  2845  002B86  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2846  002B8A  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2847  002B8E  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2848  002B90  0E00               	movlw	0
  2849  002B92  2435               	addwf	??_display_laptime,w,c
  2850  002B94  6E11               	movwf	wr16@addr,c
  2851  002B96  0E80               	movlw	128
  2852  002B98  2036               	addwfc	??_display_laptime+1,w,c
  2853  002B9A  6E12               	movwf	wr16@addr+1,c
  2854  002B9C  0E10               	movlw	16
  2855  002B9E  2037               	addwfc	??_display_laptime+2,w,c
  2856  002BA0  6E13               	movwf	wr16@addr+2,c
  2857  002BA2  0E00               	movlw	0
  2858  002BA4  6E15               	movwf	wr16@value+1,c
  2859  002BA6  0E24               	movlw	36
  2860  002BA8  6E14               	movwf	wr16@value,c
  2861  002BAA  ECCB  F030         	call	_wr16	;wreg free
  2862  002BAE  0E02               	movlw	2
  2863  002BB0  ECBC  F031         	call	_cmd_incrementn
  2864  002BB4  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2865  002BB8  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2866  002BBC  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2867  002BBE  0E00               	movlw	0
  2868  002BC0  2435               	addwf	??_display_laptime,w,c
  2869  002BC2  6E11               	movwf	wr16@addr,c
  2870  002BC4  0E80               	movlw	128
  2871  002BC6  2036               	addwfc	??_display_laptime+1,w,c
  2872  002BC8  6E12               	movwf	wr16@addr+1,c
  2873  002BCA  0E10               	movlw	16
  2874  002BCC  2037               	addwfc	??_display_laptime+2,w,c
  2875  002BCE  6E13               	movwf	wr16@addr+2,c
  2876  002BD0  0E00               	movlw	0
  2877  002BD2  6E15               	movwf	wr16@value+1,c
  2878  002BD4  0EDE               	movlw	222
  2879  002BD6  6E14               	movwf	wr16@value,c
  2880  002BD8  ECCB  F030         	call	_wr16	;wreg free
  2881  002BDC  0E02               	movlw	2
  2882  002BDE  ECBC  F031         	call	_cmd_incrementn
  2883  002BE2  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2884  002BE6  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2885  002BEA  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2886  002BEC  0E00               	movlw	0
  2887  002BEE  2435               	addwf	??_display_laptime,w,c
  2888  002BF0  6E11               	movwf	wr16@addr,c
  2889  002BF2  0E80               	movlw	128
  2890  002BF4  2036               	addwfc	??_display_laptime+1,w,c
  2891  002BF6  6E12               	movwf	wr16@addr+1,c
  2892  002BF8  0E10               	movlw	16
  2893  002BFA  2037               	addwfc	??_display_laptime+2,w,c
  2894  002BFC  6E13               	movwf	wr16@addr+2,c
  2895  002BFE  0E00               	movlw	0
  2896  002C00  6E15               	movwf	wr16@value+1,c
  2897  002C02  0E1E               	movlw	30
  2898  002C04  6E14               	movwf	wr16@value,c
  2899  002C06  ECCB  F030         	call	_wr16	;wreg free
  2900  002C0A  0E02               	movlw	2
  2901  002C0C  ECBC  F031         	call	_cmd_incrementn
  2902  002C10  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2903  002C14  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2904  002C18  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2905  002C1A  0E00               	movlw	0
  2906  002C1C  2435               	addwf	??_display_laptime,w,c
  2907  002C1E  6E11               	movwf	wr16@addr,c
  2908  002C20  0E80               	movlw	128
  2909  002C22  2036               	addwfc	??_display_laptime+1,w,c
  2910  002C24  6E12               	movwf	wr16@addr+1,c
  2911  002C26  0E10               	movlw	16
  2912  002C28  2037               	addwfc	??_display_laptime+2,w,c
  2913  002C2A  6E13               	movwf	wr16@addr+2,c
  2914  002C2C  0E08               	movlw	8
  2915  002C2E  6E15               	movwf	wr16@value+1,c
  2916  002C30  0E00               	movlw	0
  2917  002C32  6E14               	movwf	wr16@value,c
  2918  002C34  ECCB  F030         	call	_wr16	;wreg free
  2919  002C38  0E02               	movlw	2
  2920  002C3A  ECBC  F031         	call	_cmd_incrementn
  2921  002C3E  C02D  F01E         	movff	display_laptime@last_int,cmd@command
  2922  002C42  C02E  F01F         	movff	display_laptime@last_int+1,cmd@command+1
  2923  002C46  0E00               	movlw	0
  2924  002C48  BE1F               	btfsc	cmd@command+1,7,c
  2925  002C4A  0EFF               	movlw	-1
  2926  002C4C  6E20               	movwf	cmd@command+2,c
  2927  002C4E  6E21               	movwf	cmd@command+3,c
  2928  002C50  EC06  F031         	call	_cmd	;wreg free
  2929                           
  2930                           ;display.c: 103: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 39);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 238);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+c
  2931  002C54  0E0C               	movlw	12
  2932  002C56  6E1E               	movwf	cmd@command,c
  2933  002C58  0EFF               	movlw	255
  2934  002C5A  6E1F               	movwf	cmd@command+1,c
  2935  002C5C  0EFF               	movlw	255
  2936  002C5E  6E20               	movwf	cmd@command+2,c
  2937  002C60  0EFF               	movlw	255
  2938  002C62  6E21               	movwf	cmd@command+3,c
  2939  002C64  EC06  F031         	call	_cmd	;wreg free
  2940  002C68  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2941  002C6C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2942  002C70  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2943  002C72  0E00               	movlw	0
  2944  002C74  2435               	addwf	??_display_laptime,w,c
  2945  002C76  6E11               	movwf	wr16@addr,c
  2946  002C78  0E80               	movlw	128
  2947  002C7A  2036               	addwfc	??_display_laptime+1,w,c
  2948  002C7C  6E12               	movwf	wr16@addr+1,c
  2949  002C7E  0E10               	movlw	16
  2950  002C80  2037               	addwfc	??_display_laptime+2,w,c
  2951  002C82  6E13               	movwf	wr16@addr+2,c
  2952  002C84  0E00               	movlw	0
  2953  002C86  6E15               	movwf	wr16@value+1,c
  2954  002C88  0E27               	movlw	39
  2955  002C8A  6E14               	movwf	wr16@value,c
  2956  002C8C  ECCB  F030         	call	_wr16	;wreg free
  2957  002C90  0E02               	movlw	2
  2958  002C92  ECBC  F031         	call	_cmd_incrementn
  2959  002C96  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2960  002C9A  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2961  002C9E  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2962  002CA0  0E00               	movlw	0
  2963  002CA2  2435               	addwf	??_display_laptime,w,c
  2964  002CA4  6E11               	movwf	wr16@addr,c
  2965  002CA6  0E80               	movlw	128
  2966  002CA8  2036               	addwfc	??_display_laptime+1,w,c
  2967  002CAA  6E12               	movwf	wr16@addr+1,c
  2968  002CAC  0E10               	movlw	16
  2969  002CAE  2037               	addwfc	??_display_laptime+2,w,c
  2970  002CB0  6E13               	movwf	wr16@addr+2,c
  2971  002CB2  0E00               	movlw	0
  2972  002CB4  6E15               	movwf	wr16@value+1,c
  2973  002CB6  0EEE               	movlw	238
  2974  002CB8  6E14               	movwf	wr16@value,c
  2975  002CBA  ECCB  F030         	call	_wr16	;wreg free
  2976  002CBE  0E02               	movlw	2
  2977  002CC0  ECBC  F031         	call	_cmd_incrementn
  2978  002CC4  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2979  002CC8  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2980  002CCC  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  2981  002CCE  0E00               	movlw	0
  2982  002CD0  2435               	addwf	??_display_laptime,w,c
  2983  002CD2  6E11               	movwf	wr16@addr,c
  2984  002CD4  0E80               	movlw	128
  2985  002CD6  2036               	addwfc	??_display_laptime+1,w,c
  2986  002CD8  6E12               	movwf	wr16@addr+1,c
  2987  002CDA  0E10               	movlw	16
  2988  002CDC  2037               	addwfc	??_display_laptime+2,w,c
  2989  002CDE  6E13               	movwf	wr16@addr+2,c
  2990  002CE0  0E00               	movlw	0
  2991  002CE2  6E15               	movwf	wr16@value+1,c
  2992  002CE4  0E1C               	movlw	28
  2993  002CE6  6E14               	movwf	wr16@value,c
  2994  002CE8  ECCB  F030         	call	_wr16	;wreg free
  2995  002CEC  0E02               	movlw	2
  2996  002CEE  ECBC  F031         	call	_cmd_incrementn
  2997  002CF2  C04A  F035         	movff	_cmd_offset,??_display_laptime
  2998  002CF6  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  2999  002CFA  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3000  002CFC  0E00               	movlw	0
  3001  002CFE  2435               	addwf	??_display_laptime,w,c
  3002  002D00  6E11               	movwf	wr16@addr,c
  3003  002D02  0E80               	movlw	128
  3004  002D04  2036               	addwfc	??_display_laptime+1,w,c
  3005  002D06  6E12               	movwf	wr16@addr+1,c
  3006  002D08  0E10               	movlw	16
  3007  002D0A  2037               	addwfc	??_display_laptime+2,w,c
  3008  002D0C  6E13               	movwf	wr16@addr+2,c
  3009  002D0E  0E06               	movlw	6
  3010  002D10  6E15               	movwf	wr16@value+1,c
  3011  002D12  0E00               	movlw	0
  3012  002D14  6E14               	movwf	wr16@value,c
  3013  002D16  ECCB  F030         	call	_wr16	;wreg free
  3014  002D1A  0E02               	movlw	2
  3015  002D1C  ECBC  F031         	call	_cmd_incrementn
  3016  002D20  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3017  002D24  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3018  002D28  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3019  002D2A  0E00               	movlw	0
  3020  002D2C  2435               	addwf	??_display_laptime,w,c
  3021  002D2E  6E16               	movwf	wr8s@addr,c
  3022  002D30  0E80               	movlw	128
  3023  002D32  2036               	addwfc	??_display_laptime+1,w,c
  3024  002D34  6E17               	movwf	wr8s@addr+1,c
  3025  002D36  0E10               	movlw	16
  3026  002D38  2037               	addwfc	??_display_laptime+2,w,c
  3027  002D3A  6E18               	movwf	wr8s@addr+2,c
  3028  002D3C  0E87               	movlw	low STR_19
  3029  002D3E  6E19               	movwf	wr8s@s,c
  3030  002D40  0E0F               	movlw	high STR_19
  3031  002D42  6E1A               	movwf	wr8s@s+1,c
  3032  002D44  EC81  F02E         	call	_wr8s	;wreg free
  3033  002D48  ECBC  F031         	call	_cmd_incrementn
  3034                           
  3035                           ;display.c: 104: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 42);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2UL);cmd_incrementn(2);cmd(last_dec);
  3036  002D4C  0E2E               	movlw	46
  3037  002D4E  6E1E               	movwf	cmd@command,c
  3038  002D50  0EFF               	movlw	255
  3039  002D52  6E1F               	movwf	cmd@command+1,c
  3040  002D54  0EFF               	movlw	255
  3041  002D56  6E20               	movwf	cmd@command+2,c
  3042  002D58  0EFF               	movlw	255
  3043  002D5A  6E21               	movwf	cmd@command+3,c
  3044  002D5C  EC06  F031         	call	_cmd	;wreg free
  3045  002D60  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3046  002D64  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3047  002D68  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3048  002D6A  0E00               	movlw	0
  3049  002D6C  2435               	addwf	??_display_laptime,w,c
  3050  002D6E  6E11               	movwf	wr16@addr,c
  3051  002D70  0E80               	movlw	128
  3052  002D72  2036               	addwfc	??_display_laptime+1,w,c
  3053  002D74  6E12               	movwf	wr16@addr+1,c
  3054  002D76  0E10               	movlw	16
  3055  002D78  2037               	addwfc	??_display_laptime+2,w,c
  3056  002D7A  6E13               	movwf	wr16@addr+2,c
  3057  002D7C  0E00               	movlw	0
  3058  002D7E  6E15               	movwf	wr16@value+1,c
  3059  002D80  0E2A               	movlw	42
  3060  002D82  6E14               	movwf	wr16@value,c
  3061  002D84  ECCB  F030         	call	_wr16	;wreg free
  3062  002D88  0E02               	movlw	2
  3063  002D8A  ECBC  F031         	call	_cmd_incrementn
  3064  002D8E  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3065  002D92  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3066  002D96  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3067  002D98  0E00               	movlw	0
  3068  002D9A  2435               	addwf	??_display_laptime,w,c
  3069  002D9C  6E11               	movwf	wr16@addr,c
  3070  002D9E  0E80               	movlw	128
  3071  002DA0  2036               	addwfc	??_display_laptime+1,w,c
  3072  002DA2  6E12               	movwf	wr16@addr+1,c
  3073  002DA4  0E10               	movlw	16
  3074  002DA6  2037               	addwfc	??_display_laptime+2,w,c
  3075  002DA8  6E13               	movwf	wr16@addr+2,c
  3076  002DAA  0E00               	movlw	0
  3077  002DAC  6E15               	movwf	wr16@value+1,c
  3078  002DAE  0EDE               	movlw	222
  3079  002DB0  6E14               	movwf	wr16@value,c
  3080  002DB2  ECCB  F030         	call	_wr16	;wreg free
  3081  002DB6  0E02               	movlw	2
  3082  002DB8  ECBC  F031         	call	_cmd_incrementn
  3083  002DBC  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3084  002DC0  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3085  002DC4  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3086  002DC6  0E00               	movlw	0
  3087  002DC8  2435               	addwf	??_display_laptime,w,c
  3088  002DCA  6E11               	movwf	wr16@addr,c
  3089  002DCC  0E80               	movlw	128
  3090  002DCE  2036               	addwfc	??_display_laptime+1,w,c
  3091  002DD0  6E12               	movwf	wr16@addr+1,c
  3092  002DD2  0E10               	movlw	16
  3093  002DD4  2037               	addwfc	??_display_laptime+2,w,c
  3094  002DD6  6E13               	movwf	wr16@addr+2,c
  3095  002DD8  0E00               	movlw	0
  3096  002DDA  6E15               	movwf	wr16@value+1,c
  3097  002DDC  0E1E               	movlw	30
  3098  002DDE  6E14               	movwf	wr16@value,c
  3099  002DE0  ECCB  F030         	call	_wr16	;wreg free
  3100  002DE4  0E02               	movlw	2
  3101  002DE6  ECBC  F031         	call	_cmd_incrementn
  3102  002DEA  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3103  002DEE  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3104  002DF2  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3105  002DF4  0E00               	movlw	0
  3106  002DF6  2435               	addwf	??_display_laptime,w,c
  3107  002DF8  6E11               	movwf	wr16@addr,c
  3108  002DFA  0E80               	movlw	128
  3109  002DFC  2036               	addwfc	??_display_laptime+1,w,c
  3110  002DFE  6E12               	movwf	wr16@addr+1,c
  3111  002E00  0E10               	movlw	16
  3112  002E02  2037               	addwfc	??_display_laptime+2,w,c
  3113  002E04  6E13               	movwf	wr16@addr+2,c
  3114  002E06  0E00               	movlw	0
  3115  002E08  6E15               	movwf	wr16@value+1,c
  3116  002E0A  0E02               	movlw	2
  3117  002E0C  6E14               	movwf	wr16@value,c
  3118  002E0E  ECCB  F030         	call	_wr16	;wreg free
  3119  002E12  0E02               	movlw	2
  3120  002E14  ECBC  F031         	call	_cmd_incrementn
  3121  002E18  C02F  F01E         	movff	display_laptime@last_dec,cmd@command
  3122  002E1C  C030  F01F         	movff	display_laptime@last_dec+1,cmd@command+1
  3123  002E20  0E00               	movlw	0
  3124  002E22  BE1F               	btfsc	cmd@command+1,7,c
  3125  002E24  0EFF               	movlw	-1
  3126  002E26  6E20               	movwf	cmd@command+2,c
  3127  002E28  6E21               	movwf	cmd@command+3,c
  3128  002E2A  EC06  F031         	call	_cmd	;wreg free
  3129                           
  3130                           ;display.c: 108: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 434);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(best_int);
  3131  002E2E  0E2E               	movlw	46
  3132  002E30  6E1E               	movwf	cmd@command,c
  3133  002E32  0EFF               	movlw	255
  3134  002E34  6E1F               	movwf	cmd@command+1,c
  3135  002E36  0EFF               	movlw	255
  3136  002E38  6E20               	movwf	cmd@command+2,c
  3137  002E3A  0EFF               	movlw	255
  3138  002E3C  6E21               	movwf	cmd@command+3,c
  3139  002E3E  EC06  F031         	call	_cmd	;wreg free
  3140  002E42  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3141  002E46  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3142  002E4A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3143  002E4C  0E00               	movlw	0
  3144  002E4E  2435               	addwf	??_display_laptime,w,c
  3145  002E50  6E11               	movwf	wr16@addr,c
  3146  002E52  0E80               	movlw	128
  3147  002E54  2036               	addwfc	??_display_laptime+1,w,c
  3148  002E56  6E12               	movwf	wr16@addr+1,c
  3149  002E58  0E10               	movlw	16
  3150  002E5A  2037               	addwfc	??_display_laptime+2,w,c
  3151  002E5C  6E13               	movwf	wr16@addr+2,c
  3152  002E5E  0E01               	movlw	1
  3153  002E60  6E15               	movwf	wr16@value+1,c
  3154  002E62  0EB2               	movlw	178
  3155  002E64  6E14               	movwf	wr16@value,c
  3156  002E66  ECCB  F030         	call	_wr16	;wreg free
  3157  002E6A  0E02               	movlw	2
  3158  002E6C  ECBC  F031         	call	_cmd_incrementn
  3159  002E70  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3160  002E74  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3161  002E78  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3162  002E7A  0E00               	movlw	0
  3163  002E7C  2435               	addwf	??_display_laptime,w,c
  3164  002E7E  6E11               	movwf	wr16@addr,c
  3165  002E80  0E80               	movlw	128
  3166  002E82  2036               	addwfc	??_display_laptime+1,w,c
  3167  002E84  6E12               	movwf	wr16@addr+1,c
  3168  002E86  0E10               	movlw	16
  3169  002E88  2037               	addwfc	??_display_laptime+2,w,c
  3170  002E8A  6E13               	movwf	wr16@addr+2,c
  3171  002E8C  0E00               	movlw	0
  3172  002E8E  6E15               	movwf	wr16@value+1,c
  3173  002E90  0EDE               	movlw	222
  3174  002E92  6E14               	movwf	wr16@value,c
  3175  002E94  ECCB  F030         	call	_wr16	;wreg free
  3176  002E98  0E02               	movlw	2
  3177  002E9A  ECBC  F031         	call	_cmd_incrementn
  3178  002E9E  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3179  002EA2  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3180  002EA6  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3181  002EA8  0E00               	movlw	0
  3182  002EAA  2435               	addwf	??_display_laptime,w,c
  3183  002EAC  6E11               	movwf	wr16@addr,c
  3184  002EAE  0E80               	movlw	128
  3185  002EB0  2036               	addwfc	??_display_laptime+1,w,c
  3186  002EB2  6E12               	movwf	wr16@addr+1,c
  3187  002EB4  0E10               	movlw	16
  3188  002EB6  2037               	addwfc	??_display_laptime+2,w,c
  3189  002EB8  6E13               	movwf	wr16@addr+2,c
  3190  002EBA  0E00               	movlw	0
  3191  002EBC  6E15               	movwf	wr16@value+1,c
  3192  002EBE  0E1E               	movlw	30
  3193  002EC0  6E14               	movwf	wr16@value,c
  3194  002EC2  ECCB  F030         	call	_wr16	;wreg free
  3195  002EC6  0E02               	movlw	2
  3196  002EC8  ECBC  F031         	call	_cmd_incrementn
  3197  002ECC  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3198  002ED0  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3199  002ED4  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3200  002ED6  0E00               	movlw	0
  3201  002ED8  2435               	addwf	??_display_laptime,w,c
  3202  002EDA  6E11               	movwf	wr16@addr,c
  3203  002EDC  0E80               	movlw	128
  3204  002EDE  2036               	addwfc	??_display_laptime+1,w,c
  3205  002EE0  6E12               	movwf	wr16@addr+1,c
  3206  002EE2  0E10               	movlw	16
  3207  002EE4  2037               	addwfc	??_display_laptime+2,w,c
  3208  002EE6  6E13               	movwf	wr16@addr+2,c
  3209  002EE8  0E08               	movlw	8
  3210  002EEA  6E15               	movwf	wr16@value+1,c
  3211  002EEC  0E00               	movlw	0
  3212  002EEE  6E14               	movwf	wr16@value,c
  3213  002EF0  ECCB  F030         	call	_wr16	;wreg free
  3214  002EF4  0E02               	movlw	2
  3215  002EF6  ECBC  F031         	call	_cmd_incrementn
  3216  002EFA  C029  F01E         	movff	display_laptime@best_int,cmd@command
  3217  002EFE  C02A  F01F         	movff	display_laptime@best_int+1,cmd@command+1
  3218  002F02  0E00               	movlw	0
  3219  002F04  BE1F               	btfsc	cmd@command+1,7,c
  3220  002F06  0EFF               	movlw	-1
  3221  002F08  6E20               	movwf	cmd@command+2,c
  3222  002F0A  6E21               	movwf	cmd@command+3,c
  3223  002F0C  EC06  F031         	call	_cmd	;wreg free
  3224                           
  3225                           ;display.c: 109: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 437);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 239);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344
      +                          UL+
  3226  002F10  0E0C               	movlw	12
  3227  002F12  6E1E               	movwf	cmd@command,c
  3228  002F14  0EFF               	movlw	255
  3229  002F16  6E1F               	movwf	cmd@command+1,c
  3230  002F18  0EFF               	movlw	255
  3231  002F1A  6E20               	movwf	cmd@command+2,c
  3232  002F1C  0EFF               	movlw	255
  3233  002F1E  6E21               	movwf	cmd@command+3,c
  3234  002F20  EC06  F031         	call	_cmd	;wreg free
  3235  002F24  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3236  002F28  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3237  002F2C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3238  002F2E  0E00               	movlw	0
  3239  002F30  2435               	addwf	??_display_laptime,w,c
  3240  002F32  6E11               	movwf	wr16@addr,c
  3241  002F34  0E80               	movlw	128
  3242  002F36  2036               	addwfc	??_display_laptime+1,w,c
  3243  002F38  6E12               	movwf	wr16@addr+1,c
  3244  002F3A  0E10               	movlw	16
  3245  002F3C  2037               	addwfc	??_display_laptime+2,w,c
  3246  002F3E  6E13               	movwf	wr16@addr+2,c
  3247  002F40  0E01               	movlw	1
  3248  002F42  6E15               	movwf	wr16@value+1,c
  3249  002F44  0EB5               	movlw	181
  3250  002F46  6E14               	movwf	wr16@value,c
  3251  002F48  ECCB  F030         	call	_wr16	;wreg free
  3252  002F4C  0E02               	movlw	2
  3253  002F4E  ECBC  F031         	call	_cmd_incrementn
  3254  002F52  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3255  002F56  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3256  002F5A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3257  002F5C  0E00               	movlw	0
  3258  002F5E  2435               	addwf	??_display_laptime,w,c
  3259  002F60  6E11               	movwf	wr16@addr,c
  3260  002F62  0E80               	movlw	128
  3261  002F64  2036               	addwfc	??_display_laptime+1,w,c
  3262  002F66  6E12               	movwf	wr16@addr+1,c
  3263  002F68  0E10               	movlw	16
  3264  002F6A  2037               	addwfc	??_display_laptime+2,w,c
  3265  002F6C  6E13               	movwf	wr16@addr+2,c
  3266  002F6E  0E00               	movlw	0
  3267  002F70  6E15               	movwf	wr16@value+1,c
  3268  002F72  0EEF               	movlw	239
  3269  002F74  6E14               	movwf	wr16@value,c
  3270  002F76  ECCB  F030         	call	_wr16	;wreg free
  3271  002F7A  0E02               	movlw	2
  3272  002F7C  ECBC  F031         	call	_cmd_incrementn
  3273  002F80  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3274  002F84  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3275  002F88  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3276  002F8A  0E00               	movlw	0
  3277  002F8C  2435               	addwf	??_display_laptime,w,c
  3278  002F8E  6E11               	movwf	wr16@addr,c
  3279  002F90  0E80               	movlw	128
  3280  002F92  2036               	addwfc	??_display_laptime+1,w,c
  3281  002F94  6E12               	movwf	wr16@addr+1,c
  3282  002F96  0E10               	movlw	16
  3283  002F98  2037               	addwfc	??_display_laptime+2,w,c
  3284  002F9A  6E13               	movwf	wr16@addr+2,c
  3285  002F9C  0E00               	movlw	0
  3286  002F9E  6E15               	movwf	wr16@value+1,c
  3287  002FA0  0E1C               	movlw	28
  3288  002FA2  6E14               	movwf	wr16@value,c
  3289  002FA4  ECCB  F030         	call	_wr16	;wreg free
  3290  002FA8  0E02               	movlw	2
  3291  002FAA  ECBC  F031         	call	_cmd_incrementn
  3292  002FAE  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3293  002FB2  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3294  002FB6  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3295  002FB8  0E00               	movlw	0
  3296  002FBA  2435               	addwf	??_display_laptime,w,c
  3297  002FBC  6E11               	movwf	wr16@addr,c
  3298  002FBE  0E80               	movlw	128
  3299  002FC0  2036               	addwfc	??_display_laptime+1,w,c
  3300  002FC2  6E12               	movwf	wr16@addr+1,c
  3301  002FC4  0E10               	movlw	16
  3302  002FC6  2037               	addwfc	??_display_laptime+2,w,c
  3303  002FC8  6E13               	movwf	wr16@addr+2,c
  3304  002FCA  0E06               	movlw	6
  3305  002FCC  6E15               	movwf	wr16@value+1,c
  3306  002FCE  0E00               	movlw	0
  3307  002FD0  6E14               	movwf	wr16@value,c
  3308  002FD2  ECCB  F030         	call	_wr16	;wreg free
  3309  002FD6  0E02               	movlw	2
  3310  002FD8  ECBC  F031         	call	_cmd_incrementn
  3311  002FDC  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3312  002FE0  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3313  002FE4  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3314  002FE6  0E00               	movlw	0
  3315  002FE8  2435               	addwf	??_display_laptime,w,c
  3316  002FEA  6E16               	movwf	wr8s@addr,c
  3317  002FEC  0E80               	movlw	128
  3318  002FEE  2036               	addwfc	??_display_laptime+1,w,c
  3319  002FF0  6E17               	movwf	wr8s@addr+1,c
  3320  002FF2  0E10               	movlw	16
  3321  002FF4  2037               	addwfc	??_display_laptime+2,w,c
  3322  002FF6  6E18               	movwf	wr8s@addr+2,c
  3323  002FF8  0E87               	movlw	low STR_19
  3324  002FFA  6E19               	movwf	wr8s@s,c
  3325  002FFC  0E0F               	movlw	high STR_19
  3326  002FFE  6E1A               	movwf	wr8s@s+1,c
  3327  003000  EC81  F02E         	call	_wr8s	;wreg free
  3328  003004  ECBC  F031         	call	_cmd_incrementn
  3329                           
  3330                           ;display.c: 110: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 440);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2UL);cmd_incrementn(2);cmd(best_dec);
  3331  003008  0E2E               	movlw	46
  3332  00300A  6E1E               	movwf	cmd@command,c
  3333  00300C  0EFF               	movlw	255
  3334  00300E  6E1F               	movwf	cmd@command+1,c
  3335  003010  0EFF               	movlw	255
  3336  003012  6E20               	movwf	cmd@command+2,c
  3337  003014  0EFF               	movlw	255
  3338  003016  6E21               	movwf	cmd@command+3,c
  3339  003018  EC06  F031         	call	_cmd	;wreg free
  3340  00301C  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3341  003020  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3342  003024  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3343  003026  0E00               	movlw	0
  3344  003028  2435               	addwf	??_display_laptime,w,c
  3345  00302A  6E11               	movwf	wr16@addr,c
  3346  00302C  0E80               	movlw	128
  3347  00302E  2036               	addwfc	??_display_laptime+1,w,c
  3348  003030  6E12               	movwf	wr16@addr+1,c
  3349  003032  0E10               	movlw	16
  3350  003034  2037               	addwfc	??_display_laptime+2,w,c
  3351  003036  6E13               	movwf	wr16@addr+2,c
  3352  003038  0E01               	movlw	1
  3353  00303A  6E15               	movwf	wr16@value+1,c
  3354  00303C  0EB8               	movlw	184
  3355  00303E  6E14               	movwf	wr16@value,c
  3356  003040  ECCB  F030         	call	_wr16	;wreg free
  3357  003044  0E02               	movlw	2
  3358  003046  ECBC  F031         	call	_cmd_incrementn
  3359  00304A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3360  00304E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3361  003052  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3362  003054  0E00               	movlw	0
  3363  003056  2435               	addwf	??_display_laptime,w,c
  3364  003058  6E11               	movwf	wr16@addr,c
  3365  00305A  0E80               	movlw	128
  3366  00305C  2036               	addwfc	??_display_laptime+1,w,c
  3367  00305E  6E12               	movwf	wr16@addr+1,c
  3368  003060  0E10               	movlw	16
  3369  003062  2037               	addwfc	??_display_laptime+2,w,c
  3370  003064  6E13               	movwf	wr16@addr+2,c
  3371  003066  0E00               	movlw	0
  3372  003068  6E15               	movwf	wr16@value+1,c
  3373  00306A  0EDE               	movlw	222
  3374  00306C  6E14               	movwf	wr16@value,c
  3375  00306E  ECCB  F030         	call	_wr16	;wreg free
  3376  003072  0E02               	movlw	2
  3377  003074  ECBC  F031         	call	_cmd_incrementn
  3378  003078  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3379  00307C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3380  003080  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3381  003082  0E00               	movlw	0
  3382  003084  2435               	addwf	??_display_laptime,w,c
  3383  003086  6E11               	movwf	wr16@addr,c
  3384  003088  0E80               	movlw	128
  3385  00308A  2036               	addwfc	??_display_laptime+1,w,c
  3386  00308C  6E12               	movwf	wr16@addr+1,c
  3387  00308E  0E10               	movlw	16
  3388  003090  2037               	addwfc	??_display_laptime+2,w,c
  3389  003092  6E13               	movwf	wr16@addr+2,c
  3390  003094  0E00               	movlw	0
  3391  003096  6E15               	movwf	wr16@value+1,c
  3392  003098  0E1E               	movlw	30
  3393  00309A  6E14               	movwf	wr16@value,c
  3394  00309C  ECCB  F030         	call	_wr16	;wreg free
  3395  0030A0  0E02               	movlw	2
  3396  0030A2  ECBC  F031         	call	_cmd_incrementn
  3397  0030A6  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3398  0030AA  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3399  0030AE  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3400  0030B0  0E00               	movlw	0
  3401  0030B2  2435               	addwf	??_display_laptime,w,c
  3402  0030B4  6E11               	movwf	wr16@addr,c
  3403  0030B6  0E80               	movlw	128
  3404  0030B8  2036               	addwfc	??_display_laptime+1,w,c
  3405  0030BA  6E12               	movwf	wr16@addr+1,c
  3406  0030BC  0E10               	movlw	16
  3407  0030BE  2037               	addwfc	??_display_laptime+2,w,c
  3408  0030C0  6E13               	movwf	wr16@addr+2,c
  3409  0030C2  0E00               	movlw	0
  3410  0030C4  6E15               	movwf	wr16@value+1,c
  3411  0030C6  0E02               	movlw	2
  3412  0030C8  6E14               	movwf	wr16@value,c
  3413  0030CA  ECCB  F030         	call	_wr16	;wreg free
  3414  0030CE  0E02               	movlw	2
  3415  0030D0  ECBC  F031         	call	_cmd_incrementn
  3416  0030D4  C02B  F01E         	movff	display_laptime@best_dec,cmd@command
  3417  0030D8  C02C  F01F         	movff	display_laptime@best_dec+1,cmd@command+1
  3418  0030DC  0E00               	movlw	0
  3419  0030DE  BE1F               	btfsc	cmd@command+1,7,c
  3420  0030E0  0EFF               	movlw	-1
  3421  0030E2  6E20               	movwf	cmd@command+2,c
  3422  0030E4  6E21               	movwf	cmd@command+3,c
  3423  0030E6  EC06  F031         	call	_cmd	;wreg free
  3424                           
  3425                           ;display.c: 114: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 233);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 235);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(current_int);
  3426  0030EA  0E2E               	movlw	46
  3427  0030EC  6E1E               	movwf	cmd@command,c
  3428  0030EE  0EFF               	movlw	255
  3429  0030F0  6E1F               	movwf	cmd@command+1,c
  3430  0030F2  0EFF               	movlw	255
  3431  0030F4  6E20               	movwf	cmd@command+2,c
  3432  0030F6  0EFF               	movlw	255
  3433  0030F8  6E21               	movwf	cmd@command+3,c
  3434  0030FA  EC06  F031         	call	_cmd	;wreg free
  3435  0030FE  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3436  003102  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3437  003106  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3438  003108  0E00               	movlw	0
  3439  00310A  2435               	addwf	??_display_laptime,w,c
  3440  00310C  6E11               	movwf	wr16@addr,c
  3441  00310E  0E80               	movlw	128
  3442  003110  2036               	addwfc	??_display_laptime+1,w,c
  3443  003112  6E12               	movwf	wr16@addr+1,c
  3444  003114  0E10               	movlw	16
  3445  003116  2037               	addwfc	??_display_laptime+2,w,c
  3446  003118  6E13               	movwf	wr16@addr+2,c
  3447  00311A  0E00               	movlw	0
  3448  00311C  6E15               	movwf	wr16@value+1,c
  3449  00311E  0EE9               	movlw	233
  3450  003120  6E14               	movwf	wr16@value,c
  3451  003122  ECCB  F030         	call	_wr16	;wreg free
  3452  003126  0E02               	movlw	2
  3453  003128  ECBC  F031         	call	_cmd_incrementn
  3454  00312C  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3455  003130  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3456  003134  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3457  003136  0E00               	movlw	0
  3458  003138  2435               	addwf	??_display_laptime,w,c
  3459  00313A  6E11               	movwf	wr16@addr,c
  3460  00313C  0E80               	movlw	128
  3461  00313E  2036               	addwfc	??_display_laptime+1,w,c
  3462  003140  6E12               	movwf	wr16@addr+1,c
  3463  003142  0E10               	movlw	16
  3464  003144  2037               	addwfc	??_display_laptime+2,w,c
  3465  003146  6E13               	movwf	wr16@addr+2,c
  3466  003148  0E00               	movlw	0
  3467  00314A  6E15               	movwf	wr16@value+1,c
  3468  00314C  0EEB               	movlw	235
  3469  00314E  6E14               	movwf	wr16@value,c
  3470  003150  ECCB  F030         	call	_wr16	;wreg free
  3471  003154  0E02               	movlw	2
  3472  003156  ECBC  F031         	call	_cmd_incrementn
  3473  00315A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3474  00315E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3475  003162  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3476  003164  0E00               	movlw	0
  3477  003166  2435               	addwf	??_display_laptime,w,c
  3478  003168  6E11               	movwf	wr16@addr,c
  3479  00316A  0E80               	movlw	128
  3480  00316C  2036               	addwfc	??_display_laptime+1,w,c
  3481  00316E  6E12               	movwf	wr16@addr+1,c
  3482  003170  0E10               	movlw	16
  3483  003172  2037               	addwfc	??_display_laptime+2,w,c
  3484  003174  6E13               	movwf	wr16@addr+2,c
  3485  003176  0E00               	movlw	0
  3486  003178  6E15               	movwf	wr16@value+1,c
  3487  00317A  0E1E               	movlw	30
  3488  00317C  6E14               	movwf	wr16@value,c
  3489  00317E  ECCB  F030         	call	_wr16	;wreg free
  3490  003182  0E02               	movlw	2
  3491  003184  ECBC  F031         	call	_cmd_incrementn
  3492  003188  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3493  00318C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3494  003190  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3495  003192  0E00               	movlw	0
  3496  003194  2435               	addwf	??_display_laptime,w,c
  3497  003196  6E11               	movwf	wr16@addr,c
  3498  003198  0E80               	movlw	128
  3499  00319A  2036               	addwfc	??_display_laptime+1,w,c
  3500  00319C  6E12               	movwf	wr16@addr+1,c
  3501  00319E  0E10               	movlw	16
  3502  0031A0  2037               	addwfc	??_display_laptime+2,w,c
  3503  0031A2  6E13               	movwf	wr16@addr+2,c
  3504  0031A4  0E08               	movlw	8
  3505  0031A6  6E15               	movwf	wr16@value+1,c
  3506  0031A8  0E00               	movlw	0
  3507  0031AA  6E14               	movwf	wr16@value,c
  3508  0031AC  ECCB  F030         	call	_wr16	;wreg free
  3509  0031B0  0E02               	movlw	2
  3510  0031B2  ECBC  F031         	call	_cmd_incrementn
  3511  0031B6  C025  F01E         	movff	display_laptime@current_int,cmd@command
  3512  0031BA  C026  F01F         	movff	display_laptime@current_int+1,cmd@command+1
  3513  0031BE  0E00               	movlw	0
  3514  0031C0  BE1F               	btfsc	cmd@command+1,7,c
  3515  0031C2  0EFF               	movlw	-1
  3516  0031C4  6E20               	movwf	cmd@command+2,c
  3517  0031C6  6E21               	movwf	cmd@command+3,c
  3518  0031C8  EC06  F031         	call	_cmd	;wreg free
  3519                           
  3520                           ;display.c: 115: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 237);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 252);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344
      +                          UL+
  3521  0031CC  0E0C               	movlw	12
  3522  0031CE  6E1E               	movwf	cmd@command,c
  3523  0031D0  0EFF               	movlw	255
  3524  0031D2  6E1F               	movwf	cmd@command+1,c
  3525  0031D4  0EFF               	movlw	255
  3526  0031D6  6E20               	movwf	cmd@command+2,c
  3527  0031D8  0EFF               	movlw	255
  3528  0031DA  6E21               	movwf	cmd@command+3,c
  3529  0031DC  EC06  F031         	call	_cmd	;wreg free
  3530  0031E0  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3531  0031E4  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3532  0031E8  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3533  0031EA  0E00               	movlw	0
  3534  0031EC  2435               	addwf	??_display_laptime,w,c
  3535  0031EE  6E11               	movwf	wr16@addr,c
  3536  0031F0  0E80               	movlw	128
  3537  0031F2  2036               	addwfc	??_display_laptime+1,w,c
  3538  0031F4  6E12               	movwf	wr16@addr+1,c
  3539  0031F6  0E10               	movlw	16
  3540  0031F8  2037               	addwfc	??_display_laptime+2,w,c
  3541  0031FA  6E13               	movwf	wr16@addr+2,c
  3542  0031FC  0E00               	movlw	0
  3543  0031FE  6E15               	movwf	wr16@value+1,c
  3544  003200  0EED               	movlw	237
  3545  003202  6E14               	movwf	wr16@value,c
  3546  003204  ECCB  F030         	call	_wr16	;wreg free
  3547  003208  0E02               	movlw	2
  3548  00320A  ECBC  F031         	call	_cmd_incrementn
  3549  00320E  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3550  003212  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3551  003216  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3552  003218  0E00               	movlw	0
  3553  00321A  2435               	addwf	??_display_laptime,w,c
  3554  00321C  6E11               	movwf	wr16@addr,c
  3555  00321E  0E80               	movlw	128
  3556  003220  2036               	addwfc	??_display_laptime+1,w,c
  3557  003222  6E12               	movwf	wr16@addr+1,c
  3558  003224  0E10               	movlw	16
  3559  003226  2037               	addwfc	??_display_laptime+2,w,c
  3560  003228  6E13               	movwf	wr16@addr+2,c
  3561  00322A  0E00               	movlw	0
  3562  00322C  6E15               	movwf	wr16@value+1,c
  3563  00322E  0EFC               	movlw	252
  3564  003230  6E14               	movwf	wr16@value,c
  3565  003232  ECCB  F030         	call	_wr16	;wreg free
  3566  003236  0E02               	movlw	2
  3567  003238  ECBC  F031         	call	_cmd_incrementn
  3568  00323C  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3569  003240  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3570  003244  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3571  003246  0E00               	movlw	0
  3572  003248  2435               	addwf	??_display_laptime,w,c
  3573  00324A  6E11               	movwf	wr16@addr,c
  3574  00324C  0E80               	movlw	128
  3575  00324E  2036               	addwfc	??_display_laptime+1,w,c
  3576  003250  6E12               	movwf	wr16@addr+1,c
  3577  003252  0E10               	movlw	16
  3578  003254  2037               	addwfc	??_display_laptime+2,w,c
  3579  003256  6E13               	movwf	wr16@addr+2,c
  3580  003258  0E00               	movlw	0
  3581  00325A  6E15               	movwf	wr16@value+1,c
  3582  00325C  0E1C               	movlw	28
  3583  00325E  6E14               	movwf	wr16@value,c
  3584  003260  ECCB  F030         	call	_wr16	;wreg free
  3585  003264  0E02               	movlw	2
  3586  003266  ECBC  F031         	call	_cmd_incrementn
  3587  00326A  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3588  00326E  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3589  003272  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3590  003274  0E00               	movlw	0
  3591  003276  2435               	addwf	??_display_laptime,w,c
  3592  003278  6E11               	movwf	wr16@addr,c
  3593  00327A  0E80               	movlw	128
  3594  00327C  2036               	addwfc	??_display_laptime+1,w,c
  3595  00327E  6E12               	movwf	wr16@addr+1,c
  3596  003280  0E10               	movlw	16
  3597  003282  2037               	addwfc	??_display_laptime+2,w,c
  3598  003284  6E13               	movwf	wr16@addr+2,c
  3599  003286  0E06               	movlw	6
  3600  003288  6E15               	movwf	wr16@value+1,c
  3601  00328A  0E00               	movlw	0
  3602  00328C  6E14               	movwf	wr16@value,c
  3603  00328E  ECCB  F030         	call	_wr16	;wreg free
  3604  003292  0E02               	movlw	2
  3605  003294  ECBC  F031         	call	_cmd_incrementn
  3606  003298  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3607  00329C  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3608  0032A0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3609  0032A2  0E00               	movlw	0
  3610  0032A4  2435               	addwf	??_display_laptime,w,c
  3611  0032A6  6E16               	movwf	wr8s@addr,c
  3612  0032A8  0E80               	movlw	128
  3613  0032AA  2036               	addwfc	??_display_laptime+1,w,c
  3614  0032AC  6E17               	movwf	wr8s@addr+1,c
  3615  0032AE  0E10               	movlw	16
  3616  0032B0  2037               	addwfc	??_display_laptime+2,w,c
  3617  0032B2  6E18               	movwf	wr8s@addr+2,c
  3618  0032B4  0E87               	movlw	low STR_19
  3619  0032B6  6E19               	movwf	wr8s@s,c
  3620  0032B8  0E0F               	movlw	high STR_19
  3621  0032BA  6E1A               	movwf	wr8s@s+1,c
  3622  0032BC  EC81  F02E         	call	_wr8s	;wreg free
  3623  0032C0  ECBC  F031         	call	_cmd_incrementn
  3624                           
  3625                           ;display.c: 116: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 235);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2UL);cmd_incrementn(2);cmd(current_dec);
  3626  0032C4  0E2E               	movlw	46
  3627  0032C6  6E1E               	movwf	cmd@command,c
  3628  0032C8  0EFF               	movlw	255
  3629  0032CA  6E1F               	movwf	cmd@command+1,c
  3630  0032CC  0EFF               	movlw	255
  3631  0032CE  6E20               	movwf	cmd@command+2,c
  3632  0032D0  0EFF               	movlw	255
  3633  0032D2  6E21               	movwf	cmd@command+3,c
  3634  0032D4  EC06  F031         	call	_cmd	;wreg free
  3635  0032D8  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3636  0032DC  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3637  0032E0  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3638  0032E2  0E00               	movlw	0
  3639  0032E4  2435               	addwf	??_display_laptime,w,c
  3640  0032E6  6E11               	movwf	wr16@addr,c
  3641  0032E8  0E80               	movlw	128
  3642  0032EA  2036               	addwfc	??_display_laptime+1,w,c
  3643  0032EC  6E12               	movwf	wr16@addr+1,c
  3644  0032EE  0E10               	movlw	16
  3645  0032F0  2037               	addwfc	??_display_laptime+2,w,c
  3646  0032F2  6E13               	movwf	wr16@addr+2,c
  3647  0032F4  0E00               	movlw	0
  3648  0032F6  6E15               	movwf	wr16@value+1,c
  3649  0032F8  0EF0               	movlw	240
  3650  0032FA  6E14               	movwf	wr16@value,c
  3651  0032FC  ECCB  F030         	call	_wr16	;wreg free
  3652  003300  0E02               	movlw	2
  3653  003302  ECBC  F031         	call	_cmd_incrementn
  3654  003306  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3655  00330A  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3656  00330E  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3657  003310  0E00               	movlw	0
  3658  003312  2435               	addwf	??_display_laptime,w,c
  3659  003314  6E11               	movwf	wr16@addr,c
  3660  003316  0E80               	movlw	128
  3661  003318  2036               	addwfc	??_display_laptime+1,w,c
  3662  00331A  6E12               	movwf	wr16@addr+1,c
  3663  00331C  0E10               	movlw	16
  3664  00331E  2037               	addwfc	??_display_laptime+2,w,c
  3665  003320  6E13               	movwf	wr16@addr+2,c
  3666  003322  0E00               	movlw	0
  3667  003324  6E15               	movwf	wr16@value+1,c
  3668  003326  0EEB               	movlw	235
  3669  003328  6E14               	movwf	wr16@value,c
  3670  00332A  ECCB  F030         	call	_wr16	;wreg free
  3671  00332E  0E02               	movlw	2
  3672  003330  ECBC  F031         	call	_cmd_incrementn
  3673  003334  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3674  003338  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3675  00333C  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3676  00333E  0E00               	movlw	0
  3677  003340  2435               	addwf	??_display_laptime,w,c
  3678  003342  6E11               	movwf	wr16@addr,c
  3679  003344  0E80               	movlw	128
  3680  003346  2036               	addwfc	??_display_laptime+1,w,c
  3681  003348  6E12               	movwf	wr16@addr+1,c
  3682  00334A  0E10               	movlw	16
  3683  00334C  2037               	addwfc	??_display_laptime+2,w,c
  3684  00334E  6E13               	movwf	wr16@addr+2,c
  3685  003350  0E00               	movlw	0
  3686  003352  6E15               	movwf	wr16@value+1,c
  3687  003354  0E1E               	movlw	30
  3688  003356  6E14               	movwf	wr16@value,c
  3689  003358  ECCB  F030         	call	_wr16	;wreg free
  3690  00335C  0E02               	movlw	2
  3691  00335E  ECBC  F031         	call	_cmd_incrementn
  3692  003362  C04A  F035         	movff	_cmd_offset,??_display_laptime
  3693  003366  C04B  F036         	movff	_cmd_offset+1,??_display_laptime+1
  3694  00336A  6A37               	clrf	(??_display_laptime+2)& (0+255),c
  3695  00336C  0E00               	movlw	0
  3696  00336E  2435               	addwf	??_display_laptime,w,c
  3697  003370  6E11               	movwf	wr16@addr,c
  3698  003372  0E80               	movlw	128
  3699  003374  2036               	addwfc	??_display_laptime+1,w,c
  3700  003376  6E12               	movwf	wr16@addr+1,c
  3701  003378  0E10               	movlw	16
  3702  00337A  2037               	addwfc	??_display_laptime+2,w,c
  3703  00337C  6E13               	movwf	wr16@addr+2,c
  3704  00337E  0E00               	movlw	0
  3705  003380  6E15               	movwf	wr16@value+1,c
  3706  003382  0E02               	movlw	2
  3707  003384  6E14               	movwf	wr16@value,c
  3708  003386  ECCB  F030         	call	_wr16	;wreg free
  3709  00338A  0E02               	movlw	2
  3710  00338C  ECBC  F031         	call	_cmd_incrementn
  3711  003390  C027  F01E         	movff	display_laptime@current_dec,cmd@command
  3712  003394  C028  F01F         	movff	display_laptime@current_dec+1,cmd@command+1
  3713  003398  0E00               	movlw	0
  3714  00339A  BE1F               	btfsc	cmd@command+1,7,c
  3715  00339C  0EFF               	movlw	-1
  3716  00339E  6E20               	movwf	cmd@command+2,c
  3717  0033A0  6E21               	movwf	cmd@command+3,c
  3718  0033A2  EC06  F031         	call	_cmd	;wreg free
  3719  0033A6  0012               	return		;funcret
  3720  0033A8                     __end_of_display_laptime:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           intcon	equ	0xFF2
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           postdec1	equ	0xFE5
  3730                           plusw1	equ	0xFE3
  3731                           fsr1l	equ	0xFE1
  3732                           plusw2	equ	0xFDB
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function _display *****************
  3736 ;; Defined at:
  3737 ;;		line 3 in file "display.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  rpm             2   47[COMRAM] int 
  3740 ;;  oilP            2   49[COMRAM] int 
  3741 ;;  fuelP           2   51[COMRAM] int 
  3742 ;;  tp              2   53[COMRAM] int 
  3743 ;;  speed           2   55[COMRAM] int 
  3744 ;;  gear            2   57[COMRAM] int 
  3745 ;;  engTemp         2   59[COMRAM] int 
  3746 ;;  oilTemp         2   61[COMRAM] int 
  3747 ;;  battVolts       2   63[COMRAM] int 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3759 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;Total ram usage:       18 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    7
  3766 ;; This function calls:
  3767 ;;		_display_battery
  3768 ;;		_display_end
  3769 ;;		_display_fuel
  3770 ;;		_display_gear
  3771 ;;		_display_labels
  3772 ;;		_display_message
  3773 ;;		_display_oilPress
  3774 ;;		_display_oilTemp
  3775 ;;		_display_rpm
  3776 ;;		_display_speed
  3777 ;;		_display_start
  3778 ;;		_display_tp
  3779 ;;		_display_waterTemp
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text3
  3786  005D90                     __ptext3:
  3787                           	opt stack 0
  3788  005D90                     _display:
  3789                           	opt stack 23
  3790                           
  3791                           ;display.c: 4: display_start();
  3792                           
  3793                           ;incstack = 0
  3794  005D90  EC8E  F030         	call	_display_start	;wreg free
  3795                           
  3796                           ;display.c: 5: display_labels();
  3797  005D94  ECD4  F019         	call	_display_labels	;wreg free
  3798                           
  3799                           ;display.c: 6: display_waterTemp(engTemp);
  3800  005D98  C03C  F025         	movff	display@engTemp,display_waterTemp@temp
  3801  005D9C  C03D  F026         	movff	display@engTemp+1,display_waterTemp@temp+1
  3802  005DA0  EC58  F02B         	call	_display_waterTemp	;wreg free
  3803                           
  3804                           ;display.c: 7: display_oilTemp(oilTemp);
  3805  005DA4  C03E  F025         	movff	display@oilTemp,display_oilTemp@temp
  3806  005DA8  C03F  F026         	movff	display@oilTemp+1,display_oilTemp@temp+1
  3807  005DAC  EC2B  F02D         	call	_display_oilTemp	;wreg free
  3808                           
  3809                           ;display.c: 8: display_fuel(4.3);
  3810  005DB0  0E00               	movlw	0
  3811  005DB2  6E26               	movwf	display_fuel@level+1,c
  3812  005DB4  0E04               	movlw	4
  3813  005DB6  6E25               	movwf	display_fuel@level,c
  3814  005DB8  EC0F  F02E         	call	_display_fuel	;wreg free
  3815                           
  3816                           ;display.c: 9: display_battery(battVolts);
  3817  005DBC  C040  F025         	movff	display@battVolts,display_battery@volts
  3818  005DC0  C041  F026         	movff	display@battVolts+1,display_battery@volts+1
  3819  005DC4  EC30  F026         	call	_display_battery	;wreg free
  3820                           
  3821                           ;display.c: 10: display_oilPress(oilP);
  3822  005DC8  C032  F025         	movff	display@oilP,display_oilPress@pressure
  3823  005DCC  C033  F026         	movff	display@oilP+1,display_oilPress@pressure+1
  3824  005DD0  EC9D  F02D         	call	_display_oilPress	;wreg free
  3825                           
  3826                           ;display.c: 11: display_gear(gear);
  3827  005DD4  C03A  F025         	movff	display@gear,display_gear@gear
  3828  005DD8  C03B  F026         	movff	display@gear+1,display_gear@gear+1
  3829  005DDC  ECBB  F023         	call	_display_gear	;wreg free
  3830                           
  3831                           ;display.c: 12: display_rpm(rpm);
  3832  005DE0  C030  F025         	movff	display@rpm,display_rpm@rpm
  3833  005DE4  C031  F026         	movff	display@rpm+1,display_rpm@rpm+1
  3834  005DE8  ECC6  F007         	call	_display_rpm	;wreg free
  3835                           
  3836                           ;display.c: 13: display_speed(speed);
  3837  005DEC  C038  F025         	movff	display@speed,display_speed@speed
  3838  005DF0  C039  F026         	movff	display@speed+1,display_speed@speed+1
  3839  005DF4  ECB9  F02C         	call	_display_speed	;wreg free
  3840                           
  3841                           ;display.c: 14: display_tp(tp);
  3842  005DF8  C036  F025         	movff	display@tp,display_tp@tp
  3843  005DFC  C037  F026         	movff	display@tp+1,display_tp@tp+1
  3844  005E00  EC47  F02C         	call	_display_tp	;wreg free
  3845                           
  3846                           ;display.c: 15: display_message("hello");
  3847  005E04  0E35               	movlw	low STR_1
  3848  005E06  6E25               	movwf	display_message@message,c
  3849  005E08  0E0F               	movlw	high STR_1
  3850  005E0A  6E26               	movwf	display_message@message+1,c
  3851  005E0C  EC05  F02A         	call	_display_message	;wreg free
  3852                           
  3853                           ;display.c: 16: display_end();
  3854  005E10  EC4D  F030         	call	_display_end	;wreg free
  3855  005E14  0012               	return		;funcret
  3856  005E16                     __end_of_display:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           postdec1	equ	0xFE5
  3866                           plusw1	equ	0xFE3
  3867                           fsr1l	equ	0xFE1
  3868                           plusw2	equ	0xFDB
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function _display_waterTemp *****************
  3872 ;; Defined at:
  3873 ;;		line 119 in file "display.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  temp            2   36[COMRAM] int 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;Total ram usage:        5 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    6
  3894 ;; This function calls:
  3895 ;;		_cmd
  3896 ;;		_cmd_incrementn
  3897 ;;		_wr16
  3898 ;; This function is called by:
  3899 ;;		_display
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text4
  3905  0056B0                     __ptext4:
  3906                           	opt stack 0
  3907  0056B0                     _display_waterTemp:
  3908                           	opt stack 24
  3909                           
  3910                           ;display.c: 120: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  3911                           
  3912                           ;incstack = 0
  3913  0056B0  0EFF               	movlw	255
  3914  0056B2  6E1E               	movwf	cmd@command,c
  3915  0056B4  0EFF               	movlw	255
  3916  0056B6  6E1F               	movwf	cmd@command+1,c
  3917  0056B8  0EFF               	movlw	255
  3918  0056BA  6E20               	movwf	cmd@command+2,c
  3919  0056BC  0E04               	movlw	4
  3920  0056BE  6E21               	movwf	cmd@command+3,c
  3921  0056C0  EC06  F031         	call	_cmd	;wreg free
  3922                           
  3923                           ;display.c: 121: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 64);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 7);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increment
      +                          n(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(temp);
  3924  0056C4  0E2E               	movlw	46
  3925  0056C6  6E1E               	movwf	cmd@command,c
  3926  0056C8  0EFF               	movlw	255
  3927  0056CA  6E1F               	movwf	cmd@command+1,c
  3928  0056CC  0EFF               	movlw	255
  3929  0056CE  6E20               	movwf	cmd@command+2,c
  3930  0056D0  0EFF               	movlw	255
  3931  0056D2  6E21               	movwf	cmd@command+3,c
  3932  0056D4  EC06  F031         	call	_cmd	;wreg free
  3933  0056D8  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  3934  0056DC  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  3935  0056E0  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  3936  0056E2  0E00               	movlw	0
  3937  0056E4  2427               	addwf	??_display_waterTemp,w,c
  3938  0056E6  6E11               	movwf	wr16@addr,c
  3939  0056E8  0E80               	movlw	128
  3940  0056EA  2028               	addwfc	??_display_waterTemp+1,w,c
  3941  0056EC  6E12               	movwf	wr16@addr+1,c
  3942  0056EE  0E10               	movlw	16
  3943  0056F0  2029               	addwfc	??_display_waterTemp+2,w,c
  3944  0056F2  6E13               	movwf	wr16@addr+2,c
  3945  0056F4  0E00               	movlw	0
  3946  0056F6  6E15               	movwf	wr16@value+1,c
  3947  0056F8  0E40               	movlw	64
  3948  0056FA  6E14               	movwf	wr16@value,c
  3949  0056FC  ECCB  F030         	call	_wr16	;wreg free
  3950  005700  0E02               	movlw	2
  3951  005702  ECBC  F031         	call	_cmd_incrementn
  3952  005706  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  3953  00570A  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  3954  00570E  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  3955  005710  0E00               	movlw	0
  3956  005712  2427               	addwf	??_display_waterTemp,w,c
  3957  005714  6E11               	movwf	wr16@addr,c
  3958  005716  0E80               	movlw	128
  3959  005718  2028               	addwfc	??_display_waterTemp+1,w,c
  3960  00571A  6E12               	movwf	wr16@addr+1,c
  3961  00571C  0E10               	movlw	16
  3962  00571E  2029               	addwfc	??_display_waterTemp+2,w,c
  3963  005720  6E13               	movwf	wr16@addr+2,c
  3964  005722  0E00               	movlw	0
  3965  005724  6E15               	movwf	wr16@value+1,c
  3966  005726  0E07               	movlw	7
  3967  005728  6E14               	movwf	wr16@value,c
  3968  00572A  ECCB  F030         	call	_wr16	;wreg free
  3969  00572E  0E02               	movlw	2
  3970  005730  ECBC  F031         	call	_cmd_incrementn
  3971  005734  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  3972  005738  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  3973  00573C  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  3974  00573E  0E00               	movlw	0
  3975  005740  2427               	addwf	??_display_waterTemp,w,c
  3976  005742  6E11               	movwf	wr16@addr,c
  3977  005744  0E80               	movlw	128
  3978  005746  2028               	addwfc	??_display_waterTemp+1,w,c
  3979  005748  6E12               	movwf	wr16@addr+1,c
  3980  00574A  0E10               	movlw	16
  3981  00574C  2029               	addwfc	??_display_waterTemp+2,w,c
  3982  00574E  6E13               	movwf	wr16@addr+2,c
  3983  005750  0E00               	movlw	0
  3984  005752  6E15               	movwf	wr16@value+1,c
  3985  005754  0E1C               	movlw	28
  3986  005756  6E14               	movwf	wr16@value,c
  3987  005758  ECCB  F030         	call	_wr16	;wreg free
  3988  00575C  0E02               	movlw	2
  3989  00575E  ECBC  F031         	call	_cmd_incrementn
  3990  005762  C04A  F027         	movff	_cmd_offset,??_display_waterTemp
  3991  005766  C04B  F028         	movff	_cmd_offset+1,??_display_waterTemp+1
  3992  00576A  6A29               	clrf	(??_display_waterTemp+2)& (0+255),c
  3993  00576C  0E00               	movlw	0
  3994  00576E  2427               	addwf	??_display_waterTemp,w,c
  3995  005770  6E11               	movwf	wr16@addr,c
  3996  005772  0E80               	movlw	128
  3997  005774  2028               	addwfc	??_display_waterTemp+1,w,c
  3998  005776  6E12               	movwf	wr16@addr+1,c
  3999  005778  0E10               	movlw	16
  4000  00577A  2029               	addwfc	??_display_waterTemp+2,w,c
  4001  00577C  6E13               	movwf	wr16@addr+2,c
  4002  00577E  0E00               	movlw	0
  4003  005780  6E15               	movwf	wr16@value+1,c
  4004  005782  0E00               	movlw	0
  4005  005784  6E14               	movwf	wr16@value,c
  4006  005786  ECCB  F030         	call	_wr16	;wreg free
  4007  00578A  0E02               	movlw	2
  4008  00578C  ECBC  F031         	call	_cmd_incrementn
  4009  005790  C025  F01E         	movff	display_waterTemp@temp,cmd@command
  4010  005794  C026  F01F         	movff	display_waterTemp@temp+1,cmd@command+1
  4011  005798  0E00               	movlw	0
  4012  00579A  BE1F               	btfsc	cmd@command+1,7,c
  4013  00579C  0EFF               	movlw	-1
  4014  00579E  6E20               	movwf	cmd@command+2,c
  4015  0057A0  6E21               	movwf	cmd@command+3,c
  4016  0057A2  EC06  F031         	call	_cmd	;wreg free
  4017  0057A6  0012               	return		;funcret
  4018  0057A8                     __end_of_display_waterTemp:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           intcon	equ	0xFF2
  4025                           postinc0	equ	0xFEE
  4026                           wreg	equ	0xFE8
  4027                           postdec1	equ	0xFE5
  4028                           plusw1	equ	0xFE3
  4029                           fsr1l	equ	0xFE1
  4030                           plusw2	equ	0xFDB
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function _display_tp *****************
  4034 ;; Defined at:
  4035 ;;		line 142 in file "display.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  tp              2   36[COMRAM] int 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;Total ram usage:        5 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    6
  4056 ;; This function calls:
  4057 ;;		_cmd
  4058 ;;		_cmd_incrementn
  4059 ;;		_wr16
  4060 ;; This function is called by:
  4061 ;;		_display
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text5
  4067  00588E                     __ptext5:
  4068                           	opt stack 0
  4069  00588E                     _display_tp:
  4070                           	opt stack 24
  4071                           
  4072                           ;display.c: 143: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 455);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 166);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 30);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(tp);
  4073                           
  4074                           ;incstack = 0
  4075  00588E  0E2E               	movlw	46
  4076  005890  6E1E               	movwf	cmd@command,c
  4077  005892  0EFF               	movlw	255
  4078  005894  6E1F               	movwf	cmd@command+1,c
  4079  005896  0EFF               	movlw	255
  4080  005898  6E20               	movwf	cmd@command+2,c
  4081  00589A  0EFF               	movlw	255
  4082  00589C  6E21               	movwf	cmd@command+3,c
  4083  00589E  EC06  F031         	call	_cmd	;wreg free
  4084  0058A2  C04A  F027         	movff	_cmd_offset,??_display_tp
  4085  0058A6  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4086  0058AA  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4087  0058AC  0E00               	movlw	0
  4088  0058AE  2427               	addwf	??_display_tp,w,c
  4089  0058B0  6E11               	movwf	wr16@addr,c
  4090  0058B2  0E80               	movlw	128
  4091  0058B4  2028               	addwfc	??_display_tp+1,w,c
  4092  0058B6  6E12               	movwf	wr16@addr+1,c
  4093  0058B8  0E10               	movlw	16
  4094  0058BA  2029               	addwfc	??_display_tp+2,w,c
  4095  0058BC  6E13               	movwf	wr16@addr+2,c
  4096  0058BE  0E01               	movlw	1
  4097  0058C0  6E15               	movwf	wr16@value+1,c
  4098  0058C2  0EC7               	movlw	199
  4099  0058C4  6E14               	movwf	wr16@value,c
  4100  0058C6  ECCB  F030         	call	_wr16	;wreg free
  4101  0058CA  0E02               	movlw	2
  4102  0058CC  ECBC  F031         	call	_cmd_incrementn
  4103  0058D0  C04A  F027         	movff	_cmd_offset,??_display_tp
  4104  0058D4  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4105  0058D8  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4106  0058DA  0E00               	movlw	0
  4107  0058DC  2427               	addwf	??_display_tp,w,c
  4108  0058DE  6E11               	movwf	wr16@addr,c
  4109  0058E0  0E80               	movlw	128
  4110  0058E2  2028               	addwfc	??_display_tp+1,w,c
  4111  0058E4  6E12               	movwf	wr16@addr+1,c
  4112  0058E6  0E10               	movlw	16
  4113  0058E8  2029               	addwfc	??_display_tp+2,w,c
  4114  0058EA  6E13               	movwf	wr16@addr+2,c
  4115  0058EC  0E00               	movlw	0
  4116  0058EE  6E15               	movwf	wr16@value+1,c
  4117  0058F0  0EA6               	movlw	166
  4118  0058F2  6E14               	movwf	wr16@value,c
  4119  0058F4  ECCB  F030         	call	_wr16	;wreg free
  4120  0058F8  0E02               	movlw	2
  4121  0058FA  ECBC  F031         	call	_cmd_incrementn
  4122  0058FE  C04A  F027         	movff	_cmd_offset,??_display_tp
  4123  005902  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4124  005906  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4125  005908  0E00               	movlw	0
  4126  00590A  2427               	addwf	??_display_tp,w,c
  4127  00590C  6E11               	movwf	wr16@addr,c
  4128  00590E  0E80               	movlw	128
  4129  005910  2028               	addwfc	??_display_tp+1,w,c
  4130  005912  6E12               	movwf	wr16@addr+1,c
  4131  005914  0E10               	movlw	16
  4132  005916  2029               	addwfc	??_display_tp+2,w,c
  4133  005918  6E13               	movwf	wr16@addr+2,c
  4134  00591A  0E00               	movlw	0
  4135  00591C  6E15               	movwf	wr16@value+1,c
  4136  00591E  0E1E               	movlw	30
  4137  005920  6E14               	movwf	wr16@value,c
  4138  005922  ECCB  F030         	call	_wr16	;wreg free
  4139  005926  0E02               	movlw	2
  4140  005928  ECBC  F031         	call	_cmd_incrementn
  4141  00592C  C04A  F027         	movff	_cmd_offset,??_display_tp
  4142  005930  C04B  F028         	movff	_cmd_offset+1,??_display_tp+1
  4143  005934  6A29               	clrf	(??_display_tp+2)& (0+255),c
  4144  005936  0E00               	movlw	0
  4145  005938  2427               	addwf	??_display_tp,w,c
  4146  00593A  6E11               	movwf	wr16@addr,c
  4147  00593C  0E80               	movlw	128
  4148  00593E  2028               	addwfc	??_display_tp+1,w,c
  4149  005940  6E12               	movwf	wr16@addr+1,c
  4150  005942  0E10               	movlw	16
  4151  005944  2029               	addwfc	??_display_tp+2,w,c
  4152  005946  6E13               	movwf	wr16@addr+2,c
  4153  005948  0E08               	movlw	8
  4154  00594A  6E15               	movwf	wr16@value+1,c
  4155  00594C  0E00               	movlw	0
  4156  00594E  6E14               	movwf	wr16@value,c
  4157  005950  ECCB  F030         	call	_wr16	;wreg free
  4158  005954  0E02               	movlw	2
  4159  005956  ECBC  F031         	call	_cmd_incrementn
  4160  00595A  C025  F01E         	movff	display_tp@tp,cmd@command
  4161  00595E  C026  F01F         	movff	display_tp@tp+1,cmd@command+1
  4162  005962  0E00               	movlw	0
  4163  005964  BE1F               	btfsc	cmd@command+1,7,c
  4164  005966  0EFF               	movlw	-1
  4165  005968  6E20               	movwf	cmd@command+2,c
  4166  00596A  6E21               	movwf	cmd@command+3,c
  4167  00596C  EC06  F031         	call	_cmd	;wreg free
  4168  005970  0012               	return		;funcret
  4169  005972                     __end_of_display_tp:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           intcon	equ	0xFF2
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           postdec1	equ	0xFE5
  4179                           plusw1	equ	0xFE3
  4180                           fsr1l	equ	0xFE1
  4181                           plusw2	equ	0xFDB
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function _display_start *****************
  4185 ;; Defined at:
  4186 ;;		line 19 in file "display.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    6
  4207 ;; This function calls:
  4208 ;;		_cmd
  4209 ;; This function is called by:
  4210 ;;		_display
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text6
  4216  00611C                     __ptext6:
  4217                           	opt stack 0
  4218  00611C                     _display_start:
  4219                           	opt stack 24
  4220                           
  4221                           ;display.c: 20: cmd(4294967040UL);
  4222                           
  4223                           ;incstack = 0
  4224  00611C  0E00               	movlw	0
  4225  00611E  6E1E               	movwf	cmd@command,c
  4226  006120  0EFF               	movlw	255
  4227  006122  6E1F               	movwf	cmd@command+1,c
  4228  006124  0EFF               	movlw	255
  4229  006126  6E20               	movwf	cmd@command+2,c
  4230  006128  0EFF               	movlw	255
  4231  00612A  6E21               	movwf	cmd@command+3,c
  4232  00612C  EC06  F031         	call	_cmd	;wreg free
  4233                           
  4234                           ;display.c: 21: cmd(((2UL<<24)|(((20)&255UL)<<16)|(((20)&255UL)<<8)|(((20)&255UL)<<0)));
  4235  006130  0E14               	movlw	20
  4236  006132  6E1E               	movwf	cmd@command,c
  4237  006134  0E14               	movlw	20
  4238  006136  6E1F               	movwf	cmd@command+1,c
  4239  006138  0E14               	movlw	20
  4240  00613A  6E20               	movwf	cmd@command+2,c
  4241  00613C  0E02               	movlw	2
  4242  00613E  6E21               	movwf	cmd@command+3,c
  4243  006140  EC06  F031         	call	_cmd	;wreg free
  4244                           
  4245                           ;display.c: 22: cmd(((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)));
  4246  006144  0E07               	movlw	7
  4247  006146  6E1E               	movwf	cmd@command,c
  4248  006148  0E00               	movlw	0
  4249  00614A  6E1F               	movwf	cmd@command+1,c
  4250  00614C  0E00               	movlw	0
  4251  00614E  6E20               	movwf	cmd@command+2,c
  4252  006150  0E26               	movlw	38
  4253  006152  6E21               	movwf	cmd@command+3,c
  4254  006154  EC06  F031         	call	_cmd	;wreg free
  4255  006158  0012               	return		;funcret
  4256  00615A                     __end_of_display_start:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           intcon	equ	0xFF2
  4263                           postinc0	equ	0xFEE
  4264                           wreg	equ	0xFE8
  4265                           postdec1	equ	0xFE5
  4266                           plusw1	equ	0xFE3
  4267                           fsr1l	equ	0xFE1
  4268                           plusw2	equ	0xFDB
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function _display_speed *****************
  4272 ;; Defined at:
  4273 ;;		line 146 in file "display.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  speed           2   36[COMRAM] int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;Total ram usage:        5 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    6
  4294 ;; This function calls:
  4295 ;;		_cmd
  4296 ;;		_cmd_incrementn
  4297 ;;		_wr16
  4298 ;; This function is called by:
  4299 ;;		_display
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text7
  4305  005972                     __ptext7:
  4306                           	opt stack 0
  4307  005972                     _display_speed:
  4308                           	opt stack 24
  4309                           
  4310                           ;display.c: 147: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 360 + 115);cmd_incrementn(
      +                          2);wr16(1081344UL+cmd_offset, 130 - 10);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31)
      +                          ;cmd_incrementn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(speed);
  4311                           
  4312                           ;incstack = 0
  4313  005972  0E2E               	movlw	46
  4314  005974  6E1E               	movwf	cmd@command,c
  4315  005976  0EFF               	movlw	255
  4316  005978  6E1F               	movwf	cmd@command+1,c
  4317  00597A  0EFF               	movlw	255
  4318  00597C  6E20               	movwf	cmd@command+2,c
  4319  00597E  0EFF               	movlw	255
  4320  005980  6E21               	movwf	cmd@command+3,c
  4321  005982  EC06  F031         	call	_cmd	;wreg free
  4322  005986  C04A  F027         	movff	_cmd_offset,??_display_speed
  4323  00598A  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4324  00598E  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4325  005990  0E00               	movlw	0
  4326  005992  2427               	addwf	??_display_speed,w,c
  4327  005994  6E11               	movwf	wr16@addr,c
  4328  005996  0E80               	movlw	128
  4329  005998  2028               	addwfc	??_display_speed+1,w,c
  4330  00599A  6E12               	movwf	wr16@addr+1,c
  4331  00599C  0E10               	movlw	16
  4332  00599E  2029               	addwfc	??_display_speed+2,w,c
  4333  0059A0  6E13               	movwf	wr16@addr+2,c
  4334  0059A2  0E01               	movlw	1
  4335  0059A4  6E15               	movwf	wr16@value+1,c
  4336  0059A6  0EDB               	movlw	219
  4337  0059A8  6E14               	movwf	wr16@value,c
  4338  0059AA  ECCB  F030         	call	_wr16	;wreg free
  4339  0059AE  0E02               	movlw	2
  4340  0059B0  ECBC  F031         	call	_cmd_incrementn
  4341  0059B4  C04A  F027         	movff	_cmd_offset,??_display_speed
  4342  0059B8  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4343  0059BC  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4344  0059BE  0E00               	movlw	0
  4345  0059C0  2427               	addwf	??_display_speed,w,c
  4346  0059C2  6E11               	movwf	wr16@addr,c
  4347  0059C4  0E80               	movlw	128
  4348  0059C6  2028               	addwfc	??_display_speed+1,w,c
  4349  0059C8  6E12               	movwf	wr16@addr+1,c
  4350  0059CA  0E10               	movlw	16
  4351  0059CC  2029               	addwfc	??_display_speed+2,w,c
  4352  0059CE  6E13               	movwf	wr16@addr+2,c
  4353  0059D0  0E00               	movlw	0
  4354  0059D2  6E15               	movwf	wr16@value+1,c
  4355  0059D4  0E78               	movlw	120
  4356  0059D6  6E14               	movwf	wr16@value,c
  4357  0059D8  ECCB  F030         	call	_wr16	;wreg free
  4358  0059DC  0E02               	movlw	2
  4359  0059DE  ECBC  F031         	call	_cmd_incrementn
  4360  0059E2  C04A  F027         	movff	_cmd_offset,??_display_speed
  4361  0059E6  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4362  0059EA  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4363  0059EC  0E00               	movlw	0
  4364  0059EE  2427               	addwf	??_display_speed,w,c
  4365  0059F0  6E11               	movwf	wr16@addr,c
  4366  0059F2  0E80               	movlw	128
  4367  0059F4  2028               	addwfc	??_display_speed+1,w,c
  4368  0059F6  6E12               	movwf	wr16@addr+1,c
  4369  0059F8  0E10               	movlw	16
  4370  0059FA  2029               	addwfc	??_display_speed+2,w,c
  4371  0059FC  6E13               	movwf	wr16@addr+2,c
  4372  0059FE  0E00               	movlw	0
  4373  005A00  6E15               	movwf	wr16@value+1,c
  4374  005A02  0E1F               	movlw	31
  4375  005A04  6E14               	movwf	wr16@value,c
  4376  005A06  ECCB  F030         	call	_wr16	;wreg free
  4377  005A0A  0E02               	movlw	2
  4378  005A0C  ECBC  F031         	call	_cmd_incrementn
  4379  005A10  C04A  F027         	movff	_cmd_offset,??_display_speed
  4380  005A14  C04B  F028         	movff	_cmd_offset+1,??_display_speed+1
  4381  005A18  6A29               	clrf	(??_display_speed+2)& (0+255),c
  4382  005A1A  0E00               	movlw	0
  4383  005A1C  2427               	addwf	??_display_speed,w,c
  4384  005A1E  6E11               	movwf	wr16@addr,c
  4385  005A20  0E80               	movlw	128
  4386  005A22  2028               	addwfc	??_display_speed+1,w,c
  4387  005A24  6E12               	movwf	wr16@addr+1,c
  4388  005A26  0E10               	movlw	16
  4389  005A28  2029               	addwfc	??_display_speed+2,w,c
  4390  005A2A  6E13               	movwf	wr16@addr+2,c
  4391  005A2C  0E08               	movlw	8
  4392  005A2E  6E15               	movwf	wr16@value+1,c
  4393  005A30  0E00               	movlw	0
  4394  005A32  6E14               	movwf	wr16@value,c
  4395  005A34  ECCB  F030         	call	_wr16	;wreg free
  4396  005A38  0E02               	movlw	2
  4397  005A3A  ECBC  F031         	call	_cmd_incrementn
  4398  005A3E  C025  F01E         	movff	display_speed@speed,cmd@command
  4399  005A42  C026  F01F         	movff	display_speed@speed+1,cmd@command+1
  4400  005A46  0E00               	movlw	0
  4401  005A48  BE1F               	btfsc	cmd@command+1,7,c
  4402  005A4A  0EFF               	movlw	-1
  4403  005A4C  6E20               	movwf	cmd@command+2,c
  4404  005A4E  6E21               	movwf	cmd@command+3,c
  4405  005A50  EC06  F031         	call	_cmd	;wreg free
  4406  005A54  0012               	return		;funcret
  4407  005A56                     __end_of_display_speed:
  4408                           	opt stack 0
  4409                           tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           intcon	equ	0xFF2
  4414                           postinc0	equ	0xFEE
  4415                           wreg	equ	0xFE8
  4416                           postdec1	equ	0xFE5
  4417                           plusw1	equ	0xFE3
  4418                           fsr1l	equ	0xFE1
  4419                           plusw2	equ	0xFDB
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _display_rpm *****************
  4423 ;; Defined at:
  4424 ;;		line 150 in file "display.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  rpm             2   36[COMRAM] int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  val             2   41[COMRAM] int 
  4429 ;;  first_digit     2   45[COMRAM] int 
  4430 ;;  second_digit    2   43[COMRAM] int 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;Total ram usage:       11 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    6
  4447 ;; This function calls:
  4448 ;;		___awdiv
  4449 ;;		___awmod
  4450 ;;		___wmul
  4451 ;;		_cmd
  4452 ;;		_cmd_incrementn
  4453 ;;		_wr16
  4454 ;;		_wr8s
  4455 ;; This function is called by:
  4456 ;;		_display
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text8
  4462  000F8C                     __ptext8:
  4463                           	opt stack 0
  4464  000F8C                     _display_rpm:
  4465                           	opt stack 24
  4466                           
  4467                           ;display.c: 151: int first_digit = rpm/1000;
  4468                           
  4469                           ;incstack = 0
  4470  000F8C  C025  F010         	movff	display_rpm@rpm,___awdiv@dividend
  4471  000F90  C026  F011         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4472  000F94  0E03               	movlw	3
  4473  000F96  6E13               	movwf	___awdiv@divisor+1,c
  4474  000F98  0EE8               	movlw	232
  4475  000F9A  6E12               	movwf	___awdiv@divisor,c
  4476  000F9C  EC4E  F02F         	call	___awdiv	;wreg free
  4477  000FA0  C010  F02E         	movff	?___awdiv,display_rpm@first_digit
  4478  000FA4  C011  F02F         	movff	?___awdiv+1,display_rpm@first_digit+1
  4479                           
  4480                           ;display.c: 152: int second_digit = (rpm/100)%10;
  4481  000FA8  0E00               	movlw	0
  4482  000FAA  6E13               	movwf	___awdiv@divisor+1,c
  4483  000FAC  0E64               	movlw	100
  4484  000FAE  6E12               	movwf	___awdiv@divisor,c
  4485  000FB0  C025  F010         	movff	display_rpm@rpm,___awdiv@dividend
  4486  000FB4  C026  F011         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  4487  000FB8  EC4E  F02F         	call	___awdiv	;wreg free
  4488  000FBC  C010  F018         	movff	?___awdiv,___awmod@dividend
  4489  000FC0  C011  F019         	movff	?___awdiv+1,___awmod@dividend+1
  4490  000FC4  0E00               	movlw	0
  4491  000FC6  6E1B               	movwf	___awmod@divisor+1,c
  4492  000FC8  0E0A               	movlw	10
  4493  000FCA  6E1A               	movwf	___awmod@divisor,c
  4494  000FCC  ECCC  F02F         	call	___awmod	;wreg free
  4495  000FD0  C018  F02C         	movff	?___awmod,display_rpm@second_digit
  4496  000FD4  C019  F02D         	movff	?___awmod+1,display_rpm@second_digit+1
  4497                           
  4498                           ;display.c: 153: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  4499  000FD8  0EFF               	movlw	255
  4500  000FDA  6E1E               	movwf	cmd@command,c
  4501  000FDC  0EFF               	movlw	255
  4502  000FDE  6E1F               	movwf	cmd@command+1,c
  4503  000FE0  0EFF               	movlw	255
  4504  000FE2  6E20               	movwf	cmd@command+2,c
  4505  000FE4  0E04               	movlw	4
  4506  000FE6  6E21               	movwf	cmd@command+3,c
  4507  000FE8  EC06  F031         	call	_cmd	;wreg free
  4508                           
  4509                           ;display.c: 155: cmd(4294967049UL);cmd(0x323232);
  4510  000FEC  0E09               	movlw	9
  4511  000FEE  6E1E               	movwf	cmd@command,c
  4512  000FF0  0EFF               	movlw	255
  4513  000FF2  6E1F               	movwf	cmd@command+1,c
  4514  000FF4  0EFF               	movlw	255
  4515  000FF6  6E20               	movwf	cmd@command+2,c
  4516  000FF8  0EFF               	movlw	255
  4517  000FFA  6E21               	movwf	cmd@command+3,c
  4518  000FFC  EC06  F031         	call	_cmd	;wreg free
  4519  001000  0E32               	movlw	50
  4520  001002  6E1E               	movwf	cmd@command,c
  4521  001004  0E32               	movlw	50
  4522  001006  6E1F               	movwf	cmd@command+1,c
  4523  001008  0E32               	movlw	50
  4524  00100A  6E20               	movwf	cmd@command+2,c
  4525  00100C  0E00               	movlw	0
  4526  00100E  6E21               	movwf	cmd@command+3,c
  4527  001010  EC06  F031         	call	_cmd	;wreg free
  4528                           
  4529                           ;display.c: 156: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 16384UL | 4096UL | 256UL);cmd_incrementn(2);wr16(108
      +                          134
  4530  001014  0E13               	movlw	19
  4531  001016  6E1E               	movwf	cmd@command,c
  4532  001018  0EFF               	movlw	255
  4533  00101A  6E1F               	movwf	cmd@command+1,c
  4534  00101C  0EFF               	movlw	255
  4535  00101E  6E20               	movwf	cmd@command+2,c
  4536  001020  0EFF               	movlw	255
  4537  001022  6E21               	movwf	cmd@command+3,c
  4538  001024  EC06  F031         	call	_cmd	;wreg free
  4539  001028  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4540  00102C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4541  001030  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4542  001032  0E00               	movlw	0
  4543  001034  2427               	addwf	??_display_rpm,w,c
  4544  001036  6E11               	movwf	wr16@addr,c
  4545  001038  0E80               	movlw	128
  4546  00103A  2028               	addwfc	??_display_rpm+1,w,c
  4547  00103C  6E12               	movwf	wr16@addr+1,c
  4548  00103E  0E10               	movlw	16
  4549  001040  2029               	addwfc	??_display_rpm+2,w,c
  4550  001042  6E13               	movwf	wr16@addr+2,c
  4551  001044  0E00               	movlw	0
  4552  001046  6E15               	movwf	wr16@value+1,c
  4553  001048  0EF0               	movlw	240
  4554  00104A  6E14               	movwf	wr16@value,c
  4555  00104C  ECCB  F030         	call	_wr16	;wreg free
  4556  001050  0E02               	movlw	2
  4557  001052  ECBC  F031         	call	_cmd_incrementn
  4558  001056  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4559  00105A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4560  00105E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4561  001060  0E00               	movlw	0
  4562  001062  2427               	addwf	??_display_rpm,w,c
  4563  001064  6E11               	movwf	wr16@addr,c
  4564  001066  0E80               	movlw	128
  4565  001068  2028               	addwfc	??_display_rpm+1,w,c
  4566  00106A  6E12               	movwf	wr16@addr+1,c
  4567  00106C  0E10               	movlw	16
  4568  00106E  2029               	addwfc	??_display_rpm+2,w,c
  4569  001070  6E13               	movwf	wr16@addr+2,c
  4570  001072  0E00               	movlw	0
  4571  001074  6E15               	movwf	wr16@value+1,c
  4572  001076  0E73               	movlw	115
  4573  001078  6E14               	movwf	wr16@value,c
  4574  00107A  ECCB  F030         	call	_wr16	;wreg free
  4575  00107E  0E02               	movlw	2
  4576  001080  ECBC  F031         	call	_cmd_incrementn
  4577  001084  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4578  001088  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4579  00108C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4580  00108E  0E00               	movlw	0
  4581  001090  2427               	addwf	??_display_rpm,w,c
  4582  001092  6E11               	movwf	wr16@addr,c
  4583  001094  0E80               	movlw	128
  4584  001096  2028               	addwfc	??_display_rpm+1,w,c
  4585  001098  6E12               	movwf	wr16@addr+1,c
  4586  00109A  0E10               	movlw	16
  4587  00109C  2029               	addwfc	??_display_rpm+2,w,c
  4588  00109E  6E13               	movwf	wr16@addr+2,c
  4589  0010A0  0E00               	movlw	0
  4590  0010A2  6E15               	movwf	wr16@value+1,c
  4591  0010A4  0E82               	movlw	130
  4592  0010A6  6E14               	movwf	wr16@value,c
  4593  0010A8  ECCB  F030         	call	_wr16	;wreg free
  4594  0010AC  0E02               	movlw	2
  4595  0010AE  ECBC  F031         	call	_cmd_incrementn
  4596  0010B2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4597  0010B6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4598  0010BA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4599  0010BC  0E00               	movlw	0
  4600  0010BE  2427               	addwf	??_display_rpm,w,c
  4601  0010C0  6E11               	movwf	wr16@addr,c
  4602  0010C2  0E80               	movlw	128
  4603  0010C4  2028               	addwfc	??_display_rpm+1,w,c
  4604  0010C6  6E12               	movwf	wr16@addr+1,c
  4605  0010C8  0E10               	movlw	16
  4606  0010CA  2029               	addwfc	??_display_rpm+2,w,c
  4607  0010CC  6E13               	movwf	wr16@addr+2,c
  4608  0010CE  0E51               	movlw	81
  4609  0010D0  6E15               	movwf	wr16@value+1,c
  4610  0010D2  0E00               	movlw	0
  4611  0010D4  6E14               	movwf	wr16@value,c
  4612  0010D6  ECCB  F030         	call	_wr16	;wreg free
  4613  0010DA  0E02               	movlw	2
  4614  0010DC  ECBC  F031         	call	_cmd_incrementn
  4615  0010E0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4616  0010E4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4617  0010E8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4618  0010EA  0E00               	movlw	0
  4619  0010EC  2427               	addwf	??_display_rpm,w,c
  4620  0010EE  6E11               	movwf	wr16@addr,c
  4621  0010F0  0E80               	movlw	128
  4622  0010F2  2028               	addwfc	??_display_rpm+1,w,c
  4623  0010F4  6E12               	movwf	wr16@addr+1,c
  4624  0010F6  0E10               	movlw	16
  4625  0010F8  2029               	addwfc	??_display_rpm+2,w,c
  4626  0010FA  6E13               	movwf	wr16@addr+2,c
  4627  0010FC  0E00               	movlw	0
  4628  0010FE  6E15               	movwf	wr16@value+1,c
  4629  001100  0E0A               	movlw	10
  4630  001102  6E14               	movwf	wr16@value,c
  4631  001104  ECCB  F030         	call	_wr16	;wreg free
  4632  001108  0E02               	movlw	2
  4633  00110A  ECBC  F031         	call	_cmd_incrementn
  4634  00110E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4635  001112  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4636  001116  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4637  001118  0E00               	movlw	0
  4638  00111A  2427               	addwf	??_display_rpm,w,c
  4639  00111C  6E11               	movwf	wr16@addr,c
  4640  00111E  0E80               	movlw	128
  4641  001120  2028               	addwfc	??_display_rpm+1,w,c
  4642  001122  6E12               	movwf	wr16@addr+1,c
  4643  001124  0E10               	movlw	16
  4644  001126  2029               	addwfc	??_display_rpm+2,w,c
  4645  001128  6E13               	movwf	wr16@addr+2,c
  4646  00112A  0E00               	movlw	0
  4647  00112C  6E15               	movwf	wr16@value+1,c
  4648  00112E  0E05               	movlw	5
  4649  001130  6E14               	movwf	wr16@value,c
  4650  001132  ECCB  F030         	call	_wr16	;wreg free
  4651  001136  0E02               	movlw	2
  4652  001138  ECBC  F031         	call	_cmd_incrementn
  4653  00113C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4654  001140  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4655  001144  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4656  001146  0E00               	movlw	0
  4657  001148  2427               	addwf	??_display_rpm,w,c
  4658  00114A  6E11               	movwf	wr16@addr,c
  4659  00114C  0E80               	movlw	128
  4660  00114E  2028               	addwfc	??_display_rpm+1,w,c
  4661  001150  6E12               	movwf	wr16@addr+1,c
  4662  001152  0E10               	movlw	16
  4663  001154  2029               	addwfc	??_display_rpm+2,w,c
  4664  001156  6E13               	movwf	wr16@addr+2,c
  4665  001158  0E00               	movlw	0
  4666  00115A  6E15               	movwf	wr16@value+1,c
  4667  00115C  0E00               	movlw	0
  4668  00115E  6E14               	movwf	wr16@value,c
  4669  001160  ECCB  F030         	call	_wr16	;wreg free
  4670  001164  0E02               	movlw	2
  4671  001166  ECBC  F031         	call	_cmd_incrementn
  4672  00116A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4673  00116E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4674  001172  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4675  001174  0E00               	movlw	0
  4676  001176  2427               	addwf	??_display_rpm,w,c
  4677  001178  6E11               	movwf	wr16@addr,c
  4678  00117A  0E80               	movlw	128
  4679  00117C  2028               	addwfc	??_display_rpm+1,w,c
  4680  00117E  6E12               	movwf	wr16@addr+1,c
  4681  001180  0E10               	movlw	16
  4682  001182  2029               	addwfc	??_display_rpm+2,w,c
  4683  001184  6E13               	movwf	wr16@addr+2,c
  4684  001186  0E00               	movlw	0
  4685  001188  6E15               	movwf	wr16@value+1,c
  4686  00118A  0E32               	movlw	50
  4687  00118C  6E14               	movwf	wr16@value,c
  4688  00118E  ECCB  F030         	call	_wr16	;wreg free
  4689  001192  0E02               	movlw	2
  4690  001194  ECBC  F031         	call	_cmd_incrementn
  4691                           
  4692                           ;display.c: 158: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  4693  001198  0E00               	movlw	0
  4694  00119A  6E1E               	movwf	cmd@command,c
  4695  00119C  0E00               	movlw	0
  4696  00119E  6E1F               	movwf	cmd@command+1,c
  4697  0011A0  0EFF               	movlw	255
  4698  0011A2  6E20               	movwf	cmd@command+2,c
  4699  0011A4  0E04               	movlw	4
  4700  0011A6  6E21               	movwf	cmd@command+3,c
  4701  0011A8  EC06  F031         	call	_cmd	;wreg free
  4702                           
  4703                           ;display.c: 159: if(first_digit < 2) {
  4704  0011AC  BE2F               	btfsc	display_rpm@first_digit+1,7,c
  4705  0011AE  D006               	goto	l4051
  4706  0011B0  502F               	movf	display_rpm@first_digit+1,w,c
  4707  0011B2  E103               	bnz	u931
  4708  0011B4  0E02               	movlw	2
  4709  0011B6  5C2E               	subwf	display_rpm@first_digit,w,c
  4710  0011B8  B0D8               	btfsc	status,0,c
  4711  0011BA                     u931:
  4712  0011BA  D0C3               	goto	l4053
  4713  0011BC                     l4051:
  4714                           
  4715                           ;display.c: 160: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 8192UL|4096UL | 256UL);cmd_incrementn(2);wr16(108134
      +                          4UL
  4716  0011BC  0E13               	movlw	19
  4717  0011BE  6E1E               	movwf	cmd@command,c
  4718  0011C0  0EFF               	movlw	255
  4719  0011C2  6E1F               	movwf	cmd@command+1,c
  4720  0011C4  0EFF               	movlw	255
  4721  0011C6  6E20               	movwf	cmd@command+2,c
  4722  0011C8  0EFF               	movlw	255
  4723  0011CA  6E21               	movwf	cmd@command+3,c
  4724  0011CC  EC06  F031         	call	_cmd	;wreg free
  4725  0011D0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4726  0011D4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4727  0011D8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4728  0011DA  0E00               	movlw	0
  4729  0011DC  2427               	addwf	??_display_rpm,w,c
  4730  0011DE  6E11               	movwf	wr16@addr,c
  4731  0011E0  0E80               	movlw	128
  4732  0011E2  2028               	addwfc	??_display_rpm+1,w,c
  4733  0011E4  6E12               	movwf	wr16@addr+1,c
  4734  0011E6  0E10               	movlw	16
  4735  0011E8  2029               	addwfc	??_display_rpm+2,w,c
  4736  0011EA  6E13               	movwf	wr16@addr+2,c
  4737  0011EC  0E00               	movlw	0
  4738  0011EE  6E15               	movwf	wr16@value+1,c
  4739  0011F0  0EF0               	movlw	240
  4740  0011F2  6E14               	movwf	wr16@value,c
  4741  0011F4  ECCB  F030         	call	_wr16	;wreg free
  4742  0011F8  0E02               	movlw	2
  4743  0011FA  ECBC  F031         	call	_cmd_incrementn
  4744  0011FE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4745  001202  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4746  001206  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4747  001208  0E00               	movlw	0
  4748  00120A  2427               	addwf	??_display_rpm,w,c
  4749  00120C  6E11               	movwf	wr16@addr,c
  4750  00120E  0E80               	movlw	128
  4751  001210  2028               	addwfc	??_display_rpm+1,w,c
  4752  001212  6E12               	movwf	wr16@addr+1,c
  4753  001214  0E10               	movlw	16
  4754  001216  2029               	addwfc	??_display_rpm+2,w,c
  4755  001218  6E13               	movwf	wr16@addr+2,c
  4756  00121A  0E00               	movlw	0
  4757  00121C  6E15               	movwf	wr16@value+1,c
  4758  00121E  0E73               	movlw	115
  4759  001220  6E14               	movwf	wr16@value,c
  4760  001222  ECCB  F030         	call	_wr16	;wreg free
  4761  001226  0E02               	movlw	2
  4762  001228  ECBC  F031         	call	_cmd_incrementn
  4763  00122C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4764  001230  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4765  001234  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4766  001236  0E00               	movlw	0
  4767  001238  2427               	addwf	??_display_rpm,w,c
  4768  00123A  6E11               	movwf	wr16@addr,c
  4769  00123C  0E80               	movlw	128
  4770  00123E  2028               	addwfc	??_display_rpm+1,w,c
  4771  001240  6E12               	movwf	wr16@addr+1,c
  4772  001242  0E10               	movlw	16
  4773  001244  2029               	addwfc	??_display_rpm+2,w,c
  4774  001246  6E13               	movwf	wr16@addr+2,c
  4775  001248  0E00               	movlw	0
  4776  00124A  6E15               	movwf	wr16@value+1,c
  4777  00124C  0E82               	movlw	130
  4778  00124E  6E14               	movwf	wr16@value,c
  4779  001250  ECCB  F030         	call	_wr16	;wreg free
  4780  001254  0E02               	movlw	2
  4781  001256  ECBC  F031         	call	_cmd_incrementn
  4782  00125A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4783  00125E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4784  001262  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4785  001264  0E00               	movlw	0
  4786  001266  2427               	addwf	??_display_rpm,w,c
  4787  001268  6E11               	movwf	wr16@addr,c
  4788  00126A  0E80               	movlw	128
  4789  00126C  2028               	addwfc	??_display_rpm+1,w,c
  4790  00126E  6E12               	movwf	wr16@addr+1,c
  4791  001270  0E10               	movlw	16
  4792  001272  2029               	addwfc	??_display_rpm+2,w,c
  4793  001274  6E13               	movwf	wr16@addr+2,c
  4794  001276  0E31               	movlw	49
  4795  001278  6E15               	movwf	wr16@value+1,c
  4796  00127A  0E00               	movlw	0
  4797  00127C  6E14               	movwf	wr16@value,c
  4798  00127E  ECCB  F030         	call	_wr16	;wreg free
  4799  001282  0E02               	movlw	2
  4800  001284  ECBC  F031         	call	_cmd_incrementn
  4801  001288  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4802  00128C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4803  001290  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4804  001292  0E00               	movlw	0
  4805  001294  2427               	addwf	??_display_rpm,w,c
  4806  001296  6E11               	movwf	wr16@addr,c
  4807  001298  0E80               	movlw	128
  4808  00129A  2028               	addwfc	??_display_rpm+1,w,c
  4809  00129C  6E12               	movwf	wr16@addr+1,c
  4810  00129E  0E10               	movlw	16
  4811  0012A0  2029               	addwfc	??_display_rpm+2,w,c
  4812  0012A2  6E13               	movwf	wr16@addr+2,c
  4813  0012A4  0E00               	movlw	0
  4814  0012A6  6E15               	movwf	wr16@value+1,c
  4815  0012A8  0E0A               	movlw	10
  4816  0012AA  6E14               	movwf	wr16@value,c
  4817  0012AC  ECCB  F030         	call	_wr16	;wreg free
  4818  0012B0  0E02               	movlw	2
  4819  0012B2  ECBC  F031         	call	_cmd_incrementn
  4820  0012B6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4821  0012BA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4822  0012BE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4823  0012C0  0E00               	movlw	0
  4824  0012C2  2427               	addwf	??_display_rpm,w,c
  4825  0012C4  6E11               	movwf	wr16@addr,c
  4826  0012C6  0E80               	movlw	128
  4827  0012C8  2028               	addwfc	??_display_rpm+1,w,c
  4828  0012CA  6E12               	movwf	wr16@addr+1,c
  4829  0012CC  0E10               	movlw	16
  4830  0012CE  2029               	addwfc	??_display_rpm+2,w,c
  4831  0012D0  6E13               	movwf	wr16@addr+2,c
  4832  0012D2  0E00               	movlw	0
  4833  0012D4  6E15               	movwf	wr16@value+1,c
  4834  0012D6  0E05               	movlw	5
  4835  0012D8  6E14               	movwf	wr16@value,c
  4836  0012DA  ECCB  F030         	call	_wr16	;wreg free
  4837  0012DE  0E02               	movlw	2
  4838  0012E0  ECBC  F031         	call	_cmd_incrementn
  4839  0012E4  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4840  0012E8  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4841  0012EC  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4842  0012EE  0E00               	movlw	0
  4843  0012F0  2427               	addwf	??_display_rpm,w,c
  4844  0012F2  6E11               	movwf	wr16@addr,c
  4845  0012F4  0E80               	movlw	128
  4846  0012F6  2028               	addwfc	??_display_rpm+1,w,c
  4847  0012F8  6E12               	movwf	wr16@addr+1,c
  4848  0012FA  0E10               	movlw	16
  4849  0012FC  2029               	addwfc	??_display_rpm+2,w,c
  4850  0012FE  6E13               	movwf	wr16@addr+2,c
  4851  001300  C02E  F014         	movff	display_rpm@first_digit,wr16@value
  4852  001304  C02F  F015         	movff	display_rpm@first_digit+1,wr16@value+1
  4853  001308  ECCB  F030         	call	_wr16	;wreg free
  4854  00130C  0E02               	movlw	2
  4855  00130E  ECBC  F031         	call	_cmd_incrementn
  4856  001312  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4857  001316  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4858  00131A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4859  00131C  0E00               	movlw	0
  4860  00131E  2427               	addwf	??_display_rpm,w,c
  4861  001320  6E11               	movwf	wr16@addr,c
  4862  001322  0E80               	movlw	128
  4863  001324  2028               	addwfc	??_display_rpm+1,w,c
  4864  001326  6E12               	movwf	wr16@addr+1,c
  4865  001328  0E10               	movlw	16
  4866  00132A  2029               	addwfc	??_display_rpm+2,w,c
  4867  00132C  6E13               	movwf	wr16@addr+2,c
  4868  00132E  0E00               	movlw	0
  4869  001330  6E15               	movwf	wr16@value+1,c
  4870  001332  0E32               	movlw	50
  4871  001334  6E14               	movwf	wr16@value,c
  4872  001336  ECCB  F030         	call	_wr16	;wreg free
  4873  00133A  0E02               	movlw	2
  4874  00133C  ECBC  F031         	call	_cmd_incrementn
  4875                           
  4876                           ;display.c: 161: } else {
  4877  001340  D0E2               	goto	l4089
  4878  001342                     l4053:
  4879                           
  4880                           ;display.c: 162: int val = ((first_digit-2)*5)+(second_digit/2);
  4881  001342  0EFE               	movlw	254
  4882  001344  242E               	addwf	display_rpm@first_digit,w,c
  4883  001346  6E10               	movwf	___wmul@multiplier,c
  4884  001348  0EFF               	movlw	255
  4885  00134A  202F               	addwfc	display_rpm@first_digit+1,w,c
  4886  00134C  6E11               	movwf	___wmul@multiplier+1,c
  4887  00134E  0E00               	movlw	0
  4888  001350  6E13               	movwf	___wmul@multiplicand+1,c
  4889  001352  0E05               	movlw	5
  4890  001354  6E12               	movwf	___wmul@multiplicand,c
  4891  001356  EC9A  F031         	call	___wmul	;wreg free
  4892  00135A  C010  F027         	movff	?___wmul,??_display_rpm
  4893  00135E  C011  F028         	movff	?___wmul+1,??_display_rpm+1
  4894  001362  C02C  F010         	movff	display_rpm@second_digit,___awdiv@dividend
  4895  001366  C02D  F011         	movff	display_rpm@second_digit+1,___awdiv@dividend+1
  4896  00136A  0E00               	movlw	0
  4897  00136C  6E13               	movwf	___awdiv@divisor+1,c
  4898  00136E  0E02               	movlw	2
  4899  001370  6E12               	movwf	___awdiv@divisor,c
  4900  001372  EC4E  F02F         	call	___awdiv	;wreg free
  4901  001376  5010               	movf	?___awdiv,w,c
  4902  001378  2427               	addwf	??_display_rpm,w,c
  4903  00137A  6E2A               	movwf	display_rpm@val,c
  4904  00137C  5011               	movf	?___awdiv+1,w,c
  4905  00137E  2028               	addwfc	??_display_rpm+1,w,c
  4906  001380  6E2B               	movwf	display_rpm@val+1,c
  4907                           
  4908                           ;display.c: 163: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 8192UL|4096UL | 256UL);cmd_incrementn(2);wr16(108134
      +                          4UL
  4909  001382  0E13               	movlw	19
  4910  001384  6E1E               	movwf	cmd@command,c
  4911  001386  0EFF               	movlw	255
  4912  001388  6E1F               	movwf	cmd@command+1,c
  4913  00138A  0EFF               	movlw	255
  4914  00138C  6E20               	movwf	cmd@command+2,c
  4915  00138E  0EFF               	movlw	255
  4916  001390  6E21               	movwf	cmd@command+3,c
  4917  001392  EC06  F031         	call	_cmd	;wreg free
  4918  001396  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4919  00139A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4920  00139E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4921  0013A0  0E00               	movlw	0
  4922  0013A2  2427               	addwf	??_display_rpm,w,c
  4923  0013A4  6E11               	movwf	wr16@addr,c
  4924  0013A6  0E80               	movlw	128
  4925  0013A8  2028               	addwfc	??_display_rpm+1,w,c
  4926  0013AA  6E12               	movwf	wr16@addr+1,c
  4927  0013AC  0E10               	movlw	16
  4928  0013AE  2029               	addwfc	??_display_rpm+2,w,c
  4929  0013B0  6E13               	movwf	wr16@addr+2,c
  4930  0013B2  0E00               	movlw	0
  4931  0013B4  6E15               	movwf	wr16@value+1,c
  4932  0013B6  0EF0               	movlw	240
  4933  0013B8  6E14               	movwf	wr16@value,c
  4934  0013BA  ECCB  F030         	call	_wr16	;wreg free
  4935  0013BE  0E02               	movlw	2
  4936  0013C0  ECBC  F031         	call	_cmd_incrementn
  4937  0013C4  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4938  0013C8  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4939  0013CC  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4940  0013CE  0E00               	movlw	0
  4941  0013D0  2427               	addwf	??_display_rpm,w,c
  4942  0013D2  6E11               	movwf	wr16@addr,c
  4943  0013D4  0E80               	movlw	128
  4944  0013D6  2028               	addwfc	??_display_rpm+1,w,c
  4945  0013D8  6E12               	movwf	wr16@addr+1,c
  4946  0013DA  0E10               	movlw	16
  4947  0013DC  2029               	addwfc	??_display_rpm+2,w,c
  4948  0013DE  6E13               	movwf	wr16@addr+2,c
  4949  0013E0  0E00               	movlw	0
  4950  0013E2  6E15               	movwf	wr16@value+1,c
  4951  0013E4  0E73               	movlw	115
  4952  0013E6  6E14               	movwf	wr16@value,c
  4953  0013E8  ECCB  F030         	call	_wr16	;wreg free
  4954  0013EC  0E02               	movlw	2
  4955  0013EE  ECBC  F031         	call	_cmd_incrementn
  4956  0013F2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4957  0013F6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4958  0013FA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4959  0013FC  0E00               	movlw	0
  4960  0013FE  2427               	addwf	??_display_rpm,w,c
  4961  001400  6E11               	movwf	wr16@addr,c
  4962  001402  0E80               	movlw	128
  4963  001404  2028               	addwfc	??_display_rpm+1,w,c
  4964  001406  6E12               	movwf	wr16@addr+1,c
  4965  001408  0E10               	movlw	16
  4966  00140A  2029               	addwfc	??_display_rpm+2,w,c
  4967  00140C  6E13               	movwf	wr16@addr+2,c
  4968  00140E  0E00               	movlw	0
  4969  001410  6E15               	movwf	wr16@value+1,c
  4970  001412  0E82               	movlw	130
  4971  001414  6E14               	movwf	wr16@value,c
  4972  001416  ECCB  F030         	call	_wr16	;wreg free
  4973  00141A  0E02               	movlw	2
  4974  00141C  ECBC  F031         	call	_cmd_incrementn
  4975  001420  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4976  001424  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4977  001428  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4978  00142A  0E00               	movlw	0
  4979  00142C  2427               	addwf	??_display_rpm,w,c
  4980  00142E  6E11               	movwf	wr16@addr,c
  4981  001430  0E80               	movlw	128
  4982  001432  2028               	addwfc	??_display_rpm+1,w,c
  4983  001434  6E12               	movwf	wr16@addr+1,c
  4984  001436  0E10               	movlw	16
  4985  001438  2029               	addwfc	??_display_rpm+2,w,c
  4986  00143A  6E13               	movwf	wr16@addr+2,c
  4987  00143C  0E31               	movlw	49
  4988  00143E  6E15               	movwf	wr16@value+1,c
  4989  001440  0E00               	movlw	0
  4990  001442  6E14               	movwf	wr16@value,c
  4991  001444  ECCB  F030         	call	_wr16	;wreg free
  4992  001448  0E02               	movlw	2
  4993  00144A  ECBC  F031         	call	_cmd_incrementn
  4994  00144E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  4995  001452  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  4996  001456  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  4997  001458  0E00               	movlw	0
  4998  00145A  2427               	addwf	??_display_rpm,w,c
  4999  00145C  6E11               	movwf	wr16@addr,c
  5000  00145E  0E80               	movlw	128
  5001  001460  2028               	addwfc	??_display_rpm+1,w,c
  5002  001462  6E12               	movwf	wr16@addr+1,c
  5003  001464  0E10               	movlw	16
  5004  001466  2029               	addwfc	??_display_rpm+2,w,c
  5005  001468  6E13               	movwf	wr16@addr+2,c
  5006  00146A  0E00               	movlw	0
  5007  00146C  6E15               	movwf	wr16@value+1,c
  5008  00146E  0E0A               	movlw	10
  5009  001470  6E14               	movwf	wr16@value,c
  5010  001472  ECCB  F030         	call	_wr16	;wreg free
  5011  001476  0E02               	movlw	2
  5012  001478  ECBC  F031         	call	_cmd_incrementn
  5013  00147C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5014  001480  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5015  001484  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5016  001486  0E00               	movlw	0
  5017  001488  2427               	addwf	??_display_rpm,w,c
  5018  00148A  6E11               	movwf	wr16@addr,c
  5019  00148C  0E80               	movlw	128
  5020  00148E  2028               	addwfc	??_display_rpm+1,w,c
  5021  001490  6E12               	movwf	wr16@addr+1,c
  5022  001492  0E10               	movlw	16
  5023  001494  2029               	addwfc	??_display_rpm+2,w,c
  5024  001496  6E13               	movwf	wr16@addr+2,c
  5025  001498  0E00               	movlw	0
  5026  00149A  6E15               	movwf	wr16@value+1,c
  5027  00149C  0E05               	movlw	5
  5028  00149E  6E14               	movwf	wr16@value,c
  5029  0014A0  ECCB  F030         	call	_wr16	;wreg free
  5030  0014A4  0E02               	movlw	2
  5031  0014A6  ECBC  F031         	call	_cmd_incrementn
  5032  0014AA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5033  0014AE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5034  0014B2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5035  0014B4  0E00               	movlw	0
  5036  0014B6  2427               	addwf	??_display_rpm,w,c
  5037  0014B8  6E11               	movwf	wr16@addr,c
  5038  0014BA  0E80               	movlw	128
  5039  0014BC  2028               	addwfc	??_display_rpm+1,w,c
  5040  0014BE  6E12               	movwf	wr16@addr+1,c
  5041  0014C0  0E10               	movlw	16
  5042  0014C2  2029               	addwfc	??_display_rpm+2,w,c
  5043  0014C4  6E13               	movwf	wr16@addr+2,c
  5044  0014C6  C02A  F014         	movff	display_rpm@val,wr16@value
  5045  0014CA  C02B  F015         	movff	display_rpm@val+1,wr16@value+1
  5046  0014CE  ECCB  F030         	call	_wr16	;wreg free
  5047  0014D2  0E02               	movlw	2
  5048  0014D4  ECBC  F031         	call	_cmd_incrementn
  5049  0014D8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5050  0014DC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5051  0014E0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5052  0014E2  0E00               	movlw	0
  5053  0014E4  2427               	addwf	??_display_rpm,w,c
  5054  0014E6  6E11               	movwf	wr16@addr,c
  5055  0014E8  0E80               	movlw	128
  5056  0014EA  2028               	addwfc	??_display_rpm+1,w,c
  5057  0014EC  6E12               	movwf	wr16@addr+1,c
  5058  0014EE  0E10               	movlw	16
  5059  0014F0  2029               	addwfc	??_display_rpm+2,w,c
  5060  0014F2  6E13               	movwf	wr16@addr+2,c
  5061  0014F4  0E00               	movlw	0
  5062  0014F6  6E15               	movwf	wr16@value+1,c
  5063  0014F8  0E32               	movlw	50
  5064  0014FA  6E14               	movwf	wr16@value,c
  5065  0014FC  ECCB  F030         	call	_wr16	;wreg free
  5066  001500  0E02               	movlw	2
  5067  001502  ECBC  F031         	call	_cmd_incrementn
  5068  001506                     l4089:
  5069                           
  5070                           ;display.c: 164: }
  5071                           ;display.c: 166: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0
      +                          )));
  5072  001506  0EFF               	movlw	255
  5073  001508  6E1E               	movwf	cmd@command,c
  5074  00150A  0EFF               	movlw	255
  5075  00150C  6E1F               	movwf	cmd@command+1,c
  5076  00150E  0EFF               	movlw	255
  5077  001510  6E20               	movwf	cmd@command+2,c
  5078  001512  0E04               	movlw	4
  5079  001514  6E21               	movwf	cmd@command+3,c
  5080  001516  EC06  F031         	call	_cmd	;wreg free
  5081                           
  5082                           ;display.c: 167: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 237);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 89);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 2048UL);cmd_incrementn(2);cmd(first_digit);
  5083  00151A  0E2E               	movlw	46
  5084  00151C  6E1E               	movwf	cmd@command,c
  5085  00151E  0EFF               	movlw	255
  5086  001520  6E1F               	movwf	cmd@command+1,c
  5087  001522  0EFF               	movlw	255
  5088  001524  6E20               	movwf	cmd@command+2,c
  5089  001526  0EFF               	movlw	255
  5090  001528  6E21               	movwf	cmd@command+3,c
  5091  00152A  EC06  F031         	call	_cmd	;wreg free
  5092  00152E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5093  001532  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5094  001536  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5095  001538  0E00               	movlw	0
  5096  00153A  2427               	addwf	??_display_rpm,w,c
  5097  00153C  6E11               	movwf	wr16@addr,c
  5098  00153E  0E80               	movlw	128
  5099  001540  2028               	addwfc	??_display_rpm+1,w,c
  5100  001542  6E12               	movwf	wr16@addr+1,c
  5101  001544  0E10               	movlw	16
  5102  001546  2029               	addwfc	??_display_rpm+2,w,c
  5103  001548  6E13               	movwf	wr16@addr+2,c
  5104  00154A  0E00               	movlw	0
  5105  00154C  6E15               	movwf	wr16@value+1,c
  5106  00154E  0EED               	movlw	237
  5107  001550  6E14               	movwf	wr16@value,c
  5108  001552  ECCB  F030         	call	_wr16	;wreg free
  5109  001556  0E02               	movlw	2
  5110  001558  ECBC  F031         	call	_cmd_incrementn
  5111  00155C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5112  001560  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5113  001564  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5114  001566  0E00               	movlw	0
  5115  001568  2427               	addwf	??_display_rpm,w,c
  5116  00156A  6E11               	movwf	wr16@addr,c
  5117  00156C  0E80               	movlw	128
  5118  00156E  2028               	addwfc	??_display_rpm+1,w,c
  5119  001570  6E12               	movwf	wr16@addr+1,c
  5120  001572  0E10               	movlw	16
  5121  001574  2029               	addwfc	??_display_rpm+2,w,c
  5122  001576  6E13               	movwf	wr16@addr+2,c
  5123  001578  0E00               	movlw	0
  5124  00157A  6E15               	movwf	wr16@value+1,c
  5125  00157C  0E59               	movlw	89
  5126  00157E  6E14               	movwf	wr16@value,c
  5127  001580  ECCB  F030         	call	_wr16	;wreg free
  5128  001584  0E02               	movlw	2
  5129  001586  ECBC  F031         	call	_cmd_incrementn
  5130  00158A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5131  00158E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5132  001592  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5133  001594  0E00               	movlw	0
  5134  001596  2427               	addwf	??_display_rpm,w,c
  5135  001598  6E11               	movwf	wr16@addr,c
  5136  00159A  0E80               	movlw	128
  5137  00159C  2028               	addwfc	??_display_rpm+1,w,c
  5138  00159E  6E12               	movwf	wr16@addr+1,c
  5139  0015A0  0E10               	movlw	16
  5140  0015A2  2029               	addwfc	??_display_rpm+2,w,c
  5141  0015A4  6E13               	movwf	wr16@addr+2,c
  5142  0015A6  0E00               	movlw	0
  5143  0015A8  6E15               	movwf	wr16@value+1,c
  5144  0015AA  0E1F               	movlw	31
  5145  0015AC  6E14               	movwf	wr16@value,c
  5146  0015AE  ECCB  F030         	call	_wr16	;wreg free
  5147  0015B2  0E02               	movlw	2
  5148  0015B4  ECBC  F031         	call	_cmd_incrementn
  5149  0015B8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5150  0015BC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5151  0015C0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5152  0015C2  0E00               	movlw	0
  5153  0015C4  2427               	addwf	??_display_rpm,w,c
  5154  0015C6  6E11               	movwf	wr16@addr,c
  5155  0015C8  0E80               	movlw	128
  5156  0015CA  2028               	addwfc	??_display_rpm+1,w,c
  5157  0015CC  6E12               	movwf	wr16@addr+1,c
  5158  0015CE  0E10               	movlw	16
  5159  0015D0  2029               	addwfc	??_display_rpm+2,w,c
  5160  0015D2  6E13               	movwf	wr16@addr+2,c
  5161  0015D4  0E08               	movlw	8
  5162  0015D6  6E15               	movwf	wr16@value+1,c
  5163  0015D8  0E00               	movlw	0
  5164  0015DA  6E14               	movwf	wr16@value,c
  5165  0015DC  ECCB  F030         	call	_wr16	;wreg free
  5166  0015E0  0E02               	movlw	2
  5167  0015E2  ECBC  F031         	call	_cmd_incrementn
  5168  0015E6  C02E  F01E         	movff	display_rpm@first_digit,cmd@command
  5169  0015EA  C02F  F01F         	movff	display_rpm@first_digit+1,cmd@command+1
  5170  0015EE  0E00               	movlw	0
  5171  0015F0  BE1F               	btfsc	cmd@command+1,7,c
  5172  0015F2  0EFF               	movlw	-1
  5173  0015F4  6E20               	movwf	cmd@command+2,c
  5174  0015F6  6E21               	movwf	cmd@command+3,c
  5175  0015F8  EC06  F031         	call	_cmd	;wreg free
  5176                           
  5177                           ;display.c: 168: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 243);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 89);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(second_digit);
  5178  0015FC  0E2E               	movlw	46
  5179  0015FE  6E1E               	movwf	cmd@command,c
  5180  001600  0EFF               	movlw	255
  5181  001602  6E1F               	movwf	cmd@command+1,c
  5182  001604  0EFF               	movlw	255
  5183  001606  6E20               	movwf	cmd@command+2,c
  5184  001608  0EFF               	movlw	255
  5185  00160A  6E21               	movwf	cmd@command+3,c
  5186  00160C  EC06  F031         	call	_cmd	;wreg free
  5187  001610  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5188  001614  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5189  001618  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5190  00161A  0E00               	movlw	0
  5191  00161C  2427               	addwf	??_display_rpm,w,c
  5192  00161E  6E11               	movwf	wr16@addr,c
  5193  001620  0E80               	movlw	128
  5194  001622  2028               	addwfc	??_display_rpm+1,w,c
  5195  001624  6E12               	movwf	wr16@addr+1,c
  5196  001626  0E10               	movlw	16
  5197  001628  2029               	addwfc	??_display_rpm+2,w,c
  5198  00162A  6E13               	movwf	wr16@addr+2,c
  5199  00162C  0E00               	movlw	0
  5200  00162E  6E15               	movwf	wr16@value+1,c
  5201  001630  0EF3               	movlw	243
  5202  001632  6E14               	movwf	wr16@value,c
  5203  001634  ECCB  F030         	call	_wr16	;wreg free
  5204  001638  0E02               	movlw	2
  5205  00163A  ECBC  F031         	call	_cmd_incrementn
  5206  00163E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5207  001642  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5208  001646  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5209  001648  0E00               	movlw	0
  5210  00164A  2427               	addwf	??_display_rpm,w,c
  5211  00164C  6E11               	movwf	wr16@addr,c
  5212  00164E  0E80               	movlw	128
  5213  001650  2028               	addwfc	??_display_rpm+1,w,c
  5214  001652  6E12               	movwf	wr16@addr+1,c
  5215  001654  0E10               	movlw	16
  5216  001656  2029               	addwfc	??_display_rpm+2,w,c
  5217  001658  6E13               	movwf	wr16@addr+2,c
  5218  00165A  0E00               	movlw	0
  5219  00165C  6E15               	movwf	wr16@value+1,c
  5220  00165E  0E59               	movlw	89
  5221  001660  6E14               	movwf	wr16@value,c
  5222  001662  ECCB  F030         	call	_wr16	;wreg free
  5223  001666  0E02               	movlw	2
  5224  001668  ECBC  F031         	call	_cmd_incrementn
  5225  00166C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5226  001670  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5227  001674  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5228  001676  0E00               	movlw	0
  5229  001678  2427               	addwf	??_display_rpm,w,c
  5230  00167A  6E11               	movwf	wr16@addr,c
  5231  00167C  0E80               	movlw	128
  5232  00167E  2028               	addwfc	??_display_rpm+1,w,c
  5233  001680  6E12               	movwf	wr16@addr+1,c
  5234  001682  0E10               	movlw	16
  5235  001684  2029               	addwfc	??_display_rpm+2,w,c
  5236  001686  6E13               	movwf	wr16@addr+2,c
  5237  001688  0E00               	movlw	0
  5238  00168A  6E15               	movwf	wr16@value+1,c
  5239  00168C  0E1F               	movlw	31
  5240  00168E  6E14               	movwf	wr16@value,c
  5241  001690  ECCB  F030         	call	_wr16	;wreg free
  5242  001694  0E02               	movlw	2
  5243  001696  ECBC  F031         	call	_cmd_incrementn
  5244  00169A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5245  00169E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5246  0016A2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5247  0016A4  0E00               	movlw	0
  5248  0016A6  2427               	addwf	??_display_rpm,w,c
  5249  0016A8  6E11               	movwf	wr16@addr,c
  5250  0016AA  0E80               	movlw	128
  5251  0016AC  2028               	addwfc	??_display_rpm+1,w,c
  5252  0016AE  6E12               	movwf	wr16@addr+1,c
  5253  0016B0  0E10               	movlw	16
  5254  0016B2  2029               	addwfc	??_display_rpm+2,w,c
  5255  0016B4  6E13               	movwf	wr16@addr+2,c
  5256  0016B6  0E00               	movlw	0
  5257  0016B8  6E15               	movwf	wr16@value+1,c
  5258  0016BA  0E00               	movlw	0
  5259  0016BC  6E14               	movwf	wr16@value,c
  5260  0016BE  ECCB  F030         	call	_wr16	;wreg free
  5261  0016C2  0E02               	movlw	2
  5262  0016C4  ECBC  F031         	call	_cmd_incrementn
  5263  0016C8  C02C  F01E         	movff	display_rpm@second_digit,cmd@command
  5264  0016CC  C02D  F01F         	movff	display_rpm@second_digit+1,cmd@command+1
  5265  0016D0  0E00               	movlw	0
  5266  0016D2  BE1F               	btfsc	cmd@command+1,7,c
  5267  0016D4  0EFF               	movlw	-1
  5268  0016D6  6E20               	movwf	cmd@command+2,c
  5269  0016D8  6E21               	movwf	cmd@command+3,c
  5270  0016DA  EC06  F031         	call	_cmd	;wreg free
  5271                           
  5272                           ;display.c: 170: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 183);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 161);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  5273  0016DE  0E0C               	movlw	12
  5274  0016E0  6E1E               	movwf	cmd@command,c
  5275  0016E2  0EFF               	movlw	255
  5276  0016E4  6E1F               	movwf	cmd@command+1,c
  5277  0016E6  0EFF               	movlw	255
  5278  0016E8  6E20               	movwf	cmd@command+2,c
  5279  0016EA  0EFF               	movlw	255
  5280  0016EC  6E21               	movwf	cmd@command+3,c
  5281  0016EE  EC06  F031         	call	_cmd	;wreg free
  5282  0016F2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5283  0016F6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5284  0016FA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5285  0016FC  0E00               	movlw	0
  5286  0016FE  2427               	addwf	??_display_rpm,w,c
  5287  001700  6E11               	movwf	wr16@addr,c
  5288  001702  0E80               	movlw	128
  5289  001704  2028               	addwfc	??_display_rpm+1,w,c
  5290  001706  6E12               	movwf	wr16@addr+1,c
  5291  001708  0E10               	movlw	16
  5292  00170A  2029               	addwfc	??_display_rpm+2,w,c
  5293  00170C  6E13               	movwf	wr16@addr+2,c
  5294  00170E  0E00               	movlw	0
  5295  001710  6E15               	movwf	wr16@value+1,c
  5296  001712  0EB7               	movlw	183
  5297  001714  6E14               	movwf	wr16@value,c
  5298  001716  ECCB  F030         	call	_wr16	;wreg free
  5299  00171A  0E02               	movlw	2
  5300  00171C  ECBC  F031         	call	_cmd_incrementn
  5301  001720  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5302  001724  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5303  001728  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5304  00172A  0E00               	movlw	0
  5305  00172C  2427               	addwf	??_display_rpm,w,c
  5306  00172E  6E11               	movwf	wr16@addr,c
  5307  001730  0E80               	movlw	128
  5308  001732  2028               	addwfc	??_display_rpm+1,w,c
  5309  001734  6E12               	movwf	wr16@addr+1,c
  5310  001736  0E10               	movlw	16
  5311  001738  2029               	addwfc	??_display_rpm+2,w,c
  5312  00173A  6E13               	movwf	wr16@addr+2,c
  5313  00173C  0E00               	movlw	0
  5314  00173E  6E15               	movwf	wr16@value+1,c
  5315  001740  0EA1               	movlw	161
  5316  001742  6E14               	movwf	wr16@value,c
  5317  001744  ECCB  F030         	call	_wr16	;wreg free
  5318  001748  0E02               	movlw	2
  5319  00174A  ECBC  F031         	call	_cmd_incrementn
  5320  00174E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5321  001752  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5322  001756  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5323  001758  0E00               	movlw	0
  5324  00175A  2427               	addwf	??_display_rpm,w,c
  5325  00175C  6E11               	movwf	wr16@addr,c
  5326  00175E  0E80               	movlw	128
  5327  001760  2028               	addwfc	??_display_rpm+1,w,c
  5328  001762  6E12               	movwf	wr16@addr+1,c
  5329  001764  0E10               	movlw	16
  5330  001766  2029               	addwfc	??_display_rpm+2,w,c
  5331  001768  6E13               	movwf	wr16@addr+2,c
  5332  00176A  0E00               	movlw	0
  5333  00176C  6E15               	movwf	wr16@value+1,c
  5334  00176E  0E1C               	movlw	28
  5335  001770  6E14               	movwf	wr16@value,c
  5336  001772  ECCB  F030         	call	_wr16	;wreg free
  5337  001776  0E02               	movlw	2
  5338  001778  ECBC  F031         	call	_cmd_incrementn
  5339  00177C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5340  001780  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5341  001784  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5342  001786  0E00               	movlw	0
  5343  001788  2427               	addwf	??_display_rpm,w,c
  5344  00178A  6E11               	movwf	wr16@addr,c
  5345  00178C  0E80               	movlw	128
  5346  00178E  2028               	addwfc	??_display_rpm+1,w,c
  5347  001790  6E12               	movwf	wr16@addr+1,c
  5348  001792  0E10               	movlw	16
  5349  001794  2029               	addwfc	??_display_rpm+2,w,c
  5350  001796  6E13               	movwf	wr16@addr+2,c
  5351  001798  0E00               	movlw	0
  5352  00179A  6E15               	movwf	wr16@value+1,c
  5353  00179C  0E00               	movlw	0
  5354  00179E  6E14               	movwf	wr16@value,c
  5355  0017A0  ECCB  F030         	call	_wr16	;wreg free
  5356  0017A4  0E02               	movlw	2
  5357  0017A6  ECBC  F031         	call	_cmd_incrementn
  5358  0017AA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5359  0017AE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5360  0017B2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5361  0017B4  0E00               	movlw	0
  5362  0017B6  2427               	addwf	??_display_rpm,w,c
  5363  0017B8  6E16               	movwf	wr8s@addr,c
  5364  0017BA  0E80               	movlw	128
  5365  0017BC  2028               	addwfc	??_display_rpm+1,w,c
  5366  0017BE  6E17               	movwf	wr8s@addr+1,c
  5367  0017C0  0E10               	movlw	16
  5368  0017C2  2029               	addwfc	??_display_rpm+2,w,c
  5369  0017C4  6E18               	movwf	wr8s@addr+2,c
  5370  0017C6  0E70               	movlw	low (STR_33+1)
  5371  0017C8  6E19               	movwf	wr8s@s,c
  5372  0017CA  0E0F               	movlw	high (STR_33+1)
  5373  0017CC  6E1A               	movwf	wr8s@s+1,c
  5374  0017CE  EC81  F02E         	call	_wr8s	;wreg free
  5375  0017D2  ECBC  F031         	call	_cmd_incrementn
  5376                           
  5377                           ;display.c: 171: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 160);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  5378  0017D6  0E0C               	movlw	12
  5379  0017D8  6E1E               	movwf	cmd@command,c
  5380  0017DA  0EFF               	movlw	255
  5381  0017DC  6E1F               	movwf	cmd@command+1,c
  5382  0017DE  0EFF               	movlw	255
  5383  0017E0  6E20               	movwf	cmd@command+2,c
  5384  0017E2  0EFF               	movlw	255
  5385  0017E4  6E21               	movwf	cmd@command+3,c
  5386  0017E6  EC06  F031         	call	_cmd	;wreg free
  5387  0017EA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5388  0017EE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5389  0017F2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5390  0017F4  0E00               	movlw	0
  5391  0017F6  2427               	addwf	??_display_rpm,w,c
  5392  0017F8  6E11               	movwf	wr16@addr,c
  5393  0017FA  0E80               	movlw	128
  5394  0017FC  2028               	addwfc	??_display_rpm+1,w,c
  5395  0017FE  6E12               	movwf	wr16@addr+1,c
  5396  001800  0E10               	movlw	16
  5397  001802  2029               	addwfc	??_display_rpm+2,w,c
  5398  001804  6E13               	movwf	wr16@addr+2,c
  5399  001806  0E00               	movlw	0
  5400  001808  6E15               	movwf	wr16@value+1,c
  5401  00180A  0EA0               	movlw	160
  5402  00180C  6E14               	movwf	wr16@value,c
  5403  00180E  ECCB  F030         	call	_wr16	;wreg free
  5404  001812  0E02               	movlw	2
  5405  001814  ECBC  F031         	call	_cmd_incrementn
  5406  001818  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5407  00181C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5408  001820  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5409  001822  0E00               	movlw	0
  5410  001824  2427               	addwf	??_display_rpm,w,c
  5411  001826  6E11               	movwf	wr16@addr,c
  5412  001828  0E80               	movlw	128
  5413  00182A  2028               	addwfc	??_display_rpm+1,w,c
  5414  00182C  6E12               	movwf	wr16@addr+1,c
  5415  00182E  0E10               	movlw	16
  5416  001830  2029               	addwfc	??_display_rpm+2,w,c
  5417  001832  6E13               	movwf	wr16@addr+2,c
  5418  001834  0E00               	movlw	0
  5419  001836  6E15               	movwf	wr16@value+1,c
  5420  001838  0E82               	movlw	130
  5421  00183A  6E14               	movwf	wr16@value,c
  5422  00183C  ECCB  F030         	call	_wr16	;wreg free
  5423  001840  0E02               	movlw	2
  5424  001842  ECBC  F031         	call	_cmd_incrementn
  5425  001846  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5426  00184A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5427  00184E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5428  001850  0E00               	movlw	0
  5429  001852  2427               	addwf	??_display_rpm,w,c
  5430  001854  6E11               	movwf	wr16@addr,c
  5431  001856  0E80               	movlw	128
  5432  001858  2028               	addwfc	??_display_rpm+1,w,c
  5433  00185A  6E12               	movwf	wr16@addr+1,c
  5434  00185C  0E10               	movlw	16
  5435  00185E  2029               	addwfc	??_display_rpm+2,w,c
  5436  001860  6E13               	movwf	wr16@addr+2,c
  5437  001862  0E00               	movlw	0
  5438  001864  6E15               	movwf	wr16@value+1,c
  5439  001866  0E1C               	movlw	28
  5440  001868  6E14               	movwf	wr16@value,c
  5441  00186A  ECCB  F030         	call	_wr16	;wreg free
  5442  00186E  0E02               	movlw	2
  5443  001870  ECBC  F031         	call	_cmd_incrementn
  5444  001874  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5445  001878  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5446  00187C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5447  00187E  0E00               	movlw	0
  5448  001880  2427               	addwf	??_display_rpm,w,c
  5449  001882  6E11               	movwf	wr16@addr,c
  5450  001884  0E80               	movlw	128
  5451  001886  2028               	addwfc	??_display_rpm+1,w,c
  5452  001888  6E12               	movwf	wr16@addr+1,c
  5453  00188A  0E10               	movlw	16
  5454  00188C  2029               	addwfc	??_display_rpm+2,w,c
  5455  00188E  6E13               	movwf	wr16@addr+2,c
  5456  001890  0E00               	movlw	0
  5457  001892  6E15               	movwf	wr16@value+1,c
  5458  001894  0E00               	movlw	0
  5459  001896  6E14               	movwf	wr16@value,c
  5460  001898  ECCB  F030         	call	_wr16	;wreg free
  5461  00189C  0E02               	movlw	2
  5462  00189E  ECBC  F031         	call	_cmd_incrementn
  5463  0018A2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5464  0018A6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5465  0018AA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5466  0018AC  0E00               	movlw	0
  5467  0018AE  2427               	addwf	??_display_rpm,w,c
  5468  0018B0  6E16               	movwf	wr8s@addr,c
  5469  0018B2  0E80               	movlw	128
  5470  0018B4  2028               	addwfc	??_display_rpm+1,w,c
  5471  0018B6  6E17               	movwf	wr8s@addr+1,c
  5472  0018B8  0E10               	movlw	16
  5473  0018BA  2029               	addwfc	??_display_rpm+2,w,c
  5474  0018BC  6E18               	movwf	wr8s@addr+2,c
  5475  0018BE  0E79               	movlw	low STR_24
  5476  0018C0  6E19               	movwf	wr8s@s,c
  5477  0018C2  0E0F               	movlw	high STR_24
  5478  0018C4  6E1A               	movwf	wr8s@s+1,c
  5479  0018C6  EC81  F02E         	call	_wr8s	;wreg free
  5480  0018CA  ECBC  F031         	call	_cmd_incrementn
  5481                           
  5482                           ;display.c: 172: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 155);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 92);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  5483  0018CE  0E0C               	movlw	12
  5484  0018D0  6E1E               	movwf	cmd@command,c
  5485  0018D2  0EFF               	movlw	255
  5486  0018D4  6E1F               	movwf	cmd@command+1,c
  5487  0018D6  0EFF               	movlw	255
  5488  0018D8  6E20               	movwf	cmd@command+2,c
  5489  0018DA  0EFF               	movlw	255
  5490  0018DC  6E21               	movwf	cmd@command+3,c
  5491  0018DE  EC06  F031         	call	_cmd	;wreg free
  5492  0018E2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5493  0018E6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5494  0018EA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5495  0018EC  0E00               	movlw	0
  5496  0018EE  2427               	addwf	??_display_rpm,w,c
  5497  0018F0  6E11               	movwf	wr16@addr,c
  5498  0018F2  0E80               	movlw	128
  5499  0018F4  2028               	addwfc	??_display_rpm+1,w,c
  5500  0018F6  6E12               	movwf	wr16@addr+1,c
  5501  0018F8  0E10               	movlw	16
  5502  0018FA  2029               	addwfc	??_display_rpm+2,w,c
  5503  0018FC  6E13               	movwf	wr16@addr+2,c
  5504  0018FE  0E00               	movlw	0
  5505  001900  6E15               	movwf	wr16@value+1,c
  5506  001902  0E9B               	movlw	155
  5507  001904  6E14               	movwf	wr16@value,c
  5508  001906  ECCB  F030         	call	_wr16	;wreg free
  5509  00190A  0E02               	movlw	2
  5510  00190C  ECBC  F031         	call	_cmd_incrementn
  5511  001910  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5512  001914  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5513  001918  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5514  00191A  0E00               	movlw	0
  5515  00191C  2427               	addwf	??_display_rpm,w,c
  5516  00191E  6E11               	movwf	wr16@addr,c
  5517  001920  0E80               	movlw	128
  5518  001922  2028               	addwfc	??_display_rpm+1,w,c
  5519  001924  6E12               	movwf	wr16@addr+1,c
  5520  001926  0E10               	movlw	16
  5521  001928  2029               	addwfc	??_display_rpm+2,w,c
  5522  00192A  6E13               	movwf	wr16@addr+2,c
  5523  00192C  0E00               	movlw	0
  5524  00192E  6E15               	movwf	wr16@value+1,c
  5525  001930  0E5C               	movlw	92
  5526  001932  6E14               	movwf	wr16@value,c
  5527  001934  ECCB  F030         	call	_wr16	;wreg free
  5528  001938  0E02               	movlw	2
  5529  00193A  ECBC  F031         	call	_cmd_incrementn
  5530  00193E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5531  001942  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5532  001946  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5533  001948  0E00               	movlw	0
  5534  00194A  2427               	addwf	??_display_rpm,w,c
  5535  00194C  6E11               	movwf	wr16@addr,c
  5536  00194E  0E80               	movlw	128
  5537  001950  2028               	addwfc	??_display_rpm+1,w,c
  5538  001952  6E12               	movwf	wr16@addr+1,c
  5539  001954  0E10               	movlw	16
  5540  001956  2029               	addwfc	??_display_rpm+2,w,c
  5541  001958  6E13               	movwf	wr16@addr+2,c
  5542  00195A  0E00               	movlw	0
  5543  00195C  6E15               	movwf	wr16@value+1,c
  5544  00195E  0E1C               	movlw	28
  5545  001960  6E14               	movwf	wr16@value,c
  5546  001962  ECCB  F030         	call	_wr16	;wreg free
  5547  001966  0E02               	movlw	2
  5548  001968  ECBC  F031         	call	_cmd_incrementn
  5549  00196C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5550  001970  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5551  001974  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5552  001976  0E00               	movlw	0
  5553  001978  2427               	addwf	??_display_rpm,w,c
  5554  00197A  6E11               	movwf	wr16@addr,c
  5555  00197C  0E80               	movlw	128
  5556  00197E  2028               	addwfc	??_display_rpm+1,w,c
  5557  001980  6E12               	movwf	wr16@addr+1,c
  5558  001982  0E10               	movlw	16
  5559  001984  2029               	addwfc	??_display_rpm+2,w,c
  5560  001986  6E13               	movwf	wr16@addr+2,c
  5561  001988  0E00               	movlw	0
  5562  00198A  6E15               	movwf	wr16@value+1,c
  5563  00198C  0E00               	movlw	0
  5564  00198E  6E14               	movwf	wr16@value,c
  5565  001990  ECCB  F030         	call	_wr16	;wreg free
  5566  001994  0E02               	movlw	2
  5567  001996  ECBC  F031         	call	_cmd_incrementn
  5568  00199A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5569  00199E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5570  0019A2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5571  0019A4  0E00               	movlw	0
  5572  0019A6  2427               	addwf	??_display_rpm,w,c
  5573  0019A8  6E16               	movwf	wr8s@addr,c
  5574  0019AA  0E80               	movlw	128
  5575  0019AC  2028               	addwfc	??_display_rpm+1,w,c
  5576  0019AE  6E17               	movwf	wr8s@addr+1,c
  5577  0019B0  0E10               	movlw	16
  5578  0019B2  2029               	addwfc	??_display_rpm+2,w,c
  5579  0019B4  6E18               	movwf	wr8s@addr+2,c
  5580  0019B6  0E7B               	movlw	low STR_25
  5581  0019B8  6E19               	movwf	wr8s@s,c
  5582  0019BA  0E0F               	movlw	high STR_25
  5583  0019BC  6E1A               	movwf	wr8s@s+1,c
  5584  0019BE  EC81  F02E         	call	_wr8s	;wreg free
  5585  0019C2  ECBC  F031         	call	_cmd_incrementn
  5586                           
  5587                           ;display.c: 173: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 171);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  5588  0019C6  0E0C               	movlw	12
  5589  0019C8  6E1E               	movwf	cmd@command,c
  5590  0019CA  0EFF               	movlw	255
  5591  0019CC  6E1F               	movwf	cmd@command+1,c
  5592  0019CE  0EFF               	movlw	255
  5593  0019D0  6E20               	movwf	cmd@command+2,c
  5594  0019D2  0EFF               	movlw	255
  5595  0019D4  6E21               	movwf	cmd@command+3,c
  5596  0019D6  EC06  F031         	call	_cmd	;wreg free
  5597  0019DA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5598  0019DE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5599  0019E2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5600  0019E4  0E00               	movlw	0
  5601  0019E6  2427               	addwf	??_display_rpm,w,c
  5602  0019E8  6E11               	movwf	wr16@addr,c
  5603  0019EA  0E80               	movlw	128
  5604  0019EC  2028               	addwfc	??_display_rpm+1,w,c
  5605  0019EE  6E12               	movwf	wr16@addr+1,c
  5606  0019F0  0E10               	movlw	16
  5607  0019F2  2029               	addwfc	??_display_rpm+2,w,c
  5608  0019F4  6E13               	movwf	wr16@addr+2,c
  5609  0019F6  0E00               	movlw	0
  5610  0019F8  6E15               	movwf	wr16@value+1,c
  5611  0019FA  0EAB               	movlw	171
  5612  0019FC  6E14               	movwf	wr16@value,c
  5613  0019FE  ECCB  F030         	call	_wr16	;wreg free
  5614  001A02  0E02               	movlw	2
  5615  001A04  ECBC  F031         	call	_cmd_incrementn
  5616  001A08  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5617  001A0C  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5618  001A10  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5619  001A12  0E00               	movlw	0
  5620  001A14  2427               	addwf	??_display_rpm,w,c
  5621  001A16  6E11               	movwf	wr16@addr,c
  5622  001A18  0E80               	movlw	128
  5623  001A1A  2028               	addwfc	??_display_rpm+1,w,c
  5624  001A1C  6E12               	movwf	wr16@addr+1,c
  5625  001A1E  0E10               	movlw	16
  5626  001A20  2029               	addwfc	??_display_rpm+2,w,c
  5627  001A22  6E13               	movwf	wr16@addr+2,c
  5628  001A24  0E00               	movlw	0
  5629  001A26  6E15               	movwf	wr16@value+1,c
  5630  001A28  0E3A               	movlw	58
  5631  001A2A  6E14               	movwf	wr16@value,c
  5632  001A2C  ECCB  F030         	call	_wr16	;wreg free
  5633  001A30  0E02               	movlw	2
  5634  001A32  ECBC  F031         	call	_cmd_incrementn
  5635  001A36  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5636  001A3A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5637  001A3E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5638  001A40  0E00               	movlw	0
  5639  001A42  2427               	addwf	??_display_rpm,w,c
  5640  001A44  6E11               	movwf	wr16@addr,c
  5641  001A46  0E80               	movlw	128
  5642  001A48  2028               	addwfc	??_display_rpm+1,w,c
  5643  001A4A  6E12               	movwf	wr16@addr+1,c
  5644  001A4C  0E10               	movlw	16
  5645  001A4E  2029               	addwfc	??_display_rpm+2,w,c
  5646  001A50  6E13               	movwf	wr16@addr+2,c
  5647  001A52  0E00               	movlw	0
  5648  001A54  6E15               	movwf	wr16@value+1,c
  5649  001A56  0E1C               	movlw	28
  5650  001A58  6E14               	movwf	wr16@value,c
  5651  001A5A  ECCB  F030         	call	_wr16	;wreg free
  5652  001A5E  0E02               	movlw	2
  5653  001A60  ECBC  F031         	call	_cmd_incrementn
  5654  001A64  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5655  001A68  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5656  001A6C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5657  001A6E  0E00               	movlw	0
  5658  001A70  2427               	addwf	??_display_rpm,w,c
  5659  001A72  6E11               	movwf	wr16@addr,c
  5660  001A74  0E80               	movlw	128
  5661  001A76  2028               	addwfc	??_display_rpm+1,w,c
  5662  001A78  6E12               	movwf	wr16@addr+1,c
  5663  001A7A  0E10               	movlw	16
  5664  001A7C  2029               	addwfc	??_display_rpm+2,w,c
  5665  001A7E  6E13               	movwf	wr16@addr+2,c
  5666  001A80  0E00               	movlw	0
  5667  001A82  6E15               	movwf	wr16@value+1,c
  5668  001A84  0E00               	movlw	0
  5669  001A86  6E14               	movwf	wr16@value,c
  5670  001A88  ECCB  F030         	call	_wr16	;wreg free
  5671  001A8C  0E02               	movlw	2
  5672  001A8E  ECBC  F031         	call	_cmd_incrementn
  5673  001A92  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5674  001A96  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5675  001A9A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5676  001A9C  0E00               	movlw	0
  5677  001A9E  2427               	addwf	??_display_rpm,w,c
  5678  001AA0  6E16               	movwf	wr8s@addr,c
  5679  001AA2  0E80               	movlw	128
  5680  001AA4  2028               	addwfc	??_display_rpm+1,w,c
  5681  001AA6  6E17               	movwf	wr8s@addr+1,c
  5682  001AA8  0E10               	movlw	16
  5683  001AAA  2029               	addwfc	??_display_rpm+2,w,c
  5684  001AAC  6E18               	movwf	wr8s@addr+2,c
  5685  001AAE  0E7D               	movlw	low STR_26
  5686  001AB0  6E19               	movwf	wr8s@s,c
  5687  001AB2  0E0F               	movlw	high STR_26
  5688  001AB4  6E1A               	movwf	wr8s@s+1,c
  5689  001AB6  EC81  F02E         	call	_wr8s	;wreg free
  5690  001ABA  ECBC  F031         	call	_cmd_incrementn
  5691                           
  5692                           ;display.c: 174: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 201);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 33);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  5693  001ABE  0E0C               	movlw	12
  5694  001AC0  6E1E               	movwf	cmd@command,c
  5695  001AC2  0EFF               	movlw	255
  5696  001AC4  6E1F               	movwf	cmd@command+1,c
  5697  001AC6  0EFF               	movlw	255
  5698  001AC8  6E20               	movwf	cmd@command+2,c
  5699  001ACA  0EFF               	movlw	255
  5700  001ACC  6E21               	movwf	cmd@command+3,c
  5701  001ACE  EC06  F031         	call	_cmd	;wreg free
  5702  001AD2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5703  001AD6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5704  001ADA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5705  001ADC  0E00               	movlw	0
  5706  001ADE  2427               	addwf	??_display_rpm,w,c
  5707  001AE0  6E11               	movwf	wr16@addr,c
  5708  001AE2  0E80               	movlw	128
  5709  001AE4  2028               	addwfc	??_display_rpm+1,w,c
  5710  001AE6  6E12               	movwf	wr16@addr+1,c
  5711  001AE8  0E10               	movlw	16
  5712  001AEA  2029               	addwfc	??_display_rpm+2,w,c
  5713  001AEC  6E13               	movwf	wr16@addr+2,c
  5714  001AEE  0E00               	movlw	0
  5715  001AF0  6E15               	movwf	wr16@value+1,c
  5716  001AF2  0EC9               	movlw	201
  5717  001AF4  6E14               	movwf	wr16@value,c
  5718  001AF6  ECCB  F030         	call	_wr16	;wreg free
  5719  001AFA  0E02               	movlw	2
  5720  001AFC  ECBC  F031         	call	_cmd_incrementn
  5721  001B00  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5722  001B04  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5723  001B08  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5724  001B0A  0E00               	movlw	0
  5725  001B0C  2427               	addwf	??_display_rpm,w,c
  5726  001B0E  6E11               	movwf	wr16@addr,c
  5727  001B10  0E80               	movlw	128
  5728  001B12  2028               	addwfc	??_display_rpm+1,w,c
  5729  001B14  6E12               	movwf	wr16@addr+1,c
  5730  001B16  0E10               	movlw	16
  5731  001B18  2029               	addwfc	??_display_rpm+2,w,c
  5732  001B1A  6E13               	movwf	wr16@addr+2,c
  5733  001B1C  0E00               	movlw	0
  5734  001B1E  6E15               	movwf	wr16@value+1,c
  5735  001B20  0E21               	movlw	33
  5736  001B22  6E14               	movwf	wr16@value,c
  5737  001B24  ECCB  F030         	call	_wr16	;wreg free
  5738  001B28  0E02               	movlw	2
  5739  001B2A  ECBC  F031         	call	_cmd_incrementn
  5740  001B2E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5741  001B32  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5742  001B36  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5743  001B38  0E00               	movlw	0
  5744  001B3A  2427               	addwf	??_display_rpm,w,c
  5745  001B3C  6E11               	movwf	wr16@addr,c
  5746  001B3E  0E80               	movlw	128
  5747  001B40  2028               	addwfc	??_display_rpm+1,w,c
  5748  001B42  6E12               	movwf	wr16@addr+1,c
  5749  001B44  0E10               	movlw	16
  5750  001B46  2029               	addwfc	??_display_rpm+2,w,c
  5751  001B48  6E13               	movwf	wr16@addr+2,c
  5752  001B4A  0E00               	movlw	0
  5753  001B4C  6E15               	movwf	wr16@value+1,c
  5754  001B4E  0E1C               	movlw	28
  5755  001B50  6E14               	movwf	wr16@value,c
  5756  001B52  ECCB  F030         	call	_wr16	;wreg free
  5757  001B56  0E02               	movlw	2
  5758  001B58  ECBC  F031         	call	_cmd_incrementn
  5759  001B5C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5760  001B60  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5761  001B64  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5762  001B66  0E00               	movlw	0
  5763  001B68  2427               	addwf	??_display_rpm,w,c
  5764  001B6A  6E11               	movwf	wr16@addr,c
  5765  001B6C  0E80               	movlw	128
  5766  001B6E  2028               	addwfc	??_display_rpm+1,w,c
  5767  001B70  6E12               	movwf	wr16@addr+1,c
  5768  001B72  0E10               	movlw	16
  5769  001B74  2029               	addwfc	??_display_rpm+2,w,c
  5770  001B76  6E13               	movwf	wr16@addr+2,c
  5771  001B78  0E00               	movlw	0
  5772  001B7A  6E15               	movwf	wr16@value+1,c
  5773  001B7C  0E00               	movlw	0
  5774  001B7E  6E14               	movwf	wr16@value,c
  5775  001B80  ECCB  F030         	call	_wr16	;wreg free
  5776  001B84  0E02               	movlw	2
  5777  001B86  ECBC  F031         	call	_cmd_incrementn
  5778  001B8A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5779  001B8E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5780  001B92  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5781  001B94  0E00               	movlw	0
  5782  001B96  2427               	addwf	??_display_rpm,w,c
  5783  001B98  6E16               	movwf	wr8s@addr,c
  5784  001B9A  0E80               	movlw	128
  5785  001B9C  2028               	addwfc	??_display_rpm+1,w,c
  5786  001B9E  6E17               	movwf	wr8s@addr+1,c
  5787  001BA0  0E10               	movlw	16
  5788  001BA2  2029               	addwfc	??_display_rpm+2,w,c
  5789  001BA4  6E18               	movwf	wr8s@addr+2,c
  5790  001BA6  0E7F               	movlw	low STR_27
  5791  001BA8  6E19               	movwf	wr8s@s,c
  5792  001BAA  0E0F               	movlw	high STR_27
  5793  001BAC  6E1A               	movwf	wr8s@s+1,c
  5794  001BAE  EC81  F02E         	call	_wr8s	;wreg free
  5795  001BB2  ECBC  F031         	call	_cmd_incrementn
  5796                           
  5797                           ;display.c: 175: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 235);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  5798  001BB6  0E0C               	movlw	12
  5799  001BB8  6E1E               	movwf	cmd@command,c
  5800  001BBA  0EFF               	movlw	255
  5801  001BBC  6E1F               	movwf	cmd@command+1,c
  5802  001BBE  0EFF               	movlw	255
  5803  001BC0  6E20               	movwf	cmd@command+2,c
  5804  001BC2  0EFF               	movlw	255
  5805  001BC4  6E21               	movwf	cmd@command+3,c
  5806  001BC6  EC06  F031         	call	_cmd	;wreg free
  5807  001BCA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5808  001BCE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5809  001BD2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5810  001BD4  0E00               	movlw	0
  5811  001BD6  2427               	addwf	??_display_rpm,w,c
  5812  001BD8  6E11               	movwf	wr16@addr,c
  5813  001BDA  0E80               	movlw	128
  5814  001BDC  2028               	addwfc	??_display_rpm+1,w,c
  5815  001BDE  6E12               	movwf	wr16@addr+1,c
  5816  001BE0  0E10               	movlw	16
  5817  001BE2  2029               	addwfc	??_display_rpm+2,w,c
  5818  001BE4  6E13               	movwf	wr16@addr+2,c
  5819  001BE6  0E00               	movlw	0
  5820  001BE8  6E15               	movwf	wr16@value+1,c
  5821  001BEA  0EEB               	movlw	235
  5822  001BEC  6E14               	movwf	wr16@value,c
  5823  001BEE  ECCB  F030         	call	_wr16	;wreg free
  5824  001BF2  0E02               	movlw	2
  5825  001BF4  ECBC  F031         	call	_cmd_incrementn
  5826  001BF8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5827  001BFC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5828  001C00  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5829  001C02  0E00               	movlw	0
  5830  001C04  2427               	addwf	??_display_rpm,w,c
  5831  001C06  6E11               	movwf	wr16@addr,c
  5832  001C08  0E80               	movlw	128
  5833  001C0A  2028               	addwfc	??_display_rpm+1,w,c
  5834  001C0C  6E12               	movwf	wr16@addr+1,c
  5835  001C0E  0E10               	movlw	16
  5836  001C10  2029               	addwfc	??_display_rpm+2,w,c
  5837  001C12  6E13               	movwf	wr16@addr+2,c
  5838  001C14  0E00               	movlw	0
  5839  001C16  6E15               	movwf	wr16@value+1,c
  5840  001C18  0E1A               	movlw	26
  5841  001C1A  6E14               	movwf	wr16@value,c
  5842  001C1C  ECCB  F030         	call	_wr16	;wreg free
  5843  001C20  0E02               	movlw	2
  5844  001C22  ECBC  F031         	call	_cmd_incrementn
  5845  001C26  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5846  001C2A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5847  001C2E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5848  001C30  0E00               	movlw	0
  5849  001C32  2427               	addwf	??_display_rpm,w,c
  5850  001C34  6E11               	movwf	wr16@addr,c
  5851  001C36  0E80               	movlw	128
  5852  001C38  2028               	addwfc	??_display_rpm+1,w,c
  5853  001C3A  6E12               	movwf	wr16@addr+1,c
  5854  001C3C  0E10               	movlw	16
  5855  001C3E  2029               	addwfc	??_display_rpm+2,w,c
  5856  001C40  6E13               	movwf	wr16@addr+2,c
  5857  001C42  0E00               	movlw	0
  5858  001C44  6E15               	movwf	wr16@value+1,c
  5859  001C46  0E1C               	movlw	28
  5860  001C48  6E14               	movwf	wr16@value,c
  5861  001C4A  ECCB  F030         	call	_wr16	;wreg free
  5862  001C4E  0E02               	movlw	2
  5863  001C50  ECBC  F031         	call	_cmd_incrementn
  5864  001C54  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5865  001C58  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5866  001C5C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5867  001C5E  0E00               	movlw	0
  5868  001C60  2427               	addwf	??_display_rpm,w,c
  5869  001C62  6E11               	movwf	wr16@addr,c
  5870  001C64  0E80               	movlw	128
  5871  001C66  2028               	addwfc	??_display_rpm+1,w,c
  5872  001C68  6E12               	movwf	wr16@addr+1,c
  5873  001C6A  0E10               	movlw	16
  5874  001C6C  2029               	addwfc	??_display_rpm+2,w,c
  5875  001C6E  6E13               	movwf	wr16@addr+2,c
  5876  001C70  0E00               	movlw	0
  5877  001C72  6E15               	movwf	wr16@value+1,c
  5878  001C74  0E00               	movlw	0
  5879  001C76  6E14               	movwf	wr16@value,c
  5880  001C78  ECCB  F030         	call	_wr16	;wreg free
  5881  001C7C  0E02               	movlw	2
  5882  001C7E  ECBC  F031         	call	_cmd_incrementn
  5883  001C82  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5884  001C86  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5885  001C8A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5886  001C8C  0E00               	movlw	0
  5887  001C8E  2427               	addwf	??_display_rpm,w,c
  5888  001C90  6E16               	movwf	wr8s@addr,c
  5889  001C92  0E80               	movlw	128
  5890  001C94  2028               	addwfc	??_display_rpm+1,w,c
  5891  001C96  6E17               	movwf	wr8s@addr+1,c
  5892  001C98  0E10               	movlw	16
  5893  001C9A  2029               	addwfc	??_display_rpm+2,w,c
  5894  001C9C  6E18               	movwf	wr8s@addr+2,c
  5895  001C9E  0E81               	movlw	low STR_28
  5896  001CA0  6E19               	movwf	wr8s@s,c
  5897  001CA2  0E0F               	movlw	high STR_28
  5898  001CA4  6E1A               	movwf	wr8s@s+1,c
  5899  001CA6  EC81  F02E         	call	_wr8s	;wreg free
  5900  001CAA  ECBC  F031         	call	_cmd_incrementn
  5901                           
  5902                           ;display.c: 176: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 269);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 33);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  5903  001CAE  0E0C               	movlw	12
  5904  001CB0  6E1E               	movwf	cmd@command,c
  5905  001CB2  0EFF               	movlw	255
  5906  001CB4  6E1F               	movwf	cmd@command+1,c
  5907  001CB6  0EFF               	movlw	255
  5908  001CB8  6E20               	movwf	cmd@command+2,c
  5909  001CBA  0EFF               	movlw	255
  5910  001CBC  6E21               	movwf	cmd@command+3,c
  5911  001CBE  EC06  F031         	call	_cmd	;wreg free
  5912  001CC2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5913  001CC6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5914  001CCA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5915  001CCC  0E00               	movlw	0
  5916  001CCE  2427               	addwf	??_display_rpm,w,c
  5917  001CD0  6E11               	movwf	wr16@addr,c
  5918  001CD2  0E80               	movlw	128
  5919  001CD4  2028               	addwfc	??_display_rpm+1,w,c
  5920  001CD6  6E12               	movwf	wr16@addr+1,c
  5921  001CD8  0E10               	movlw	16
  5922  001CDA  2029               	addwfc	??_display_rpm+2,w,c
  5923  001CDC  6E13               	movwf	wr16@addr+2,c
  5924  001CDE  0E01               	movlw	1
  5925  001CE0  6E15               	movwf	wr16@value+1,c
  5926  001CE2  0E0D               	movlw	13
  5927  001CE4  6E14               	movwf	wr16@value,c
  5928  001CE6  ECCB  F030         	call	_wr16	;wreg free
  5929  001CEA  0E02               	movlw	2
  5930  001CEC  ECBC  F031         	call	_cmd_incrementn
  5931  001CF0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5932  001CF4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5933  001CF8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5934  001CFA  0E00               	movlw	0
  5935  001CFC  2427               	addwf	??_display_rpm,w,c
  5936  001CFE  6E11               	movwf	wr16@addr,c
  5937  001D00  0E80               	movlw	128
  5938  001D02  2028               	addwfc	??_display_rpm+1,w,c
  5939  001D04  6E12               	movwf	wr16@addr+1,c
  5940  001D06  0E10               	movlw	16
  5941  001D08  2029               	addwfc	??_display_rpm+2,w,c
  5942  001D0A  6E13               	movwf	wr16@addr+2,c
  5943  001D0C  0E00               	movlw	0
  5944  001D0E  6E15               	movwf	wr16@value+1,c
  5945  001D10  0E21               	movlw	33
  5946  001D12  6E14               	movwf	wr16@value,c
  5947  001D14  ECCB  F030         	call	_wr16	;wreg free
  5948  001D18  0E02               	movlw	2
  5949  001D1A  ECBC  F031         	call	_cmd_incrementn
  5950  001D1E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5951  001D22  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5952  001D26  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5953  001D28  0E00               	movlw	0
  5954  001D2A  2427               	addwf	??_display_rpm,w,c
  5955  001D2C  6E11               	movwf	wr16@addr,c
  5956  001D2E  0E80               	movlw	128
  5957  001D30  2028               	addwfc	??_display_rpm+1,w,c
  5958  001D32  6E12               	movwf	wr16@addr+1,c
  5959  001D34  0E10               	movlw	16
  5960  001D36  2029               	addwfc	??_display_rpm+2,w,c
  5961  001D38  6E13               	movwf	wr16@addr+2,c
  5962  001D3A  0E00               	movlw	0
  5963  001D3C  6E15               	movwf	wr16@value+1,c
  5964  001D3E  0E1C               	movlw	28
  5965  001D40  6E14               	movwf	wr16@value,c
  5966  001D42  ECCB  F030         	call	_wr16	;wreg free
  5967  001D46  0E02               	movlw	2
  5968  001D48  ECBC  F031         	call	_cmd_incrementn
  5969  001D4C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5970  001D50  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5971  001D54  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5972  001D56  0E00               	movlw	0
  5973  001D58  2427               	addwf	??_display_rpm,w,c
  5974  001D5A  6E11               	movwf	wr16@addr,c
  5975  001D5C  0E80               	movlw	128
  5976  001D5E  2028               	addwfc	??_display_rpm+1,w,c
  5977  001D60  6E12               	movwf	wr16@addr+1,c
  5978  001D62  0E10               	movlw	16
  5979  001D64  2029               	addwfc	??_display_rpm+2,w,c
  5980  001D66  6E13               	movwf	wr16@addr+2,c
  5981  001D68  0E00               	movlw	0
  5982  001D6A  6E15               	movwf	wr16@value+1,c
  5983  001D6C  0E00               	movlw	0
  5984  001D6E  6E14               	movwf	wr16@value,c
  5985  001D70  ECCB  F030         	call	_wr16	;wreg free
  5986  001D74  0E02               	movlw	2
  5987  001D76  ECBC  F031         	call	_cmd_incrementn
  5988  001D7A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  5989  001D7E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  5990  001D82  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  5991  001D84  0E00               	movlw	0
  5992  001D86  2427               	addwf	??_display_rpm,w,c
  5993  001D88  6E16               	movwf	wr8s@addr,c
  5994  001D8A  0E80               	movlw	128
  5995  001D8C  2028               	addwfc	??_display_rpm+1,w,c
  5996  001D8E  6E17               	movwf	wr8s@addr+1,c
  5997  001D90  0E10               	movlw	16
  5998  001D92  2029               	addwfc	??_display_rpm+2,w,c
  5999  001D94  6E18               	movwf	wr8s@addr+2,c
  6000  001D96  0E83               	movlw	low STR_29
  6001  001D98  6E19               	movwf	wr8s@s,c
  6002  001D9A  0E0F               	movlw	high STR_29
  6003  001D9C  6E1A               	movwf	wr8s@s+1,c
  6004  001D9E  EC81  F02E         	call	_wr8s	;wreg free
  6005  001DA2  ECBC  F031         	call	_cmd_incrementn
  6006                           
  6007                           ;display.c: 177: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 298);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6008  001DA6  0E0C               	movlw	12
  6009  001DA8  6E1E               	movwf	cmd@command,c
  6010  001DAA  0EFF               	movlw	255
  6011  001DAC  6E1F               	movwf	cmd@command+1,c
  6012  001DAE  0EFF               	movlw	255
  6013  001DB0  6E20               	movwf	cmd@command+2,c
  6014  001DB2  0EFF               	movlw	255
  6015  001DB4  6E21               	movwf	cmd@command+3,c
  6016  001DB6  EC06  F031         	call	_cmd	;wreg free
  6017  001DBA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6018  001DBE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6019  001DC2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6020  001DC4  0E00               	movlw	0
  6021  001DC6  2427               	addwf	??_display_rpm,w,c
  6022  001DC8  6E11               	movwf	wr16@addr,c
  6023  001DCA  0E80               	movlw	128
  6024  001DCC  2028               	addwfc	??_display_rpm+1,w,c
  6025  001DCE  6E12               	movwf	wr16@addr+1,c
  6026  001DD0  0E10               	movlw	16
  6027  001DD2  2029               	addwfc	??_display_rpm+2,w,c
  6028  001DD4  6E13               	movwf	wr16@addr+2,c
  6029  001DD6  0E01               	movlw	1
  6030  001DD8  6E15               	movwf	wr16@value+1,c
  6031  001DDA  0E2A               	movlw	42
  6032  001DDC  6E14               	movwf	wr16@value,c
  6033  001DDE  ECCB  F030         	call	_wr16	;wreg free
  6034  001DE2  0E02               	movlw	2
  6035  001DE4  ECBC  F031         	call	_cmd_incrementn
  6036  001DE8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6037  001DEC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6038  001DF0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6039  001DF2  0E00               	movlw	0
  6040  001DF4  2427               	addwf	??_display_rpm,w,c
  6041  001DF6  6E11               	movwf	wr16@addr,c
  6042  001DF8  0E80               	movlw	128
  6043  001DFA  2028               	addwfc	??_display_rpm+1,w,c
  6044  001DFC  6E12               	movwf	wr16@addr+1,c
  6045  001DFE  0E10               	movlw	16
  6046  001E00  2029               	addwfc	??_display_rpm+2,w,c
  6047  001E02  6E13               	movwf	wr16@addr+2,c
  6048  001E04  0E00               	movlw	0
  6049  001E06  6E15               	movwf	wr16@value+1,c
  6050  001E08  0E3A               	movlw	58
  6051  001E0A  6E14               	movwf	wr16@value,c
  6052  001E0C  ECCB  F030         	call	_wr16	;wreg free
  6053  001E10  0E02               	movlw	2
  6054  001E12  ECBC  F031         	call	_cmd_incrementn
  6055  001E16  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6056  001E1A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6057  001E1E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6058  001E20  0E00               	movlw	0
  6059  001E22  2427               	addwf	??_display_rpm,w,c
  6060  001E24  6E11               	movwf	wr16@addr,c
  6061  001E26  0E80               	movlw	128
  6062  001E28  2028               	addwfc	??_display_rpm+1,w,c
  6063  001E2A  6E12               	movwf	wr16@addr+1,c
  6064  001E2C  0E10               	movlw	16
  6065  001E2E  2029               	addwfc	??_display_rpm+2,w,c
  6066  001E30  6E13               	movwf	wr16@addr+2,c
  6067  001E32  0E00               	movlw	0
  6068  001E34  6E15               	movwf	wr16@value+1,c
  6069  001E36  0E1C               	movlw	28
  6070  001E38  6E14               	movwf	wr16@value,c
  6071  001E3A  ECCB  F030         	call	_wr16	;wreg free
  6072  001E3E  0E02               	movlw	2
  6073  001E40  ECBC  F031         	call	_cmd_incrementn
  6074  001E44  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6075  001E48  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6076  001E4C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6077  001E4E  0E00               	movlw	0
  6078  001E50  2427               	addwf	??_display_rpm,w,c
  6079  001E52  6E11               	movwf	wr16@addr,c
  6080  001E54  0E80               	movlw	128
  6081  001E56  2028               	addwfc	??_display_rpm+1,w,c
  6082  001E58  6E12               	movwf	wr16@addr+1,c
  6083  001E5A  0E10               	movlw	16
  6084  001E5C  2029               	addwfc	??_display_rpm+2,w,c
  6085  001E5E  6E13               	movwf	wr16@addr+2,c
  6086  001E60  0E00               	movlw	0
  6087  001E62  6E15               	movwf	wr16@value+1,c
  6088  001E64  0E00               	movlw	0
  6089  001E66  6E14               	movwf	wr16@value,c
  6090  001E68  ECCB  F030         	call	_wr16	;wreg free
  6091  001E6C  0E02               	movlw	2
  6092  001E6E  ECBC  F031         	call	_cmd_incrementn
  6093  001E72  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6094  001E76  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6095  001E7A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6096  001E7C  0E00               	movlw	0
  6097  001E7E  2427               	addwf	??_display_rpm,w,c
  6098  001E80  6E16               	movwf	wr8s@addr,c
  6099  001E82  0E80               	movlw	128
  6100  001E84  2028               	addwfc	??_display_rpm+1,w,c
  6101  001E86  6E17               	movwf	wr8s@addr+1,c
  6102  001E88  0E10               	movlw	16
  6103  001E8A  2029               	addwfc	??_display_rpm+2,w,c
  6104  001E8C  6E18               	movwf	wr8s@addr+2,c
  6105  001E8E  0E85               	movlw	low STR_30
  6106  001E90  6E19               	movwf	wr8s@s,c
  6107  001E92  0E0F               	movlw	high STR_30
  6108  001E94  6E1A               	movwf	wr8s@s+1,c
  6109  001E96  EC81  F02E         	call	_wr8s	;wreg free
  6110  001E9A  ECBC  F031         	call	_cmd_incrementn
  6111                           
  6112                           ;display.c: 178: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 301);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 92);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
  6113  001E9E  0E0C               	movlw	12
  6114  001EA0  6E1E               	movwf	cmd@command,c
  6115  001EA2  0EFF               	movlw	255
  6116  001EA4  6E1F               	movwf	cmd@command+1,c
  6117  001EA6  0EFF               	movlw	255
  6118  001EA8  6E20               	movwf	cmd@command+2,c
  6119  001EAA  0EFF               	movlw	255
  6120  001EAC  6E21               	movwf	cmd@command+3,c
  6121  001EAE  EC06  F031         	call	_cmd	;wreg free
  6122  001EB2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6123  001EB6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6124  001EBA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6125  001EBC  0E00               	movlw	0
  6126  001EBE  2427               	addwf	??_display_rpm,w,c
  6127  001EC0  6E11               	movwf	wr16@addr,c
  6128  001EC2  0E80               	movlw	128
  6129  001EC4  2028               	addwfc	??_display_rpm+1,w,c
  6130  001EC6  6E12               	movwf	wr16@addr+1,c
  6131  001EC8  0E10               	movlw	16
  6132  001ECA  2029               	addwfc	??_display_rpm+2,w,c
  6133  001ECC  6E13               	movwf	wr16@addr+2,c
  6134  001ECE  0E01               	movlw	1
  6135  001ED0  6E15               	movwf	wr16@value+1,c
  6136  001ED2  0E2D               	movlw	45
  6137  001ED4  6E14               	movwf	wr16@value,c
  6138  001ED6  ECCB  F030         	call	_wr16	;wreg free
  6139  001EDA  0E02               	movlw	2
  6140  001EDC  ECBC  F031         	call	_cmd_incrementn
  6141  001EE0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6142  001EE4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6143  001EE8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6144  001EEA  0E00               	movlw	0
  6145  001EEC  2427               	addwf	??_display_rpm,w,c
  6146  001EEE  6E11               	movwf	wr16@addr,c
  6147  001EF0  0E80               	movlw	128
  6148  001EF2  2028               	addwfc	??_display_rpm+1,w,c
  6149  001EF4  6E12               	movwf	wr16@addr+1,c
  6150  001EF6  0E10               	movlw	16
  6151  001EF8  2029               	addwfc	??_display_rpm+2,w,c
  6152  001EFA  6E13               	movwf	wr16@addr+2,c
  6153  001EFC  0E00               	movlw	0
  6154  001EFE  6E15               	movwf	wr16@value+1,c
  6155  001F00  0E5C               	movlw	92
  6156  001F02  6E14               	movwf	wr16@value,c
  6157  001F04  ECCB  F030         	call	_wr16	;wreg free
  6158  001F08  0E02               	movlw	2
  6159  001F0A  ECBC  F031         	call	_cmd_incrementn
  6160  001F0E  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6161  001F12  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6162  001F16  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6163  001F18  0E00               	movlw	0
  6164  001F1A  2427               	addwf	??_display_rpm,w,c
  6165  001F1C  6E11               	movwf	wr16@addr,c
  6166  001F1E  0E80               	movlw	128
  6167  001F20  2028               	addwfc	??_display_rpm+1,w,c
  6168  001F22  6E12               	movwf	wr16@addr+1,c
  6169  001F24  0E10               	movlw	16
  6170  001F26  2029               	addwfc	??_display_rpm+2,w,c
  6171  001F28  6E13               	movwf	wr16@addr+2,c
  6172  001F2A  0E00               	movlw	0
  6173  001F2C  6E15               	movwf	wr16@value+1,c
  6174  001F2E  0E1C               	movlw	28
  6175  001F30  6E14               	movwf	wr16@value,c
  6176  001F32  ECCB  F030         	call	_wr16	;wreg free
  6177  001F36  0E02               	movlw	2
  6178  001F38  ECBC  F031         	call	_cmd_incrementn
  6179  001F3C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6180  001F40  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6181  001F44  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6182  001F46  0E00               	movlw	0
  6183  001F48  2427               	addwf	??_display_rpm,w,c
  6184  001F4A  6E11               	movwf	wr16@addr,c
  6185  001F4C  0E80               	movlw	128
  6186  001F4E  2028               	addwfc	??_display_rpm+1,w,c
  6187  001F50  6E12               	movwf	wr16@addr+1,c
  6188  001F52  0E10               	movlw	16
  6189  001F54  2029               	addwfc	??_display_rpm+2,w,c
  6190  001F56  6E13               	movwf	wr16@addr+2,c
  6191  001F58  0E00               	movlw	0
  6192  001F5A  6E15               	movwf	wr16@value+1,c
  6193  001F5C  0E00               	movlw	0
  6194  001F5E  6E14               	movwf	wr16@value,c
  6195  001F60  ECCB  F030         	call	_wr16	;wreg free
  6196  001F64  0E02               	movlw	2
  6197  001F66  ECBC  F031         	call	_cmd_incrementn
  6198  001F6A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6199  001F6E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6200  001F72  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6201  001F74  0E00               	movlw	0
  6202  001F76  2427               	addwf	??_display_rpm,w,c
  6203  001F78  6E16               	movwf	wr8s@addr,c
  6204  001F7A  0E80               	movlw	128
  6205  001F7C  2028               	addwfc	??_display_rpm+1,w,c
  6206  001F7E  6E17               	movwf	wr8s@addr+1,c
  6207  001F80  0E10               	movlw	16
  6208  001F82  2029               	addwfc	??_display_rpm+2,w,c
  6209  001F84  6E18               	movwf	wr8s@addr+2,c
  6210  001F86  0E69               	movlw	low STR_31
  6211  001F88  6E19               	movwf	wr8s@s,c
  6212  001F8A  0E0F               	movlw	high STR_31
  6213  001F8C  6E1A               	movwf	wr8s@s+1,c
  6214  001F8E  EC81  F02E         	call	_wr8s	;wreg free
  6215  001F92  ECBC  F031         	call	_cmd_incrementn
  6216                           
  6217                           ;display.c: 179: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 299);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6218  001F96  0E0C               	movlw	12
  6219  001F98  6E1E               	movwf	cmd@command,c
  6220  001F9A  0EFF               	movlw	255
  6221  001F9C  6E1F               	movwf	cmd@command+1,c
  6222  001F9E  0EFF               	movlw	255
  6223  001FA0  6E20               	movwf	cmd@command+2,c
  6224  001FA2  0EFF               	movlw	255
  6225  001FA4  6E21               	movwf	cmd@command+3,c
  6226  001FA6  EC06  F031         	call	_cmd	;wreg free
  6227  001FAA  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6228  001FAE  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6229  001FB2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6230  001FB4  0E00               	movlw	0
  6231  001FB6  2427               	addwf	??_display_rpm,w,c
  6232  001FB8  6E11               	movwf	wr16@addr,c
  6233  001FBA  0E80               	movlw	128
  6234  001FBC  2028               	addwfc	??_display_rpm+1,w,c
  6235  001FBE  6E12               	movwf	wr16@addr+1,c
  6236  001FC0  0E10               	movlw	16
  6237  001FC2  2029               	addwfc	??_display_rpm+2,w,c
  6238  001FC4  6E13               	movwf	wr16@addr+2,c
  6239  001FC6  0E01               	movlw	1
  6240  001FC8  6E15               	movwf	wr16@value+1,c
  6241  001FCA  0E2B               	movlw	43
  6242  001FCC  6E14               	movwf	wr16@value,c
  6243  001FCE  ECCB  F030         	call	_wr16	;wreg free
  6244  001FD2  0E02               	movlw	2
  6245  001FD4  ECBC  F031         	call	_cmd_incrementn
  6246  001FD8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6247  001FDC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6248  001FE0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6249  001FE2  0E00               	movlw	0
  6250  001FE4  2427               	addwf	??_display_rpm,w,c
  6251  001FE6  6E11               	movwf	wr16@addr,c
  6252  001FE8  0E80               	movlw	128
  6253  001FEA  2028               	addwfc	??_display_rpm+1,w,c
  6254  001FEC  6E12               	movwf	wr16@addr+1,c
  6255  001FEE  0E10               	movlw	16
  6256  001FF0  2029               	addwfc	??_display_rpm+2,w,c
  6257  001FF2  6E13               	movwf	wr16@addr+2,c
  6258  001FF4  0E00               	movlw	0
  6259  001FF6  6E15               	movwf	wr16@value+1,c
  6260  001FF8  0E82               	movlw	130
  6261  001FFA  6E14               	movwf	wr16@value,c
  6262  001FFC  ECCB  F030         	call	_wr16	;wreg free
  6263  002000  0E02               	movlw	2
  6264  002002  ECBC  F031         	call	_cmd_incrementn
  6265  002006  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6266  00200A  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6267  00200E  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6268  002010  0E00               	movlw	0
  6269  002012  2427               	addwf	??_display_rpm,w,c
  6270  002014  6E11               	movwf	wr16@addr,c
  6271  002016  0E80               	movlw	128
  6272  002018  2028               	addwfc	??_display_rpm+1,w,c
  6273  00201A  6E12               	movwf	wr16@addr+1,c
  6274  00201C  0E10               	movlw	16
  6275  00201E  2029               	addwfc	??_display_rpm+2,w,c
  6276  002020  6E13               	movwf	wr16@addr+2,c
  6277  002022  0E00               	movlw	0
  6278  002024  6E15               	movwf	wr16@value+1,c
  6279  002026  0E1C               	movlw	28
  6280  002028  6E14               	movwf	wr16@value,c
  6281  00202A  ECCB  F030         	call	_wr16	;wreg free
  6282  00202E  0E02               	movlw	2
  6283  002030  ECBC  F031         	call	_cmd_incrementn
  6284  002034  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6285  002038  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6286  00203C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6287  00203E  0E00               	movlw	0
  6288  002040  2427               	addwf	??_display_rpm,w,c
  6289  002042  6E11               	movwf	wr16@addr,c
  6290  002044  0E80               	movlw	128
  6291  002046  2028               	addwfc	??_display_rpm+1,w,c
  6292  002048  6E12               	movwf	wr16@addr+1,c
  6293  00204A  0E10               	movlw	16
  6294  00204C  2029               	addwfc	??_display_rpm+2,w,c
  6295  00204E  6E13               	movwf	wr16@addr+2,c
  6296  002050  0E00               	movlw	0
  6297  002052  6E15               	movwf	wr16@value+1,c
  6298  002054  0E00               	movlw	0
  6299  002056  6E14               	movwf	wr16@value,c
  6300  002058  ECCB  F030         	call	_wr16	;wreg free
  6301  00205C  0E02               	movlw	2
  6302  00205E  ECBC  F031         	call	_cmd_incrementn
  6303  002062  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6304  002066  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6305  00206A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6306  00206C  0E00               	movlw	0
  6307  00206E  2427               	addwf	??_display_rpm,w,c
  6308  002070  6E16               	movwf	wr8s@addr,c
  6309  002072  0E80               	movlw	128
  6310  002074  2028               	addwfc	??_display_rpm+1,w,c
  6311  002076  6E17               	movwf	wr8s@addr+1,c
  6312  002078  0E10               	movlw	16
  6313  00207A  2029               	addwfc	??_display_rpm+2,w,c
  6314  00207C  6E18               	movwf	wr8s@addr+2,c
  6315  00207E  0E6C               	movlw	low STR_32
  6316  002080  6E19               	movwf	wr8s@s,c
  6317  002082  0E0F               	movlw	high STR_32
  6318  002084  6E1A               	movwf	wr8s@s+1,c
  6319  002086  EC81  F02E         	call	_wr8s	;wreg free
  6320  00208A  ECBC  F031         	call	_cmd_incrementn
  6321                           
  6322                           ;display.c: 180: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 274);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 161);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6323  00208E  0E0C               	movlw	12
  6324  002090  6E1E               	movwf	cmd@command,c
  6325  002092  0EFF               	movlw	255
  6326  002094  6E1F               	movwf	cmd@command+1,c
  6327  002096  0EFF               	movlw	255
  6328  002098  6E20               	movwf	cmd@command+2,c
  6329  00209A  0EFF               	movlw	255
  6330  00209C  6E21               	movwf	cmd@command+3,c
  6331  00209E  EC06  F031         	call	_cmd	;wreg free
  6332  0020A2  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6333  0020A6  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6334  0020AA  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6335  0020AC  0E00               	movlw	0
  6336  0020AE  2427               	addwf	??_display_rpm,w,c
  6337  0020B0  6E11               	movwf	wr16@addr,c
  6338  0020B2  0E80               	movlw	128
  6339  0020B4  2028               	addwfc	??_display_rpm+1,w,c
  6340  0020B6  6E12               	movwf	wr16@addr+1,c
  6341  0020B8  0E10               	movlw	16
  6342  0020BA  2029               	addwfc	??_display_rpm+2,w,c
  6343  0020BC  6E13               	movwf	wr16@addr+2,c
  6344  0020BE  0E01               	movlw	1
  6345  0020C0  6E15               	movwf	wr16@value+1,c
  6346  0020C2  0E12               	movlw	18
  6347  0020C4  6E14               	movwf	wr16@value,c
  6348  0020C6  ECCB  F030         	call	_wr16	;wreg free
  6349  0020CA  0E02               	movlw	2
  6350  0020CC  ECBC  F031         	call	_cmd_incrementn
  6351  0020D0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6352  0020D4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6353  0020D8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6354  0020DA  0E00               	movlw	0
  6355  0020DC  2427               	addwf	??_display_rpm,w,c
  6356  0020DE  6E11               	movwf	wr16@addr,c
  6357  0020E0  0E80               	movlw	128
  6358  0020E2  2028               	addwfc	??_display_rpm+1,w,c
  6359  0020E4  6E12               	movwf	wr16@addr+1,c
  6360  0020E6  0E10               	movlw	16
  6361  0020E8  2029               	addwfc	??_display_rpm+2,w,c
  6362  0020EA  6E13               	movwf	wr16@addr+2,c
  6363  0020EC  0E00               	movlw	0
  6364  0020EE  6E15               	movwf	wr16@value+1,c
  6365  0020F0  0EA1               	movlw	161
  6366  0020F2  6E14               	movwf	wr16@value,c
  6367  0020F4  ECCB  F030         	call	_wr16	;wreg free
  6368  0020F8  0E02               	movlw	2
  6369  0020FA  ECBC  F031         	call	_cmd_incrementn
  6370  0020FE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6371  002102  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6372  002106  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6373  002108  0E00               	movlw	0
  6374  00210A  2427               	addwf	??_display_rpm,w,c
  6375  00210C  6E11               	movwf	wr16@addr,c
  6376  00210E  0E80               	movlw	128
  6377  002110  2028               	addwfc	??_display_rpm+1,w,c
  6378  002112  6E12               	movwf	wr16@addr+1,c
  6379  002114  0E10               	movlw	16
  6380  002116  2029               	addwfc	??_display_rpm+2,w,c
  6381  002118  6E13               	movwf	wr16@addr+2,c
  6382  00211A  0E00               	movlw	0
  6383  00211C  6E15               	movwf	wr16@value+1,c
  6384  00211E  0E1C               	movlw	28
  6385  002120  6E14               	movwf	wr16@value,c
  6386  002122  ECCB  F030         	call	_wr16	;wreg free
  6387  002126  0E02               	movlw	2
  6388  002128  ECBC  F031         	call	_cmd_incrementn
  6389  00212C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6390  002130  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6391  002134  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6392  002136  0E00               	movlw	0
  6393  002138  2427               	addwf	??_display_rpm,w,c
  6394  00213A  6E11               	movwf	wr16@addr,c
  6395  00213C  0E80               	movlw	128
  6396  00213E  2028               	addwfc	??_display_rpm+1,w,c
  6397  002140  6E12               	movwf	wr16@addr+1,c
  6398  002142  0E10               	movlw	16
  6399  002144  2029               	addwfc	??_display_rpm+2,w,c
  6400  002146  6E13               	movwf	wr16@addr+2,c
  6401  002148  0E00               	movlw	0
  6402  00214A  6E15               	movwf	wr16@value+1,c
  6403  00214C  0E00               	movlw	0
  6404  00214E  6E14               	movwf	wr16@value,c
  6405  002150  ECCB  F030         	call	_wr16	;wreg free
  6406  002154  0E02               	movlw	2
  6407  002156  ECBC  F031         	call	_cmd_incrementn
  6408  00215A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6409  00215E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6410  002162  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6411  002164  0E00               	movlw	0
  6412  002166  2427               	addwf	??_display_rpm,w,c
  6413  002168  6E16               	movwf	wr8s@addr,c
  6414  00216A  0E80               	movlw	128
  6415  00216C  2028               	addwfc	??_display_rpm+1,w,c
  6416  00216E  6E17               	movwf	wr8s@addr+1,c
  6417  002170  0E10               	movlw	16
  6418  002172  2029               	addwfc	??_display_rpm+2,w,c
  6419  002174  6E18               	movwf	wr8s@addr+2,c
  6420  002176  0E6F               	movlw	low STR_33
  6421  002178  6E19               	movwf	wr8s@s,c
  6422  00217A  0E0F               	movlw	high STR_33
  6423  00217C  6E1A               	movwf	wr8s@s+1,c
  6424  00217E  EC81  F02E         	call	_wr8s	;wreg free
  6425  002182  ECBC  F031         	call	_cmd_incrementn
  6426                           
  6427                           ;display.c: 181: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 241);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 114);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344
      +                          UL+
  6428  002186  0E0C               	movlw	12
  6429  002188  6E1E               	movwf	cmd@command,c
  6430  00218A  0EFF               	movlw	255
  6431  00218C  6E1F               	movwf	cmd@command+1,c
  6432  00218E  0EFF               	movlw	255
  6433  002190  6E20               	movwf	cmd@command+2,c
  6434  002192  0EFF               	movlw	255
  6435  002194  6E21               	movwf	cmd@command+3,c
  6436  002196  EC06  F031         	call	_cmd	;wreg free
  6437  00219A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6438  00219E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6439  0021A2  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6440  0021A4  0E00               	movlw	0
  6441  0021A6  2427               	addwf	??_display_rpm,w,c
  6442  0021A8  6E11               	movwf	wr16@addr,c
  6443  0021AA  0E80               	movlw	128
  6444  0021AC  2028               	addwfc	??_display_rpm+1,w,c
  6445  0021AE  6E12               	movwf	wr16@addr+1,c
  6446  0021B0  0E10               	movlw	16
  6447  0021B2  2029               	addwfc	??_display_rpm+2,w,c
  6448  0021B4  6E13               	movwf	wr16@addr+2,c
  6449  0021B6  0E00               	movlw	0
  6450  0021B8  6E15               	movwf	wr16@value+1,c
  6451  0021BA  0EF1               	movlw	241
  6452  0021BC  6E14               	movwf	wr16@value,c
  6453  0021BE  ECCB  F030         	call	_wr16	;wreg free
  6454  0021C2  0E02               	movlw	2
  6455  0021C4  ECBC  F031         	call	_cmd_incrementn
  6456  0021C8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6457  0021CC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6458  0021D0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6459  0021D2  0E00               	movlw	0
  6460  0021D4  2427               	addwf	??_display_rpm,w,c
  6461  0021D6  6E11               	movwf	wr16@addr,c
  6462  0021D8  0E80               	movlw	128
  6463  0021DA  2028               	addwfc	??_display_rpm+1,w,c
  6464  0021DC  6E12               	movwf	wr16@addr+1,c
  6465  0021DE  0E10               	movlw	16
  6466  0021E0  2029               	addwfc	??_display_rpm+2,w,c
  6467  0021E2  6E13               	movwf	wr16@addr+2,c
  6468  0021E4  0E00               	movlw	0
  6469  0021E6  6E15               	movwf	wr16@value+1,c
  6470  0021E8  0E72               	movlw	114
  6471  0021EA  6E14               	movwf	wr16@value,c
  6472  0021EC  ECCB  F030         	call	_wr16	;wreg free
  6473  0021F0  0E02               	movlw	2
  6474  0021F2  ECBC  F031         	call	_cmd_incrementn
  6475  0021F6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6476  0021FA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6477  0021FE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6478  002200  0E00               	movlw	0
  6479  002202  2427               	addwf	??_display_rpm,w,c
  6480  002204  6E11               	movwf	wr16@addr,c
  6481  002206  0E80               	movlw	128
  6482  002208  2028               	addwfc	??_display_rpm+1,w,c
  6483  00220A  6E12               	movwf	wr16@addr+1,c
  6484  00220C  0E10               	movlw	16
  6485  00220E  2029               	addwfc	??_display_rpm+2,w,c
  6486  002210  6E13               	movwf	wr16@addr+2,c
  6487  002212  0E00               	movlw	0
  6488  002214  6E15               	movwf	wr16@value+1,c
  6489  002216  0E1F               	movlw	31
  6490  002218  6E14               	movwf	wr16@value,c
  6491  00221A  ECCB  F030         	call	_wr16	;wreg free
  6492  00221E  0E02               	movlw	2
  6493  002220  ECBC  F031         	call	_cmd_incrementn
  6494  002224  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6495  002228  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6496  00222C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6497  00222E  0E00               	movlw	0
  6498  002230  2427               	addwf	??_display_rpm,w,c
  6499  002232  6E11               	movwf	wr16@addr,c
  6500  002234  0E80               	movlw	128
  6501  002236  2028               	addwfc	??_display_rpm+1,w,c
  6502  002238  6E12               	movwf	wr16@addr+1,c
  6503  00223A  0E10               	movlw	16
  6504  00223C  2029               	addwfc	??_display_rpm+2,w,c
  6505  00223E  6E13               	movwf	wr16@addr+2,c
  6506  002240  0E06               	movlw	6
  6507  002242  6E15               	movwf	wr16@value+1,c
  6508  002244  0E00               	movlw	0
  6509  002246  6E14               	movwf	wr16@value,c
  6510  002248  ECCB  F030         	call	_wr16	;wreg free
  6511  00224C  0E02               	movlw	2
  6512  00224E  ECBC  F031         	call	_cmd_incrementn
  6513  002252  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6514  002256  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6515  00225A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6516  00225C  0E00               	movlw	0
  6517  00225E  2427               	addwf	??_display_rpm,w,c
  6518  002260  6E16               	movwf	wr8s@addr,c
  6519  002262  0E80               	movlw	128
  6520  002264  2028               	addwfc	??_display_rpm+1,w,c
  6521  002266  6E17               	movwf	wr8s@addr+1,c
  6522  002268  0E10               	movlw	16
  6523  00226A  2029               	addwfc	??_display_rpm+2,w,c
  6524  00226C  6E18               	movwf	wr8s@addr+2,c
  6525  00226E  0E77               	movlw	low STR_22
  6526  002270  6E19               	movwf	wr8s@s,c
  6527  002272  0E0F               	movlw	high STR_22
  6528  002274  6E1A               	movwf	wr8s@s+1,c
  6529  002276  EC81  F02E         	call	_wr8s	;wreg free
  6530  00227A  ECBC  F031         	call	_cmd_incrementn
  6531                           
  6532                           ;display.c: 182: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 267);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 108);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6533  00227E  0E0C               	movlw	12
  6534  002280  6E1E               	movwf	cmd@command,c
  6535  002282  0EFF               	movlw	255
  6536  002284  6E1F               	movwf	cmd@command+1,c
  6537  002286  0EFF               	movlw	255
  6538  002288  6E20               	movwf	cmd@command+2,c
  6539  00228A  0EFF               	movlw	255
  6540  00228C  6E21               	movwf	cmd@command+3,c
  6541  00228E  EC06  F031         	call	_cmd	;wreg free
  6542  002292  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6543  002296  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6544  00229A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6545  00229C  0E00               	movlw	0
  6546  00229E  2427               	addwf	??_display_rpm,w,c
  6547  0022A0  6E11               	movwf	wr16@addr,c
  6548  0022A2  0E80               	movlw	128
  6549  0022A4  2028               	addwfc	??_display_rpm+1,w,c
  6550  0022A6  6E12               	movwf	wr16@addr+1,c
  6551  0022A8  0E10               	movlw	16
  6552  0022AA  2029               	addwfc	??_display_rpm+2,w,c
  6553  0022AC  6E13               	movwf	wr16@addr+2,c
  6554  0022AE  0E01               	movlw	1
  6555  0022B0  6E15               	movwf	wr16@value+1,c
  6556  0022B2  0E0B               	movlw	11
  6557  0022B4  6E14               	movwf	wr16@value,c
  6558  0022B6  ECCB  F030         	call	_wr16	;wreg free
  6559  0022BA  0E02               	movlw	2
  6560  0022BC  ECBC  F031         	call	_cmd_incrementn
  6561  0022C0  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6562  0022C4  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6563  0022C8  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6564  0022CA  0E00               	movlw	0
  6565  0022CC  2427               	addwf	??_display_rpm,w,c
  6566  0022CE  6E11               	movwf	wr16@addr,c
  6567  0022D0  0E80               	movlw	128
  6568  0022D2  2028               	addwfc	??_display_rpm+1,w,c
  6569  0022D4  6E12               	movwf	wr16@addr+1,c
  6570  0022D6  0E10               	movlw	16
  6571  0022D8  2029               	addwfc	??_display_rpm+2,w,c
  6572  0022DA  6E13               	movwf	wr16@addr+2,c
  6573  0022DC  0E00               	movlw	0
  6574  0022DE  6E15               	movwf	wr16@value+1,c
  6575  0022E0  0E6C               	movlw	108
  6576  0022E2  6E14               	movwf	wr16@value,c
  6577  0022E4  ECCB  F030         	call	_wr16	;wreg free
  6578  0022E8  0E02               	movlw	2
  6579  0022EA  ECBC  F031         	call	_cmd_incrementn
  6580  0022EE  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6581  0022F2  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6582  0022F6  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6583  0022F8  0E00               	movlw	0
  6584  0022FA  2427               	addwf	??_display_rpm,w,c
  6585  0022FC  6E11               	movwf	wr16@addr,c
  6586  0022FE  0E80               	movlw	128
  6587  002300  2028               	addwfc	??_display_rpm+1,w,c
  6588  002302  6E12               	movwf	wr16@addr+1,c
  6589  002304  0E10               	movlw	16
  6590  002306  2029               	addwfc	??_display_rpm+2,w,c
  6591  002308  6E13               	movwf	wr16@addr+2,c
  6592  00230A  0E00               	movlw	0
  6593  00230C  6E15               	movwf	wr16@value+1,c
  6594  00230E  0E1C               	movlw	28
  6595  002310  6E14               	movwf	wr16@value,c
  6596  002312  ECCB  F030         	call	_wr16	;wreg free
  6597  002316  0E02               	movlw	2
  6598  002318  ECBC  F031         	call	_cmd_incrementn
  6599  00231C  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6600  002320  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6601  002324  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6602  002326  0E00               	movlw	0
  6603  002328  2427               	addwf	??_display_rpm,w,c
  6604  00232A  6E11               	movwf	wr16@addr,c
  6605  00232C  0E80               	movlw	128
  6606  00232E  2028               	addwfc	??_display_rpm+1,w,c
  6607  002330  6E12               	movwf	wr16@addr+1,c
  6608  002332  0E10               	movlw	16
  6609  002334  2029               	addwfc	??_display_rpm+2,w,c
  6610  002336  6E13               	movwf	wr16@addr+2,c
  6611  002338  0E00               	movlw	0
  6612  00233A  6E15               	movwf	wr16@value+1,c
  6613  00233C  0E00               	movlw	0
  6614  00233E  6E14               	movwf	wr16@value,c
  6615  002340  ECCB  F030         	call	_wr16	;wreg free
  6616  002344  0E02               	movlw	2
  6617  002346  ECBC  F031         	call	_cmd_incrementn
  6618  00234A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6619  00234E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6620  002352  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6621  002354  0E00               	movlw	0
  6622  002356  2427               	addwf	??_display_rpm,w,c
  6623  002358  6E16               	movwf	wr8s@addr,c
  6624  00235A  0E80               	movlw	128
  6625  00235C  2028               	addwfc	??_display_rpm+1,w,c
  6626  00235E  6E17               	movwf	wr8s@addr+1,c
  6627  002360  0E10               	movlw	16
  6628  002362  2029               	addwfc	??_display_rpm+2,w,c
  6629  002364  6E18               	movwf	wr8s@addr+2,c
  6630  002366  0E89               	movlw	low STR_35
  6631  002368  6E19               	movwf	wr8s@s,c
  6632  00236A  0E0F               	movlw	high STR_35
  6633  00236C  6E1A               	movwf	wr8s@s+1,c
  6634  00236E  EC81  F02E         	call	_wr8s	;wreg free
  6635  002372  ECBC  F031         	call	_cmd_incrementn
  6636                           
  6637                           ;display.c: 183: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 227);cmd_incrementn(2);wr1
      +                          6(1081344UL+cmd_offset, 132);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cm
      +                          d_o
  6638  002376  0E0C               	movlw	12
  6639  002378  6E1E               	movwf	cmd@command,c
  6640  00237A  0EFF               	movlw	255
  6641  00237C  6E1F               	movwf	cmd@command+1,c
  6642  00237E  0EFF               	movlw	255
  6643  002380  6E20               	movwf	cmd@command+2,c
  6644  002382  0EFF               	movlw	255
  6645  002384  6E21               	movwf	cmd@command+3,c
  6646  002386  EC06  F031         	call	_cmd	;wreg free
  6647  00238A  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6648  00238E  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6649  002392  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6650  002394  0E00               	movlw	0
  6651  002396  2427               	addwf	??_display_rpm,w,c
  6652  002398  6E11               	movwf	wr16@addr,c
  6653  00239A  0E80               	movlw	128
  6654  00239C  2028               	addwfc	??_display_rpm+1,w,c
  6655  00239E  6E12               	movwf	wr16@addr+1,c
  6656  0023A0  0E10               	movlw	16
  6657  0023A2  2029               	addwfc	??_display_rpm+2,w,c
  6658  0023A4  6E13               	movwf	wr16@addr+2,c
  6659  0023A6  0E00               	movlw	0
  6660  0023A8  6E15               	movwf	wr16@value+1,c
  6661  0023AA  0EE3               	movlw	227
  6662  0023AC  6E14               	movwf	wr16@value,c
  6663  0023AE  ECCB  F030         	call	_wr16	;wreg free
  6664  0023B2  0E02               	movlw	2
  6665  0023B4  ECBC  F031         	call	_cmd_incrementn
  6666  0023B8  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6667  0023BC  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6668  0023C0  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6669  0023C2  0E00               	movlw	0
  6670  0023C4  2427               	addwf	??_display_rpm,w,c
  6671  0023C6  6E11               	movwf	wr16@addr,c
  6672  0023C8  0E80               	movlw	128
  6673  0023CA  2028               	addwfc	??_display_rpm+1,w,c
  6674  0023CC  6E12               	movwf	wr16@addr+1,c
  6675  0023CE  0E10               	movlw	16
  6676  0023D0  2029               	addwfc	??_display_rpm+2,w,c
  6677  0023D2  6E13               	movwf	wr16@addr+2,c
  6678  0023D4  0E00               	movlw	0
  6679  0023D6  6E15               	movwf	wr16@value+1,c
  6680  0023D8  0E84               	movlw	132
  6681  0023DA  6E14               	movwf	wr16@value,c
  6682  0023DC  ECCB  F030         	call	_wr16	;wreg free
  6683  0023E0  0E02               	movlw	2
  6684  0023E2  ECBC  F031         	call	_cmd_incrementn
  6685  0023E6  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6686  0023EA  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6687  0023EE  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6688  0023F0  0E00               	movlw	0
  6689  0023F2  2427               	addwf	??_display_rpm,w,c
  6690  0023F4  6E11               	movwf	wr16@addr,c
  6691  0023F6  0E80               	movlw	128
  6692  0023F8  2028               	addwfc	??_display_rpm+1,w,c
  6693  0023FA  6E12               	movwf	wr16@addr+1,c
  6694  0023FC  0E10               	movlw	16
  6695  0023FE  2029               	addwfc	??_display_rpm+2,w,c
  6696  002400  6E13               	movwf	wr16@addr+2,c
  6697  002402  0E00               	movlw	0
  6698  002404  6E15               	movwf	wr16@value+1,c
  6699  002406  0E1A               	movlw	26
  6700  002408  6E14               	movwf	wr16@value,c
  6701  00240A  ECCB  F030         	call	_wr16	;wreg free
  6702  00240E  0E02               	movlw	2
  6703  002410  ECBC  F031         	call	_cmd_incrementn
  6704  002414  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6705  002418  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6706  00241C  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6707  00241E  0E00               	movlw	0
  6708  002420  2427               	addwf	??_display_rpm,w,c
  6709  002422  6E11               	movwf	wr16@addr,c
  6710  002424  0E80               	movlw	128
  6711  002426  2028               	addwfc	??_display_rpm+1,w,c
  6712  002428  6E12               	movwf	wr16@addr+1,c
  6713  00242A  0E10               	movlw	16
  6714  00242C  2029               	addwfc	??_display_rpm+2,w,c
  6715  00242E  6E13               	movwf	wr16@addr+2,c
  6716  002430  0E00               	movlw	0
  6717  002432  6E15               	movwf	wr16@value+1,c
  6718  002434  0E00               	movlw	0
  6719  002436  6E14               	movwf	wr16@value,c
  6720  002438  ECCB  F030         	call	_wr16	;wreg free
  6721  00243C  0E02               	movlw	2
  6722  00243E  ECBC  F031         	call	_cmd_incrementn
  6723  002442  C04A  F027         	movff	_cmd_offset,??_display_rpm
  6724  002446  C04B  F028         	movff	_cmd_offset+1,??_display_rpm+1
  6725  00244A  6A29               	clrf	(??_display_rpm+2)& (0+255),c
  6726  00244C  0E00               	movlw	0
  6727  00244E  2427               	addwf	??_display_rpm,w,c
  6728  002450  6E16               	movwf	wr8s@addr,c
  6729  002452  0E80               	movlw	128
  6730  002454  2028               	addwfc	??_display_rpm+1,w,c
  6731  002456  6E17               	movwf	wr8s@addr+1,c
  6732  002458  0E10               	movlw	16
  6733  00245A  2029               	addwfc	??_display_rpm+2,w,c
  6734  00245C  6E18               	movwf	wr8s@addr+2,c
  6735  00245E  0E61               	movlw	low STR_36
  6736  002460  6E19               	movwf	wr8s@s,c
  6737  002462  0E0F               	movlw	high STR_36
  6738  002464  6E1A               	movwf	wr8s@s+1,c
  6739  002466  EC81  F02E         	call	_wr8s	;wreg free
  6740  00246A  ECBC  F031         	call	_cmd_incrementn
  6741  00246E  0012               	return		;funcret
  6742  002470                     __end_of_display_rpm:
  6743                           	opt stack 0
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           intcon	equ	0xFF2
  6749                           postinc0	equ	0xFEE
  6750                           wreg	equ	0xFE8
  6751                           postdec1	equ	0xFE5
  6752                           plusw1	equ	0xFE3
  6753                           fsr1l	equ	0xFE1
  6754                           plusw2	equ	0xFDB
  6755                           status	equ	0xFD8
  6756                           
  6757 ;; *************** function ___wmul *****************
  6758 ;; Defined at:
  6759 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  multiplier      2   15[COMRAM] unsigned int 
  6762 ;;  multiplicand    2   17[COMRAM] unsigned int 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  product         2   19[COMRAM] unsigned int 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  2   15[COMRAM] unsigned int 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0, prodl, prodh
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6777 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6778 ;;Total ram usage:        6 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    3
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_display_rpm
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text9
  6789  006334                     __ptext9:
  6790                           	opt stack 0
  6791  006334                     ___wmul:
  6792                           	opt stack 26
  6793                           
  6794                           ;incstack = 0
  6795  006334  5010               	movf	___wmul@multiplier,w,c
  6796  006336  0212               	mulwf	___wmul@multiplicand,c
  6797  006338  CFF3 F014          	movff	prodl,___wmul@product
  6798  00633C  CFF4 F015          	movff	prodh,___wmul@product+1
  6799  006340  5010               	movf	___wmul@multiplier,w,c
  6800  006342  0213               	mulwf	___wmul@multiplicand+1,c
  6801  006344  50F3               	movf	prodl,w,c
  6802  006346  2615               	addwf	___wmul@product+1,f,c
  6803  006348  5011               	movf	___wmul@multiplier+1,w,c
  6804  00634A  0212               	mulwf	___wmul@multiplicand,c
  6805  00634C  50F3               	movf	prodl,w,c
  6806  00634E  2615               	addwf	___wmul@product+1,f,c
  6807  006350  C014  F010         	movff	___wmul@product,?___wmul
  6808  006354  C015  F011         	movff	___wmul@product+1,?___wmul+1
  6809  006358  0012               	return	
  6810  00635A                     __end_of___wmul:
  6811                           	opt stack 0
  6812                           tblptru	equ	0xFF8
  6813                           tblptrh	equ	0xFF7
  6814                           tblptrl	equ	0xFF6
  6815                           tablat	equ	0xFF5
  6816                           prodh	equ	0xFF4
  6817                           prodl	equ	0xFF3
  6818                           intcon	equ	0xFF2
  6819                           postinc0	equ	0xFEE
  6820                           wreg	equ	0xFE8
  6821                           postdec1	equ	0xFE5
  6822                           plusw1	equ	0xFE3
  6823                           fsr1l	equ	0xFE1
  6824                           plusw2	equ	0xFDB
  6825                           status	equ	0xFD8
  6826                           
  6827 ;; *************** function _display_oilTemp *****************
  6828 ;; Defined at:
  6829 ;;		line 124 in file "display.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  temp            2   36[COMRAM] int 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;		None
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6845 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;Total ram usage:        5 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    6
  6850 ;; This function calls:
  6851 ;;		_cmd
  6852 ;;		_cmd_incrementn
  6853 ;;		_wr16
  6854 ;; This function is called by:
  6855 ;;		_display
  6856 ;;		_main
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text10
  6861  005A56                     __ptext10:
  6862                           	opt stack 0
  6863  005A56                     _display_oilTemp:
  6864                           	opt stack 24
  6865                           
  6866                           ;display.c: 125: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 66);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 48);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(temp);
  6867                           
  6868                           ;incstack = 0
  6869  005A56  0E2E               	movlw	46
  6870  005A58  6E1E               	movwf	cmd@command,c
  6871  005A5A  0EFF               	movlw	255
  6872  005A5C  6E1F               	movwf	cmd@command+1,c
  6873  005A5E  0EFF               	movlw	255
  6874  005A60  6E20               	movwf	cmd@command+2,c
  6875  005A62  0EFF               	movlw	255
  6876  005A64  6E21               	movwf	cmd@command+3,c
  6877  005A66  EC06  F031         	call	_cmd	;wreg free
  6878  005A6A  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  6879  005A6E  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  6880  005A72  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  6881  005A74  0E00               	movlw	0
  6882  005A76  2427               	addwf	??_display_oilTemp,w,c
  6883  005A78  6E11               	movwf	wr16@addr,c
  6884  005A7A  0E80               	movlw	128
  6885  005A7C  2028               	addwfc	??_display_oilTemp+1,w,c
  6886  005A7E  6E12               	movwf	wr16@addr+1,c
  6887  005A80  0E10               	movlw	16
  6888  005A82  2029               	addwfc	??_display_oilTemp+2,w,c
  6889  005A84  6E13               	movwf	wr16@addr+2,c
  6890  005A86  0E00               	movlw	0
  6891  005A88  6E15               	movwf	wr16@value+1,c
  6892  005A8A  0E42               	movlw	66
  6893  005A8C  6E14               	movwf	wr16@value,c
  6894  005A8E  ECCB  F030         	call	_wr16	;wreg free
  6895  005A92  0E02               	movlw	2
  6896  005A94  ECBC  F031         	call	_cmd_incrementn
  6897  005A98  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  6898  005A9C  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  6899  005AA0  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  6900  005AA2  0E00               	movlw	0
  6901  005AA4  2427               	addwf	??_display_oilTemp,w,c
  6902  005AA6  6E11               	movwf	wr16@addr,c
  6903  005AA8  0E80               	movlw	128
  6904  005AAA  2028               	addwfc	??_display_oilTemp+1,w,c
  6905  005AAC  6E12               	movwf	wr16@addr+1,c
  6906  005AAE  0E10               	movlw	16
  6907  005AB0  2029               	addwfc	??_display_oilTemp+2,w,c
  6908  005AB2  6E13               	movwf	wr16@addr+2,c
  6909  005AB4  0E00               	movlw	0
  6910  005AB6  6E15               	movwf	wr16@value+1,c
  6911  005AB8  0E30               	movlw	48
  6912  005ABA  6E14               	movwf	wr16@value,c
  6913  005ABC  ECCB  F030         	call	_wr16	;wreg free
  6914  005AC0  0E02               	movlw	2
  6915  005AC2  ECBC  F031         	call	_cmd_incrementn
  6916  005AC6  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  6917  005ACA  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  6918  005ACE  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  6919  005AD0  0E00               	movlw	0
  6920  005AD2  2427               	addwf	??_display_oilTemp,w,c
  6921  005AD4  6E11               	movwf	wr16@addr,c
  6922  005AD6  0E80               	movlw	128
  6923  005AD8  2028               	addwfc	??_display_oilTemp+1,w,c
  6924  005ADA  6E12               	movwf	wr16@addr+1,c
  6925  005ADC  0E10               	movlw	16
  6926  005ADE  2029               	addwfc	??_display_oilTemp+2,w,c
  6927  005AE0  6E13               	movwf	wr16@addr+2,c
  6928  005AE2  0E00               	movlw	0
  6929  005AE4  6E15               	movwf	wr16@value+1,c
  6930  005AE6  0E1C               	movlw	28
  6931  005AE8  6E14               	movwf	wr16@value,c
  6932  005AEA  ECCB  F030         	call	_wr16	;wreg free
  6933  005AEE  0E02               	movlw	2
  6934  005AF0  ECBC  F031         	call	_cmd_incrementn
  6935  005AF4  C04A  F027         	movff	_cmd_offset,??_display_oilTemp
  6936  005AF8  C04B  F028         	movff	_cmd_offset+1,??_display_oilTemp+1
  6937  005AFC  6A29               	clrf	(??_display_oilTemp+2)& (0+255),c
  6938  005AFE  0E00               	movlw	0
  6939  005B00  2427               	addwf	??_display_oilTemp,w,c
  6940  005B02  6E11               	movwf	wr16@addr,c
  6941  005B04  0E80               	movlw	128
  6942  005B06  2028               	addwfc	??_display_oilTemp+1,w,c
  6943  005B08  6E12               	movwf	wr16@addr+1,c
  6944  005B0A  0E10               	movlw	16
  6945  005B0C  2029               	addwfc	??_display_oilTemp+2,w,c
  6946  005B0E  6E13               	movwf	wr16@addr+2,c
  6947  005B10  0E00               	movlw	0
  6948  005B12  6E15               	movwf	wr16@value+1,c
  6949  005B14  0E00               	movlw	0
  6950  005B16  6E14               	movwf	wr16@value,c
  6951  005B18  ECCB  F030         	call	_wr16	;wreg free
  6952  005B1C  0E02               	movlw	2
  6953  005B1E  ECBC  F031         	call	_cmd_incrementn
  6954  005B22  C025  F01E         	movff	display_oilTemp@temp,cmd@command
  6955  005B26  C026  F01F         	movff	display_oilTemp@temp+1,cmd@command+1
  6956  005B2A  0E00               	movlw	0
  6957  005B2C  BE1F               	btfsc	cmd@command+1,7,c
  6958  005B2E  0EFF               	movlw	-1
  6959  005B30  6E20               	movwf	cmd@command+2,c
  6960  005B32  6E21               	movwf	cmd@command+3,c
  6961  005B34  EC06  F031         	call	_cmd	;wreg free
  6962  005B38  0012               	return		;funcret
  6963  005B3A                     __end_of_display_oilTemp:
  6964                           	opt stack 0
  6965                           tblptru	equ	0xFF8
  6966                           tblptrh	equ	0xFF7
  6967                           tblptrl	equ	0xFF6
  6968                           tablat	equ	0xFF5
  6969                           prodh	equ	0xFF4
  6970                           prodl	equ	0xFF3
  6971                           intcon	equ	0xFF2
  6972                           postinc0	equ	0xFEE
  6973                           wreg	equ	0xFE8
  6974                           postdec1	equ	0xFE5
  6975                           plusw1	equ	0xFE3
  6976                           fsr1l	equ	0xFE1
  6977                           plusw2	equ	0xFDB
  6978                           status	equ	0xFD8
  6979                           
  6980 ;; *************** function _display_oilPress *****************
  6981 ;; Defined at:
  6982 ;;		line 138 in file "display.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  pressure        2   36[COMRAM] int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7000 ;;Total ram usage:        5 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    6
  7003 ;; This function calls:
  7004 ;;		_cmd
  7005 ;;		_cmd_incrementn
  7006 ;;		_wr16
  7007 ;; This function is called by:
  7008 ;;		_display
  7009 ;;		_main
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text11
  7014  005B3A                     __ptext11:
  7015                           	opt stack 0
  7016  005B3A                     _display_oilPress:
  7017                           	opt stack 24
  7018                           
  7019                           ;display.c: 139: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 66);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 171);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(pressure);
  7020                           
  7021                           ;incstack = 0
  7022  005B3A  0E2E               	movlw	46
  7023  005B3C  6E1E               	movwf	cmd@command,c
  7024  005B3E  0EFF               	movlw	255
  7025  005B40  6E1F               	movwf	cmd@command+1,c
  7026  005B42  0EFF               	movlw	255
  7027  005B44  6E20               	movwf	cmd@command+2,c
  7028  005B46  0EFF               	movlw	255
  7029  005B48  6E21               	movwf	cmd@command+3,c
  7030  005B4A  EC06  F031         	call	_cmd	;wreg free
  7031  005B4E  C04A  F027         	movff	_cmd_offset,??_display_oilPress
  7032  005B52  C04B  F028         	movff	_cmd_offset+1,??_display_oilPress+1
  7033  005B56  6A29               	clrf	(??_display_oilPress+2)& (0+255),c
  7034  005B58  0E00               	movlw	0
  7035  005B5A  2427               	addwf	??_display_oilPress,w,c
  7036  005B5C  6E11               	movwf	wr16@addr,c
  7037  005B5E  0E80               	movlw	128
  7038  005B60  2028               	addwfc	??_display_oilPress+1,w,c
  7039  005B62  6E12               	movwf	wr16@addr+1,c
  7040  005B64  0E10               	movlw	16
  7041  005B66  2029               	addwfc	??_display_oilPress+2,w,c
  7042  005B68  6E13               	movwf	wr16@addr+2,c
  7043  005B6A  0E00               	movlw	0
  7044  005B6C  6E15               	movwf	wr16@value+1,c
  7045  005B6E  0E42               	movlw	66
  7046  005B70  6E14               	movwf	wr16@value,c
  7047  005B72  ECCB  F030         	call	_wr16	;wreg free
  7048  005B76  0E02               	movlw	2
  7049  005B78  ECBC  F031         	call	_cmd_incrementn
  7050  005B7C  C04A  F027         	movff	_cmd_offset,??_display_oilPress
  7051  005B80  C04B  F028         	movff	_cmd_offset+1,??_display_oilPress+1
  7052  005B84  6A29               	clrf	(??_display_oilPress+2)& (0+255),c
  7053  005B86  0E00               	movlw	0
  7054  005B88  2427               	addwf	??_display_oilPress,w,c
  7055  005B8A  6E11               	movwf	wr16@addr,c
  7056  005B8C  0E80               	movlw	128
  7057  005B8E  2028               	addwfc	??_display_oilPress+1,w,c
  7058  005B90  6E12               	movwf	wr16@addr+1,c
  7059  005B92  0E10               	movlw	16
  7060  005B94  2029               	addwfc	??_display_oilPress+2,w,c
  7061  005B96  6E13               	movwf	wr16@addr+2,c
  7062  005B98  0E00               	movlw	0
  7063  005B9A  6E15               	movwf	wr16@value+1,c
  7064  005B9C  0EAB               	movlw	171
  7065  005B9E  6E14               	movwf	wr16@value,c
  7066  005BA0  ECCB  F030         	call	_wr16	;wreg free
  7067  005BA4  0E02               	movlw	2
  7068  005BA6  ECBC  F031         	call	_cmd_incrementn
  7069  005BAA  C04A  F027         	movff	_cmd_offset,??_display_oilPress
  7070  005BAE  C04B  F028         	movff	_cmd_offset+1,??_display_oilPress+1
  7071  005BB2  6A29               	clrf	(??_display_oilPress+2)& (0+255),c
  7072  005BB4  0E00               	movlw	0
  7073  005BB6  2427               	addwf	??_display_oilPress,w,c
  7074  005BB8  6E11               	movwf	wr16@addr,c
  7075  005BBA  0E80               	movlw	128
  7076  005BBC  2028               	addwfc	??_display_oilPress+1,w,c
  7077  005BBE  6E12               	movwf	wr16@addr+1,c
  7078  005BC0  0E10               	movlw	16
  7079  005BC2  2029               	addwfc	??_display_oilPress+2,w,c
  7080  005BC4  6E13               	movwf	wr16@addr+2,c
  7081  005BC6  0E00               	movlw	0
  7082  005BC8  6E15               	movwf	wr16@value+1,c
  7083  005BCA  0E1C               	movlw	28
  7084  005BCC  6E14               	movwf	wr16@value,c
  7085  005BCE  ECCB  F030         	call	_wr16	;wreg free
  7086  005BD2  0E02               	movlw	2
  7087  005BD4  ECBC  F031         	call	_cmd_incrementn
  7088  005BD8  C04A  F027         	movff	_cmd_offset,??_display_oilPress
  7089  005BDC  C04B  F028         	movff	_cmd_offset+1,??_display_oilPress+1
  7090  005BE0  6A29               	clrf	(??_display_oilPress+2)& (0+255),c
  7091  005BE2  0E00               	movlw	0
  7092  005BE4  2427               	addwf	??_display_oilPress,w,c
  7093  005BE6  6E11               	movwf	wr16@addr,c
  7094  005BE8  0E80               	movlw	128
  7095  005BEA  2028               	addwfc	??_display_oilPress+1,w,c
  7096  005BEC  6E12               	movwf	wr16@addr+1,c
  7097  005BEE  0E10               	movlw	16
  7098  005BF0  2029               	addwfc	??_display_oilPress+2,w,c
  7099  005BF2  6E13               	movwf	wr16@addr+2,c
  7100  005BF4  0E00               	movlw	0
  7101  005BF6  6E15               	movwf	wr16@value+1,c
  7102  005BF8  0E00               	movlw	0
  7103  005BFA  6E14               	movwf	wr16@value,c
  7104  005BFC  ECCB  F030         	call	_wr16	;wreg free
  7105  005C00  0E02               	movlw	2
  7106  005C02  ECBC  F031         	call	_cmd_incrementn
  7107  005C06  C025  F01E         	movff	display_oilPress@pressure,cmd@command
  7108  005C0A  C026  F01F         	movff	display_oilPress@pressure+1,cmd@command+1
  7109  005C0E  0E00               	movlw	0
  7110  005C10  BE1F               	btfsc	cmd@command+1,7,c
  7111  005C12  0EFF               	movlw	-1
  7112  005C14  6E20               	movwf	cmd@command+2,c
  7113  005C16  6E21               	movwf	cmd@command+3,c
  7114  005C18  EC06  F031         	call	_cmd	;wreg free
  7115  005C1C  0012               	return		;funcret
  7116  005C1E                     __end_of_display_oilPress:
  7117                           	opt stack 0
  7118                           tblptru	equ	0xFF8
  7119                           tblptrh	equ	0xFF7
  7120                           tblptrl	equ	0xFF6
  7121                           tablat	equ	0xFF5
  7122                           prodh	equ	0xFF4
  7123                           prodl	equ	0xFF3
  7124                           intcon	equ	0xFF2
  7125                           postinc0	equ	0xFEE
  7126                           wreg	equ	0xFE8
  7127                           postdec1	equ	0xFE5
  7128                           plusw1	equ	0xFE3
  7129                           fsr1l	equ	0xFE1
  7130                           plusw2	equ	0xFDB
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function _display_message *****************
  7134 ;; Defined at:
  7135 ;;		line 63 in file "display.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  message         2   36[COMRAM] PTR unsigned char 
  7138 ;;		 -> STR_1(6), 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;Total ram usage:        5 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    6
  7157 ;; This function calls:
  7158 ;;		_cmd
  7159 ;;		_cmd_incrementn
  7160 ;;		_wr16
  7161 ;;		_wr8s
  7162 ;; This function is called by:
  7163 ;;		_display
  7164 ;;		_main
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text12
  7169  00540A                     __ptext12:
  7170                           	opt stack 0
  7171  00540A                     _display_message:
  7172                           	opt stack 24
  7173                           
  7174                           ;display.c: 64: cmd(((31UL<<24)|(((9UL)&15UL)<<0)));
  7175                           
  7176                           ;incstack = 0
  7177  00540A  0E09               	movlw	9
  7178  00540C  6E1E               	movwf	cmd@command,c
  7179  00540E  0E00               	movlw	0
  7180  005410  6E1F               	movwf	cmd@command+1,c
  7181  005412  0E00               	movlw	0
  7182  005414  6E20               	movwf	cmd@command+2,c
  7183  005416  0E1F               	movlw	31
  7184  005418  6E21               	movwf	cmd@command+3,c
  7185  00541A  EC06  F031         	call	_cmd	;wreg free
  7186                           
  7187                           ;display.c: 65: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)));
  7188  00541E  0E3C               	movlw	60
  7189  005420  6E1E               	movwf	cmd@command,c
  7190  005422  0E3C               	movlw	60
  7191  005424  6E1F               	movwf	cmd@command+1,c
  7192  005426  0E3C               	movlw	60
  7193  005428  6E20               	movwf	cmd@command+2,c
  7194  00542A  0E04               	movlw	4
  7195  00542C  6E21               	movwf	cmd@command+3,c
  7196  00542E  EC06  F031         	call	_cmd	;wreg free
  7197                           
  7198                           ;display.c: 66: cmd(((2UL<<30)|(((350)&511UL)<<21)|(((215)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  7199  005432  0E00               	movlw	0
  7200  005434  6E1E               	movwf	cmd@command,c
  7201  005436  0E70               	movlw	112
  7202  005438  6E1F               	movwf	cmd@command+1,c
  7203  00543A  0ECD               	movlw	205
  7204  00543C  6E20               	movwf	cmd@command+2,c
  7205  00543E  0EAB               	movlw	171
  7206  005440  6E21               	movwf	cmd@command+3,c
  7207  005442  EC06  F031         	call	_cmd	;wreg free
  7208                           
  7209                           ;display.c: 67: cmd(((2UL<<30)|(((134)&511UL)<<21)|(((230)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  7210  005446  0E00               	movlw	0
  7211  005448  6E1E               	movwf	cmd@command,c
  7212  00544A  0E60               	movlw	96
  7213  00544C  6E1F               	movwf	cmd@command+1,c
  7214  00544E  0ECE               	movlw	206
  7215  005450  6E20               	movwf	cmd@command+2,c
  7216  005452  0E90               	movlw	144
  7217  005454  6E21               	movwf	cmd@command+3,c
  7218  005456  EC06  F031         	call	_cmd	;wreg free
  7219                           
  7220                           ;display.c: 68: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0)
      +                          ));
  7221  00545A  0EFF               	movlw	255
  7222  00545C  6E1E               	movwf	cmd@command,c
  7223  00545E  0EFF               	movlw	255
  7224  005460  6E1F               	movwf	cmd@command+1,c
  7225  005462  0EFF               	movlw	255
  7226  005464  6E20               	movwf	cmd@command+2,c
  7227  005466  0E04               	movlw	4
  7228  005468  6E21               	movwf	cmd@command+3,c
  7229  00546A  EC06  F031         	call	_cmd	;wreg free
  7230                           
  7231                           ;display.c: 69: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 222);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 1536UL);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+
  7232  00546E  0E0C               	movlw	12
  7233  005470  6E1E               	movwf	cmd@command,c
  7234  005472  0EFF               	movlw	255
  7235  005474  6E1F               	movwf	cmd@command+1,c
  7236  005476  0EFF               	movlw	255
  7237  005478  6E20               	movwf	cmd@command+2,c
  7238  00547A  0EFF               	movlw	255
  7239  00547C  6E21               	movwf	cmd@command+3,c
  7240  00547E  EC06  F031         	call	_cmd	;wreg free
  7241  005482  C04A  F027         	movff	_cmd_offset,??_display_message
  7242  005486  C04B  F028         	movff	_cmd_offset+1,??_display_message+1
  7243  00548A  6A29               	clrf	(??_display_message+2)& (0+255),c
  7244  00548C  0E00               	movlw	0
  7245  00548E  2427               	addwf	??_display_message,w,c
  7246  005490  6E11               	movwf	wr16@addr,c
  7247  005492  0E80               	movlw	128
  7248  005494  2028               	addwfc	??_display_message+1,w,c
  7249  005496  6E12               	movwf	wr16@addr+1,c
  7250  005498  0E10               	movlw	16
  7251  00549A  2029               	addwfc	??_display_message+2,w,c
  7252  00549C  6E13               	movwf	wr16@addr+2,c
  7253  00549E  0E00               	movlw	0
  7254  0054A0  6E15               	movwf	wr16@value+1,c
  7255  0054A2  0EF0               	movlw	240
  7256  0054A4  6E14               	movwf	wr16@value,c
  7257  0054A6  ECCB  F030         	call	_wr16	;wreg free
  7258  0054AA  0E02               	movlw	2
  7259  0054AC  ECBC  F031         	call	_cmd_incrementn
  7260  0054B0  C04A  F027         	movff	_cmd_offset,??_display_message
  7261  0054B4  C04B  F028         	movff	_cmd_offset+1,??_display_message+1
  7262  0054B8  6A29               	clrf	(??_display_message+2)& (0+255),c
  7263  0054BA  0E00               	movlw	0
  7264  0054BC  2427               	addwf	??_display_message,w,c
  7265  0054BE  6E11               	movwf	wr16@addr,c
  7266  0054C0  0E80               	movlw	128
  7267  0054C2  2028               	addwfc	??_display_message+1,w,c
  7268  0054C4  6E12               	movwf	wr16@addr+1,c
  7269  0054C6  0E10               	movlw	16
  7270  0054C8  2029               	addwfc	??_display_message+2,w,c
  7271  0054CA  6E13               	movwf	wr16@addr+2,c
  7272  0054CC  0E00               	movlw	0
  7273  0054CE  6E15               	movwf	wr16@value+1,c
  7274  0054D0  0EDE               	movlw	222
  7275  0054D2  6E14               	movwf	wr16@value,c
  7276  0054D4  ECCB  F030         	call	_wr16	;wreg free
  7277  0054D8  0E02               	movlw	2
  7278  0054DA  ECBC  F031         	call	_cmd_incrementn
  7279  0054DE  C04A  F027         	movff	_cmd_offset,??_display_message
  7280  0054E2  C04B  F028         	movff	_cmd_offset+1,??_display_message+1
  7281  0054E6  6A29               	clrf	(??_display_message+2)& (0+255),c
  7282  0054E8  0E00               	movlw	0
  7283  0054EA  2427               	addwf	??_display_message,w,c
  7284  0054EC  6E11               	movwf	wr16@addr,c
  7285  0054EE  0E80               	movlw	128
  7286  0054F0  2028               	addwfc	??_display_message+1,w,c
  7287  0054F2  6E12               	movwf	wr16@addr+1,c
  7288  0054F4  0E10               	movlw	16
  7289  0054F6  2029               	addwfc	??_display_message+2,w,c
  7290  0054F8  6E13               	movwf	wr16@addr+2,c
  7291  0054FA  0E00               	movlw	0
  7292  0054FC  6E15               	movwf	wr16@value+1,c
  7293  0054FE  0E1C               	movlw	28
  7294  005500  6E14               	movwf	wr16@value,c
  7295  005502  ECCB  F030         	call	_wr16	;wreg free
  7296  005506  0E02               	movlw	2
  7297  005508  ECBC  F031         	call	_cmd_incrementn
  7298  00550C  C04A  F027         	movff	_cmd_offset,??_display_message
  7299  005510  C04B  F028         	movff	_cmd_offset+1,??_display_message+1
  7300  005514  6A29               	clrf	(??_display_message+2)& (0+255),c
  7301  005516  0E00               	movlw	0
  7302  005518  2427               	addwf	??_display_message,w,c
  7303  00551A  6E11               	movwf	wr16@addr,c
  7304  00551C  0E80               	movlw	128
  7305  00551E  2028               	addwfc	??_display_message+1,w,c
  7306  005520  6E12               	movwf	wr16@addr+1,c
  7307  005522  0E10               	movlw	16
  7308  005524  2029               	addwfc	??_display_message+2,w,c
  7309  005526  6E13               	movwf	wr16@addr+2,c
  7310  005528  0E06               	movlw	6
  7311  00552A  6E15               	movwf	wr16@value+1,c
  7312  00552C  0E00               	movlw	0
  7313  00552E  6E14               	movwf	wr16@value,c
  7314  005530  ECCB  F030         	call	_wr16	;wreg free
  7315  005534  0E02               	movlw	2
  7316  005536  ECBC  F031         	call	_cmd_incrementn
  7317  00553A  C04A  F027         	movff	_cmd_offset,??_display_message
  7318  00553E  C04B  F028         	movff	_cmd_offset+1,??_display_message+1
  7319  005542  6A29               	clrf	(??_display_message+2)& (0+255),c
  7320  005544  0E00               	movlw	0
  7321  005546  2427               	addwf	??_display_message,w,c
  7322  005548  6E16               	movwf	wr8s@addr,c
  7323  00554A  0E80               	movlw	128
  7324  00554C  2028               	addwfc	??_display_message+1,w,c
  7325  00554E  6E17               	movwf	wr8s@addr+1,c
  7326  005550  0E10               	movlw	16
  7327  005552  2029               	addwfc	??_display_message+2,w,c
  7328  005554  6E18               	movwf	wr8s@addr+2,c
  7329  005556  C025  F019         	movff	display_message@message,wr8s@s
  7330  00555A  C026  F01A         	movff	display_message@message+1,wr8s@s+1
  7331  00555E  EC81  F02E         	call	_wr8s	;wreg free
  7332  005562  ECBC  F031         	call	_cmd_incrementn
  7333  005566  0012               	return		;funcret
  7334  005568                     __end_of_display_message:
  7335                           	opt stack 0
  7336                           tblptru	equ	0xFF8
  7337                           tblptrh	equ	0xFF7
  7338                           tblptrl	equ	0xFF6
  7339                           tablat	equ	0xFF5
  7340                           prodh	equ	0xFF4
  7341                           prodl	equ	0xFF3
  7342                           intcon	equ	0xFF2
  7343                           postinc0	equ	0xFEE
  7344                           wreg	equ	0xFE8
  7345                           postdec1	equ	0xFE5
  7346                           plusw1	equ	0xFE3
  7347                           fsr1l	equ	0xFE1
  7348                           plusw2	equ	0xFDB
  7349                           status	equ	0xFD8
  7350                           
  7351 ;; *************** function _display_labels *****************
  7352 ;; Defined at:
  7353 ;;		line 31 in file "display.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  y_start         2   39[COMRAM] int 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;Total ram usage:        5 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; Hardware stack levels required when called:    6
  7374 ;; This function calls:
  7375 ;;		_cmd
  7376 ;;		_cmd_incrementn
  7377 ;;		_wr16
  7378 ;;		_wr8s
  7379 ;; This function is called by:
  7380 ;;		_display
  7381 ;;		_main
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text13
  7386  0033A8                     __ptext13:
  7387                           	opt stack 0
  7388  0033A8                     _display_labels:
  7389                           	opt stack 24
  7390                           
  7391                           ;display.c: 32: int y_start = 5;
  7392                           
  7393                           ;incstack = 0
  7394  0033A8  0E00               	movlw	0
  7395  0033AA  6E29               	movwf	display_labels@y_start+1,c
  7396  0033AC  0E05               	movlw	5
  7397  0033AE  6E28               	movwf	display_labels@y_start,c
  7398                           
  7399                           ;display.c: 35: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0)
      +                          ));
  7400  0033B0  0EFF               	movlw	255
  7401  0033B2  6E1E               	movwf	cmd@command,c
  7402  0033B4  0EFF               	movlw	255
  7403  0033B6  6E1F               	movwf	cmd@command+1,c
  7404  0033B8  0EFF               	movlw	255
  7405  0033BA  6E20               	movwf	cmd@command+2,c
  7406  0033BC  0E04               	movlw	4
  7407  0033BE  6E21               	movwf	cmd@command+3,c
  7408  0033C0  EC06  F031         	call	_cmd	;wreg free
  7409                           
  7410                           ;display.c: 36: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+c
      +                          md
  7411  0033C4  0E0C               	movlw	12
  7412  0033C6  6E1E               	movwf	cmd@command,c
  7413  0033C8  0EFF               	movlw	255
  7414  0033CA  6E1F               	movwf	cmd@command+1,c
  7415  0033CC  0EFF               	movlw	255
  7416  0033CE  6E20               	movwf	cmd@command+2,c
  7417  0033D0  0EFF               	movlw	255
  7418  0033D2  6E21               	movwf	cmd@command+3,c
  7419  0033D4  EC06  F031         	call	_cmd	;wreg free
  7420  0033D8  C04A  F025         	movff	_cmd_offset,??_display_labels
  7421  0033DC  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7422  0033E0  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7423  0033E2  0E00               	movlw	0
  7424  0033E4  2425               	addwf	??_display_labels,w,c
  7425  0033E6  6E11               	movwf	wr16@addr,c
  7426  0033E8  0E80               	movlw	128
  7427  0033EA  2026               	addwfc	??_display_labels+1,w,c
  7428  0033EC  6E12               	movwf	wr16@addr+1,c
  7429  0033EE  0E10               	movlw	16
  7430  0033F0  2027               	addwfc	??_display_labels+2,w,c
  7431  0033F2  6E13               	movwf	wr16@addr+2,c
  7432  0033F4  0E00               	movlw	0
  7433  0033F6  6E15               	movwf	wr16@value+1,c
  7434  0033F8  0E05               	movlw	5
  7435  0033FA  6E14               	movwf	wr16@value,c
  7436  0033FC  ECCB  F030         	call	_wr16	;wreg free
  7437  003400  0E02               	movlw	2
  7438  003402  ECBC  F031         	call	_cmd_incrementn
  7439  003406  C04A  F025         	movff	_cmd_offset,??_display_labels
  7440  00340A  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7441  00340E  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7442  003410  0E00               	movlw	0
  7443  003412  2425               	addwf	??_display_labels,w,c
  7444  003414  6E11               	movwf	wr16@addr,c
  7445  003416  0E80               	movlw	128
  7446  003418  2026               	addwfc	??_display_labels+1,w,c
  7447  00341A  6E12               	movwf	wr16@addr+1,c
  7448  00341C  0E10               	movlw	16
  7449  00341E  2027               	addwfc	??_display_labels+2,w,c
  7450  003420  6E13               	movwf	wr16@addr+2,c
  7451  003422  C028  F014         	movff	display_labels@y_start,wr16@value
  7452  003426  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  7453  00342A  ECCB  F030         	call	_wr16	;wreg free
  7454  00342E  0E02               	movlw	2
  7455  003430  ECBC  F031         	call	_cmd_incrementn
  7456  003434  C04A  F025         	movff	_cmd_offset,??_display_labels
  7457  003438  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7458  00343C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7459  00343E  0E00               	movlw	0
  7460  003440  2425               	addwf	??_display_labels,w,c
  7461  003442  6E11               	movwf	wr16@addr,c
  7462  003444  0E80               	movlw	128
  7463  003446  2026               	addwfc	??_display_labels+1,w,c
  7464  003448  6E12               	movwf	wr16@addr+1,c
  7465  00344A  0E10               	movlw	16
  7466  00344C  2027               	addwfc	??_display_labels+2,w,c
  7467  00344E  6E13               	movwf	wr16@addr+2,c
  7468  003450  0E00               	movlw	0
  7469  003452  6E15               	movwf	wr16@value+1,c
  7470  003454  0E1A               	movlw	26
  7471  003456  6E14               	movwf	wr16@value,c
  7472  003458  ECCB  F030         	call	_wr16	;wreg free
  7473  00345C  0E02               	movlw	2
  7474  00345E  ECBC  F031         	call	_cmd_incrementn
  7475  003462  C04A  F025         	movff	_cmd_offset,??_display_labels
  7476  003466  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7477  00346A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7478  00346C  0E00               	movlw	0
  7479  00346E  2425               	addwf	??_display_labels,w,c
  7480  003470  6E11               	movwf	wr16@addr,c
  7481  003472  0E80               	movlw	128
  7482  003474  2026               	addwfc	??_display_labels+1,w,c
  7483  003476  6E12               	movwf	wr16@addr+1,c
  7484  003478  0E10               	movlw	16
  7485  00347A  2027               	addwfc	??_display_labels+2,w,c
  7486  00347C  6E13               	movwf	wr16@addr+2,c
  7487  00347E  0E00               	movlw	0
  7488  003480  6E15               	movwf	wr16@value+1,c
  7489  003482  0E00               	movlw	0
  7490  003484  6E14               	movwf	wr16@value,c
  7491  003486  ECCB  F030         	call	_wr16	;wreg free
  7492  00348A  0E02               	movlw	2
  7493  00348C  ECBC  F031         	call	_cmd_incrementn
  7494  003490  C04A  F025         	movff	_cmd_offset,??_display_labels
  7495  003494  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7496  003498  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7497  00349A  0E00               	movlw	0
  7498  00349C  2425               	addwf	??_display_labels,w,c
  7499  00349E  6E16               	movwf	wr8s@addr,c
  7500  0034A0  0E80               	movlw	128
  7501  0034A2  2026               	addwfc	??_display_labels+1,w,c
  7502  0034A4  6E17               	movwf	wr8s@addr+1,c
  7503  0034A6  0E10               	movlw	16
  7504  0034A8  2027               	addwfc	??_display_labels+2,w,c
  7505  0034AA  6E18               	movwf	wr8s@addr+2,c
  7506  0034AC  0E23               	movlw	low STR_2
  7507  0034AE  6E19               	movwf	wr8s@s,c
  7508  0034B0  0E0F               	movlw	high STR_2
  7509  0034B2  6E1A               	movwf	wr8s@s+1,c
  7510  0034B4  EC81  F02E         	call	_wr8s	;wreg free
  7511  0034B8  ECBC  F031         	call	_cmd_incrementn
  7512                           
  7513                           ;display.c: 37: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 15);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  7514  0034BC  0E0C               	movlw	12
  7515  0034BE  6E1E               	movwf	cmd@command,c
  7516  0034C0  0EFF               	movlw	255
  7517  0034C2  6E1F               	movwf	cmd@command+1,c
  7518  0034C4  0EFF               	movlw	255
  7519  0034C6  6E20               	movwf	cmd@command+2,c
  7520  0034C8  0EFF               	movlw	255
  7521  0034CA  6E21               	movwf	cmd@command+3,c
  7522  0034CC  EC06  F031         	call	_cmd	;wreg free
  7523  0034D0  C04A  F025         	movff	_cmd_offset,??_display_labels
  7524  0034D4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7525  0034D8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7526  0034DA  0E00               	movlw	0
  7527  0034DC  2425               	addwf	??_display_labels,w,c
  7528  0034DE  6E11               	movwf	wr16@addr,c
  7529  0034E0  0E80               	movlw	128
  7530  0034E2  2026               	addwfc	??_display_labels+1,w,c
  7531  0034E4  6E12               	movwf	wr16@addr+1,c
  7532  0034E6  0E10               	movlw	16
  7533  0034E8  2027               	addwfc	??_display_labels+2,w,c
  7534  0034EA  6E13               	movwf	wr16@addr+2,c
  7535  0034EC  0E00               	movlw	0
  7536  0034EE  6E15               	movwf	wr16@value+1,c
  7537  0034F0  0E05               	movlw	5
  7538  0034F2  6E14               	movwf	wr16@value,c
  7539  0034F4  ECCB  F030         	call	_wr16	;wreg free
  7540  0034F8  0E02               	movlw	2
  7541  0034FA  ECBC  F031         	call	_cmd_incrementn
  7542  0034FE  C04A  F025         	movff	_cmd_offset,??_display_labels
  7543  003502  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7544  003506  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7545  003508  0E00               	movlw	0
  7546  00350A  2425               	addwf	??_display_labels,w,c
  7547  00350C  6E11               	movwf	wr16@addr,c
  7548  00350E  0E80               	movlw	128
  7549  003510  2026               	addwfc	??_display_labels+1,w,c
  7550  003512  6E12               	movwf	wr16@addr+1,c
  7551  003514  0E10               	movlw	16
  7552  003516  2027               	addwfc	??_display_labels+2,w,c
  7553  003518  6E13               	movwf	wr16@addr+2,c
  7554  00351A  0E0F               	movlw	15
  7555  00351C  2628               	addwf	display_labels@y_start,f,c
  7556  00351E  0E00               	movlw	0
  7557  003520  2229               	addwfc	display_labels@y_start+1,f,c
  7558  003522  C028  F014         	movff	display_labels@y_start,wr16@value
  7559  003526  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  7560  00352A  ECCB  F030         	call	_wr16	;wreg free
  7561  00352E  0E02               	movlw	2
  7562  003530  ECBC  F031         	call	_cmd_incrementn
  7563  003534  C04A  F025         	movff	_cmd_offset,??_display_labels
  7564  003538  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7565  00353C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7566  00353E  0E00               	movlw	0
  7567  003540  2425               	addwf	??_display_labels,w,c
  7568  003542  6E11               	movwf	wr16@addr,c
  7569  003544  0E80               	movlw	128
  7570  003546  2026               	addwfc	??_display_labels+1,w,c
  7571  003548  6E12               	movwf	wr16@addr+1,c
  7572  00354A  0E10               	movlw	16
  7573  00354C  2027               	addwfc	??_display_labels+2,w,c
  7574  00354E  6E13               	movwf	wr16@addr+2,c
  7575  003550  0E00               	movlw	0
  7576  003552  6E15               	movwf	wr16@value+1,c
  7577  003554  0E1A               	movlw	26
  7578  003556  6E14               	movwf	wr16@value,c
  7579  003558  ECCB  F030         	call	_wr16	;wreg free
  7580  00355C  0E02               	movlw	2
  7581  00355E  ECBC  F031         	call	_cmd_incrementn
  7582  003562  C04A  F025         	movff	_cmd_offset,??_display_labels
  7583  003566  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7584  00356A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7585  00356C  0E00               	movlw	0
  7586  00356E  2425               	addwf	??_display_labels,w,c
  7587  003570  6E11               	movwf	wr16@addr,c
  7588  003572  0E80               	movlw	128
  7589  003574  2026               	addwfc	??_display_labels+1,w,c
  7590  003576  6E12               	movwf	wr16@addr+1,c
  7591  003578  0E10               	movlw	16
  7592  00357A  2027               	addwfc	??_display_labels+2,w,c
  7593  00357C  6E13               	movwf	wr16@addr+2,c
  7594  00357E  0E00               	movlw	0
  7595  003580  6E15               	movwf	wr16@value+1,c
  7596  003582  0E00               	movlw	0
  7597  003584  6E14               	movwf	wr16@value,c
  7598  003586  ECCB  F030         	call	_wr16	;wreg free
  7599  00358A  0E02               	movlw	2
  7600  00358C  ECBC  F031         	call	_cmd_incrementn
  7601  003590  C04A  F025         	movff	_cmd_offset,??_display_labels
  7602  003594  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7603  003598  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7604  00359A  0E00               	movlw	0
  7605  00359C  2425               	addwf	??_display_labels,w,c
  7606  00359E  6E16               	movwf	wr8s@addr,c
  7607  0035A0  0E80               	movlw	128
  7608  0035A2  2026               	addwfc	??_display_labels+1,w,c
  7609  0035A4  6E17               	movwf	wr8s@addr+1,c
  7610  0035A6  0E10               	movlw	16
  7611  0035A8  2027               	addwfc	??_display_labels+2,w,c
  7612  0035AA  6E18               	movwf	wr8s@addr+2,c
  7613  0035AC  0E45               	movlw	low STR_3
  7614  0035AE  6E19               	movwf	wr8s@s,c
  7615  0035B0  0E0F               	movlw	high STR_3
  7616  0035B2  6E1A               	movwf	wr8s@s+1,c
  7617  0035B4  EC81  F02E         	call	_wr8s	;wreg free
  7618  0035B8  ECBC  F031         	call	_cmd_incrementn
  7619                           
  7620                           ;display.c: 38: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 25);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  7621  0035BC  0E0C               	movlw	12
  7622  0035BE  6E1E               	movwf	cmd@command,c
  7623  0035C0  0EFF               	movlw	255
  7624  0035C2  6E1F               	movwf	cmd@command+1,c
  7625  0035C4  0EFF               	movlw	255
  7626  0035C6  6E20               	movwf	cmd@command+2,c
  7627  0035C8  0EFF               	movlw	255
  7628  0035CA  6E21               	movwf	cmd@command+3,c
  7629  0035CC  EC06  F031         	call	_cmd	;wreg free
  7630  0035D0  C04A  F025         	movff	_cmd_offset,??_display_labels
  7631  0035D4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7632  0035D8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7633  0035DA  0E00               	movlw	0
  7634  0035DC  2425               	addwf	??_display_labels,w,c
  7635  0035DE  6E11               	movwf	wr16@addr,c
  7636  0035E0  0E80               	movlw	128
  7637  0035E2  2026               	addwfc	??_display_labels+1,w,c
  7638  0035E4  6E12               	movwf	wr16@addr+1,c
  7639  0035E6  0E10               	movlw	16
  7640  0035E8  2027               	addwfc	??_display_labels+2,w,c
  7641  0035EA  6E13               	movwf	wr16@addr+2,c
  7642  0035EC  0E00               	movlw	0
  7643  0035EE  6E15               	movwf	wr16@value+1,c
  7644  0035F0  0E05               	movlw	5
  7645  0035F2  6E14               	movwf	wr16@value,c
  7646  0035F4  ECCB  F030         	call	_wr16	;wreg free
  7647  0035F8  0E02               	movlw	2
  7648  0035FA  ECBC  F031         	call	_cmd_incrementn
  7649  0035FE  C04A  F025         	movff	_cmd_offset,??_display_labels
  7650  003602  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7651  003606  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7652  003608  0E00               	movlw	0
  7653  00360A  2425               	addwf	??_display_labels,w,c
  7654  00360C  6E11               	movwf	wr16@addr,c
  7655  00360E  0E80               	movlw	128
  7656  003610  2026               	addwfc	??_display_labels+1,w,c
  7657  003612  6E12               	movwf	wr16@addr+1,c
  7658  003614  0E10               	movlw	16
  7659  003616  2027               	addwfc	??_display_labels+2,w,c
  7660  003618  6E13               	movwf	wr16@addr+2,c
  7661  00361A  0E19               	movlw	25
  7662  00361C  2628               	addwf	display_labels@y_start,f,c
  7663  00361E  0E00               	movlw	0
  7664  003620  2229               	addwfc	display_labels@y_start+1,f,c
  7665  003622  C028  F014         	movff	display_labels@y_start,wr16@value
  7666  003626  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  7667  00362A  ECCB  F030         	call	_wr16	;wreg free
  7668  00362E  0E02               	movlw	2
  7669  003630  ECBC  F031         	call	_cmd_incrementn
  7670  003634  C04A  F025         	movff	_cmd_offset,??_display_labels
  7671  003638  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7672  00363C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7673  00363E  0E00               	movlw	0
  7674  003640  2425               	addwf	??_display_labels,w,c
  7675  003642  6E11               	movwf	wr16@addr,c
  7676  003644  0E80               	movlw	128
  7677  003646  2026               	addwfc	??_display_labels+1,w,c
  7678  003648  6E12               	movwf	wr16@addr+1,c
  7679  00364A  0E10               	movlw	16
  7680  00364C  2027               	addwfc	??_display_labels+2,w,c
  7681  00364E  6E13               	movwf	wr16@addr+2,c
  7682  003650  0E00               	movlw	0
  7683  003652  6E15               	movwf	wr16@value+1,c
  7684  003654  0E1A               	movlw	26
  7685  003656  6E14               	movwf	wr16@value,c
  7686  003658  ECCB  F030         	call	_wr16	;wreg free
  7687  00365C  0E02               	movlw	2
  7688  00365E  ECBC  F031         	call	_cmd_incrementn
  7689  003662  C04A  F025         	movff	_cmd_offset,??_display_labels
  7690  003666  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7691  00366A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7692  00366C  0E00               	movlw	0
  7693  00366E  2425               	addwf	??_display_labels,w,c
  7694  003670  6E11               	movwf	wr16@addr,c
  7695  003672  0E80               	movlw	128
  7696  003674  2026               	addwfc	??_display_labels+1,w,c
  7697  003676  6E12               	movwf	wr16@addr+1,c
  7698  003678  0E10               	movlw	16
  7699  00367A  2027               	addwfc	??_display_labels+2,w,c
  7700  00367C  6E13               	movwf	wr16@addr+2,c
  7701  00367E  0E00               	movlw	0
  7702  003680  6E15               	movwf	wr16@value+1,c
  7703  003682  0E00               	movlw	0
  7704  003684  6E14               	movwf	wr16@value,c
  7705  003686  ECCB  F030         	call	_wr16	;wreg free
  7706  00368A  0E02               	movlw	2
  7707  00368C  ECBC  F031         	call	_cmd_incrementn
  7708  003690  C04A  F025         	movff	_cmd_offset,??_display_labels
  7709  003694  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7710  003698  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7711  00369A  0E00               	movlw	0
  7712  00369C  2425               	addwf	??_display_labels,w,c
  7713  00369E  6E16               	movwf	wr8s@addr,c
  7714  0036A0  0E80               	movlw	128
  7715  0036A2  2026               	addwfc	??_display_labels+1,w,c
  7716  0036A4  6E17               	movwf	wr8s@addr+1,c
  7717  0036A6  0E10               	movlw	16
  7718  0036A8  2027               	addwfc	??_display_labels+2,w,c
  7719  0036AA  6E18               	movwf	wr8s@addr+2,c
  7720  0036AC  0E5D               	movlw	low STR_4
  7721  0036AE  6E19               	movwf	wr8s@s,c
  7722  0036B0  0E0F               	movlw	high STR_4
  7723  0036B2  6E1A               	movwf	wr8s@s+1,c
  7724  0036B4  EC81  F02E         	call	_wr8s	;wreg free
  7725  0036B8  ECBC  F031         	call	_cmd_incrementn
  7726                           
  7727                           ;display.c: 39: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 15);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  7728  0036BC  0E0C               	movlw	12
  7729  0036BE  6E1E               	movwf	cmd@command,c
  7730  0036C0  0EFF               	movlw	255
  7731  0036C2  6E1F               	movwf	cmd@command+1,c
  7732  0036C4  0EFF               	movlw	255
  7733  0036C6  6E20               	movwf	cmd@command+2,c
  7734  0036C8  0EFF               	movlw	255
  7735  0036CA  6E21               	movwf	cmd@command+3,c
  7736  0036CC  EC06  F031         	call	_cmd	;wreg free
  7737  0036D0  C04A  F025         	movff	_cmd_offset,??_display_labels
  7738  0036D4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7739  0036D8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7740  0036DA  0E00               	movlw	0
  7741  0036DC  2425               	addwf	??_display_labels,w,c
  7742  0036DE  6E11               	movwf	wr16@addr,c
  7743  0036E0  0E80               	movlw	128
  7744  0036E2  2026               	addwfc	??_display_labels+1,w,c
  7745  0036E4  6E12               	movwf	wr16@addr+1,c
  7746  0036E6  0E10               	movlw	16
  7747  0036E8  2027               	addwfc	??_display_labels+2,w,c
  7748  0036EA  6E13               	movwf	wr16@addr+2,c
  7749  0036EC  0E00               	movlw	0
  7750  0036EE  6E15               	movwf	wr16@value+1,c
  7751  0036F0  0E05               	movlw	5
  7752  0036F2  6E14               	movwf	wr16@value,c
  7753  0036F4  ECCB  F030         	call	_wr16	;wreg free
  7754  0036F8  0E02               	movlw	2
  7755  0036FA  ECBC  F031         	call	_cmd_incrementn
  7756  0036FE  C04A  F025         	movff	_cmd_offset,??_display_labels
  7757  003702  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7758  003706  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7759  003708  0E00               	movlw	0
  7760  00370A  2425               	addwf	??_display_labels,w,c
  7761  00370C  6E11               	movwf	wr16@addr,c
  7762  00370E  0E80               	movlw	128
  7763  003710  2026               	addwfc	??_display_labels+1,w,c
  7764  003712  6E12               	movwf	wr16@addr+1,c
  7765  003714  0E10               	movlw	16
  7766  003716  2027               	addwfc	??_display_labels+2,w,c
  7767  003718  6E13               	movwf	wr16@addr+2,c
  7768  00371A  0E0F               	movlw	15
  7769  00371C  2628               	addwf	display_labels@y_start,f,c
  7770  00371E  0E00               	movlw	0
  7771  003720  2229               	addwfc	display_labels@y_start+1,f,c
  7772  003722  C028  F014         	movff	display_labels@y_start,wr16@value
  7773  003726  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  7774  00372A  ECCB  F030         	call	_wr16	;wreg free
  7775  00372E  0E02               	movlw	2
  7776  003730  ECBC  F031         	call	_cmd_incrementn
  7777  003734  C04A  F025         	movff	_cmd_offset,??_display_labels
  7778  003738  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7779  00373C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7780  00373E  0E00               	movlw	0
  7781  003740  2425               	addwf	??_display_labels,w,c
  7782  003742  6E11               	movwf	wr16@addr,c
  7783  003744  0E80               	movlw	128
  7784  003746  2026               	addwfc	??_display_labels+1,w,c
  7785  003748  6E12               	movwf	wr16@addr+1,c
  7786  00374A  0E10               	movlw	16
  7787  00374C  2027               	addwfc	??_display_labels+2,w,c
  7788  00374E  6E13               	movwf	wr16@addr+2,c
  7789  003750  0E00               	movlw	0
  7790  003752  6E15               	movwf	wr16@value+1,c
  7791  003754  0E1A               	movlw	26
  7792  003756  6E14               	movwf	wr16@value,c
  7793  003758  ECCB  F030         	call	_wr16	;wreg free
  7794  00375C  0E02               	movlw	2
  7795  00375E  ECBC  F031         	call	_cmd_incrementn
  7796  003762  C04A  F025         	movff	_cmd_offset,??_display_labels
  7797  003766  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7798  00376A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7799  00376C  0E00               	movlw	0
  7800  00376E  2425               	addwf	??_display_labels,w,c
  7801  003770  6E11               	movwf	wr16@addr,c
  7802  003772  0E80               	movlw	128
  7803  003774  2026               	addwfc	??_display_labels+1,w,c
  7804  003776  6E12               	movwf	wr16@addr+1,c
  7805  003778  0E10               	movlw	16
  7806  00377A  2027               	addwfc	??_display_labels+2,w,c
  7807  00377C  6E13               	movwf	wr16@addr+2,c
  7808  00377E  0E00               	movlw	0
  7809  003780  6E15               	movwf	wr16@value+1,c
  7810  003782  0E00               	movlw	0
  7811  003784  6E14               	movwf	wr16@value,c
  7812  003786  ECCB  F030         	call	_wr16	;wreg free
  7813  00378A  0E02               	movlw	2
  7814  00378C  ECBC  F031         	call	_cmd_incrementn
  7815  003790  C04A  F025         	movff	_cmd_offset,??_display_labels
  7816  003794  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7817  003798  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7818  00379A  0E00               	movlw	0
  7819  00379C  2425               	addwf	??_display_labels,w,c
  7820  00379E  6E16               	movwf	wr8s@addr,c
  7821  0037A0  0E80               	movlw	128
  7822  0037A2  2026               	addwfc	??_display_labels+1,w,c
  7823  0037A4  6E17               	movwf	wr8s@addr+1,c
  7824  0037A6  0E10               	movlw	16
  7825  0037A8  2027               	addwfc	??_display_labels+2,w,c
  7826  0037AA  6E18               	movwf	wr8s@addr+2,c
  7827  0037AC  0E45               	movlw	low STR_3
  7828  0037AE  6E19               	movwf	wr8s@s,c
  7829  0037B0  0E0F               	movlw	high STR_3
  7830  0037B2  6E1A               	movwf	wr8s@s+1,c
  7831  0037B4  EC81  F02E         	call	_wr8s	;wreg free
  7832  0037B8  ECBC  F031         	call	_cmd_incrementn
  7833                           
  7834                           ;display.c: 40: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 25);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  7835  0037BC  0E0C               	movlw	12
  7836  0037BE  6E1E               	movwf	cmd@command,c
  7837  0037C0  0EFF               	movlw	255
  7838  0037C2  6E1F               	movwf	cmd@command+1,c
  7839  0037C4  0EFF               	movlw	255
  7840  0037C6  6E20               	movwf	cmd@command+2,c
  7841  0037C8  0EFF               	movlw	255
  7842  0037CA  6E21               	movwf	cmd@command+3,c
  7843  0037CC  EC06  F031         	call	_cmd	;wreg free
  7844  0037D0  C04A  F025         	movff	_cmd_offset,??_display_labels
  7845  0037D4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7846  0037D8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7847  0037DA  0E00               	movlw	0
  7848  0037DC  2425               	addwf	??_display_labels,w,c
  7849  0037DE  6E11               	movwf	wr16@addr,c
  7850  0037E0  0E80               	movlw	128
  7851  0037E2  2026               	addwfc	??_display_labels+1,w,c
  7852  0037E4  6E12               	movwf	wr16@addr+1,c
  7853  0037E6  0E10               	movlw	16
  7854  0037E8  2027               	addwfc	??_display_labels+2,w,c
  7855  0037EA  6E13               	movwf	wr16@addr+2,c
  7856  0037EC  0E00               	movlw	0
  7857  0037EE  6E15               	movwf	wr16@value+1,c
  7858  0037F0  0E05               	movlw	5
  7859  0037F2  6E14               	movwf	wr16@value,c
  7860  0037F4  ECCB  F030         	call	_wr16	;wreg free
  7861  0037F8  0E02               	movlw	2
  7862  0037FA  ECBC  F031         	call	_cmd_incrementn
  7863  0037FE  C04A  F025         	movff	_cmd_offset,??_display_labels
  7864  003802  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7865  003806  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7866  003808  0E00               	movlw	0
  7867  00380A  2425               	addwf	??_display_labels,w,c
  7868  00380C  6E11               	movwf	wr16@addr,c
  7869  00380E  0E80               	movlw	128
  7870  003810  2026               	addwfc	??_display_labels+1,w,c
  7871  003812  6E12               	movwf	wr16@addr+1,c
  7872  003814  0E10               	movlw	16
  7873  003816  2027               	addwfc	??_display_labels+2,w,c
  7874  003818  6E13               	movwf	wr16@addr+2,c
  7875  00381A  0E19               	movlw	25
  7876  00381C  2628               	addwf	display_labels@y_start,f,c
  7877  00381E  0E00               	movlw	0
  7878  003820  2229               	addwfc	display_labels@y_start+1,f,c
  7879  003822  C028  F014         	movff	display_labels@y_start,wr16@value
  7880  003826  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  7881  00382A  ECCB  F030         	call	_wr16	;wreg free
  7882  00382E  0E02               	movlw	2
  7883  003830  ECBC  F031         	call	_cmd_incrementn
  7884  003834  C04A  F025         	movff	_cmd_offset,??_display_labels
  7885  003838  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7886  00383C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7887  00383E  0E00               	movlw	0
  7888  003840  2425               	addwf	??_display_labels,w,c
  7889  003842  6E11               	movwf	wr16@addr,c
  7890  003844  0E80               	movlw	128
  7891  003846  2026               	addwfc	??_display_labels+1,w,c
  7892  003848  6E12               	movwf	wr16@addr+1,c
  7893  00384A  0E10               	movlw	16
  7894  00384C  2027               	addwfc	??_display_labels+2,w,c
  7895  00384E  6E13               	movwf	wr16@addr+2,c
  7896  003850  0E00               	movlw	0
  7897  003852  6E15               	movwf	wr16@value+1,c
  7898  003854  0E1A               	movlw	26
  7899  003856  6E14               	movwf	wr16@value,c
  7900  003858  ECCB  F030         	call	_wr16	;wreg free
  7901  00385C  0E02               	movlw	2
  7902  00385E  ECBC  F031         	call	_cmd_incrementn
  7903  003862  C04A  F025         	movff	_cmd_offset,??_display_labels
  7904  003866  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7905  00386A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7906  00386C  0E00               	movlw	0
  7907  00386E  2425               	addwf	??_display_labels,w,c
  7908  003870  6E11               	movwf	wr16@addr,c
  7909  003872  0E80               	movlw	128
  7910  003874  2026               	addwfc	??_display_labels+1,w,c
  7911  003876  6E12               	movwf	wr16@addr+1,c
  7912  003878  0E10               	movlw	16
  7913  00387A  2027               	addwfc	??_display_labels+2,w,c
  7914  00387C  6E13               	movwf	wr16@addr+2,c
  7915  00387E  0E00               	movlw	0
  7916  003880  6E15               	movwf	wr16@value+1,c
  7917  003882  0E00               	movlw	0
  7918  003884  6E14               	movwf	wr16@value,c
  7919  003886  ECCB  F030         	call	_wr16	;wreg free
  7920  00388A  0E02               	movlw	2
  7921  00388C  ECBC  F031         	call	_cmd_incrementn
  7922  003890  C04A  F025         	movff	_cmd_offset,??_display_labels
  7923  003894  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7924  003898  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7925  00389A  0E00               	movlw	0
  7926  00389C  2425               	addwf	??_display_labels,w,c
  7927  00389E  6E16               	movwf	wr8s@addr,c
  7928  0038A0  0E80               	movlw	128
  7929  0038A2  2026               	addwfc	??_display_labels+1,w,c
  7930  0038A4  6E17               	movwf	wr8s@addr+1,c
  7931  0038A6  0E10               	movlw	16
  7932  0038A8  2027               	addwfc	??_display_labels+2,w,c
  7933  0038AA  6E18               	movwf	wr8s@addr+2,c
  7934  0038AC  0E40               	movlw	low STR_6
  7935  0038AE  6E19               	movwf	wr8s@s,c
  7936  0038B0  0E0F               	movlw	high STR_6
  7937  0038B2  6E1A               	movwf	wr8s@s+1,c
  7938  0038B4  EC81  F02E         	call	_wr8s	;wreg free
  7939  0038B8  ECBC  F031         	call	_cmd_incrementn
  7940                           
  7941                           ;display.c: 41: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 15);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  7942  0038BC  0E0C               	movlw	12
  7943  0038BE  6E1E               	movwf	cmd@command,c
  7944  0038C0  0EFF               	movlw	255
  7945  0038C2  6E1F               	movwf	cmd@command+1,c
  7946  0038C4  0EFF               	movlw	255
  7947  0038C6  6E20               	movwf	cmd@command+2,c
  7948  0038C8  0EFF               	movlw	255
  7949  0038CA  6E21               	movwf	cmd@command+3,c
  7950  0038CC  EC06  F031         	call	_cmd	;wreg free
  7951  0038D0  C04A  F025         	movff	_cmd_offset,??_display_labels
  7952  0038D4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7953  0038D8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7954  0038DA  0E00               	movlw	0
  7955  0038DC  2425               	addwf	??_display_labels,w,c
  7956  0038DE  6E11               	movwf	wr16@addr,c
  7957  0038E0  0E80               	movlw	128
  7958  0038E2  2026               	addwfc	??_display_labels+1,w,c
  7959  0038E4  6E12               	movwf	wr16@addr+1,c
  7960  0038E6  0E10               	movlw	16
  7961  0038E8  2027               	addwfc	??_display_labels+2,w,c
  7962  0038EA  6E13               	movwf	wr16@addr+2,c
  7963  0038EC  0E00               	movlw	0
  7964  0038EE  6E15               	movwf	wr16@value+1,c
  7965  0038F0  0E05               	movlw	5
  7966  0038F2  6E14               	movwf	wr16@value,c
  7967  0038F4  ECCB  F030         	call	_wr16	;wreg free
  7968  0038F8  0E02               	movlw	2
  7969  0038FA  ECBC  F031         	call	_cmd_incrementn
  7970  0038FE  C04A  F025         	movff	_cmd_offset,??_display_labels
  7971  003902  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7972  003906  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7973  003908  0E00               	movlw	0
  7974  00390A  2425               	addwf	??_display_labels,w,c
  7975  00390C  6E11               	movwf	wr16@addr,c
  7976  00390E  0E80               	movlw	128
  7977  003910  2026               	addwfc	??_display_labels+1,w,c
  7978  003912  6E12               	movwf	wr16@addr+1,c
  7979  003914  0E10               	movlw	16
  7980  003916  2027               	addwfc	??_display_labels+2,w,c
  7981  003918  6E13               	movwf	wr16@addr+2,c
  7982  00391A  0E0F               	movlw	15
  7983  00391C  2628               	addwf	display_labels@y_start,f,c
  7984  00391E  0E00               	movlw	0
  7985  003920  2229               	addwfc	display_labels@y_start+1,f,c
  7986  003922  C028  F014         	movff	display_labels@y_start,wr16@value
  7987  003926  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  7988  00392A  ECCB  F030         	call	_wr16	;wreg free
  7989  00392E  0E02               	movlw	2
  7990  003930  ECBC  F031         	call	_cmd_incrementn
  7991  003934  C04A  F025         	movff	_cmd_offset,??_display_labels
  7992  003938  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  7993  00393C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  7994  00393E  0E00               	movlw	0
  7995  003940  2425               	addwf	??_display_labels,w,c
  7996  003942  6E11               	movwf	wr16@addr,c
  7997  003944  0E80               	movlw	128
  7998  003946  2026               	addwfc	??_display_labels+1,w,c
  7999  003948  6E12               	movwf	wr16@addr+1,c
  8000  00394A  0E10               	movlw	16
  8001  00394C  2027               	addwfc	??_display_labels+2,w,c
  8002  00394E  6E13               	movwf	wr16@addr+2,c
  8003  003950  0E00               	movlw	0
  8004  003952  6E15               	movwf	wr16@value+1,c
  8005  003954  0E1A               	movlw	26
  8006  003956  6E14               	movwf	wr16@value,c
  8007  003958  ECCB  F030         	call	_wr16	;wreg free
  8008  00395C  0E02               	movlw	2
  8009  00395E  ECBC  F031         	call	_cmd_incrementn
  8010  003962  C04A  F025         	movff	_cmd_offset,??_display_labels
  8011  003966  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8012  00396A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8013  00396C  0E00               	movlw	0
  8014  00396E  2425               	addwf	??_display_labels,w,c
  8015  003970  6E11               	movwf	wr16@addr,c
  8016  003972  0E80               	movlw	128
  8017  003974  2026               	addwfc	??_display_labels+1,w,c
  8018  003976  6E12               	movwf	wr16@addr+1,c
  8019  003978  0E10               	movlw	16
  8020  00397A  2027               	addwfc	??_display_labels+2,w,c
  8021  00397C  6E13               	movwf	wr16@addr+2,c
  8022  00397E  0E00               	movlw	0
  8023  003980  6E15               	movwf	wr16@value+1,c
  8024  003982  0E00               	movlw	0
  8025  003984  6E14               	movwf	wr16@value,c
  8026  003986  ECCB  F030         	call	_wr16	;wreg free
  8027  00398A  0E02               	movlw	2
  8028  00398C  ECBC  F031         	call	_cmd_incrementn
  8029  003990  C04A  F025         	movff	_cmd_offset,??_display_labels
  8030  003994  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8031  003998  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8032  00399A  0E00               	movlw	0
  8033  00399C  2425               	addwf	??_display_labels,w,c
  8034  00399E  6E16               	movwf	wr8s@addr,c
  8035  0039A0  0E80               	movlw	128
  8036  0039A2  2026               	addwfc	??_display_labels+1,w,c
  8037  0039A4  6E17               	movwf	wr8s@addr+1,c
  8038  0039A6  0E10               	movlw	16
  8039  0039A8  2027               	addwfc	??_display_labels+2,w,c
  8040  0039AA  6E18               	movwf	wr8s@addr+2,c
  8041  0039AC  0E29               	movlw	low STR_7
  8042  0039AE  6E19               	movwf	wr8s@s,c
  8043  0039B0  0E0F               	movlw	high STR_7
  8044  0039B2  6E1A               	movwf	wr8s@s+1,c
  8045  0039B4  EC81  F02E         	call	_wr8s	;wreg free
  8046  0039B8  ECBC  F031         	call	_cmd_incrementn
  8047                           
  8048                           ;display.c: 42: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 25);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  8049  0039BC  0E0C               	movlw	12
  8050  0039BE  6E1E               	movwf	cmd@command,c
  8051  0039C0  0EFF               	movlw	255
  8052  0039C2  6E1F               	movwf	cmd@command+1,c
  8053  0039C4  0EFF               	movlw	255
  8054  0039C6  6E20               	movwf	cmd@command+2,c
  8055  0039C8  0EFF               	movlw	255
  8056  0039CA  6E21               	movwf	cmd@command+3,c
  8057  0039CC  EC06  F031         	call	_cmd	;wreg free
  8058  0039D0  C04A  F025         	movff	_cmd_offset,??_display_labels
  8059  0039D4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8060  0039D8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8061  0039DA  0E00               	movlw	0
  8062  0039DC  2425               	addwf	??_display_labels,w,c
  8063  0039DE  6E11               	movwf	wr16@addr,c
  8064  0039E0  0E80               	movlw	128
  8065  0039E2  2026               	addwfc	??_display_labels+1,w,c
  8066  0039E4  6E12               	movwf	wr16@addr+1,c
  8067  0039E6  0E10               	movlw	16
  8068  0039E8  2027               	addwfc	??_display_labels+2,w,c
  8069  0039EA  6E13               	movwf	wr16@addr+2,c
  8070  0039EC  0E00               	movlw	0
  8071  0039EE  6E15               	movwf	wr16@value+1,c
  8072  0039F0  0E05               	movlw	5
  8073  0039F2  6E14               	movwf	wr16@value,c
  8074  0039F4  ECCB  F030         	call	_wr16	;wreg free
  8075  0039F8  0E02               	movlw	2
  8076  0039FA  ECBC  F031         	call	_cmd_incrementn
  8077  0039FE  C04A  F025         	movff	_cmd_offset,??_display_labels
  8078  003A02  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8079  003A06  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8080  003A08  0E00               	movlw	0
  8081  003A0A  2425               	addwf	??_display_labels,w,c
  8082  003A0C  6E11               	movwf	wr16@addr,c
  8083  003A0E  0E80               	movlw	128
  8084  003A10  2026               	addwfc	??_display_labels+1,w,c
  8085  003A12  6E12               	movwf	wr16@addr+1,c
  8086  003A14  0E10               	movlw	16
  8087  003A16  2027               	addwfc	??_display_labels+2,w,c
  8088  003A18  6E13               	movwf	wr16@addr+2,c
  8089  003A1A  0E19               	movlw	25
  8090  003A1C  2628               	addwf	display_labels@y_start,f,c
  8091  003A1E  0E00               	movlw	0
  8092  003A20  2229               	addwfc	display_labels@y_start+1,f,c
  8093  003A22  C028  F014         	movff	display_labels@y_start,wr16@value
  8094  003A26  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  8095  003A2A  ECCB  F030         	call	_wr16	;wreg free
  8096  003A2E  0E02               	movlw	2
  8097  003A30  ECBC  F031         	call	_cmd_incrementn
  8098  003A34  C04A  F025         	movff	_cmd_offset,??_display_labels
  8099  003A38  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8100  003A3C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8101  003A3E  0E00               	movlw	0
  8102  003A40  2425               	addwf	??_display_labels,w,c
  8103  003A42  6E11               	movwf	wr16@addr,c
  8104  003A44  0E80               	movlw	128
  8105  003A46  2026               	addwfc	??_display_labels+1,w,c
  8106  003A48  6E12               	movwf	wr16@addr+1,c
  8107  003A4A  0E10               	movlw	16
  8108  003A4C  2027               	addwfc	??_display_labels+2,w,c
  8109  003A4E  6E13               	movwf	wr16@addr+2,c
  8110  003A50  0E00               	movlw	0
  8111  003A52  6E15               	movwf	wr16@value+1,c
  8112  003A54  0E1A               	movlw	26
  8113  003A56  6E14               	movwf	wr16@value,c
  8114  003A58  ECCB  F030         	call	_wr16	;wreg free
  8115  003A5C  0E02               	movlw	2
  8116  003A5E  ECBC  F031         	call	_cmd_incrementn
  8117  003A62  C04A  F025         	movff	_cmd_offset,??_display_labels
  8118  003A66  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8119  003A6A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8120  003A6C  0E00               	movlw	0
  8121  003A6E  2425               	addwf	??_display_labels,w,c
  8122  003A70  6E11               	movwf	wr16@addr,c
  8123  003A72  0E80               	movlw	128
  8124  003A74  2026               	addwfc	??_display_labels+1,w,c
  8125  003A76  6E12               	movwf	wr16@addr+1,c
  8126  003A78  0E10               	movlw	16
  8127  003A7A  2027               	addwfc	??_display_labels+2,w,c
  8128  003A7C  6E13               	movwf	wr16@addr+2,c
  8129  003A7E  0E00               	movlw	0
  8130  003A80  6E15               	movwf	wr16@value+1,c
  8131  003A82  0E00               	movlw	0
  8132  003A84  6E14               	movwf	wr16@value,c
  8133  003A86  ECCB  F030         	call	_wr16	;wreg free
  8134  003A8A  0E02               	movlw	2
  8135  003A8C  ECBC  F031         	call	_cmd_incrementn
  8136  003A90  C04A  F025         	movff	_cmd_offset,??_display_labels
  8137  003A94  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8138  003A98  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8139  003A9A  0E00               	movlw	0
  8140  003A9C  2425               	addwf	??_display_labels,w,c
  8141  003A9E  6E16               	movwf	wr8s@addr,c
  8142  003AA0  0E80               	movlw	128
  8143  003AA2  2026               	addwfc	??_display_labels+1,w,c
  8144  003AA4  6E17               	movwf	wr8s@addr+1,c
  8145  003AA6  0E10               	movlw	16
  8146  003AA8  2027               	addwfc	??_display_labels+2,w,c
  8147  003AAA  6E18               	movwf	wr8s@addr+2,c
  8148  003AAC  0E54               	movlw	low STR_8
  8149  003AAE  6E19               	movwf	wr8s@s,c
  8150  003AB0  0E0F               	movlw	high STR_8
  8151  003AB2  6E1A               	movwf	wr8s@s+1,c
  8152  003AB4  EC81  F02E         	call	_wr8s	;wreg free
  8153  003AB8  ECBC  F031         	call	_cmd_incrementn
  8154                           
  8155                           ;display.c: 43: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 15);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  8156  003ABC  0E0C               	movlw	12
  8157  003ABE  6E1E               	movwf	cmd@command,c
  8158  003AC0  0EFF               	movlw	255
  8159  003AC2  6E1F               	movwf	cmd@command+1,c
  8160  003AC4  0EFF               	movlw	255
  8161  003AC6  6E20               	movwf	cmd@command+2,c
  8162  003AC8  0EFF               	movlw	255
  8163  003ACA  6E21               	movwf	cmd@command+3,c
  8164  003ACC  EC06  F031         	call	_cmd	;wreg free
  8165  003AD0  C04A  F025         	movff	_cmd_offset,??_display_labels
  8166  003AD4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8167  003AD8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8168  003ADA  0E00               	movlw	0
  8169  003ADC  2425               	addwf	??_display_labels,w,c
  8170  003ADE  6E11               	movwf	wr16@addr,c
  8171  003AE0  0E80               	movlw	128
  8172  003AE2  2026               	addwfc	??_display_labels+1,w,c
  8173  003AE4  6E12               	movwf	wr16@addr+1,c
  8174  003AE6  0E10               	movlw	16
  8175  003AE8  2027               	addwfc	??_display_labels+2,w,c
  8176  003AEA  6E13               	movwf	wr16@addr+2,c
  8177  003AEC  0E00               	movlw	0
  8178  003AEE  6E15               	movwf	wr16@value+1,c
  8179  003AF0  0E05               	movlw	5
  8180  003AF2  6E14               	movwf	wr16@value,c
  8181  003AF4  ECCB  F030         	call	_wr16	;wreg free
  8182  003AF8  0E02               	movlw	2
  8183  003AFA  ECBC  F031         	call	_cmd_incrementn
  8184  003AFE  C04A  F025         	movff	_cmd_offset,??_display_labels
  8185  003B02  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8186  003B06  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8187  003B08  0E00               	movlw	0
  8188  003B0A  2425               	addwf	??_display_labels,w,c
  8189  003B0C  6E11               	movwf	wr16@addr,c
  8190  003B0E  0E80               	movlw	128
  8191  003B10  2026               	addwfc	??_display_labels+1,w,c
  8192  003B12  6E12               	movwf	wr16@addr+1,c
  8193  003B14  0E10               	movlw	16
  8194  003B16  2027               	addwfc	??_display_labels+2,w,c
  8195  003B18  6E13               	movwf	wr16@addr+2,c
  8196  003B1A  0E0F               	movlw	15
  8197  003B1C  2628               	addwf	display_labels@y_start,f,c
  8198  003B1E  0E00               	movlw	0
  8199  003B20  2229               	addwfc	display_labels@y_start+1,f,c
  8200  003B22  C028  F014         	movff	display_labels@y_start,wr16@value
  8201  003B26  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  8202  003B2A  ECCB  F030         	call	_wr16	;wreg free
  8203  003B2E  0E02               	movlw	2
  8204  003B30  ECBC  F031         	call	_cmd_incrementn
  8205  003B34  C04A  F025         	movff	_cmd_offset,??_display_labels
  8206  003B38  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8207  003B3C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8208  003B3E  0E00               	movlw	0
  8209  003B40  2425               	addwf	??_display_labels,w,c
  8210  003B42  6E11               	movwf	wr16@addr,c
  8211  003B44  0E80               	movlw	128
  8212  003B46  2026               	addwfc	??_display_labels+1,w,c
  8213  003B48  6E12               	movwf	wr16@addr+1,c
  8214  003B4A  0E10               	movlw	16
  8215  003B4C  2027               	addwfc	??_display_labels+2,w,c
  8216  003B4E  6E13               	movwf	wr16@addr+2,c
  8217  003B50  0E00               	movlw	0
  8218  003B52  6E15               	movwf	wr16@value+1,c
  8219  003B54  0E1A               	movlw	26
  8220  003B56  6E14               	movwf	wr16@value,c
  8221  003B58  ECCB  F030         	call	_wr16	;wreg free
  8222  003B5C  0E02               	movlw	2
  8223  003B5E  ECBC  F031         	call	_cmd_incrementn
  8224  003B62  C04A  F025         	movff	_cmd_offset,??_display_labels
  8225  003B66  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8226  003B6A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8227  003B6C  0E00               	movlw	0
  8228  003B6E  2425               	addwf	??_display_labels,w,c
  8229  003B70  6E11               	movwf	wr16@addr,c
  8230  003B72  0E80               	movlw	128
  8231  003B74  2026               	addwfc	??_display_labels+1,w,c
  8232  003B76  6E12               	movwf	wr16@addr+1,c
  8233  003B78  0E10               	movlw	16
  8234  003B7A  2027               	addwfc	??_display_labels+2,w,c
  8235  003B7C  6E13               	movwf	wr16@addr+2,c
  8236  003B7E  0E00               	movlw	0
  8237  003B80  6E15               	movwf	wr16@value+1,c
  8238  003B82  0E00               	movlw	0
  8239  003B84  6E14               	movwf	wr16@value,c
  8240  003B86  ECCB  F030         	call	_wr16	;wreg free
  8241  003B8A  0E02               	movlw	2
  8242  003B8C  ECBC  F031         	call	_cmd_incrementn
  8243  003B90  C04A  F025         	movff	_cmd_offset,??_display_labels
  8244  003B94  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8245  003B98  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8246  003B9A  0E00               	movlw	0
  8247  003B9C  2425               	addwf	??_display_labels,w,c
  8248  003B9E  6E16               	movwf	wr8s@addr,c
  8249  003BA0  0E80               	movlw	128
  8250  003BA2  2026               	addwfc	??_display_labels+1,w,c
  8251  003BA4  6E17               	movwf	wr8s@addr+1,c
  8252  003BA6  0E10               	movlw	16
  8253  003BA8  2027               	addwfc	??_display_labels+2,w,c
  8254  003BAA  6E18               	movwf	wr8s@addr+2,c
  8255  003BAC  0E2F               	movlw	low STR_9
  8256  003BAE  6E19               	movwf	wr8s@s,c
  8257  003BB0  0E0F               	movlw	high STR_9
  8258  003BB2  6E1A               	movwf	wr8s@s+1,c
  8259  003BB4  EC81  F02E         	call	_wr8s	;wreg free
  8260  003BB8  ECBC  F031         	call	_cmd_incrementn
  8261                           
  8262                           ;display.c: 44: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 25);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  8263  003BBC  0E0C               	movlw	12
  8264  003BBE  6E1E               	movwf	cmd@command,c
  8265  003BC0  0EFF               	movlw	255
  8266  003BC2  6E1F               	movwf	cmd@command+1,c
  8267  003BC4  0EFF               	movlw	255
  8268  003BC6  6E20               	movwf	cmd@command+2,c
  8269  003BC8  0EFF               	movlw	255
  8270  003BCA  6E21               	movwf	cmd@command+3,c
  8271  003BCC  EC06  F031         	call	_cmd	;wreg free
  8272  003BD0  C04A  F025         	movff	_cmd_offset,??_display_labels
  8273  003BD4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8274  003BD8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8275  003BDA  0E00               	movlw	0
  8276  003BDC  2425               	addwf	??_display_labels,w,c
  8277  003BDE  6E11               	movwf	wr16@addr,c
  8278  003BE0  0E80               	movlw	128
  8279  003BE2  2026               	addwfc	??_display_labels+1,w,c
  8280  003BE4  6E12               	movwf	wr16@addr+1,c
  8281  003BE6  0E10               	movlw	16
  8282  003BE8  2027               	addwfc	??_display_labels+2,w,c
  8283  003BEA  6E13               	movwf	wr16@addr+2,c
  8284  003BEC  0E00               	movlw	0
  8285  003BEE  6E15               	movwf	wr16@value+1,c
  8286  003BF0  0E05               	movlw	5
  8287  003BF2  6E14               	movwf	wr16@value,c
  8288  003BF4  ECCB  F030         	call	_wr16	;wreg free
  8289  003BF8  0E02               	movlw	2
  8290  003BFA  ECBC  F031         	call	_cmd_incrementn
  8291  003BFE  C04A  F025         	movff	_cmd_offset,??_display_labels
  8292  003C02  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8293  003C06  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8294  003C08  0E00               	movlw	0
  8295  003C0A  2425               	addwf	??_display_labels,w,c
  8296  003C0C  6E11               	movwf	wr16@addr,c
  8297  003C0E  0E80               	movlw	128
  8298  003C10  2026               	addwfc	??_display_labels+1,w,c
  8299  003C12  6E12               	movwf	wr16@addr+1,c
  8300  003C14  0E10               	movlw	16
  8301  003C16  2027               	addwfc	??_display_labels+2,w,c
  8302  003C18  6E13               	movwf	wr16@addr+2,c
  8303  003C1A  0E19               	movlw	25
  8304  003C1C  2628               	addwf	display_labels@y_start,f,c
  8305  003C1E  0E00               	movlw	0
  8306  003C20  2229               	addwfc	display_labels@y_start+1,f,c
  8307  003C22  C028  F014         	movff	display_labels@y_start,wr16@value
  8308  003C26  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  8309  003C2A  ECCB  F030         	call	_wr16	;wreg free
  8310  003C2E  0E02               	movlw	2
  8311  003C30  ECBC  F031         	call	_cmd_incrementn
  8312  003C34  C04A  F025         	movff	_cmd_offset,??_display_labels
  8313  003C38  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8314  003C3C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8315  003C3E  0E00               	movlw	0
  8316  003C40  2425               	addwf	??_display_labels,w,c
  8317  003C42  6E11               	movwf	wr16@addr,c
  8318  003C44  0E80               	movlw	128
  8319  003C46  2026               	addwfc	??_display_labels+1,w,c
  8320  003C48  6E12               	movwf	wr16@addr+1,c
  8321  003C4A  0E10               	movlw	16
  8322  003C4C  2027               	addwfc	??_display_labels+2,w,c
  8323  003C4E  6E13               	movwf	wr16@addr+2,c
  8324  003C50  0E00               	movlw	0
  8325  003C52  6E15               	movwf	wr16@value+1,c
  8326  003C54  0E1A               	movlw	26
  8327  003C56  6E14               	movwf	wr16@value,c
  8328  003C58  ECCB  F030         	call	_wr16	;wreg free
  8329  003C5C  0E02               	movlw	2
  8330  003C5E  ECBC  F031         	call	_cmd_incrementn
  8331  003C62  C04A  F025         	movff	_cmd_offset,??_display_labels
  8332  003C66  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8333  003C6A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8334  003C6C  0E00               	movlw	0
  8335  003C6E  2425               	addwf	??_display_labels,w,c
  8336  003C70  6E11               	movwf	wr16@addr,c
  8337  003C72  0E80               	movlw	128
  8338  003C74  2026               	addwfc	??_display_labels+1,w,c
  8339  003C76  6E12               	movwf	wr16@addr+1,c
  8340  003C78  0E10               	movlw	16
  8341  003C7A  2027               	addwfc	??_display_labels+2,w,c
  8342  003C7C  6E13               	movwf	wr16@addr+2,c
  8343  003C7E  0E00               	movlw	0
  8344  003C80  6E15               	movwf	wr16@value+1,c
  8345  003C82  0E00               	movlw	0
  8346  003C84  6E14               	movwf	wr16@value,c
  8347  003C86  ECCB  F030         	call	_wr16	;wreg free
  8348  003C8A  0E02               	movlw	2
  8349  003C8C  ECBC  F031         	call	_cmd_incrementn
  8350  003C90  C04A  F025         	movff	_cmd_offset,??_display_labels
  8351  003C94  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8352  003C98  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8353  003C9A  0E00               	movlw	0
  8354  003C9C  2425               	addwf	??_display_labels,w,c
  8355  003C9E  6E16               	movwf	wr8s@addr,c
  8356  003CA0  0E80               	movlw	128
  8357  003CA2  2026               	addwfc	??_display_labels+1,w,c
  8358  003CA4  6E17               	movwf	wr8s@addr+1,c
  8359  003CA6  0E10               	movlw	16
  8360  003CA8  2027               	addwfc	??_display_labels+2,w,c
  8361  003CAA  6E18               	movwf	wr8s@addr+2,c
  8362  003CAC  0E5D               	movlw	low STR_4
  8363  003CAE  6E19               	movwf	wr8s@s,c
  8364  003CB0  0E0F               	movlw	high STR_4
  8365  003CB2  6E1A               	movwf	wr8s@s+1,c
  8366  003CB4  EC81  F02E         	call	_wr8s	;wreg free
  8367  003CB8  ECBC  F031         	call	_cmd_incrementn
  8368                           
  8369                           ;display.c: 45: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += 15);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd
      +                          _incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(10813
      +                          44
  8370  003CBC  0E0C               	movlw	12
  8371  003CBE  6E1E               	movwf	cmd@command,c
  8372  003CC0  0EFF               	movlw	255
  8373  003CC2  6E1F               	movwf	cmd@command+1,c
  8374  003CC4  0EFF               	movlw	255
  8375  003CC6  6E20               	movwf	cmd@command+2,c
  8376  003CC8  0EFF               	movlw	255
  8377  003CCA  6E21               	movwf	cmd@command+3,c
  8378  003CCC  EC06  F031         	call	_cmd	;wreg free
  8379  003CD0  C04A  F025         	movff	_cmd_offset,??_display_labels
  8380  003CD4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8381  003CD8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8382  003CDA  0E00               	movlw	0
  8383  003CDC  2425               	addwf	??_display_labels,w,c
  8384  003CDE  6E11               	movwf	wr16@addr,c
  8385  003CE0  0E80               	movlw	128
  8386  003CE2  2026               	addwfc	??_display_labels+1,w,c
  8387  003CE4  6E12               	movwf	wr16@addr+1,c
  8388  003CE6  0E10               	movlw	16
  8389  003CE8  2027               	addwfc	??_display_labels+2,w,c
  8390  003CEA  6E13               	movwf	wr16@addr+2,c
  8391  003CEC  0E00               	movlw	0
  8392  003CEE  6E15               	movwf	wr16@value+1,c
  8393  003CF0  0E05               	movlw	5
  8394  003CF2  6E14               	movwf	wr16@value,c
  8395  003CF4  ECCB  F030         	call	_wr16	;wreg free
  8396  003CF8  0E02               	movlw	2
  8397  003CFA  ECBC  F031         	call	_cmd_incrementn
  8398  003CFE  C04A  F025         	movff	_cmd_offset,??_display_labels
  8399  003D02  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8400  003D06  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8401  003D08  0E00               	movlw	0
  8402  003D0A  2425               	addwf	??_display_labels,w,c
  8403  003D0C  6E11               	movwf	wr16@addr,c
  8404  003D0E  0E80               	movlw	128
  8405  003D10  2026               	addwfc	??_display_labels+1,w,c
  8406  003D12  6E12               	movwf	wr16@addr+1,c
  8407  003D14  0E10               	movlw	16
  8408  003D16  2027               	addwfc	??_display_labels+2,w,c
  8409  003D18  6E13               	movwf	wr16@addr+2,c
  8410  003D1A  0E0F               	movlw	15
  8411  003D1C  2628               	addwf	display_labels@y_start,f,c
  8412  003D1E  0E00               	movlw	0
  8413  003D20  2229               	addwfc	display_labels@y_start+1,f,c
  8414  003D22  C028  F014         	movff	display_labels@y_start,wr16@value
  8415  003D26  C029  F015         	movff	display_labels@y_start+1,wr16@value+1
  8416  003D2A  ECCB  F030         	call	_wr16	;wreg free
  8417  003D2E  0E02               	movlw	2
  8418  003D30  ECBC  F031         	call	_cmd_incrementn
  8419  003D34  C04A  F025         	movff	_cmd_offset,??_display_labels
  8420  003D38  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8421  003D3C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8422  003D3E  0E00               	movlw	0
  8423  003D40  2425               	addwf	??_display_labels,w,c
  8424  003D42  6E11               	movwf	wr16@addr,c
  8425  003D44  0E80               	movlw	128
  8426  003D46  2026               	addwfc	??_display_labels+1,w,c
  8427  003D48  6E12               	movwf	wr16@addr+1,c
  8428  003D4A  0E10               	movlw	16
  8429  003D4C  2027               	addwfc	??_display_labels+2,w,c
  8430  003D4E  6E13               	movwf	wr16@addr+2,c
  8431  003D50  0E00               	movlw	0
  8432  003D52  6E15               	movwf	wr16@value+1,c
  8433  003D54  0E1A               	movlw	26
  8434  003D56  6E14               	movwf	wr16@value,c
  8435  003D58  ECCB  F030         	call	_wr16	;wreg free
  8436  003D5C  0E02               	movlw	2
  8437  003D5E  ECBC  F031         	call	_cmd_incrementn
  8438  003D62  C04A  F025         	movff	_cmd_offset,??_display_labels
  8439  003D66  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8440  003D6A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8441  003D6C  0E00               	movlw	0
  8442  003D6E  2425               	addwf	??_display_labels,w,c
  8443  003D70  6E11               	movwf	wr16@addr,c
  8444  003D72  0E80               	movlw	128
  8445  003D74  2026               	addwfc	??_display_labels+1,w,c
  8446  003D76  6E12               	movwf	wr16@addr+1,c
  8447  003D78  0E10               	movlw	16
  8448  003D7A  2027               	addwfc	??_display_labels+2,w,c
  8449  003D7C  6E13               	movwf	wr16@addr+2,c
  8450  003D7E  0E00               	movlw	0
  8451  003D80  6E15               	movwf	wr16@value+1,c
  8452  003D82  0E00               	movlw	0
  8453  003D84  6E14               	movwf	wr16@value,c
  8454  003D86  ECCB  F030         	call	_wr16	;wreg free
  8455  003D8A  0E02               	movlw	2
  8456  003D8C  ECBC  F031         	call	_cmd_incrementn
  8457  003D90  C04A  F025         	movff	_cmd_offset,??_display_labels
  8458  003D94  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8459  003D98  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8460  003D9A  0E00               	movlw	0
  8461  003D9C  2425               	addwf	??_display_labels,w,c
  8462  003D9E  6E16               	movwf	wr8s@addr,c
  8463  003DA0  0E80               	movlw	128
  8464  003DA2  2026               	addwfc	??_display_labels+1,w,c
  8465  003DA4  6E17               	movwf	wr8s@addr+1,c
  8466  003DA6  0E10               	movlw	16
  8467  003DA8  2027               	addwfc	??_display_labels+2,w,c
  8468  003DAA  6E18               	movwf	wr8s@addr+2,c
  8469  003DAC  0E29               	movlw	low STR_7
  8470  003DAE  6E19               	movwf	wr8s@s,c
  8471  003DB0  0E0F               	movlw	high STR_7
  8472  003DB2  6E1A               	movwf	wr8s@s+1,c
  8473  003DB4  EC81  F02E         	call	_wr8s	;wreg free
  8474  003DB8  ECBC  F031         	call	_cmd_incrementn
  8475                           
  8476                           ;display.c: 46: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 360);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8477  003DBC  0E0C               	movlw	12
  8478  003DBE  6E1E               	movwf	cmd@command,c
  8479  003DC0  0EFF               	movlw	255
  8480  003DC2  6E1F               	movwf	cmd@command+1,c
  8481  003DC4  0EFF               	movlw	255
  8482  003DC6  6E20               	movwf	cmd@command+2,c
  8483  003DC8  0EFF               	movlw	255
  8484  003DCA  6E21               	movwf	cmd@command+3,c
  8485  003DCC  EC06  F031         	call	_cmd	;wreg free
  8486  003DD0  C04A  F025         	movff	_cmd_offset,??_display_labels
  8487  003DD4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8488  003DD8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8489  003DDA  0E00               	movlw	0
  8490  003DDC  2425               	addwf	??_display_labels,w,c
  8491  003DDE  6E11               	movwf	wr16@addr,c
  8492  003DE0  0E80               	movlw	128
  8493  003DE2  2026               	addwfc	??_display_labels+1,w,c
  8494  003DE4  6E12               	movwf	wr16@addr+1,c
  8495  003DE6  0E10               	movlw	16
  8496  003DE8  2027               	addwfc	??_display_labels+2,w,c
  8497  003DEA  6E13               	movwf	wr16@addr+2,c
  8498  003DEC  0E01               	movlw	1
  8499  003DEE  6E15               	movwf	wr16@value+1,c
  8500  003DF0  0E68               	movlw	104
  8501  003DF2  6E14               	movwf	wr16@value,c
  8502  003DF4  ECCB  F030         	call	_wr16	;wreg free
  8503  003DF8  0E02               	movlw	2
  8504  003DFA  ECBC  F031         	call	_cmd_incrementn
  8505  003DFE  C04A  F025         	movff	_cmd_offset,??_display_labels
  8506  003E02  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8507  003E06  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8508  003E08  0E00               	movlw	0
  8509  003E0A  2425               	addwf	??_display_labels,w,c
  8510  003E0C  6E11               	movwf	wr16@addr,c
  8511  003E0E  0E80               	movlw	128
  8512  003E10  2026               	addwfc	??_display_labels+1,w,c
  8513  003E12  6E12               	movwf	wr16@addr+1,c
  8514  003E14  0E10               	movlw	16
  8515  003E16  2027               	addwfc	??_display_labels+2,w,c
  8516  003E18  6E13               	movwf	wr16@addr+2,c
  8517  003E1A  0E00               	movlw	0
  8518  003E1C  6E15               	movwf	wr16@value+1,c
  8519  003E1E  0E82               	movlw	130
  8520  003E20  6E14               	movwf	wr16@value,c
  8521  003E22  ECCB  F030         	call	_wr16	;wreg free
  8522  003E26  0E02               	movlw	2
  8523  003E28  ECBC  F031         	call	_cmd_incrementn
  8524  003E2C  C04A  F025         	movff	_cmd_offset,??_display_labels
  8525  003E30  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8526  003E34  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8527  003E36  0E00               	movlw	0
  8528  003E38  2425               	addwf	??_display_labels,w,c
  8529  003E3A  6E11               	movwf	wr16@addr,c
  8530  003E3C  0E80               	movlw	128
  8531  003E3E  2026               	addwfc	??_display_labels+1,w,c
  8532  003E40  6E12               	movwf	wr16@addr+1,c
  8533  003E42  0E10               	movlw	16
  8534  003E44  2027               	addwfc	??_display_labels+2,w,c
  8535  003E46  6E13               	movwf	wr16@addr+2,c
  8536  003E48  0E00               	movlw	0
  8537  003E4A  6E15               	movwf	wr16@value+1,c
  8538  003E4C  0E1A               	movlw	26
  8539  003E4E  6E14               	movwf	wr16@value,c
  8540  003E50  ECCB  F030         	call	_wr16	;wreg free
  8541  003E54  0E02               	movlw	2
  8542  003E56  ECBC  F031         	call	_cmd_incrementn
  8543  003E5A  C04A  F025         	movff	_cmd_offset,??_display_labels
  8544  003E5E  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8545  003E62  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8546  003E64  0E00               	movlw	0
  8547  003E66  2425               	addwf	??_display_labels,w,c
  8548  003E68  6E11               	movwf	wr16@addr,c
  8549  003E6A  0E80               	movlw	128
  8550  003E6C  2026               	addwfc	??_display_labels+1,w,c
  8551  003E6E  6E12               	movwf	wr16@addr+1,c
  8552  003E70  0E10               	movlw	16
  8553  003E72  2027               	addwfc	??_display_labels+2,w,c
  8554  003E74  6E13               	movwf	wr16@addr+2,c
  8555  003E76  0E00               	movlw	0
  8556  003E78  6E15               	movwf	wr16@value+1,c
  8557  003E7A  0E00               	movlw	0
  8558  003E7C  6E14               	movwf	wr16@value,c
  8559  003E7E  ECCB  F030         	call	_wr16	;wreg free
  8560  003E82  0E02               	movlw	2
  8561  003E84  ECBC  F031         	call	_cmd_incrementn
  8562  003E88  C04A  F025         	movff	_cmd_offset,??_display_labels
  8563  003E8C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8564  003E90  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8565  003E92  0E00               	movlw	0
  8566  003E94  2425               	addwf	??_display_labels,w,c
  8567  003E96  6E16               	movwf	wr8s@addr,c
  8568  003E98  0E80               	movlw	128
  8569  003E9A  2026               	addwfc	??_display_labels+1,w,c
  8570  003E9C  6E17               	movwf	wr8s@addr+1,c
  8571  003E9E  0E10               	movlw	16
  8572  003EA0  2027               	addwfc	??_display_labels+2,w,c
  8573  003EA2  6E18               	movwf	wr8s@addr+2,c
  8574  003EA4  0E1D               	movlw	low STR_12
  8575  003EA6  6E19               	movwf	wr8s@s,c
  8576  003EA8  0E0F               	movlw	high STR_12
  8577  003EAA  6E1A               	movwf	wr8s@s+1,c
  8578  003EAC  EC81  F02E         	call	_wr8s	;wreg free
  8579  003EB0  ECBC  F031         	call	_cmd_incrementn
  8580                           
  8581                           ;display.c: 47: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 360);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 130 + 15);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_in
      +                          crementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344U
      +                          L+
  8582  003EB4  0E0C               	movlw	12
  8583  003EB6  6E1E               	movwf	cmd@command,c
  8584  003EB8  0EFF               	movlw	255
  8585  003EBA  6E1F               	movwf	cmd@command+1,c
  8586  003EBC  0EFF               	movlw	255
  8587  003EBE  6E20               	movwf	cmd@command+2,c
  8588  003EC0  0EFF               	movlw	255
  8589  003EC2  6E21               	movwf	cmd@command+3,c
  8590  003EC4  EC06  F031         	call	_cmd	;wreg free
  8591  003EC8  C04A  F025         	movff	_cmd_offset,??_display_labels
  8592  003ECC  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8593  003ED0  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8594  003ED2  0E00               	movlw	0
  8595  003ED4  2425               	addwf	??_display_labels,w,c
  8596  003ED6  6E11               	movwf	wr16@addr,c
  8597  003ED8  0E80               	movlw	128
  8598  003EDA  2026               	addwfc	??_display_labels+1,w,c
  8599  003EDC  6E12               	movwf	wr16@addr+1,c
  8600  003EDE  0E10               	movlw	16
  8601  003EE0  2027               	addwfc	??_display_labels+2,w,c
  8602  003EE2  6E13               	movwf	wr16@addr+2,c
  8603  003EE4  0E01               	movlw	1
  8604  003EE6  6E15               	movwf	wr16@value+1,c
  8605  003EE8  0E68               	movlw	104
  8606  003EEA  6E14               	movwf	wr16@value,c
  8607  003EEC  ECCB  F030         	call	_wr16	;wreg free
  8608  003EF0  0E02               	movlw	2
  8609  003EF2  ECBC  F031         	call	_cmd_incrementn
  8610  003EF6  C04A  F025         	movff	_cmd_offset,??_display_labels
  8611  003EFA  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8612  003EFE  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8613  003F00  0E00               	movlw	0
  8614  003F02  2425               	addwf	??_display_labels,w,c
  8615  003F04  6E11               	movwf	wr16@addr,c
  8616  003F06  0E80               	movlw	128
  8617  003F08  2026               	addwfc	??_display_labels+1,w,c
  8618  003F0A  6E12               	movwf	wr16@addr+1,c
  8619  003F0C  0E10               	movlw	16
  8620  003F0E  2027               	addwfc	??_display_labels+2,w,c
  8621  003F10  6E13               	movwf	wr16@addr+2,c
  8622  003F12  0E00               	movlw	0
  8623  003F14  6E15               	movwf	wr16@value+1,c
  8624  003F16  0E91               	movlw	145
  8625  003F18  6E14               	movwf	wr16@value,c
  8626  003F1A  ECCB  F030         	call	_wr16	;wreg free
  8627  003F1E  0E02               	movlw	2
  8628  003F20  ECBC  F031         	call	_cmd_incrementn
  8629  003F24  C04A  F025         	movff	_cmd_offset,??_display_labels
  8630  003F28  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8631  003F2C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8632  003F2E  0E00               	movlw	0
  8633  003F30  2425               	addwf	??_display_labels,w,c
  8634  003F32  6E11               	movwf	wr16@addr,c
  8635  003F34  0E80               	movlw	128
  8636  003F36  2026               	addwfc	??_display_labels+1,w,c
  8637  003F38  6E12               	movwf	wr16@addr+1,c
  8638  003F3A  0E10               	movlw	16
  8639  003F3C  2027               	addwfc	??_display_labels+2,w,c
  8640  003F3E  6E13               	movwf	wr16@addr+2,c
  8641  003F40  0E00               	movlw	0
  8642  003F42  6E15               	movwf	wr16@value+1,c
  8643  003F44  0E1A               	movlw	26
  8644  003F46  6E14               	movwf	wr16@value,c
  8645  003F48  ECCB  F030         	call	_wr16	;wreg free
  8646  003F4C  0E02               	movlw	2
  8647  003F4E  ECBC  F031         	call	_cmd_incrementn
  8648  003F52  C04A  F025         	movff	_cmd_offset,??_display_labels
  8649  003F56  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8650  003F5A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8651  003F5C  0E00               	movlw	0
  8652  003F5E  2425               	addwf	??_display_labels,w,c
  8653  003F60  6E11               	movwf	wr16@addr,c
  8654  003F62  0E80               	movlw	128
  8655  003F64  2026               	addwfc	??_display_labels+1,w,c
  8656  003F66  6E12               	movwf	wr16@addr+1,c
  8657  003F68  0E10               	movlw	16
  8658  003F6A  2027               	addwfc	??_display_labels+2,w,c
  8659  003F6C  6E13               	movwf	wr16@addr+2,c
  8660  003F6E  0E00               	movlw	0
  8661  003F70  6E15               	movwf	wr16@value+1,c
  8662  003F72  0E00               	movlw	0
  8663  003F74  6E14               	movwf	wr16@value,c
  8664  003F76  ECCB  F030         	call	_wr16	;wreg free
  8665  003F7A  0E02               	movlw	2
  8666  003F7C  ECBC  F031         	call	_cmd_incrementn
  8667  003F80  C04A  F025         	movff	_cmd_offset,??_display_labels
  8668  003F84  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8669  003F88  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8670  003F8A  0E00               	movlw	0
  8671  003F8C  2425               	addwf	??_display_labels,w,c
  8672  003F8E  6E16               	movwf	wr8s@addr,c
  8673  003F90  0E80               	movlw	128
  8674  003F92  2026               	addwfc	??_display_labels+1,w,c
  8675  003F94  6E17               	movwf	wr8s@addr+1,c
  8676  003F96  0E10               	movlw	16
  8677  003F98  2027               	addwfc	??_display_labels+2,w,c
  8678  003F9A  6E18               	movwf	wr8s@addr+2,c
  8679  003F9C  0E59               	movlw	low STR_13
  8680  003F9E  6E19               	movwf	wr8s@s,c
  8681  003FA0  0E0F               	movlw	high STR_13
  8682  003FA2  6E1A               	movwf	wr8s@s+1,c
  8683  003FA4  EC81  F02E         	call	_wr8s	;wreg free
  8684  003FA8  ECBC  F031         	call	_cmd_incrementn
  8685                           
  8686                           ;display.c: 48: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 380);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 180);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8687  003FAC  0E0C               	movlw	12
  8688  003FAE  6E1E               	movwf	cmd@command,c
  8689  003FB0  0EFF               	movlw	255
  8690  003FB2  6E1F               	movwf	cmd@command+1,c
  8691  003FB4  0EFF               	movlw	255
  8692  003FB6  6E20               	movwf	cmd@command+2,c
  8693  003FB8  0EFF               	movlw	255
  8694  003FBA  6E21               	movwf	cmd@command+3,c
  8695  003FBC  EC06  F031         	call	_cmd	;wreg free
  8696  003FC0  C04A  F025         	movff	_cmd_offset,??_display_labels
  8697  003FC4  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8698  003FC8  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8699  003FCA  0E00               	movlw	0
  8700  003FCC  2425               	addwf	??_display_labels,w,c
  8701  003FCE  6E11               	movwf	wr16@addr,c
  8702  003FD0  0E80               	movlw	128
  8703  003FD2  2026               	addwfc	??_display_labels+1,w,c
  8704  003FD4  6E12               	movwf	wr16@addr+1,c
  8705  003FD6  0E10               	movlw	16
  8706  003FD8  2027               	addwfc	??_display_labels+2,w,c
  8707  003FDA  6E13               	movwf	wr16@addr+2,c
  8708  003FDC  0E01               	movlw	1
  8709  003FDE  6E15               	movwf	wr16@value+1,c
  8710  003FE0  0E7C               	movlw	124
  8711  003FE2  6E14               	movwf	wr16@value,c
  8712  003FE4  ECCB  F030         	call	_wr16	;wreg free
  8713  003FE8  0E02               	movlw	2
  8714  003FEA  ECBC  F031         	call	_cmd_incrementn
  8715  003FEE  C04A  F025         	movff	_cmd_offset,??_display_labels
  8716  003FF2  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8717  003FF6  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8718  003FF8  0E00               	movlw	0
  8719  003FFA  2425               	addwf	??_display_labels,w,c
  8720  003FFC  6E11               	movwf	wr16@addr,c
  8721  003FFE  0E80               	movlw	128
  8722  004000  2026               	addwfc	??_display_labels+1,w,c
  8723  004002  6E12               	movwf	wr16@addr+1,c
  8724  004004  0E10               	movlw	16
  8725  004006  2027               	addwfc	??_display_labels+2,w,c
  8726  004008  6E13               	movwf	wr16@addr+2,c
  8727  00400A  0E00               	movlw	0
  8728  00400C  6E15               	movwf	wr16@value+1,c
  8729  00400E  0EB4               	movlw	180
  8730  004010  6E14               	movwf	wr16@value,c
  8731  004012  ECCB  F030         	call	_wr16	;wreg free
  8732  004016  0E02               	movlw	2
  8733  004018  ECBC  F031         	call	_cmd_incrementn
  8734  00401C  C04A  F025         	movff	_cmd_offset,??_display_labels
  8735  004020  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8736  004024  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8737  004026  0E00               	movlw	0
  8738  004028  2425               	addwf	??_display_labels,w,c
  8739  00402A  6E11               	movwf	wr16@addr,c
  8740  00402C  0E80               	movlw	128
  8741  00402E  2026               	addwfc	??_display_labels+1,w,c
  8742  004030  6E12               	movwf	wr16@addr+1,c
  8743  004032  0E10               	movlw	16
  8744  004034  2027               	addwfc	??_display_labels+2,w,c
  8745  004036  6E13               	movwf	wr16@addr+2,c
  8746  004038  0E00               	movlw	0
  8747  00403A  6E15               	movwf	wr16@value+1,c
  8748  00403C  0E1A               	movlw	26
  8749  00403E  6E14               	movwf	wr16@value,c
  8750  004040  ECCB  F030         	call	_wr16	;wreg free
  8751  004044  0E02               	movlw	2
  8752  004046  ECBC  F031         	call	_cmd_incrementn
  8753  00404A  C04A  F025         	movff	_cmd_offset,??_display_labels
  8754  00404E  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8755  004052  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8756  004054  0E00               	movlw	0
  8757  004056  2425               	addwf	??_display_labels,w,c
  8758  004058  6E11               	movwf	wr16@addr,c
  8759  00405A  0E80               	movlw	128
  8760  00405C  2026               	addwfc	??_display_labels+1,w,c
  8761  00405E  6E12               	movwf	wr16@addr+1,c
  8762  004060  0E10               	movlw	16
  8763  004062  2027               	addwfc	??_display_labels+2,w,c
  8764  004064  6E13               	movwf	wr16@addr+2,c
  8765  004066  0E00               	movlw	0
  8766  004068  6E15               	movwf	wr16@value+1,c
  8767  00406A  0E00               	movlw	0
  8768  00406C  6E14               	movwf	wr16@value,c
  8769  00406E  ECCB  F030         	call	_wr16	;wreg free
  8770  004072  0E02               	movlw	2
  8771  004074  ECBC  F031         	call	_cmd_incrementn
  8772  004078  C04A  F025         	movff	_cmd_offset,??_display_labels
  8773  00407C  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8774  004080  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8775  004082  0E00               	movlw	0
  8776  004084  2425               	addwf	??_display_labels,w,c
  8777  004086  6E16               	movwf	wr8s@addr,c
  8778  004088  0E80               	movlw	128
  8779  00408A  2026               	addwfc	??_display_labels+1,w,c
  8780  00408C  6E17               	movwf	wr8s@addr+1,c
  8781  00408E  0E10               	movlw	16
  8782  004090  2027               	addwfc	??_display_labels+2,w,c
  8783  004092  6E18               	movwf	wr8s@addr+2,c
  8784  004094  0E72               	movlw	low STR_14
  8785  004096  6E19               	movwf	wr8s@s,c
  8786  004098  0E0F               	movlw	high STR_14
  8787  00409A  6E1A               	movwf	wr8s@s+1,c
  8788  00409C  EC81  F02E         	call	_wr8s	;wreg free
  8789  0040A0  ECBC  F031         	call	_cmd_incrementn
  8790                           
  8791                           ;display.c: 49: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 459);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 174);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  8792  0040A4  0E0C               	movlw	12
  8793  0040A6  6E1E               	movwf	cmd@command,c
  8794  0040A8  0EFF               	movlw	255
  8795  0040AA  6E1F               	movwf	cmd@command+1,c
  8796  0040AC  0EFF               	movlw	255
  8797  0040AE  6E20               	movwf	cmd@command+2,c
  8798  0040B0  0EFF               	movlw	255
  8799  0040B2  6E21               	movwf	cmd@command+3,c
  8800  0040B4  EC06  F031         	call	_cmd	;wreg free
  8801  0040B8  C04A  F025         	movff	_cmd_offset,??_display_labels
  8802  0040BC  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8803  0040C0  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8804  0040C2  0E00               	movlw	0
  8805  0040C4  2425               	addwf	??_display_labels,w,c
  8806  0040C6  6E11               	movwf	wr16@addr,c
  8807  0040C8  0E80               	movlw	128
  8808  0040CA  2026               	addwfc	??_display_labels+1,w,c
  8809  0040CC  6E12               	movwf	wr16@addr+1,c
  8810  0040CE  0E10               	movlw	16
  8811  0040D0  2027               	addwfc	??_display_labels+2,w,c
  8812  0040D2  6E13               	movwf	wr16@addr+2,c
  8813  0040D4  0E01               	movlw	1
  8814  0040D6  6E15               	movwf	wr16@value+1,c
  8815  0040D8  0ECB               	movlw	203
  8816  0040DA  6E14               	movwf	wr16@value,c
  8817  0040DC  ECCB  F030         	call	_wr16	;wreg free
  8818  0040E0  0E02               	movlw	2
  8819  0040E2  ECBC  F031         	call	_cmd_incrementn
  8820  0040E6  C04A  F025         	movff	_cmd_offset,??_display_labels
  8821  0040EA  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8822  0040EE  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8823  0040F0  0E00               	movlw	0
  8824  0040F2  2425               	addwf	??_display_labels,w,c
  8825  0040F4  6E11               	movwf	wr16@addr,c
  8826  0040F6  0E80               	movlw	128
  8827  0040F8  2026               	addwfc	??_display_labels+1,w,c
  8828  0040FA  6E12               	movwf	wr16@addr+1,c
  8829  0040FC  0E10               	movlw	16
  8830  0040FE  2027               	addwfc	??_display_labels+2,w,c
  8831  004100  6E13               	movwf	wr16@addr+2,c
  8832  004102  0E00               	movlw	0
  8833  004104  6E15               	movwf	wr16@value+1,c
  8834  004106  0EAE               	movlw	174
  8835  004108  6E14               	movwf	wr16@value,c
  8836  00410A  ECCB  F030         	call	_wr16	;wreg free
  8837  00410E  0E02               	movlw	2
  8838  004110  ECBC  F031         	call	_cmd_incrementn
  8839  004114  C04A  F025         	movff	_cmd_offset,??_display_labels
  8840  004118  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8841  00411C  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8842  00411E  0E00               	movlw	0
  8843  004120  2425               	addwf	??_display_labels,w,c
  8844  004122  6E11               	movwf	wr16@addr,c
  8845  004124  0E80               	movlw	128
  8846  004126  2026               	addwfc	??_display_labels+1,w,c
  8847  004128  6E12               	movwf	wr16@addr+1,c
  8848  00412A  0E10               	movlw	16
  8849  00412C  2027               	addwfc	??_display_labels+2,w,c
  8850  00412E  6E13               	movwf	wr16@addr+2,c
  8851  004130  0E00               	movlw	0
  8852  004132  6E15               	movwf	wr16@value+1,c
  8853  004134  0E1C               	movlw	28
  8854  004136  6E14               	movwf	wr16@value,c
  8855  004138  ECCB  F030         	call	_wr16	;wreg free
  8856  00413C  0E02               	movlw	2
  8857  00413E  ECBC  F031         	call	_cmd_incrementn
  8858  004142  C04A  F025         	movff	_cmd_offset,??_display_labels
  8859  004146  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8860  00414A  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8861  00414C  0E00               	movlw	0
  8862  00414E  2425               	addwf	??_display_labels,w,c
  8863  004150  6E11               	movwf	wr16@addr,c
  8864  004152  0E80               	movlw	128
  8865  004154  2026               	addwfc	??_display_labels+1,w,c
  8866  004156  6E12               	movwf	wr16@addr+1,c
  8867  004158  0E10               	movlw	16
  8868  00415A  2027               	addwfc	??_display_labels+2,w,c
  8869  00415C  6E13               	movwf	wr16@addr+2,c
  8870  00415E  0E00               	movlw	0
  8871  004160  6E15               	movwf	wr16@value+1,c
  8872  004162  0E00               	movlw	0
  8873  004164  6E14               	movwf	wr16@value,c
  8874  004166  ECCB  F030         	call	_wr16	;wreg free
  8875  00416A  0E02               	movlw	2
  8876  00416C  ECBC  F031         	call	_cmd_incrementn
  8877  004170  C04A  F025         	movff	_cmd_offset,??_display_labels
  8878  004174  C04B  F026         	movff	_cmd_offset+1,??_display_labels+1
  8879  004178  6A27               	clrf	(??_display_labels+2)& (0+255),c
  8880  00417A  0E00               	movlw	0
  8881  00417C  2425               	addwf	??_display_labels,w,c
  8882  00417E  6E16               	movwf	wr8s@addr,c
  8883  004180  0E80               	movlw	128
  8884  004182  2026               	addwfc	??_display_labels+1,w,c
  8885  004184  6E17               	movwf	wr8s@addr+1,c
  8886  004186  0E10               	movlw	16
  8887  004188  2027               	addwfc	??_display_labels+2,w,c
  8888  00418A  6E18               	movwf	wr8s@addr+2,c
  8889  00418C  0E75               	movlw	low STR_15
  8890  00418E  6E19               	movwf	wr8s@s,c
  8891  004190  0E0F               	movlw	high STR_15
  8892  004192  6E1A               	movwf	wr8s@s+1,c
  8893  004194  EC81  F02E         	call	_wr8s	;wreg free
  8894  004198  ECBC  F031         	call	_cmd_incrementn
  8895                           
  8896                           ;display.c: 53: cmd(((31UL<<24)|(((2UL)&15UL)<<0)));
  8897  00419C  0E02               	movlw	2
  8898  00419E  6E1E               	movwf	cmd@command,c
  8899  0041A0  0E00               	movlw	0
  8900  0041A2  6E1F               	movwf	cmd@command+1,c
  8901  0041A4  0E00               	movlw	0
  8902  0041A6  6E20               	movwf	cmd@command+2,c
  8903  0041A8  0E1F               	movlw	31
  8904  0041AA  6E21               	movwf	cmd@command+3,c
  8905  0041AC  EC06  F031         	call	_cmd	;wreg free
  8906                           
  8907                           ;display.c: 54: cmd(((4UL<<24)|(((20)&255UL)<<16)|(((20)&255UL)<<8)|(((20)&255UL)<<0)));
  8908  0041B0  0E14               	movlw	20
  8909  0041B2  6E1E               	movwf	cmd@command,c
  8910  0041B4  0E14               	movlw	20
  8911  0041B6  6E1F               	movwf	cmd@command+1,c
  8912  0041B8  0E14               	movlw	20
  8913  0041BA  6E20               	movwf	cmd@command+2,c
  8914  0041BC  0E04               	movlw	4
  8915  0041BE  6E21               	movwf	cmd@command+3,c
  8916  0041C0  EC06  F031         	call	_cmd	;wreg free
  8917                           
  8918                           ;display.c: 55: cmd(((13UL<<24)|(((1750)&8191UL)<<0)));
  8919  0041C4  0ED6               	movlw	214
  8920  0041C6  6E1E               	movwf	cmd@command,c
  8921  0041C8  0E06               	movlw	6
  8922  0041CA  6E1F               	movwf	cmd@command+1,c
  8923  0041CC  0E00               	movlw	0
  8924  0041CE  6E20               	movwf	cmd@command+2,c
  8925  0041D0  0E0D               	movlw	13
  8926  0041D2  6E21               	movwf	cmd@command+3,c
  8927  0041D4  EC06  F031         	call	_cmd	;wreg free
  8928                           
  8929                           ;display.c: 56: cmd(((2UL<<30)|(((240)&511UL)<<21)|(((115)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  8930  0041D8  0E00               	movlw	0
  8931  0041DA  6E1E               	movwf	cmd@command,c
  8932  0041DC  0E30               	movlw	48
  8933  0041DE  6E1F               	movwf	cmd@command+1,c
  8934  0041E0  0E07               	movlw	7
  8935  0041E2  6E20               	movwf	cmd@command+2,c
  8936  0041E4  0E9E               	movlw	158
  8937  0041E6  6E21               	movwf	cmd@command+3,c
  8938  0041E8  EC06  F031         	call	_cmd	;wreg free
  8939                           
  8940                           ;display.c: 57: cmd(((4UL<<24)|(((60)&255UL)<<16)|(((60)&255UL)<<8)|(((60)&255UL)<<0)));
  8941  0041EC  0E3C               	movlw	60
  8942  0041EE  6E1E               	movwf	cmd@command,c
  8943  0041F0  0E3C               	movlw	60
  8944  0041F2  6E1F               	movwf	cmd@command+1,c
  8945  0041F4  0E3C               	movlw	60
  8946  0041F6  6E20               	movwf	cmd@command+2,c
  8947  0041F8  0E04               	movlw	4
  8948  0041FA  6E21               	movwf	cmd@command+3,c
  8949  0041FC  EC06  F031         	call	_cmd	;wreg free
  8950                           
  8951                           ;display.c: 58: cmd(((13UL<<24)|(((1650)&8191UL)<<0)));
  8952  004200  0E72               	movlw	114
  8953  004202  6E1E               	movwf	cmd@command,c
  8954  004204  0E06               	movlw	6
  8955  004206  6E1F               	movwf	cmd@command+1,c
  8956  004208  0E00               	movlw	0
  8957  00420A  6E20               	movwf	cmd@command+2,c
  8958  00420C  0E0D               	movlw	13
  8959  00420E  6E21               	movwf	cmd@command+3,c
  8960  004210  EC06  F031         	call	_cmd	;wreg free
  8961                           
  8962                           ;display.c: 59: cmd(((2UL<<30)|(((240)&511UL)<<21)|(((115)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
  8963  004214  0E00               	movlw	0
  8964  004216  6E1E               	movwf	cmd@command,c
  8965  004218  0E30               	movlw	48
  8966  00421A  6E1F               	movwf	cmd@command+1,c
  8967  00421C  0E07               	movlw	7
  8968  00421E  6E20               	movwf	cmd@command+2,c
  8969  004220  0E9E               	movlw	158
  8970  004222  6E21               	movwf	cmd@command+3,c
  8971  004224  EC06  F031         	call	_cmd	;wreg free
  8972  004228  0012               	return		;funcret
  8973  00422A                     __end_of_display_labels:
  8974                           	opt stack 0
  8975                           tblptru	equ	0xFF8
  8976                           tblptrh	equ	0xFF7
  8977                           tblptrl	equ	0xFF6
  8978                           tablat	equ	0xFF5
  8979                           prodh	equ	0xFF4
  8980                           prodl	equ	0xFF3
  8981                           intcon	equ	0xFF2
  8982                           postinc0	equ	0xFEE
  8983                           wreg	equ	0xFE8
  8984                           postdec1	equ	0xFE5
  8985                           plusw1	equ	0xFE3
  8986                           fsr1l	equ	0xFE1
  8987                           plusw2	equ	0xFDB
  8988                           status	equ	0xFD8
  8989                           
  8990 ;; *************** function _display_gear *****************
  8991 ;; Defined at:
  8992 ;;		line 186 in file "display.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  gear            2   36[COMRAM] int 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;Total ram usage:        4 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    6
  9013 ;; This function calls:
  9014 ;;		_cmd
  9015 ;; This function is called by:
  9016 ;;		_display
  9017 ;;		_main
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text14
  9022  004776                     __ptext14:
  9023                           	opt stack 0
  9024  004776                     _display_gear:
  9025                           	opt stack 24
  9026                           
  9027                           ;display.c: 187: cmd(((14UL<<24)|(((96)&4095UL)<<0)));
  9028                           
  9029                           ;incstack = 0
  9030  004776  0E60               	movlw	96
  9031  004778  6E1E               	movwf	cmd@command,c
  9032  00477A  0E00               	movlw	0
  9033  00477C  6E1F               	movwf	cmd@command+1,c
  9034  00477E  0E00               	movlw	0
  9035  004780  6E20               	movwf	cmd@command+2,c
  9036  004782  0E0E               	movlw	14
  9037  004784  6E21               	movwf	cmd@command+3,c
  9038  004786  EC06  F031         	call	_cmd	;wreg free
  9039                           
  9040                           ;display.c: 188: cmd(((4UL<<24)|(((202)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<<0))
      +                          );
  9041  00478A  0E00               	movlw	0
  9042  00478C  6E1E               	movwf	cmd@command,c
  9043  00478E  0E7D               	movlw	125
  9044  004790  6E1F               	movwf	cmd@command+1,c
  9045  004792  0ECA               	movlw	202
  9046  004794  6E20               	movwf	cmd@command+2,c
  9047  004796  0E04               	movlw	4
  9048  004798  6E21               	movwf	cmd@command+3,c
  9049  00479A  EC06  F031         	call	_cmd	;wreg free
  9050                           
  9051                           ;display.c: 189: cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
  9052  00479E  0E03               	movlw	3
  9053  0047A0  6E1E               	movwf	cmd@command,c
  9054  0047A2  0E00               	movlw	0
  9055  0047A4  6E1F               	movwf	cmd@command+1,c
  9056  0047A6  0E00               	movlw	0
  9057  0047A8  6E20               	movwf	cmd@command+2,c
  9058  0047AA  0E1F               	movlw	31
  9059  0047AC  6E21               	movwf	cmd@command+3,c
  9060  0047AE  EC06  F031         	call	_cmd	;wreg free
  9061                           
  9062                           ;display.c: 190: switch (gear) {
  9063  0047B2  D237               	goto	l4041
  9064  0047B4                     l4025:
  9065                           
  9066                           ;display.c: 192: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9067  0047B4  0E00               	movlw	0
  9068  0047B6  6E1E               	movwf	cmd@command,c
  9069  0047B8  0EF0               	movlw	240
  9070  0047BA  6E1F               	movwf	cmd@command+1,c
  9071  0047BC  0E80               	movlw	128
  9072  0047BE  6E20               	movwf	cmd@command+2,c
  9073  0047C0  0EAF               	movlw	175
  9074  0047C2  6E21               	movwf	cmd@command+3,c
  9075  0047C4  EC06  F031         	call	_cmd	;wreg free
  9076                           
  9077                           ;display.c: 193: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  9078  0047C8  0E00               	movlw	0
  9079  0047CA  6E1E               	movwf	cmd@command,c
  9080  0047CC  0E30               	movlw	48
  9081  0047CE  6E1F               	movwf	cmd@command+1,c
  9082  0047D0  0E87               	movlw	135
  9083  0047D2  6E20               	movwf	cmd@command+2,c
  9084  0047D4  0EAF               	movlw	175
  9085  0047D6  6E21               	movwf	cmd@command+3,c
  9086  0047D8  EC06  F031         	call	_cmd	;wreg free
  9087                           
  9088                           ;display.c: 194: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9089  0047DC  0E00               	movlw	0
  9090  0047DE  6E1E               	movwf	cmd@command,c
  9091  0047E0  0EF0               	movlw	240
  9092  0047E2  6E1F               	movwf	cmd@command+1,c
  9093  0047E4  0E80               	movlw	128
  9094  0047E6  6E20               	movwf	cmd@command+2,c
  9095  0047E8  0EAF               	movlw	175
  9096  0047EA  6E21               	movwf	cmd@command+3,c
  9097  0047EC  EC06  F031         	call	_cmd	;wreg free
  9098                           
  9099                           ;display.c: 195: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9100  0047F0  0E00               	movlw	0
  9101  0047F2  6E1E               	movwf	cmd@command,c
  9102  0047F4  0E30               	movlw	48
  9103  0047F6  6E1F               	movwf	cmd@command+1,c
  9104  0047F8  0E87               	movlw	135
  9105  0047FA  6E20               	movwf	cmd@command+2,c
  9106  0047FC  0EB9               	movlw	185
  9107  0047FE  6E21               	movwf	cmd@command+3,c
  9108  004800  EC06  F031         	call	_cmd	;wreg free
  9109                           
  9110                           ;display.c: 196: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9111  004804  0E00               	movlw	0
  9112  004806  6E1E               	movwf	cmd@command,c
  9113  004808  0E40               	movlw	64
  9114  00480A  6E1F               	movwf	cmd@command+1,c
  9115  00480C  0E87               	movlw	135
  9116  00480E  6E20               	movwf	cmd@command+2,c
  9117  004810  0EB9               	movlw	185
  9118  004812  6E21               	movwf	cmd@command+3,c
  9119  004814  EC06  F031         	call	_cmd	;wreg free
  9120                           
  9121                           ;display.c: 197: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9122  004818  0E00               	movlw	0
  9123  00481A  6E1E               	movwf	cmd@command,c
  9124  00481C  0EF0               	movlw	240
  9125  00481E  6E1F               	movwf	cmd@command+1,c
  9126  004820  0E80               	movlw	128
  9127  004822  6E20               	movwf	cmd@command+2,c
  9128  004824  0EB9               	movlw	185
  9129  004826  6E21               	movwf	cmd@command+3,c
  9130  004828  EC06  F031         	call	_cmd	;wreg free
  9131                           
  9132                           ;display.c: 198: break;
  9133  00482C  0012               	return	
  9134  00482E                     l4027:
  9135                           
  9136                           ;display.c: 200: cmd(((2UL<<30)|(((380+40)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9137  00482E  0E00               	movlw	0
  9138  004830  6E1E               	movwf	cmd@command,c
  9139  004832  0EF0               	movlw	240
  9140  004834  6E1F               	movwf	cmd@command+1,c
  9141  004836  0E80               	movlw	128
  9142  004838  6E20               	movwf	cmd@command+2,c
  9143  00483A  0EB4               	movlw	180
  9144  00483C  6E21               	movwf	cmd@command+3,c
  9145  00483E  EC06  F031         	call	_cmd	;wreg free
  9146                           
  9147                           ;display.c: 201: cmd(((2UL<<30)|(((380+40)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9148  004842  0E00               	movlw	0
  9149  004844  6E1E               	movwf	cmd@command,c
  9150  004846  0E30               	movlw	48
  9151  004848  6E1F               	movwf	cmd@command+1,c
  9152  00484A  0E87               	movlw	135
  9153  00484C  6E20               	movwf	cmd@command+2,c
  9154  00484E  0EB4               	movlw	180
  9155  004850  6E21               	movwf	cmd@command+3,c
  9156  004852  EC06  F031         	call	_cmd	;wreg free
  9157                           
  9158                           ;display.c: 202: cmd(((2UL<<30)|(((380+39)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9159  004856  0E00               	movlw	0
  9160  004858  6E1E               	movwf	cmd@command,c
  9161  00485A  0EF0               	movlw	240
  9162  00485C  6E1F               	movwf	cmd@command+1,c
  9163  00485E  0E60               	movlw	96
  9164  004860  6E20               	movwf	cmd@command+2,c
  9165  004862  0EB4               	movlw	180
  9166  004864  6E21               	movwf	cmd@command+3,c
  9167  004866  EC06  F031         	call	_cmd	;wreg free
  9168                           
  9169                           ;display.c: 203: cmd(((2UL<<30)|(((380+20)&511UL)<<21)|(((0+30)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9170  00486A  0E00               	movlw	0
  9171  00486C  6E1E               	movwf	cmd@command,c
  9172  00486E  0EE0               	movlw	224
  9173  004870  6E1F               	movwf	cmd@command+1,c
  9174  004872  0E01               	movlw	1
  9175  004874  6E20               	movwf	cmd@command+2,c
  9176  004876  0EB2               	movlw	178
  9177  004878  6E21               	movwf	cmd@command+3,c
  9178  00487A  EC06  F031         	call	_cmd	;wreg free
  9179                           
  9180                           ;display.c: 204: cmd(((2UL<<30)|(((380+25)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9181  00487E  0E00               	movlw	0
  9182  004880  6E1E               	movwf	cmd@command,c
  9183  004882  0E40               	movlw	64
  9184  004884  6E1F               	movwf	cmd@command+1,c
  9185  004886  0EA7               	movlw	167
  9186  004888  6E20               	movwf	cmd@command+2,c
  9187  00488A  0EB2               	movlw	178
  9188  00488C  6E21               	movwf	cmd@command+3,c
  9189  00488E  EC06  F031         	call	_cmd	;wreg free
  9190                           
  9191                           ;display.c: 205: cmd(((2UL<<30)|(((380+55)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9192  004892  0E00               	movlw	0
  9193  004894  6E1E               	movwf	cmd@command,c
  9194  004896  0E40               	movlw	64
  9195  004898  6E1F               	movwf	cmd@command+1,c
  9196  00489A  0E67               	movlw	103
  9197  00489C  6E20               	movwf	cmd@command+2,c
  9198  00489E  0EB6               	movlw	182
  9199  0048A0  6E21               	movwf	cmd@command+3,c
  9200  0048A2  EC06  F031         	call	_cmd	;wreg free
  9201                           
  9202                           ;display.c: 206: break;
  9203  0048A6  0012               	return	
  9204  0048A8                     l4029:
  9205                           
  9206                           ;display.c: 208: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9207  0048A8  0E00               	movlw	0
  9208  0048AA  6E1E               	movwf	cmd@command,c
  9209  0048AC  0EF0               	movlw	240
  9210  0048AE  6E1F               	movwf	cmd@command+1,c
  9211  0048B0  0E80               	movlw	128
  9212  0048B2  6E20               	movwf	cmd@command+2,c
  9213  0048B4  0EAF               	movlw	175
  9214  0048B6  6E21               	movwf	cmd@command+3,c
  9215  0048B8  EC06  F031         	call	_cmd	;wreg free
  9216                           
  9217                           ;display.c: 209: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9218  0048BC  0E00               	movlw	0
  9219  0048BE  6E1E               	movwf	cmd@command,c
  9220  0048C0  0EF0               	movlw	240
  9221  0048C2  6E1F               	movwf	cmd@command+1,c
  9222  0048C4  0E80               	movlw	128
  9223  0048C6  6E20               	movwf	cmd@command+2,c
  9224  0048C8  0EB9               	movlw	185
  9225  0048CA  6E21               	movwf	cmd@command+3,c
  9226  0048CC  EC06  F031         	call	_cmd	;wreg free
  9227                           
  9228                           ;display.c: 210: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9229  0048D0  0E00               	movlw	0
  9230  0048D2  6E1E               	movwf	cmd@command,c
  9231  0048D4  0E00               	movlw	0
  9232  0048D6  6E1F               	movwf	cmd@command+1,c
  9233  0048D8  0E81               	movlw	129
  9234  0048DA  6E20               	movwf	cmd@command+2,c
  9235  0048DC  0EB9               	movlw	185
  9236  0048DE  6E21               	movwf	cmd@command+3,c
  9237  0048E0  EC06  F031         	call	_cmd	;wreg free
  9238                           
  9239                           ;display.c: 211: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9240  0048E4  0E00               	movlw	0
  9241  0048E6  6E1E               	movwf	cmd@command,c
  9242  0048E8  0E00               	movlw	0
  9243  0048EA  6E1F               	movwf	cmd@command+1,c
  9244  0048EC  0E84               	movlw	132
  9245  0048EE  6E20               	movwf	cmd@command+2,c
  9246  0048F0  0EB9               	movlw	185
  9247  0048F2  6E21               	movwf	cmd@command+3,c
  9248  0048F4  EC06  F031         	call	_cmd	;wreg free
  9249                           
  9250                           ;display.c: 212: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9251  0048F8  0E00               	movlw	0
  9252  0048FA  6E1E               	movwf	cmd@command,c
  9253  0048FC  0E10               	movlw	16
  9254  0048FE  6E1F               	movwf	cmd@command+1,c
  9255  004900  0E84               	movlw	132
  9256  004902  6E20               	movwf	cmd@command+2,c
  9257  004904  0EB9               	movlw	185
  9258  004906  6E21               	movwf	cmd@command+3,c
  9259  004908  EC06  F031         	call	_cmd	;wreg free
  9260                           
  9261                           ;display.c: 213: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9262  00490C  0E00               	movlw	0
  9263  00490E  6E1E               	movwf	cmd@command,c
  9264  004910  0E10               	movlw	16
  9265  004912  6E1F               	movwf	cmd@command+1,c
  9266  004914  0E84               	movlw	132
  9267  004916  6E20               	movwf	cmd@command+2,c
  9268  004918  0EAF               	movlw	175
  9269  00491A  6E21               	movwf	cmd@command+3,c
  9270  00491C  EC06  F031         	call	_cmd	;wreg free
  9271                           
  9272                           ;display.c: 214: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+66)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9273  004920  0E00               	movlw	0
  9274  004922  6E1E               	movwf	cmd@command,c
  9275  004924  0E20               	movlw	32
  9276  004926  6E1F               	movwf	cmd@command+1,c
  9277  004928  0E84               	movlw	132
  9278  00492A  6E20               	movwf	cmd@command+2,c
  9279  00492C  0EAF               	movlw	175
  9280  00492E  6E21               	movwf	cmd@command+3,c
  9281  004930  EC06  F031         	call	_cmd	;wreg free
  9282                           
  9283                           ;display.c: 215: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  9284  004934  0E00               	movlw	0
  9285  004936  6E1E               	movwf	cmd@command,c
  9286  004938  0E30               	movlw	48
  9287  00493A  6E1F               	movwf	cmd@command+1,c
  9288  00493C  0E87               	movlw	135
  9289  00493E  6E20               	movwf	cmd@command+2,c
  9290  004940  0EAF               	movlw	175
  9291  004942  6E21               	movwf	cmd@command+3,c
  9292  004944  EC06  F031         	call	_cmd	;wreg free
  9293                           
  9294                           ;display.c: 216: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9295  004948  0E00               	movlw	0
  9296  00494A  6E1E               	movwf	cmd@command,c
  9297  00494C  0E30               	movlw	48
  9298  00494E  6E1F               	movwf	cmd@command+1,c
  9299  004950  0EA7               	movlw	167
  9300  004952  6E20               	movwf	cmd@command+2,c
  9301  004954  0EAF               	movlw	175
  9302  004956  6E21               	movwf	cmd@command+3,c
  9303  004958  EC06  F031         	call	_cmd	;wreg free
  9304                           
  9305                           ;display.c: 217: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9306  00495C  0E00               	movlw	0
  9307  00495E  6E1E               	movwf	cmd@command,c
  9308  004960  0E30               	movlw	48
  9309  004962  6E1F               	movwf	cmd@command+1,c
  9310  004964  0E87               	movlw	135
  9311  004966  6E20               	movwf	cmd@command+2,c
  9312  004968  0EB9               	movlw	185
  9313  00496A  6E21               	movwf	cmd@command+3,c
  9314  00496C  EC06  F031         	call	_cmd	;wreg free
  9315                           
  9316                           ;display.c: 218: break;
  9317  004970  0012               	return	
  9318  004972                     l4031:
  9319                           
  9320                           ;display.c: 220: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9321  004972  0E00               	movlw	0
  9322  004974  6E1E               	movwf	cmd@command,c
  9323  004976  0EF0               	movlw	240
  9324  004978  6E1F               	movwf	cmd@command+1,c
  9325  00497A  0E80               	movlw	128
  9326  00497C  6E20               	movwf	cmd@command+2,c
  9327  00497E  0EAF               	movlw	175
  9328  004980  6E21               	movwf	cmd@command+3,c
  9329  004982  EC06  F031         	call	_cmd	;wreg free
  9330                           
  9331                           ;display.c: 221: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9332  004986  0E00               	movlw	0
  9333  004988  6E1E               	movwf	cmd@command,c
  9334  00498A  0EF0               	movlw	240
  9335  00498C  6E1F               	movwf	cmd@command+1,c
  9336  00498E  0E60               	movlw	96
  9337  004990  6E20               	movwf	cmd@command+2,c
  9338  004992  0EB9               	movlw	185
  9339  004994  6E21               	movwf	cmd@command+3,c
  9340  004996  EC06  F031         	call	_cmd	;wreg free
  9341                           
  9342                           ;display.c: 222: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9343  00499A  0E00               	movlw	0
  9344  00499C  6E1E               	movwf	cmd@command,c
  9345  00499E  0E00               	movlw	0
  9346  0049A0  6E1F               	movwf	cmd@command+1,c
  9347  0049A2  0E81               	movlw	129
  9348  0049A4  6E20               	movwf	cmd@command+2,c
  9349  0049A6  0EB9               	movlw	185
  9350  0049A8  6E21               	movwf	cmd@command+3,c
  9351  0049AA  EC06  F031         	call	_cmd	;wreg free
  9352                           
  9353                           ;display.c: 223: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9354  0049AE  0E00               	movlw	0
  9355  0049B0  6E1E               	movwf	cmd@command,c
  9356  0049B2  0E30               	movlw	48
  9357  0049B4  6E1F               	movwf	cmd@command+1,c
  9358  0049B6  0E87               	movlw	135
  9359  0049B8  6E20               	movwf	cmd@command+2,c
  9360  0049BA  0EB9               	movlw	185
  9361  0049BC  6E21               	movwf	cmd@command+3,c
  9362  0049BE  EC06  F031         	call	_cmd	;wreg free
  9363                           
  9364                           ;display.c: 224: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9365  0049C2  0E00               	movlw	0
  9366  0049C4  6E1E               	movwf	cmd@command,c
  9367  0049C6  0E10               	movlw	16
  9368  0049C8  6E1F               	movwf	cmd@command+1,c
  9369  0049CA  0E64               	movlw	100
  9370  0049CC  6E20               	movwf	cmd@command+2,c
  9371  0049CE  0EB9               	movlw	185
  9372  0049D0  6E21               	movwf	cmd@command+3,c
  9373  0049D2  EC06  F031         	call	_cmd	;wreg free
  9374                           
  9375                           ;display.c: 225: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9376  0049D6  0E00               	movlw	0
  9377  0049D8  6E1E               	movwf	cmd@command,c
  9378  0049DA  0E10               	movlw	16
  9379  0049DC  6E1F               	movwf	cmd@command+1,c
  9380  0049DE  0E84               	movlw	132
  9381  0049E0  6E20               	movwf	cmd@command+2,c
  9382  0049E2  0EAF               	movlw	175
  9383  0049E4  6E21               	movwf	cmd@command+3,c
  9384  0049E6  EC06  F031         	call	_cmd	;wreg free
  9385                           
  9386                           ;display.c: 226: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9387  0049EA  0E00               	movlw	0
  9388  0049EC  6E1E               	movwf	cmd@command,c
  9389  0049EE  0E30               	movlw	48
  9390  0049F0  6E1F               	movwf	cmd@command+1,c
  9391  0049F2  0EA7               	movlw	167
  9392  0049F4  6E20               	movwf	cmd@command+2,c
  9393  0049F6  0EAF               	movlw	175
  9394  0049F8  6E21               	movwf	cmd@command+3,c
  9395  0049FA  EC06  F031         	call	_cmd	;wreg free
  9396                           
  9397                           ;display.c: 227: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9398  0049FE  0E00               	movlw	0
  9399  004A00  6E1E               	movwf	cmd@command,c
  9400  004A02  0E30               	movlw	48
  9401  004A04  6E1F               	movwf	cmd@command+1,c
  9402  004A06  0E67               	movlw	103
  9403  004A08  6E20               	movwf	cmd@command+2,c
  9404  004A0A  0EB9               	movlw	185
  9405  004A0C  6E21               	movwf	cmd@command+3,c
  9406  004A0E  EC06  F031         	call	_cmd	;wreg free
  9407                           
  9408                           ;display.c: 228: break;
  9409  004A12  0012               	return	
  9410  004A14                     l4033:
  9411                           
  9412                           ;display.c: 230: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9413  004A14  0E00               	movlw	0
  9414  004A16  6E1E               	movwf	cmd@command,c
  9415  004A18  0EF0               	movlw	240
  9416  004A1A  6E1F               	movwf	cmd@command+1,c
  9417  004A1C  0E80               	movlw	128
  9418  004A1E  6E20               	movwf	cmd@command+2,c
  9419  004A20  0EAF               	movlw	175
  9420  004A22  6E21               	movwf	cmd@command+3,c
  9421  004A24  EC06  F031         	call	_cmd	;wreg free
  9422                           
  9423                           ;display.c: 231: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9424  004A28  0E00               	movlw	0
  9425  004A2A  6E1E               	movwf	cmd@command,c
  9426  004A2C  0E00               	movlw	0
  9427  004A2E  6E1F               	movwf	cmd@command+1,c
  9428  004A30  0E84               	movlw	132
  9429  004A32  6E20               	movwf	cmd@command+2,c
  9430  004A34  0EAF               	movlw	175
  9431  004A36  6E21               	movwf	cmd@command+3,c
  9432  004A38  EC06  F031         	call	_cmd	;wreg free
  9433                           
  9434                           ;display.c: 232: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9435  004A3C  0E00               	movlw	0
  9436  004A3E  6E1E               	movwf	cmd@command,c
  9437  004A40  0E00               	movlw	0
  9438  004A42  6E1F               	movwf	cmd@command+1,c
  9439  004A44  0E81               	movlw	129
  9440  004A46  6E20               	movwf	cmd@command+2,c
  9441  004A48  0EB9               	movlw	185
  9442  004A4A  6E21               	movwf	cmd@command+3,c
  9443  004A4C  EC06  F031         	call	_cmd	;wreg free
  9444                           
  9445                           ;display.c: 233: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9446  004A50  0E00               	movlw	0
  9447  004A52  6E1E               	movwf	cmd@command,c
  9448  004A54  0E30               	movlw	48
  9449  004A56  6E1F               	movwf	cmd@command+1,c
  9450  004A58  0E87               	movlw	135
  9451  004A5A  6E20               	movwf	cmd@command+2,c
  9452  004A5C  0EB9               	movlw	185
  9453  004A5E  6E21               	movwf	cmd@command+3,c
  9454  004A60  EC06  F031         	call	_cmd	;wreg free
  9455                           
  9456                           ;display.c: 234: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9457  004A64  0E00               	movlw	0
  9458  004A66  6E1E               	movwf	cmd@command,c
  9459  004A68  0E10               	movlw	16
  9460  004A6A  6E1F               	movwf	cmd@command+1,c
  9461  004A6C  0E24               	movlw	36
  9462  004A6E  6E20               	movwf	cmd@command+2,c
  9463  004A70  0EB9               	movlw	185
  9464  004A72  6E21               	movwf	cmd@command+3,c
  9465  004A74  EC06  F031         	call	_cmd	;wreg free
  9466                           
  9467                           ;display.c: 235: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  9468  004A78  0E00               	movlw	0
  9469  004A7A  6E1E               	movwf	cmd@command,c
  9470  004A7C  0E10               	movlw	16
  9471  004A7E  6E1F               	movwf	cmd@command+1,c
  9472  004A80  0EA4               	movlw	164
  9473  004A82  6E20               	movwf	cmd@command+2,c
  9474  004A84  0EAF               	movlw	175
  9475  004A86  6E21               	movwf	cmd@command+3,c
  9476  004A88  EC06  F031         	call	_cmd	;wreg free
  9477                           
  9478                           ;display.c: 236: break;
  9479  004A8C  0012               	return	
  9480  004A8E                     l4035:
  9481                           
  9482                           ;display.c: 238: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9483  004A8E  0E00               	movlw	0
  9484  004A90  6E1E               	movwf	cmd@command,c
  9485  004A92  0EF0               	movlw	240
  9486  004A94  6E1F               	movwf	cmd@command+1,c
  9487  004A96  0E80               	movlw	128
  9488  004A98  6E20               	movwf	cmd@command+2,c
  9489  004A9A  0EAF               	movlw	175
  9490  004A9C  6E21               	movwf	cmd@command+3,c
  9491  004A9E  EC06  F031         	call	_cmd	;wreg free
  9492                           
  9493                           ;display.c: 239: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9494  004AA2  0E00               	movlw	0
  9495  004AA4  6E1E               	movwf	cmd@command,c
  9496  004AA6  0EF0               	movlw	240
  9497  004AA8  6E1F               	movwf	cmd@command+1,c
  9498  004AAA  0E60               	movlw	96
  9499  004AAC  6E20               	movwf	cmd@command+2,c
  9500  004AAE  0EB9               	movlw	185
  9501  004AB0  6E21               	movwf	cmd@command+3,c
  9502  004AB2  EC06  F031         	call	_cmd	;wreg free
  9503                           
  9504                           ;display.c: 240: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9505  004AB6  0E00               	movlw	0
  9506  004AB8  6E1E               	movwf	cmd@command,c
  9507  004ABA  0E00               	movlw	0
  9508  004ABC  6E1F               	movwf	cmd@command+1,c
  9509  004ABE  0E81               	movlw	129
  9510  004AC0  6E20               	movwf	cmd@command+2,c
  9511  004AC2  0EAF               	movlw	175
  9512  004AC4  6E21               	movwf	cmd@command+3,c
  9513  004AC6  EC06  F031         	call	_cmd	;wreg free
  9514                           
  9515                           ;display.c: 241: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9516  004ACA  0E00               	movlw	0
  9517  004ACC  6E1E               	movwf	cmd@command,c
  9518  004ACE  0E00               	movlw	0
  9519  004AD0  6E1F               	movwf	cmd@command+1,c
  9520  004AD2  0E84               	movlw	132
  9521  004AD4  6E20               	movwf	cmd@command+2,c
  9522  004AD6  0EAF               	movlw	175
  9523  004AD8  6E21               	movwf	cmd@command+3,c
  9524  004ADA  EC06  F031         	call	_cmd	;wreg free
  9525                           
  9526                           ;display.c: 242: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9527  004ADE  0E00               	movlw	0
  9528  004AE0  6E1E               	movwf	cmd@command,c
  9529  004AE2  0E10               	movlw	16
  9530  004AE4  6E1F               	movwf	cmd@command+1,c
  9531  004AE6  0E84               	movlw	132
  9532  004AE8  6E20               	movwf	cmd@command+2,c
  9533  004AEA  0EB9               	movlw	185
  9534  004AEC  6E21               	movwf	cmd@command+3,c
  9535  004AEE  EC06  F031         	call	_cmd	;wreg free
  9536                           
  9537                           ;display.c: 243: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+114)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9538  004AF2  0E00               	movlw	0
  9539  004AF4  6E1E               	movwf	cmd@command,c
  9540  004AF6  0E20               	movlw	32
  9541  004AF8  6E1F               	movwf	cmd@command+1,c
  9542  004AFA  0E87               	movlw	135
  9543  004AFC  6E20               	movwf	cmd@command+2,c
  9544  004AFE  0EB9               	movlw	185
  9545  004B00  6E21               	movwf	cmd@command+3,c
  9546  004B02  EC06  F031         	call	_cmd	;wreg free
  9547                           
  9548                           ;display.c: 244: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9549  004B06  0E00               	movlw	0
  9550  004B08  6E1E               	movwf	cmd@command,c
  9551  004B0A  0E10               	movlw	16
  9552  004B0C  6E1F               	movwf	cmd@command+1,c
  9553  004B0E  0E24               	movlw	36
  9554  004B10  6E20               	movwf	cmd@command+2,c
  9555  004B12  0EB9               	movlw	185
  9556  004B14  6E21               	movwf	cmd@command+3,c
  9557  004B16  EC06  F031         	call	_cmd	;wreg free
  9558                           
  9559                           ;display.c: 245: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  9560  004B1A  0E00               	movlw	0
  9561  004B1C  6E1E               	movwf	cmd@command,c
  9562  004B1E  0E10               	movlw	16
  9563  004B20  6E1F               	movwf	cmd@command+1,c
  9564  004B22  0EA4               	movlw	164
  9565  004B24  6E20               	movwf	cmd@command+2,c
  9566  004B26  0EAF               	movlw	175
  9567  004B28  6E21               	movwf	cmd@command+3,c
  9568  004B2A  EC06  F031         	call	_cmd	;wreg free
  9569                           
  9570                           ;display.c: 246: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9571  004B2E  0E00               	movlw	0
  9572  004B30  6E1E               	movwf	cmd@command,c
  9573  004B32  0E30               	movlw	48
  9574  004B34  6E1F               	movwf	cmd@command+1,c
  9575  004B36  0EA7               	movlw	167
  9576  004B38  6E20               	movwf	cmd@command+2,c
  9577  004B3A  0EAF               	movlw	175
  9578  004B3C  6E21               	movwf	cmd@command+3,c
  9579  004B3E  EC06  F031         	call	_cmd	;wreg free
  9580                           
  9581                           ;display.c: 247: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9582  004B42  0E00               	movlw	0
  9583  004B44  6E1E               	movwf	cmd@command,c
  9584  004B46  0E30               	movlw	48
  9585  004B48  6E1F               	movwf	cmd@command+1,c
  9586  004B4A  0E67               	movlw	103
  9587  004B4C  6E20               	movwf	cmd@command+2,c
  9588  004B4E  0EB9               	movlw	185
  9589  004B50  6E21               	movwf	cmd@command+3,c
  9590  004B52  EC06  F031         	call	_cmd	;wreg free
  9591                           
  9592                           ;display.c: 248: break;
  9593  004B56  0012               	return	
  9594  004B58                     l4037:
  9595                           
  9596                           ;display.c: 250: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9597  004B58  0E00               	movlw	0
  9598  004B5A  6E1E               	movwf	cmd@command,c
  9599  004B5C  0EF0               	movlw	240
  9600  004B5E  6E1F               	movwf	cmd@command+1,c
  9601  004B60  0E80               	movlw	128
  9602  004B62  6E20               	movwf	cmd@command+2,c
  9603  004B64  0EAF               	movlw	175
  9604  004B66  6E21               	movwf	cmd@command+3,c
  9605  004B68  EC06  F031         	call	_cmd	;wreg free
  9606                           
  9607                           ;display.c: 251: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9608  004B6C  0E00               	movlw	0
  9609  004B6E  6E1E               	movwf	cmd@command,c
  9610  004B70  0EF0               	movlw	240
  9611  004B72  6E1F               	movwf	cmd@command+1,c
  9612  004B74  0E60               	movlw	96
  9613  004B76  6E20               	movwf	cmd@command+2,c
  9614  004B78  0EB9               	movlw	185
  9615  004B7A  6E21               	movwf	cmd@command+3,c
  9616  004B7C  EC06  F031         	call	_cmd	;wreg free
  9617                           
  9618                           ;display.c: 252: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  9619  004B80  0E00               	movlw	0
  9620  004B82  6E1E               	movwf	cmd@command,c
  9621  004B84  0E00               	movlw	0
  9622  004B86  6E1F               	movwf	cmd@command+1,c
  9623  004B88  0E81               	movlw	129
  9624  004B8A  6E20               	movwf	cmd@command+2,c
  9625  004B8C  0EAF               	movlw	175
  9626  004B8E  6E21               	movwf	cmd@command+3,c
  9627  004B90  EC06  F031         	call	_cmd	;wreg free
  9628                           
  9629                           ;display.c: 253: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  9630  004B94  0E00               	movlw	0
  9631  004B96  6E1E               	movwf	cmd@command,c
  9632  004B98  0E30               	movlw	48
  9633  004B9A  6E1F               	movwf	cmd@command+1,c
  9634  004B9C  0E87               	movlw	135
  9635  004B9E  6E20               	movwf	cmd@command+2,c
  9636  004BA0  0EAF               	movlw	175
  9637  004BA2  6E21               	movwf	cmd@command+3,c
  9638  004BA4  EC06  F031         	call	_cmd	;wreg free
  9639                           
  9640                           ;display.c: 254: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9641  004BA8  0E00               	movlw	0
  9642  004BAA  6E1E               	movwf	cmd@command,c
  9643  004BAC  0E10               	movlw	16
  9644  004BAE  6E1F               	movwf	cmd@command+1,c
  9645  004BB0  0E84               	movlw	132
  9646  004BB2  6E20               	movwf	cmd@command+2,c
  9647  004BB4  0EB9               	movlw	185
  9648  004BB6  6E21               	movwf	cmd@command+3,c
  9649  004BB8  EC06  F031         	call	_cmd	;wreg free
  9650                           
  9651                           ;display.c: 255: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+114)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9652  004BBC  0E00               	movlw	0
  9653  004BBE  6E1E               	movwf	cmd@command,c
  9654  004BC0  0E20               	movlw	32
  9655  004BC2  6E1F               	movwf	cmd@command+1,c
  9656  004BC4  0E87               	movlw	135
  9657  004BC6  6E20               	movwf	cmd@command+2,c
  9658  004BC8  0EB9               	movlw	185
  9659  004BCA  6E21               	movwf	cmd@command+3,c
  9660  004BCC  EC06  F031         	call	_cmd	;wreg free
  9661                           
  9662                           ;display.c: 256: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9663  004BD0  0E00               	movlw	0
  9664  004BD2  6E1E               	movwf	cmd@command,c
  9665  004BD4  0E10               	movlw	16
  9666  004BD6  6E1F               	movwf	cmd@command+1,c
  9667  004BD8  0E24               	movlw	36
  9668  004BDA  6E20               	movwf	cmd@command+2,c
  9669  004BDC  0EB9               	movlw	185
  9670  004BDE  6E21               	movwf	cmd@command+3,c
  9671  004BE0  EC06  F031         	call	_cmd	;wreg free
  9672                           
  9673                           ;display.c: 257: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  9674  004BE4  0E00               	movlw	0
  9675  004BE6  6E1E               	movwf	cmd@command,c
  9676  004BE8  0E10               	movlw	16
  9677  004BEA  6E1F               	movwf	cmd@command+1,c
  9678  004BEC  0EA4               	movlw	164
  9679  004BEE  6E20               	movwf	cmd@command+2,c
  9680  004BF0  0EAF               	movlw	175
  9681  004BF2  6E21               	movwf	cmd@command+3,c
  9682  004BF4  EC06  F031         	call	_cmd	;wreg free
  9683                           
  9684                           ;display.c: 258: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  9685  004BF8  0E00               	movlw	0
  9686  004BFA  6E1E               	movwf	cmd@command,c
  9687  004BFC  0E30               	movlw	48
  9688  004BFE  6E1F               	movwf	cmd@command+1,c
  9689  004C00  0EA7               	movlw	167
  9690  004C02  6E20               	movwf	cmd@command+2,c
  9691  004C04  0EAF               	movlw	175
  9692  004C06  6E21               	movwf	cmd@command+3,c
  9693  004C08  EC06  F031         	call	_cmd	;wreg free
  9694                           
  9695                           ;display.c: 259: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  9696  004C0C  0E00               	movlw	0
  9697  004C0E  6E1E               	movwf	cmd@command,c
  9698  004C10  0E30               	movlw	48
  9699  004C12  6E1F               	movwf	cmd@command+1,c
  9700  004C14  0E67               	movlw	103
  9701  004C16  6E20               	movwf	cmd@command+2,c
  9702  004C18  0EB9               	movlw	185
  9703  004C1A  6E21               	movwf	cmd@command+3,c
  9704  004C1C  EC06  F031         	call	_cmd	;wreg free
  9705                           
  9706                           ;display.c: 264: }
  9707                           
  9708                           ;display.c: 263: break;
  9709                           
  9710                           ;display.c: 261: default:
  9711                           
  9712                           ;display.c: 260: break;
  9713  004C20  0012               	return	
  9714  004C22                     l4041:
  9715  004C22  C025  F027         	movff	display_gear@gear,??_display_gear
  9716  004C26  C026  F028         	movff	display_gear@gear+1,??_display_gear+1
  9717                           
  9718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9719                           ; Switch size 1, requested type "space"
  9720                           ; Number of cases is 1, Range of values is 0 to 0
  9721                           ; switch strategies available:
  9722                           ; Name         Instructions Cycles
  9723                           ; simple_byte            4     3 (average)
  9724                           ;	Chosen strategy is simple_byte
  9725  004C2A  5028               	movf	??_display_gear+1,w,c
  9726  004C2C  0A00               	xorlw	0	; case 0
  9727  004C2E  A4D8               	btfss	status,2,c
  9728  004C30  0012               	return	
  9729                           
  9730                           ; Switch size 1, requested type "space"
  9731                           ; Number of cases is 7, Range of values is 0 to 6
  9732                           ; switch strategies available:
  9733                           ; Name         Instructions Cycles
  9734                           ; simple_byte           22    12 (average)
  9735                           ;	Chosen strategy is simple_byte
  9736  004C32  5027               	movf	??_display_gear,w,c
  9737  004C34  0A00               	xorlw	0	; case 0
  9738  004C36  B4D8               	btfsc	status,2,c
  9739  004C38  D5BD               	goto	l4025
  9740  004C3A  0A01               	xorlw	1	; case 1
  9741  004C3C  B4D8               	btfsc	status,2,c
  9742  004C3E  D5F7               	goto	l4027
  9743  004C40  0A03               	xorlw	3	; case 2
  9744  004C42  B4D8               	btfsc	status,2,c
  9745  004C44  D631               	goto	l4029
  9746  004C46  0A01               	xorlw	1	; case 3
  9747  004C48  B4D8               	btfsc	status,2,c
  9748  004C4A  D693               	goto	l4031
  9749  004C4C  0A07               	xorlw	7	; case 4
  9750  004C4E  B4D8               	btfsc	status,2,c
  9751  004C50  D6E1               	goto	l4033
  9752  004C52  0A01               	xorlw	1	; case 5
  9753  004C54  B4D8               	btfsc	status,2,c
  9754  004C56  D71B               	goto	l4035
  9755  004C58  0A03               	xorlw	3	; case 6
  9756  004C5A  A4D8               	btfss	status,2,c
  9757  004C5C  0012               	return	
  9758  004C5E  D77C               	goto	l4037
  9759  004C60                     __end_of_display_gear:
  9760                           	opt stack 0
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodh	equ	0xFF4
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           postinc0	equ	0xFEE
  9769                           wreg	equ	0xFE8
  9770                           postdec1	equ	0xFE5
  9771                           plusw1	equ	0xFE3
  9772                           fsr1l	equ	0xFE1
  9773                           plusw2	equ	0xFDB
  9774                           status	equ	0xFD8
  9775                           
  9776 ;; *************** function _display_fuel *****************
  9777 ;; Defined at:
  9778 ;;		line 128 in file "display.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  level           2   36[COMRAM] int 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9795 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9796 ;;Total ram usage:        5 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    6
  9799 ;; This function calls:
  9800 ;;		_cmd
  9801 ;;		_cmd_incrementn
  9802 ;;		_wr16
  9803 ;; This function is called by:
  9804 ;;		_display
  9805 ;;		_main
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text15
  9810  005C1E                     __ptext15:
  9811                           	opt stack 0
  9812  005C1E                     _display_fuel:
  9813                           	opt stack 24
  9814                           
  9815                           ;display.c: 129: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 66);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 89);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(level);
  9816                           
  9817                           ;incstack = 0
  9818  005C1E  0E2E               	movlw	46
  9819  005C20  6E1E               	movwf	cmd@command,c
  9820  005C22  0EFF               	movlw	255
  9821  005C24  6E1F               	movwf	cmd@command+1,c
  9822  005C26  0EFF               	movlw	255
  9823  005C28  6E20               	movwf	cmd@command+2,c
  9824  005C2A  0EFF               	movlw	255
  9825  005C2C  6E21               	movwf	cmd@command+3,c
  9826  005C2E  EC06  F031         	call	_cmd	;wreg free
  9827  005C32  C04A  F027         	movff	_cmd_offset,??_display_fuel
  9828  005C36  C04B  F028         	movff	_cmd_offset+1,??_display_fuel+1
  9829  005C3A  6A29               	clrf	(??_display_fuel+2)& (0+255),c
  9830  005C3C  0E00               	movlw	0
  9831  005C3E  2427               	addwf	??_display_fuel,w,c
  9832  005C40  6E11               	movwf	wr16@addr,c
  9833  005C42  0E80               	movlw	128
  9834  005C44  2028               	addwfc	??_display_fuel+1,w,c
  9835  005C46  6E12               	movwf	wr16@addr+1,c
  9836  005C48  0E10               	movlw	16
  9837  005C4A  2029               	addwfc	??_display_fuel+2,w,c
  9838  005C4C  6E13               	movwf	wr16@addr+2,c
  9839  005C4E  0E00               	movlw	0
  9840  005C50  6E15               	movwf	wr16@value+1,c
  9841  005C52  0E42               	movlw	66
  9842  005C54  6E14               	movwf	wr16@value,c
  9843  005C56  ECCB  F030         	call	_wr16	;wreg free
  9844  005C5A  0E02               	movlw	2
  9845  005C5C  ECBC  F031         	call	_cmd_incrementn
  9846  005C60  C04A  F027         	movff	_cmd_offset,??_display_fuel
  9847  005C64  C04B  F028         	movff	_cmd_offset+1,??_display_fuel+1
  9848  005C68  6A29               	clrf	(??_display_fuel+2)& (0+255),c
  9849  005C6A  0E00               	movlw	0
  9850  005C6C  2427               	addwf	??_display_fuel,w,c
  9851  005C6E  6E11               	movwf	wr16@addr,c
  9852  005C70  0E80               	movlw	128
  9853  005C72  2028               	addwfc	??_display_fuel+1,w,c
  9854  005C74  6E12               	movwf	wr16@addr+1,c
  9855  005C76  0E10               	movlw	16
  9856  005C78  2029               	addwfc	??_display_fuel+2,w,c
  9857  005C7A  6E13               	movwf	wr16@addr+2,c
  9858  005C7C  0E00               	movlw	0
  9859  005C7E  6E15               	movwf	wr16@value+1,c
  9860  005C80  0E59               	movlw	89
  9861  005C82  6E14               	movwf	wr16@value,c
  9862  005C84  ECCB  F030         	call	_wr16	;wreg free
  9863  005C88  0E02               	movlw	2
  9864  005C8A  ECBC  F031         	call	_cmd_incrementn
  9865  005C8E  C04A  F027         	movff	_cmd_offset,??_display_fuel
  9866  005C92  C04B  F028         	movff	_cmd_offset+1,??_display_fuel+1
  9867  005C96  6A29               	clrf	(??_display_fuel+2)& (0+255),c
  9868  005C98  0E00               	movlw	0
  9869  005C9A  2427               	addwf	??_display_fuel,w,c
  9870  005C9C  6E11               	movwf	wr16@addr,c
  9871  005C9E  0E80               	movlw	128
  9872  005CA0  2028               	addwfc	??_display_fuel+1,w,c
  9873  005CA2  6E12               	movwf	wr16@addr+1,c
  9874  005CA4  0E10               	movlw	16
  9875  005CA6  2029               	addwfc	??_display_fuel+2,w,c
  9876  005CA8  6E13               	movwf	wr16@addr+2,c
  9877  005CAA  0E00               	movlw	0
  9878  005CAC  6E15               	movwf	wr16@value+1,c
  9879  005CAE  0E1C               	movlw	28
  9880  005CB0  6E14               	movwf	wr16@value,c
  9881  005CB2  ECCB  F030         	call	_wr16	;wreg free
  9882  005CB6  0E02               	movlw	2
  9883  005CB8  ECBC  F031         	call	_cmd_incrementn
  9884  005CBC  C04A  F027         	movff	_cmd_offset,??_display_fuel
  9885  005CC0  C04B  F028         	movff	_cmd_offset+1,??_display_fuel+1
  9886  005CC4  6A29               	clrf	(??_display_fuel+2)& (0+255),c
  9887  005CC6  0E00               	movlw	0
  9888  005CC8  2427               	addwf	??_display_fuel,w,c
  9889  005CCA  6E11               	movwf	wr16@addr,c
  9890  005CCC  0E80               	movlw	128
  9891  005CCE  2028               	addwfc	??_display_fuel+1,w,c
  9892  005CD0  6E12               	movwf	wr16@addr+1,c
  9893  005CD2  0E10               	movlw	16
  9894  005CD4  2029               	addwfc	??_display_fuel+2,w,c
  9895  005CD6  6E13               	movwf	wr16@addr+2,c
  9896  005CD8  0E00               	movlw	0
  9897  005CDA  6E15               	movwf	wr16@value+1,c
  9898  005CDC  0E00               	movlw	0
  9899  005CDE  6E14               	movwf	wr16@value,c
  9900  005CE0  ECCB  F030         	call	_wr16	;wreg free
  9901  005CE4  0E02               	movlw	2
  9902  005CE6  ECBC  F031         	call	_cmd_incrementn
  9903  005CEA  C025  F01E         	movff	display_fuel@level,cmd@command
  9904  005CEE  C026  F01F         	movff	display_fuel@level+1,cmd@command+1
  9905  005CF2  0E00               	movlw	0
  9906  005CF4  BE1F               	btfsc	cmd@command+1,7,c
  9907  005CF6  0EFF               	movlw	-1
  9908  005CF8  6E20               	movwf	cmd@command+2,c
  9909  005CFA  6E21               	movwf	cmd@command+3,c
  9910  005CFC  EC06  F031         	call	_cmd	;wreg free
  9911  005D00  0012               	return		;funcret
  9912  005D02                     __end_of_display_fuel:
  9913                           	opt stack 0
  9914                           tblptru	equ	0xFF8
  9915                           tblptrh	equ	0xFF7
  9916                           tblptrl	equ	0xFF6
  9917                           tablat	equ	0xFF5
  9918                           prodh	equ	0xFF4
  9919                           prodl	equ	0xFF3
  9920                           intcon	equ	0xFF2
  9921                           postinc0	equ	0xFEE
  9922                           wreg	equ	0xFE8
  9923                           postdec1	equ	0xFE5
  9924                           plusw1	equ	0xFE3
  9925                           fsr1l	equ	0xFE1
  9926                           plusw2	equ	0xFDB
  9927                           status	equ	0xFD8
  9928                           
  9929 ;; *************** function _display_end *****************
  9930 ;; Defined at:
  9931 ;;		line 25 in file "display.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0, cstack
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; Hardware stack levels required when called:    6
  9952 ;; This function calls:
  9953 ;;		_cmd
  9954 ;;		_wr16
  9955 ;; This function is called by:
  9956 ;;		_display
  9957 ;;		_main
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text16
  9962  00609A                     __ptext16:
  9963                           	opt stack 0
  9964  00609A                     _display_end:
  9965                           	opt stack 24
  9966                           
  9967                           ;display.c: 26: cmd(((0UL<<24)));
  9968                           
  9969                           ;incstack = 0
  9970  00609A  0E00               	movlw	0
  9971  00609C  6E1E               	movwf	cmd@command,c
  9972  00609E  0E00               	movlw	0
  9973  0060A0  6E1F               	movwf	cmd@command+1,c
  9974  0060A2  0E00               	movlw	0
  9975  0060A4  6E20               	movwf	cmd@command+2,c
  9976  0060A6  0E00               	movlw	0
  9977  0060A8  6E21               	movwf	cmd@command+3,c
  9978  0060AA  EC06  F031         	call	_cmd	;wreg free
  9979                           
  9980                           ;display.c: 27: cmd(4294967041UL);
  9981  0060AE  0E01               	movlw	1
  9982  0060B0  6E1E               	movwf	cmd@command,c
  9983  0060B2  0EFF               	movlw	255
  9984  0060B4  6E1F               	movwf	cmd@command+1,c
  9985  0060B6  0EFF               	movlw	255
  9986  0060B8  6E20               	movwf	cmd@command+2,c
  9987  0060BA  0EFF               	movlw	255
  9988  0060BC  6E21               	movwf	cmd@command+3,c
  9989  0060BE  EC06  F031         	call	_cmd	;wreg free
  9990                           
  9991                           ;display.c: 28: wr16(1058024UL, cmd_offset);
  9992  0060C2  0EE8               	movlw	232
  9993  0060C4  6E11               	movwf	wr16@addr,c
  9994  0060C6  0E24               	movlw	36
  9995  0060C8  6E12               	movwf	wr16@addr+1,c
  9996  0060CA  0E10               	movlw	16
  9997  0060CC  6E13               	movwf	wr16@addr+2,c
  9998  0060CE  C04A  F014         	movff	_cmd_offset,wr16@value
  9999  0060D2  C04B  F015         	movff	_cmd_offset+1,wr16@value+1
 10000  0060D6  ECCB  F030         	call	_wr16	;wreg free
 10001  0060DA  0012               	return		;funcret
 10002  0060DC                     __end_of_display_end:
 10003                           	opt stack 0
 10004                           tblptru	equ	0xFF8
 10005                           tblptrh	equ	0xFF7
 10006                           tblptrl	equ	0xFF6
 10007                           tablat	equ	0xFF5
 10008                           prodh	equ	0xFF4
 10009                           prodl	equ	0xFF3
 10010                           intcon	equ	0xFF2
 10011                           postinc0	equ	0xFEE
 10012                           wreg	equ	0xFE8
 10013                           postdec1	equ	0xFE5
 10014                           plusw1	equ	0xFE3
 10015                           fsr1l	equ	0xFE1
 10016                           plusw2	equ	0xFDB
 10017                           status	equ	0xFD8
 10018                           
 10019 ;; *************** function _display_battery *****************
 10020 ;; Defined at:
 10021 ;;		line 132 in file "display.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  volts           2   36[COMRAM] int 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      void 
 10028 ;; Registers used:
 10029 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10037 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10038 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10039 ;;Total ram usage:        5 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    6
 10042 ;; This function calls:
 10043 ;;		___awdiv
 10044 ;;		___awmod
 10045 ;;		_cmd
 10046 ;;		_cmd_incrementn
 10047 ;;		_wr16
 10048 ;;		_wr8s
 10049 ;; This function is called by:
 10050 ;;		_display
 10051 ;;		_main
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text17
 10056  004C60                     __ptext17:
 10057                           	opt stack 0
 10058  004C60                     _display_battery:
 10059                           	opt stack 24
 10060                           
 10061                           ;display.c: 133: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 66);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(volts/10);
 10062                           
 10063                           ;incstack = 0
 10064  004C60  0E2E               	movlw	46
 10065  004C62  6E1E               	movwf	cmd@command,c
 10066  004C64  0EFF               	movlw	255
 10067  004C66  6E1F               	movwf	cmd@command+1,c
 10068  004C68  0EFF               	movlw	255
 10069  004C6A  6E20               	movwf	cmd@command+2,c
 10070  004C6C  0EFF               	movlw	255
 10071  004C6E  6E21               	movwf	cmd@command+3,c
 10072  004C70  EC06  F031         	call	_cmd	;wreg free
 10073  004C74  C04A  F027         	movff	_cmd_offset,??_display_battery
 10074  004C78  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10075  004C7C  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10076  004C7E  0E00               	movlw	0
 10077  004C80  2427               	addwf	??_display_battery,w,c
 10078  004C82  6E11               	movwf	wr16@addr,c
 10079  004C84  0E80               	movlw	128
 10080  004C86  2028               	addwfc	??_display_battery+1,w,c
 10081  004C88  6E12               	movwf	wr16@addr+1,c
 10082  004C8A  0E10               	movlw	16
 10083  004C8C  2029               	addwfc	??_display_battery+2,w,c
 10084  004C8E  6E13               	movwf	wr16@addr+2,c
 10085  004C90  0E00               	movlw	0
 10086  004C92  6E15               	movwf	wr16@value+1,c
 10087  004C94  0E42               	movlw	66
 10088  004C96  6E14               	movwf	wr16@value,c
 10089  004C98  ECCB  F030         	call	_wr16	;wreg free
 10090  004C9C  0E02               	movlw	2
 10091  004C9E  ECBC  F031         	call	_cmd_incrementn
 10092  004CA2  C04A  F027         	movff	_cmd_offset,??_display_battery
 10093  004CA6  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10094  004CAA  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10095  004CAC  0E00               	movlw	0
 10096  004CAE  2427               	addwf	??_display_battery,w,c
 10097  004CB0  6E11               	movwf	wr16@addr,c
 10098  004CB2  0E80               	movlw	128
 10099  004CB4  2028               	addwfc	??_display_battery+1,w,c
 10100  004CB6  6E12               	movwf	wr16@addr+1,c
 10101  004CB8  0E10               	movlw	16
 10102  004CBA  2029               	addwfc	??_display_battery+2,w,c
 10103  004CBC  6E13               	movwf	wr16@addr+2,c
 10104  004CBE  0E00               	movlw	0
 10105  004CC0  6E15               	movwf	wr16@value+1,c
 10106  004CC2  0E82               	movlw	130
 10107  004CC4  6E14               	movwf	wr16@value,c
 10108  004CC6  ECCB  F030         	call	_wr16	;wreg free
 10109  004CCA  0E02               	movlw	2
 10110  004CCC  ECBC  F031         	call	_cmd_incrementn
 10111  004CD0  C04A  F027         	movff	_cmd_offset,??_display_battery
 10112  004CD4  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10113  004CD8  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10114  004CDA  0E00               	movlw	0
 10115  004CDC  2427               	addwf	??_display_battery,w,c
 10116  004CDE  6E11               	movwf	wr16@addr,c
 10117  004CE0  0E80               	movlw	128
 10118  004CE2  2028               	addwfc	??_display_battery+1,w,c
 10119  004CE4  6E12               	movwf	wr16@addr+1,c
 10120  004CE6  0E10               	movlw	16
 10121  004CE8  2029               	addwfc	??_display_battery+2,w,c
 10122  004CEA  6E13               	movwf	wr16@addr+2,c
 10123  004CEC  0E00               	movlw	0
 10124  004CEE  6E15               	movwf	wr16@value+1,c
 10125  004CF0  0E1C               	movlw	28
 10126  004CF2  6E14               	movwf	wr16@value,c
 10127  004CF4  ECCB  F030         	call	_wr16	;wreg free
 10128  004CF8  0E02               	movlw	2
 10129  004CFA  ECBC  F031         	call	_cmd_incrementn
 10130  004CFE  C04A  F027         	movff	_cmd_offset,??_display_battery
 10131  004D02  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10132  004D06  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10133  004D08  0E00               	movlw	0
 10134  004D0A  2427               	addwf	??_display_battery,w,c
 10135  004D0C  6E11               	movwf	wr16@addr,c
 10136  004D0E  0E80               	movlw	128
 10137  004D10  2028               	addwfc	??_display_battery+1,w,c
 10138  004D12  6E12               	movwf	wr16@addr+1,c
 10139  004D14  0E10               	movlw	16
 10140  004D16  2029               	addwfc	??_display_battery+2,w,c
 10141  004D18  6E13               	movwf	wr16@addr+2,c
 10142  004D1A  0E00               	movlw	0
 10143  004D1C  6E15               	movwf	wr16@value+1,c
 10144  004D1E  0E00               	movlw	0
 10145  004D20  6E14               	movwf	wr16@value,c
 10146  004D22  ECCB  F030         	call	_wr16	;wreg free
 10147  004D26  0E02               	movlw	2
 10148  004D28  ECBC  F031         	call	_cmd_incrementn
 10149  004D2C  C025  F010         	movff	display_battery@volts,___awdiv@dividend
 10150  004D30  C026  F011         	movff	display_battery@volts+1,___awdiv@dividend+1
 10151  004D34  0E00               	movlw	0
 10152  004D36  6E13               	movwf	___awdiv@divisor+1,c
 10153  004D38  0E0A               	movlw	10
 10154  004D3A  6E12               	movwf	___awdiv@divisor,c
 10155  004D3C  EC4E  F02F         	call	___awdiv	;wreg free
 10156  004D40  C010  F01E         	movff	?___awdiv,cmd@command
 10157  004D44  C011  F01F         	movff	?___awdiv+1,cmd@command+1
 10158  004D48  0E00               	movlw	0
 10159  004D4A  BE1F               	btfsc	cmd@command+1,7,c
 10160  004D4C  0EFF               	movlw	-1
 10161  004D4E  6E20               	movwf	cmd@command+2,c
 10162  004D50  6E21               	movwf	cmd@command+3,c
 10163  004D52  EC06  F031         	call	_cmd	;wreg free
 10164                           
 10165                           ;display.c: 134: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 90);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 131);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _of
 10166  004D56  0E0C               	movlw	12
 10167  004D58  6E1E               	movwf	cmd@command,c
 10168  004D5A  0EFF               	movlw	255
 10169  004D5C  6E1F               	movwf	cmd@command+1,c
 10170  004D5E  0EFF               	movlw	255
 10171  004D60  6E20               	movwf	cmd@command+2,c
 10172  004D62  0EFF               	movlw	255
 10173  004D64  6E21               	movwf	cmd@command+3,c
 10174  004D66  EC06  F031         	call	_cmd	;wreg free
 10175  004D6A  C04A  F027         	movff	_cmd_offset,??_display_battery
 10176  004D6E  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10177  004D72  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10178  004D74  0E00               	movlw	0
 10179  004D76  2427               	addwf	??_display_battery,w,c
 10180  004D78  6E11               	movwf	wr16@addr,c
 10181  004D7A  0E80               	movlw	128
 10182  004D7C  2028               	addwfc	??_display_battery+1,w,c
 10183  004D7E  6E12               	movwf	wr16@addr+1,c
 10184  004D80  0E10               	movlw	16
 10185  004D82  2029               	addwfc	??_display_battery+2,w,c
 10186  004D84  6E13               	movwf	wr16@addr+2,c
 10187  004D86  0E00               	movlw	0
 10188  004D88  6E15               	movwf	wr16@value+1,c
 10189  004D8A  0E5A               	movlw	90
 10190  004D8C  6E14               	movwf	wr16@value,c
 10191  004D8E  ECCB  F030         	call	_wr16	;wreg free
 10192  004D92  0E02               	movlw	2
 10193  004D94  ECBC  F031         	call	_cmd_incrementn
 10194  004D98  C04A  F027         	movff	_cmd_offset,??_display_battery
 10195  004D9C  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10196  004DA0  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10197  004DA2  0E00               	movlw	0
 10198  004DA4  2427               	addwf	??_display_battery,w,c
 10199  004DA6  6E11               	movwf	wr16@addr,c
 10200  004DA8  0E80               	movlw	128
 10201  004DAA  2028               	addwfc	??_display_battery+1,w,c
 10202  004DAC  6E12               	movwf	wr16@addr+1,c
 10203  004DAE  0E10               	movlw	16
 10204  004DB0  2029               	addwfc	??_display_battery+2,w,c
 10205  004DB2  6E13               	movwf	wr16@addr+2,c
 10206  004DB4  0E00               	movlw	0
 10207  004DB6  6E15               	movwf	wr16@value+1,c
 10208  004DB8  0E83               	movlw	131
 10209  004DBA  6E14               	movwf	wr16@value,c
 10210  004DBC  ECCB  F030         	call	_wr16	;wreg free
 10211  004DC0  0E02               	movlw	2
 10212  004DC2  ECBC  F031         	call	_cmd_incrementn
 10213  004DC6  C04A  F027         	movff	_cmd_offset,??_display_battery
 10214  004DCA  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10215  004DCE  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10216  004DD0  0E00               	movlw	0
 10217  004DD2  2427               	addwf	??_display_battery,w,c
 10218  004DD4  6E11               	movwf	wr16@addr,c
 10219  004DD6  0E80               	movlw	128
 10220  004DD8  2028               	addwfc	??_display_battery+1,w,c
 10221  004DDA  6E12               	movwf	wr16@addr+1,c
 10222  004DDC  0E10               	movlw	16
 10223  004DDE  2029               	addwfc	??_display_battery+2,w,c
 10224  004DE0  6E13               	movwf	wr16@addr+2,c
 10225  004DE2  0E00               	movlw	0
 10226  004DE4  6E15               	movwf	wr16@value+1,c
 10227  004DE6  0E1C               	movlw	28
 10228  004DE8  6E14               	movwf	wr16@value,c
 10229  004DEA  ECCB  F030         	call	_wr16	;wreg free
 10230  004DEE  0E02               	movlw	2
 10231  004DF0  ECBC  F031         	call	_cmd_incrementn
 10232  004DF4  C04A  F027         	movff	_cmd_offset,??_display_battery
 10233  004DF8  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10234  004DFC  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10235  004DFE  0E00               	movlw	0
 10236  004E00  2427               	addwf	??_display_battery,w,c
 10237  004E02  6E11               	movwf	wr16@addr,c
 10238  004E04  0E80               	movlw	128
 10239  004E06  2028               	addwfc	??_display_battery+1,w,c
 10240  004E08  6E12               	movwf	wr16@addr+1,c
 10241  004E0A  0E10               	movlw	16
 10242  004E0C  2029               	addwfc	??_display_battery+2,w,c
 10243  004E0E  6E13               	movwf	wr16@addr+2,c
 10244  004E10  0E00               	movlw	0
 10245  004E12  6E15               	movwf	wr16@value+1,c
 10246  004E14  0E00               	movlw	0
 10247  004E16  6E14               	movwf	wr16@value,c
 10248  004E18  ECCB  F030         	call	_wr16	;wreg free
 10249  004E1C  0E02               	movlw	2
 10250  004E1E  ECBC  F031         	call	_cmd_incrementn
 10251  004E22  C04A  F027         	movff	_cmd_offset,??_display_battery
 10252  004E26  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10253  004E2A  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10254  004E2C  0E00               	movlw	0
 10255  004E2E  2427               	addwf	??_display_battery,w,c
 10256  004E30  6E16               	movwf	wr8s@addr,c
 10257  004E32  0E80               	movlw	128
 10258  004E34  2028               	addwfc	??_display_battery+1,w,c
 10259  004E36  6E17               	movwf	wr8s@addr+1,c
 10260  004E38  0E10               	movlw	16
 10261  004E3A  2029               	addwfc	??_display_battery+2,w,c
 10262  004E3C  6E18               	movwf	wr8s@addr+2,c
 10263  004E3E  0E77               	movlw	low STR_22
 10264  004E40  6E19               	movwf	wr8s@s,c
 10265  004E42  0E0F               	movlw	high STR_22
 10266  004E44  6E1A               	movwf	wr8s@s+1,c
 10267  004E46  EC81  F02E         	call	_wr8s	;wreg free
 10268  004E4A  ECBC  F031         	call	_cmd_incrementn
 10269                           
 10270                           ;display.c: 135: cmd(4294967086UL);wr16(1081344UL+cmd_offset, 96);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd(volts%10);
 10271  004E4E  0E2E               	movlw	46
 10272  004E50  6E1E               	movwf	cmd@command,c
 10273  004E52  0EFF               	movlw	255
 10274  004E54  6E1F               	movwf	cmd@command+1,c
 10275  004E56  0EFF               	movlw	255
 10276  004E58  6E20               	movwf	cmd@command+2,c
 10277  004E5A  0EFF               	movlw	255
 10278  004E5C  6E21               	movwf	cmd@command+3,c
 10279  004E5E  EC06  F031         	call	_cmd	;wreg free
 10280  004E62  C04A  F027         	movff	_cmd_offset,??_display_battery
 10281  004E66  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10282  004E6A  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10283  004E6C  0E00               	movlw	0
 10284  004E6E  2427               	addwf	??_display_battery,w,c
 10285  004E70  6E11               	movwf	wr16@addr,c
 10286  004E72  0E80               	movlw	128
 10287  004E74  2028               	addwfc	??_display_battery+1,w,c
 10288  004E76  6E12               	movwf	wr16@addr+1,c
 10289  004E78  0E10               	movlw	16
 10290  004E7A  2029               	addwfc	??_display_battery+2,w,c
 10291  004E7C  6E13               	movwf	wr16@addr+2,c
 10292  004E7E  0E00               	movlw	0
 10293  004E80  6E15               	movwf	wr16@value+1,c
 10294  004E82  0E60               	movlw	96
 10295  004E84  6E14               	movwf	wr16@value,c
 10296  004E86  ECCB  F030         	call	_wr16	;wreg free
 10297  004E8A  0E02               	movlw	2
 10298  004E8C  ECBC  F031         	call	_cmd_incrementn
 10299  004E90  C04A  F027         	movff	_cmd_offset,??_display_battery
 10300  004E94  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10301  004E98  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10302  004E9A  0E00               	movlw	0
 10303  004E9C  2427               	addwf	??_display_battery,w,c
 10304  004E9E  6E11               	movwf	wr16@addr,c
 10305  004EA0  0E80               	movlw	128
 10306  004EA2  2028               	addwfc	??_display_battery+1,w,c
 10307  004EA4  6E12               	movwf	wr16@addr+1,c
 10308  004EA6  0E10               	movlw	16
 10309  004EA8  2029               	addwfc	??_display_battery+2,w,c
 10310  004EAA  6E13               	movwf	wr16@addr+2,c
 10311  004EAC  0E00               	movlw	0
 10312  004EAE  6E15               	movwf	wr16@value+1,c
 10313  004EB0  0E82               	movlw	130
 10314  004EB2  6E14               	movwf	wr16@value,c
 10315  004EB4  ECCB  F030         	call	_wr16	;wreg free
 10316  004EB8  0E02               	movlw	2
 10317  004EBA  ECBC  F031         	call	_cmd_incrementn
 10318  004EBE  C04A  F027         	movff	_cmd_offset,??_display_battery
 10319  004EC2  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10320  004EC6  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10321  004EC8  0E00               	movlw	0
 10322  004ECA  2427               	addwf	??_display_battery,w,c
 10323  004ECC  6E11               	movwf	wr16@addr,c
 10324  004ECE  0E80               	movlw	128
 10325  004ED0  2028               	addwfc	??_display_battery+1,w,c
 10326  004ED2  6E12               	movwf	wr16@addr+1,c
 10327  004ED4  0E10               	movlw	16
 10328  004ED6  2029               	addwfc	??_display_battery+2,w,c
 10329  004ED8  6E13               	movwf	wr16@addr+2,c
 10330  004EDA  0E00               	movlw	0
 10331  004EDC  6E15               	movwf	wr16@value+1,c
 10332  004EDE  0E1C               	movlw	28
 10333  004EE0  6E14               	movwf	wr16@value,c
 10334  004EE2  ECCB  F030         	call	_wr16	;wreg free
 10335  004EE6  0E02               	movlw	2
 10336  004EE8  ECBC  F031         	call	_cmd_incrementn
 10337  004EEC  C04A  F027         	movff	_cmd_offset,??_display_battery
 10338  004EF0  C04B  F028         	movff	_cmd_offset+1,??_display_battery+1
 10339  004EF4  6A29               	clrf	(??_display_battery+2)& (0+255),c
 10340  004EF6  0E00               	movlw	0
 10341  004EF8  2427               	addwf	??_display_battery,w,c
 10342  004EFA  6E11               	movwf	wr16@addr,c
 10343  004EFC  0E80               	movlw	128
 10344  004EFE  2028               	addwfc	??_display_battery+1,w,c
 10345  004F00  6E12               	movwf	wr16@addr+1,c
 10346  004F02  0E10               	movlw	16
 10347  004F04  2029               	addwfc	??_display_battery+2,w,c
 10348  004F06  6E13               	movwf	wr16@addr+2,c
 10349  004F08  0E00               	movlw	0
 10350  004F0A  6E15               	movwf	wr16@value+1,c
 10351  004F0C  0E00               	movlw	0
 10352  004F0E  6E14               	movwf	wr16@value,c
 10353  004F10  ECCB  F030         	call	_wr16	;wreg free
 10354  004F14  0E02               	movlw	2
 10355  004F16  ECBC  F031         	call	_cmd_incrementn
 10356  004F1A  C025  F018         	movff	display_battery@volts,___awmod@dividend
 10357  004F1E  C026  F019         	movff	display_battery@volts+1,___awmod@dividend+1
 10358  004F22  0E00               	movlw	0
 10359  004F24  6E1B               	movwf	___awmod@divisor+1,c
 10360  004F26  0E0A               	movlw	10
 10361  004F28  6E1A               	movwf	___awmod@divisor,c
 10362  004F2A  ECCC  F02F         	call	___awmod	;wreg free
 10363  004F2E  C018  F01E         	movff	?___awmod,cmd@command
 10364  004F32  C019  F01F         	movff	?___awmod+1,cmd@command+1
 10365  004F36  0E00               	movlw	0
 10366  004F38  BE1F               	btfsc	cmd@command+1,7,c
 10367  004F3A  0EFF               	movlw	-1
 10368  004F3C  6E20               	movwf	cmd@command+2,c
 10369  004F3E  6E21               	movwf	cmd@command+3,c
 10370  004F40  EC06  F031         	call	_cmd	;wreg free
 10371  004F44  0012               	return		;funcret
 10372  004F46                     __end_of_display_battery:
 10373                           	opt stack 0
 10374                           tblptru	equ	0xFF8
 10375                           tblptrh	equ	0xFF7
 10376                           tblptrl	equ	0xFF6
 10377                           tablat	equ	0xFF5
 10378                           prodh	equ	0xFF4
 10379                           prodl	equ	0xFF3
 10380                           intcon	equ	0xFF2
 10381                           postinc0	equ	0xFEE
 10382                           wreg	equ	0xFE8
 10383                           postdec1	equ	0xFE5
 10384                           plusw1	equ	0xFE3
 10385                           fsr1l	equ	0xFE1
 10386                           plusw2	equ	0xFDB
 10387                           status	equ	0xFD8
 10388                           
 10389 ;; *************** function _wr8s *****************
 10390 ;; Defined at:
 10391 ;;		line 43 in file "FT800.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  addr            3   21[COMRAM] unsigned um
 10394 ;;  s               2   24[COMRAM] PTR const unsigned char 
 10395 ;;		 -> STR_36(4), STR_35(2), STR_34(2), STR_33(3), 
 10396 ;;		 -> STR_32(3), STR_31(3), STR_30(2), STR_29(2), 
 10397 ;;		 -> STR_28(2), STR_27(2), STR_26(2), STR_25(2), 
 10398 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(2), 
 10399 ;;		 -> STR_20(2), STR_19(2), STR_18(4), STR_17(5), 
 10400 ;;		 -> STR_16(5), STR_15(2), STR_14(3), STR_13(4), 
 10401 ;;		 -> STR_12(6), STR_11(6), STR_10(4), STR_9(6), 
 10402 ;;		 -> STR_8(5), STR_7(6), STR_6(5), STR_5(5), 
 10403 ;;		 -> STR_4(4), STR_3(5), STR_2(6), STR_1(6), 
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;  i               1   30[COMRAM] unsigned char 
 10406 ;;  l               1   29[COMRAM] unsigned char 
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      unsigned char 
 10409 ;; Registers used:
 10410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10416 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10420 ;;Total ram usage:       10 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; Hardware stack levels required when called:    4
 10423 ;; This function calls:
 10424 ;;		_SPI_Exchange8bit
 10425 ;;		_strlen
 10426 ;; This function is called by:
 10427 ;;		_display_labels
 10428 ;;		_display_message
 10429 ;;		_display_laptime
 10430 ;;		_display_battery
 10431 ;;		_display_rpm
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           	psect	text18
 10436  005D02                     __ptext18:
 10437                           	opt stack 0
 10438  005D02                     _wr8s:
 10439                           	opt stack 25
 10440                           
 10441                           ;FT800.c: 45: LATDbits.LATD0 = 0;
 10442                           
 10443                           ;incstack = 0
 10444  005D02  908C               	bcf	3980,0,c	;volatile
 10445                           
 10446                           ;FT800.c: 46: SPI_Exchange8bit(0x80 | (addr >> 16));
 10447  005D04  5018               	movf	wr8s@addr+2,w,c
 10448  005D06  0980               	iorlw	128
 10449  005D08  ECF8  F031         	call	_SPI_Exchange8bit
 10450                           
 10451                           ;FT800.c: 47: SPI_Exchange8bit(addr >> 8);
 10452  005D0C  C016  F01B         	movff	wr8s@addr,??_wr8s
 10453  005D10  C017  F01C         	movff	wr8s@addr+1,??_wr8s+1
 10454  005D14  C018  F01D         	movff	wr8s@addr+2,??_wr8s+2
 10455  005D18  C01C  F01B         	movff	??_wr8s+1,??_wr8s
 10456  005D1C  C01D  F01C         	movff	??_wr8s+2,??_wr8s+1
 10457  005D20  6A1D               	clrf	??_wr8s+2,c
 10458  005D22  501B               	movf	??_wr8s,w,c
 10459  005D24  ECF8  F031         	call	_SPI_Exchange8bit
 10460                           
 10461                           ;FT800.c: 48: SPI_Exchange8bit(addr);
 10462  005D28  5016               	movf	wr8s@addr,w,c
 10463  005D2A  ECF8  F031         	call	_SPI_Exchange8bit
 10464                           
 10465                           ;FT800.c: 49: ft_uint8_t l = strlen(s);
 10466  005D2E  C019  F010         	movff	wr8s@s,strlen@s
 10467  005D32  C01A  F011         	movff	wr8s@s+1,strlen@s+1
 10468  005D36  EC6E  F030         	call	_strlen	;wreg free
 10469  005D3A  5010               	movf	?_strlen,w,c
 10470  005D3C  6E1E               	movwf	wr8s@l,c
 10471                           
 10472                           ;FT800.c: 50: ft_uint8_t i;
 10473                           ;FT800.c: 51: for(i=0;i<=l;i++){
 10474  005D3E  0E00               	movlw	0
 10475  005D40  6E1F               	movwf	wr8s@i,c
 10476  005D42  D014               	goto	l3459
 10477  005D44                     l3455:
 10478                           
 10479                           ;FT800.c: 52: SPI_Exchange8bit(s[i]);
 10480  005D44  501F               	movf	wr8s@i,w,c
 10481  005D46  0D01               	mullw	1
 10482  005D48  C019  F01B         	movff	wr8s@s,??_wr8s
 10483  005D4C  C01A  F01C         	movff	wr8s@s+1,??_wr8s+1
 10484  005D50  50F3               	movf	prodl,w,c
 10485  005D52  261B               	addwf	??_wr8s,f,c
 10486  005D54  50F4               	movf	prodh,w,c
 10487  005D56  221C               	addwfc	??_wr8s+1,f,c
 10488  005D58  C01B  FFF6         	movff	??_wr8s,tblptrl
 10489  005D5C  C01C  FFF7         	movff	??_wr8s+1,tblptrh
 10490  005D60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10491  005D60  6AF8               	clrf	tblptru,c
 10492  005D62                     	endif
 10493  005D62                     	if	0	;tblptru may be non-zero
 10494  005D62                     	endif
 10495  005D62  0008               	tblrd		*
 10496  005D64  50F5               	movf	tablat,w,c
 10497  005D66  ECF8  F031         	call	_SPI_Exchange8bit
 10498  005D6A  2A1F               	incf	wr8s@i,f,c
 10499  005D6C                     l3459:
 10500  005D6C  501F               	movf	wr8s@i,w,c
 10501  005D6E  5C1E               	subwf	wr8s@l,w,c
 10502  005D70  A0D8               	btfss	status,0,c
 10503  005D72  D005               	goto	l3465
 10504  005D74  D7E7               	goto	l3455
 10505  005D76                     l3461:
 10506                           
 10507                           ;FT800.c: 55: SPI_Exchange8bit(0);
 10508  005D76  0E00               	movlw	0
 10509  005D78  ECF8  F031         	call	_SPI_Exchange8bit
 10510  005D7C  2A1F               	incf	wr8s@i,f,c
 10511  005D7E                     l3465:
 10512  005D7E  C01F  F01B         	movff	wr8s@i,??_wr8s
 10513  005D82  0E03               	movlw	3
 10514  005D84  161B               	andwf	??_wr8s,f,c
 10515  005D86  A4D8               	btfss	status,2,c
 10516  005D88  D7F6               	goto	l3461
 10517                           
 10518                           ;FT800.c: 56: }
 10519                           ;FT800.c: 57: LATDbits.LATD0 = 1;
 10520  005D8A  808C               	bsf	3980,0,c	;volatile
 10521                           
 10522                           ;FT800.c: 58: return i;
 10523  005D8C  501F               	movf	wr8s@i,w,c
 10524  005D8E  0012               	return	
 10525  005D90                     __end_of_wr8s:
 10526                           	opt stack 0
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           intcon	equ	0xFF2
 10534                           postinc0	equ	0xFEE
 10535                           wreg	equ	0xFE8
 10536                           postdec1	equ	0xFE5
 10537                           plusw1	equ	0xFE3
 10538                           fsr1l	equ	0xFE1
 10539                           plusw2	equ	0xFDB
 10540                           status	equ	0xFD8
 10541                           
 10542 ;; *************** function _strlen *****************
 10543 ;; Defined at:
 10544 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  s               2   15[COMRAM] PTR const unsigned char 
 10547 ;;		 -> STR_36(4), STR_35(2), STR_34(2), STR_33(3), 
 10548 ;;		 -> STR_32(3), STR_31(3), STR_30(2), STR_29(2), 
 10549 ;;		 -> STR_28(2), STR_27(2), STR_26(2), STR_25(2), 
 10550 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(2), 
 10551 ;;		 -> STR_20(2), STR_19(2), STR_18(4), STR_17(5), 
 10552 ;;		 -> STR_16(5), STR_15(2), STR_14(3), STR_13(4), 
 10553 ;;		 -> STR_12(6), STR_11(6), STR_10(4), STR_9(6), 
 10554 ;;		 -> STR_8(5), STR_7(6), STR_6(5), STR_5(5), 
 10555 ;;		 -> STR_4(4), STR_3(5), STR_2(6), STR_1(6), 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;  cp              2   19[COMRAM] PTR const unsigned char 
 10558 ;;		 -> STR_36(4), STR_35(2), STR_34(2), STR_33(3), 
 10559 ;;		 -> STR_32(3), STR_31(3), STR_30(2), STR_29(2), 
 10560 ;;		 -> STR_28(2), STR_27(2), STR_26(2), STR_25(2), 
 10561 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(2), 
 10562 ;;		 -> STR_20(2), STR_19(2), STR_18(4), STR_17(5), 
 10563 ;;		 -> STR_16(5), STR_15(2), STR_14(3), STR_13(4), 
 10564 ;;		 -> STR_12(6), STR_11(6), STR_10(4), STR_9(6), 
 10565 ;;		 -> STR_8(5), STR_7(6), STR_6(5), STR_5(5), 
 10566 ;;		 -> STR_4(4), STR_3(5), STR_2(6), STR_1(6), 
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  2   15[COMRAM] unsigned int 
 10569 ;; Registers used:
 10570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;Total ram usage:        6 bytes
 10581 ;; Hardware stack levels used:    1
 10582 ;; Hardware stack levels required when called:    3
 10583 ;; This function calls:
 10584 ;;		Nothing
 10585 ;; This function is called by:
 10586 ;;		_wr8s
 10587 ;; This function uses a non-reentrant model
 10588 ;;
 10589                           
 10590                           	psect	text19
 10591  0060DC                     __ptext19:
 10592                           	opt stack 0
 10593  0060DC                     _strlen:
 10594                           	opt stack 25
 10595                           
 10596                           ;incstack = 0
 10597  0060DC  C010  F014         	movff	strlen@s,strlen@cp
 10598  0060E0  C011  F015         	movff	strlen@s+1,strlen@cp+1
 10599  0060E4  D002               	goto	l3421
 10600  0060E6                     l3419:
 10601  0060E6  4A14               	infsnz	strlen@cp,f,c
 10602  0060E8  2A15               	incf	strlen@cp+1,f,c
 10603  0060EA                     l3421:
 10604  0060EA  C014  FFF6         	movff	strlen@cp,tblptrl
 10605  0060EE  C015  FFF7         	movff	strlen@cp+1,tblptrh
 10606  0060F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10607  0060F2  6AF8               	clrf	tblptru,c
 10608  0060F4                     	endif
 10609  0060F4                     	if	0	;tblptru may be non-zero
 10610  0060F4                     	endif
 10611  0060F4  0008               	tblrd		*
 10612  0060F6  50F5               	movf	tablat,w,c
 10613  0060F8  0900               	iorlw	0
 10614  0060FA  A4D8               	btfss	status,2,c
 10615  0060FC  D7F4               	goto	l3419
 10616  0060FE  C010  F012         	movff	strlen@s,??_strlen
 10617  006102  C011  F013         	movff	strlen@s+1,??_strlen+1
 10618  006106  1E12               	comf	??_strlen,f,c
 10619  006108  1E13               	comf	??_strlen+1,f,c
 10620  00610A  4A12               	infsnz	??_strlen,f,c
 10621  00610C  2A13               	incf	??_strlen+1,f,c
 10622  00610E  5014               	movf	strlen@cp,w,c
 10623  006110  2412               	addwf	??_strlen,w,c
 10624  006112  6E10               	movwf	?_strlen,c
 10625  006114  5015               	movf	strlen@cp+1,w,c
 10626  006116  2013               	addwfc	??_strlen+1,w,c
 10627  006118  6E11               	movwf	?_strlen+1,c
 10628  00611A  0012               	return	
 10629  00611C                     __end_of_strlen:
 10630                           	opt stack 0
 10631                           tblptru	equ	0xFF8
 10632                           tblptrh	equ	0xFF7
 10633                           tblptrl	equ	0xFF6
 10634                           tablat	equ	0xFF5
 10635                           prodh	equ	0xFF4
 10636                           prodl	equ	0xFF3
 10637                           intcon	equ	0xFF2
 10638                           postinc0	equ	0xFEE
 10639                           wreg	equ	0xFE8
 10640                           postdec1	equ	0xFE5
 10641                           plusw1	equ	0xFE3
 10642                           fsr1l	equ	0xFE1
 10643                           plusw2	equ	0xFDB
 10644                           status	equ	0xFD8
 10645                           
 10646 ;; *************** function _cmd *****************
 10647 ;; Defined at:
 10648 ;;		line 126 in file "FT800.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  command         4   29[COMRAM] unsigned long 
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10664 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10666 ;;Total ram usage:        7 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    5
 10669 ;; This function calls:
 10670 ;;		_cmd_incrementn
 10671 ;;		_wr32
 10672 ;; This function is called by:
 10673 ;;		_display_start
 10674 ;;		_display_end
 10675 ;;		_display_labels
 10676 ;;		_display_message
 10677 ;;		_display_laptime
 10678 ;;		_display_waterTemp
 10679 ;;		_display_oilTemp
 10680 ;;		_display_fuel
 10681 ;;		_display_battery
 10682 ;;		_display_oilPress
 10683 ;;		_display_tp
 10684 ;;		_display_speed
 10685 ;;		_display_rpm
 10686 ;;		_display_gear
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text20
 10691  00620C                     __ptext20:
 10692                           	opt stack 0
 10693  00620C                     _cmd:
 10694                           	opt stack 24
 10695                           
 10696                           ;FT800.c: 127: wr32(1081344UL + cmd_offset, command);cmd_incrementn(4);
 10697                           
 10698                           ;incstack = 0
 10699  00620C  C04A  F022         	movff	_cmd_offset,??_cmd
 10700  006210  C04B  F023         	movff	_cmd_offset+1,??_cmd+1
 10701  006214  6A24               	clrf	(??_cmd+2)& (0+255),c
 10702  006216  0E00               	movlw	0
 10703  006218  2422               	addwf	??_cmd,w,c
 10704  00621A  6E11               	movwf	wr32@addr,c
 10705  00621C  0E80               	movlw	128
 10706  00621E  2023               	addwfc	??_cmd+1,w,c
 10707  006220  6E12               	movwf	wr32@addr+1,c
 10708  006222  0E10               	movlw	16
 10709  006224  2024               	addwfc	??_cmd+2,w,c
 10710  006226  6E13               	movwf	wr32@addr+2,c
 10711  006228  C01E  F014         	movff	cmd@command,wr32@value
 10712  00622C  C01F  F015         	movff	cmd@command+1,wr32@value+1
 10713  006230  C020  F016         	movff	cmd@command+2,wr32@value+2
 10714  006234  C021  F017         	movff	cmd@command+3,wr32@value+3
 10715  006238  EC90  F02F         	call	_wr32	;wreg free
 10716  00623C  0E04               	movlw	4
 10717  00623E  ECBC  F031         	call	_cmd_incrementn
 10718  006242  0012               	return		;funcret
 10719  006244                     __end_of_cmd:
 10720                           	opt stack 0
 10721                           tblptru	equ	0xFF8
 10722                           tblptrh	equ	0xFF7
 10723                           tblptrl	equ	0xFF6
 10724                           tablat	equ	0xFF5
 10725                           prodh	equ	0xFF4
 10726                           prodl	equ	0xFF3
 10727                           intcon	equ	0xFF2
 10728                           postinc0	equ	0xFEE
 10729                           wreg	equ	0xFE8
 10730                           postdec1	equ	0xFE5
 10731                           plusw1	equ	0xFE3
 10732                           fsr1l	equ	0xFE1
 10733                           plusw2	equ	0xFDB
 10734                           status	equ	0xFD8
 10735                           
 10736 ;; *************** function _cmd_incrementn *****************
 10737 ;; Defined at:
 10738 ;;		line 122 in file "FT800.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  n               1    wreg     unsigned char 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  n               1   17[COMRAM] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10756 ;;Total ram usage:        3 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    3
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_cmd
 10763 ;;		_display_labels
 10764 ;;		_display_message
 10765 ;;		_display_laptime
 10766 ;;		_display_waterTemp
 10767 ;;		_display_oilTemp
 10768 ;;		_display_fuel
 10769 ;;		_display_battery
 10770 ;;		_display_oilPress
 10771 ;;		_display_tp
 10772 ;;		_display_speed
 10773 ;;		_display_rpm
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text21
 10778  006378                     __ptext21:
 10779                           	opt stack 0
 10780  006378                     _cmd_incrementn:
 10781                           	opt stack 26
 10782                           
 10783                           ;incstack = 0
 10784                           ;cmd_incrementn@n stored from wreg
 10785  006378  6E12               	movwf	cmd_incrementn@n,c
 10786                           
 10787                           ;FT800.c: 123: cmd_offset=(cmd_offset+n)%4096;
 10788  00637A  5012               	movf	cmd_incrementn@n,w,c
 10789  00637C  244A               	addwf	_cmd_offset,w,c
 10790  00637E  6E10               	movwf	??_cmd_incrementn& (0+255),c
 10791  006380  0E00               	movlw	0
 10792  006382  204B               	addwfc	_cmd_offset+1,w,c
 10793  006384  6E11               	movwf	(??_cmd_incrementn+1)& (0+255),c
 10794  006386  0EFF               	movlw	255
 10795  006388  1410               	andwf	??_cmd_incrementn,w,c
 10796  00638A  6E4A               	movwf	_cmd_offset,c
 10797  00638C  0E0F               	movlw	15
 10798  00638E  1411               	andwf	??_cmd_incrementn+1,w,c
 10799  006390  6E4B               	movwf	_cmd_offset+1,c
 10800  006392  0012               	return		;funcret
 10801  006394                     __end_of_cmd_incrementn:
 10802                           	opt stack 0
 10803                           tblptru	equ	0xFF8
 10804                           tblptrh	equ	0xFF7
 10805                           tblptrl	equ	0xFF6
 10806                           tablat	equ	0xFF5
 10807                           prodh	equ	0xFF4
 10808                           prodl	equ	0xFF3
 10809                           intcon	equ	0xFF2
 10810                           postinc0	equ	0xFEE
 10811                           wreg	equ	0xFE8
 10812                           postdec1	equ	0xFE5
 10813                           plusw1	equ	0xFE3
 10814                           fsr1l	equ	0xFE1
 10815                           plusw2	equ	0xFDB
 10816                           status	equ	0xFD8
 10817                           
 10818 ;; *************** function ___awmod *****************
 10819 ;; Defined at:
 10820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  dividend        2   23[COMRAM] int 
 10823 ;;  divisor         2   25[COMRAM] int 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  sign            1   28[COMRAM] unsigned char 
 10826 ;;  counter         1   27[COMRAM] unsigned char 
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  2   23[COMRAM] int 
 10829 ;; Registers used:
 10830 ;;		wreg, status,2, status,0
 10831 ;; Tracked objects:
 10832 ;;		On entry : 0/0
 10833 ;;		On exit  : 0/0
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10840 ;;Total ram usage:        6 bytes
 10841 ;; Hardware stack levels used:    1
 10842 ;; Hardware stack levels required when called:    3
 10843 ;; This function calls:
 10844 ;;		Nothing
 10845 ;; This function is called by:
 10846 ;;		_display_battery
 10847 ;;		_display_rpm
 10848 ;;		_main
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text22
 10853  005F98                     __ptext22:
 10854                           	opt stack 0
 10855  005F98                     ___awmod:
 10856                           	opt stack 26
 10857                           
 10858                           ;incstack = 0
 10859  005F98  0E00               	movlw	0
 10860  005F9A  6E1D               	movwf	___awmod@sign,c
 10861  005F9C  AE19               	btfss	___awmod@dividend+1,7,c
 10862  005F9E  D006               	goto	l3539
 10863  005FA0  6C18               	negf	___awmod@dividend,c
 10864  005FA2  1E19               	comf	___awmod@dividend+1,f,c
 10865  005FA4  B0D8               	btfsc	status,0,c
 10866  005FA6  2A19               	incf	___awmod@dividend+1,f,c
 10867  005FA8  0E01               	movlw	1
 10868  005FAA  6E1D               	movwf	___awmod@sign,c
 10869  005FAC                     l3539:
 10870  005FAC  AE1B               	btfss	___awmod@divisor+1,7,c
 10871  005FAE  D004               	goto	l3543
 10872  005FB0  6C1A               	negf	___awmod@divisor,c
 10873  005FB2  1E1B               	comf	___awmod@divisor+1,f,c
 10874  005FB4  B0D8               	btfsc	status,0,c
 10875  005FB6  2A1B               	incf	___awmod@divisor+1,f,c
 10876  005FB8                     l3543:
 10877  005FB8  501A               	movf	___awmod@divisor,w,c
 10878  005FBA  101B               	iorwf	___awmod@divisor+1,w,c
 10879  005FBC  B4D8               	btfsc	status,2,c
 10880  005FBE  D018               	goto	l3559
 10881  005FC0  0E01               	movlw	1
 10882  005FC2  6E1C               	movwf	___awmod@counter,c
 10883  005FC4  D004               	goto	l3549
 10884  005FC6                     l3547:
 10885  005FC6  90D8               	bcf	status,0,c
 10886  005FC8  361A               	rlcf	___awmod@divisor,f,c
 10887  005FCA  361B               	rlcf	___awmod@divisor+1,f,c
 10888  005FCC  2A1C               	incf	___awmod@counter,f,c
 10889  005FCE                     l3549:
 10890  005FCE  AE1B               	btfss	___awmod@divisor+1,7,c
 10891  005FD0  D7FA               	goto	l3547
 10892  005FD2                     l3551:
 10893  005FD2  501A               	movf	___awmod@divisor,w,c
 10894  005FD4  5C18               	subwf	___awmod@dividend,w,c
 10895  005FD6  501B               	movf	___awmod@divisor+1,w,c
 10896  005FD8  5819               	subwfb	___awmod@dividend+1,w,c
 10897  005FDA  A0D8               	btfss	status,0,c
 10898  005FDC  D004               	goto	l3555
 10899  005FDE  501A               	movf	___awmod@divisor,w,c
 10900  005FE0  5E18               	subwf	___awmod@dividend,f,c
 10901  005FE2  501B               	movf	___awmod@divisor+1,w,c
 10902  005FE4  5A19               	subwfb	___awmod@dividend+1,f,c
 10903  005FE6                     l3555:
 10904  005FE6  90D8               	bcf	status,0,c
 10905  005FE8  321B               	rrcf	___awmod@divisor+1,f,c
 10906  005FEA  321A               	rrcf	___awmod@divisor,f,c
 10907  005FEC  2E1C               	decfsz	___awmod@counter,f,c
 10908  005FEE  D7F1               	goto	l3551
 10909  005FF0                     l3559:
 10910  005FF0  501D               	movf	___awmod@sign,w,c
 10911  005FF2  B4D8               	btfsc	status,2,c
 10912  005FF4  D004               	goto	l3563
 10913  005FF6  6C18               	negf	___awmod@dividend,c
 10914  005FF8  1E19               	comf	___awmod@dividend+1,f,c
 10915  005FFA  B0D8               	btfsc	status,0,c
 10916  005FFC  2A19               	incf	___awmod@dividend+1,f,c
 10917  005FFE                     l3563:
 10918  005FFE  C018  F018         	movff	___awmod@dividend,?___awmod
 10919  006002  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
 10920  006006  0012               	return	
 10921  006008                     __end_of___awmod:
 10922                           	opt stack 0
 10923                           tblptru	equ	0xFF8
 10924                           tblptrh	equ	0xFF7
 10925                           tblptrl	equ	0xFF6
 10926                           tablat	equ	0xFF5
 10927                           prodh	equ	0xFF4
 10928                           prodl	equ	0xFF3
 10929                           intcon	equ	0xFF2
 10930                           postinc0	equ	0xFEE
 10931                           wreg	equ	0xFE8
 10932                           postdec1	equ	0xFE5
 10933                           plusw1	equ	0xFE3
 10934                           fsr1l	equ	0xFE1
 10935                           plusw2	equ	0xFDB
 10936                           status	equ	0xFD8
 10937                           
 10938 ;; *************** function ___awdiv *****************
 10939 ;; Defined at:
 10940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  dividend        2   15[COMRAM] int 
 10943 ;;  divisor         2   17[COMRAM] int 
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  quotient        2   21[COMRAM] int 
 10946 ;;  sign            1   20[COMRAM] unsigned char 
 10947 ;;  counter         1   19[COMRAM] unsigned char 
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  2   15[COMRAM] int 
 10950 ;; Registers used:
 10951 ;;		wreg, status,2, status,0
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10960 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10961 ;;Total ram usage:        8 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:    3
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_display_battery
 10968 ;;		_display_rpm
 10969 ;;		_main
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text23
 10974  005E9C                     __ptext23:
 10975                           	opt stack 0
 10976  005E9C                     ___awdiv:
 10977                           	opt stack 26
 10978                           
 10979                           ;incstack = 0
 10980  005E9C  0E00               	movlw	0
 10981  005E9E  6E15               	movwf	___awdiv@sign,c
 10982  005EA0  AE13               	btfss	___awdiv@divisor+1,7,c
 10983  005EA2  D006               	goto	l3495
 10984  005EA4  6C12               	negf	___awdiv@divisor,c
 10985  005EA6  1E13               	comf	___awdiv@divisor+1,f,c
 10986  005EA8  B0D8               	btfsc	status,0,c
 10987  005EAA  2A13               	incf	___awdiv@divisor+1,f,c
 10988  005EAC  0E01               	movlw	1
 10989  005EAE  6E15               	movwf	___awdiv@sign,c
 10990  005EB0                     l3495:
 10991  005EB0  AE11               	btfss	___awdiv@dividend+1,7,c
 10992  005EB2  D006               	goto	l3501
 10993  005EB4  6C10               	negf	___awdiv@dividend,c
 10994  005EB6  1E11               	comf	___awdiv@dividend+1,f,c
 10995  005EB8  B0D8               	btfsc	status,0,c
 10996  005EBA  2A11               	incf	___awdiv@dividend+1,f,c
 10997  005EBC  0E01               	movlw	1
 10998  005EBE  1A15               	xorwf	___awdiv@sign,f,c
 10999  005EC0                     l3501:
 11000  005EC0  0E00               	movlw	0
 11001  005EC2  6E17               	movwf	___awdiv@quotient+1,c
 11002  005EC4  0E00               	movlw	0
 11003  005EC6  6E16               	movwf	___awdiv@quotient,c
 11004  005EC8  5012               	movf	___awdiv@divisor,w,c
 11005  005ECA  1013               	iorwf	___awdiv@divisor+1,w,c
 11006  005ECC  B4D8               	btfsc	status,2,c
 11007  005ECE  D01C               	goto	l3523
 11008  005ED0  0E01               	movlw	1
 11009  005ED2  6E14               	movwf	___awdiv@counter,c
 11010  005ED4  D004               	goto	l3509
 11011  005ED6                     l3507:
 11012  005ED6  90D8               	bcf	status,0,c
 11013  005ED8  3612               	rlcf	___awdiv@divisor,f,c
 11014  005EDA  3613               	rlcf	___awdiv@divisor+1,f,c
 11015  005EDC  2A14               	incf	___awdiv@counter,f,c
 11016  005EDE                     l3509:
 11017  005EDE  AE13               	btfss	___awdiv@divisor+1,7,c
 11018  005EE0  D7FA               	goto	l3507
 11019  005EE2                     l3511:
 11020  005EE2  90D8               	bcf	status,0,c
 11021  005EE4  3616               	rlcf	___awdiv@quotient,f,c
 11022  005EE6  3617               	rlcf	___awdiv@quotient+1,f,c
 11023  005EE8  5012               	movf	___awdiv@divisor,w,c
 11024  005EEA  5C10               	subwf	___awdiv@dividend,w,c
 11025  005EEC  5013               	movf	___awdiv@divisor+1,w,c
 11026  005EEE  5811               	subwfb	___awdiv@dividend+1,w,c
 11027  005EF0  A0D8               	btfss	status,0,c
 11028  005EF2  D005               	goto	l3519
 11029  005EF4  5012               	movf	___awdiv@divisor,w,c
 11030  005EF6  5E10               	subwf	___awdiv@dividend,f,c
 11031  005EF8  5013               	movf	___awdiv@divisor+1,w,c
 11032  005EFA  5A11               	subwfb	___awdiv@dividend+1,f,c
 11033  005EFC  8016               	bsf	___awdiv@quotient,0,c
 11034  005EFE                     l3519:
 11035  005EFE  90D8               	bcf	status,0,c
 11036  005F00  3213               	rrcf	___awdiv@divisor+1,f,c
 11037  005F02  3212               	rrcf	___awdiv@divisor,f,c
 11038  005F04  2E14               	decfsz	___awdiv@counter,f,c
 11039  005F06  D7ED               	goto	l3511
 11040  005F08                     l3523:
 11041  005F08  5015               	movf	___awdiv@sign,w,c
 11042  005F0A  B4D8               	btfsc	status,2,c
 11043  005F0C  D004               	goto	l3527
 11044  005F0E  6C16               	negf	___awdiv@quotient,c
 11045  005F10  1E17               	comf	___awdiv@quotient+1,f,c
 11046  005F12  B0D8               	btfsc	status,0,c
 11047  005F14  2A17               	incf	___awdiv@quotient+1,f,c
 11048  005F16                     l3527:
 11049  005F16  C016  F010         	movff	___awdiv@quotient,?___awdiv
 11050  005F1A  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 11051  005F1E  0012               	return	
 11052  005F20                     __end_of___awdiv:
 11053                           	opt stack 0
 11054                           tblptru	equ	0xFF8
 11055                           tblptrh	equ	0xFF7
 11056                           tblptrl	equ	0xFF6
 11057                           tablat	equ	0xFF5
 11058                           prodh	equ	0xFF4
 11059                           prodl	equ	0xFF3
 11060                           intcon	equ	0xFF2
 11061                           postinc0	equ	0xFEE
 11062                           wreg	equ	0xFE8
 11063                           postdec1	equ	0xFE5
 11064                           plusw1	equ	0xFE3
 11065                           fsr1l	equ	0xFE1
 11066                           plusw2	equ	0xFDB
 11067                           status	equ	0xFD8
 11068                           
 11069 ;; *************** function _TMR1_Reload *****************
 11070 ;; Defined at:
 11071 ;;		line 143 in file "mcc_generated_files/tmr1.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;		None
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  1    wreg      void 
 11078 ;; Registers used:
 11079 ;;		wreg, status,2
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11089 ;;Total ram usage:        0 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; Hardware stack levels required when called:    3
 11092 ;; This function calls:
 11093 ;;		Nothing
 11094 ;; This function is called by:
 11095 ;;		_main
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text24
 11100  00640E                     __ptext24:
 11101                           	opt stack 0
 11102  00640E                     _TMR1_Reload:
 11103                           	opt stack 27
 11104                           
 11105                           ;tmr1.c: 146: TMR1H = (timer1ReloadVal >> 8);
 11106                           
 11107                           ;incstack = 0
 11108  00640E  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 11109  006410  6ECF               	movwf	4047,c	;volatile
 11110                           
 11111                           ;tmr1.c: 147: TMR1L = timer1ReloadVal;
 11112  006412  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 11113  006416  0012               	return		;funcret
 11114  006418                     __end_of_TMR1_Reload:
 11115                           	opt stack 0
 11116                           tblptru	equ	0xFF8
 11117                           tblptrh	equ	0xFF7
 11118                           tblptrl	equ	0xFF6
 11119                           tablat	equ	0xFF5
 11120                           prodh	equ	0xFF4
 11121                           prodl	equ	0xFF3
 11122                           intcon	equ	0xFF2
 11123                           postinc0	equ	0xFEE
 11124                           wreg	equ	0xFE8
 11125                           postdec1	equ	0xFE5
 11126                           plusw1	equ	0xFE3
 11127                           fsr1l	equ	0xFE1
 11128                           plusw2	equ	0xFDB
 11129                           status	equ	0xFD8
 11130                           
 11131 ;; *************** function _TMR0_StopTimer *****************
 11132 ;; Defined at:
 11133 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;		None
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		None
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;Total ram usage:        0 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:    3
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		_main
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text25
 11162  006434                     __ptext25:
 11163                           	opt stack 0
 11164  006434                     _TMR0_StopTimer:
 11165                           	opt stack 27
 11166                           
 11167                           ;tmr0.c: 104: T0CONbits.TMR0ON = 0;
 11168                           
 11169                           ;incstack = 0
 11170  006434  9ED5               	bcf	4053,7,c	;volatile
 11171  006436  0012               	return		;funcret
 11172  006438                     __end_of_TMR0_StopTimer:
 11173                           	opt stack 0
 11174                           tblptru	equ	0xFF8
 11175                           tblptrh	equ	0xFF7
 11176                           tblptrl	equ	0xFF6
 11177                           tablat	equ	0xFF5
 11178                           prodh	equ	0xFF4
 11179                           prodl	equ	0xFF3
 11180                           intcon	equ	0xFF2
 11181                           postinc0	equ	0xFEE
 11182                           wreg	equ	0xFE8
 11183                           postdec1	equ	0xFE5
 11184                           plusw1	equ	0xFE3
 11185                           fsr1l	equ	0xFE1
 11186                           plusw2	equ	0xFDB
 11187                           status	equ	0xFD8
 11188                           
 11189 ;; *************** function _SYSTEM_Initialize *****************
 11190 ;; Defined at:
 11191 ;;		line 111 in file "mcc_generated_files/mcc.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;		None
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;		None
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  1    wreg      void 
 11198 ;; Registers used:
 11199 ;;		wreg, status,2, status,0, cstack
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11209 ;;Total ram usage:        0 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; Hardware stack levels required when called:    5
 11212 ;; This function calls:
 11213 ;;		_ECAN_Initialize
 11214 ;;		_INTERRUPT_Initialize
 11215 ;;		_OSCILLATOR_Initialize
 11216 ;;		_PIN_MANAGER_Initialize
 11217 ;;		_SPI_Initialize
 11218 ;;		_TMR0_Initialize
 11219 ;;		_TMR1_Initialize
 11220 ;; This function is called by:
 11221 ;;		_main
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text26
 11226  00635A                     __ptext26:
 11227                           	opt stack 0
 11228  00635A                     _SYSTEM_Initialize:
 11229                           	opt stack 25
 11230                           
 11231                           ;mcc.c: 114: INTERRUPT_Initialize();
 11232                           
 11233                           ;incstack = 0
 11234  00635A  EC20  F032         	call	_INTERRUPT_Initialize	;wreg free
 11235                           
 11236                           ;mcc.c: 115: PIN_MANAGER_Initialize();
 11237  00635E  ECE9  F030         	call	_PIN_MANAGER_Initialize	;wreg free
 11238                           
 11239                           ;mcc.c: 116: OSCILLATOR_Initialize();
 11240  006362  ECEF  F031         	call	_OSCILLATOR_Initialize	;wreg free
 11241                           
 11242                           ;mcc.c: 117: SPI_Initialize();
 11243  006366  EC00  F032         	call	_SPI_Initialize	;wreg free
 11244                           
 11245                           ;mcc.c: 118: TMR1_Initialize();
 11246  00636A  ECAD  F030         	call	_TMR1_Initialize	;wreg free
 11247                           
 11248                           ;mcc.c: 119: TMR0_Initialize();
 11249  00636E  EC22  F031         	call	_TMR0_Initialize	;wreg free
 11250                           
 11251                           ;mcc.c: 120: ECAN_Initialize();
 11252  006372  ECD4  F02B         	call	_ECAN_Initialize	;wreg free
 11253  006376  0012               	return		;funcret
 11254  006378                     __end_of_SYSTEM_Initialize:
 11255                           	opt stack 0
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           intcon	equ	0xFF2
 11263                           postinc0	equ	0xFEE
 11264                           wreg	equ	0xFE8
 11265                           postdec1	equ	0xFE5
 11266                           plusw1	equ	0xFE3
 11267                           fsr1l	equ	0xFE1
 11268                           plusw2	equ	0xFDB
 11269                           status	equ	0xFD8
 11270                           
 11271 ;; *************** function _TMR1_Initialize *****************
 11272 ;; Defined at:
 11273 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;		None
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;		None
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  1    wreg      void 
 11280 ;; Registers used:
 11281 ;;		wreg, status,2, status,0, cstack
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;Total ram usage:        2 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:    4
 11294 ;; This function calls:
 11295 ;;		_TMR1_SetInterruptHandler
 11296 ;;		_TMR1_StartTimer
 11297 ;; This function is called by:
 11298 ;;		_SYSTEM_Initialize
 11299 ;; This function uses a non-reentrant model
 11300 ;;
 11301                           
 11302                           	psect	text27
 11303  00615A                     __ptext27:
 11304                           	opt stack 0
 11305  00615A                     _TMR1_Initialize:
 11306                           	opt stack 25
 11307                           
 11308                           ;tmr1.c: 68: T1CON = 0x30;
 11309                           
 11310                           ;incstack = 0
 11311  00615A  0E30               	movlw	48
 11312  00615C  6ECD               	movwf	4045,c	;volatile
 11313                           
 11314                           ;tmr1.c: 71: T1GCON = 0x00;
 11315  00615E  0E00               	movlw	0
 11316  006160  6EAA               	movwf	4010,c	;volatile
 11317                           
 11318                           ;tmr1.c: 74: TMR1H = 0x15;
 11319  006162  0E15               	movlw	21
 11320  006164  6ECF               	movwf	4047,c	;volatile
 11321                           
 11322                           ;tmr1.c: 77: TMR1L = 0xA0;
 11323  006166  0EA0               	movlw	160
 11324  006168  6ECE               	movwf	4046,c	;volatile
 11325                           
 11326                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11327  00616A  50CE               	movf	4046,w,c	;volatile
 11328  00616C  CFCF F012          	movff	4047,??_TMR1_Initialize	;volatile
 11329  006170  6A13               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 11330  006172  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 11331  006176  6A12               	clrf	??_TMR1_Initialize,c
 11332  006178  1012               	iorwf	??_TMR1_Initialize,w,c
 11333  00617A  6E48               	movwf	_timer1ReloadVal,c	;volatile
 11334  00617C  5013               	movf	??_TMR1_Initialize+1,w,c
 11335  00617E  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
 11336                           
 11337                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 11338  006180  909E               	bcf	3998,0,c	;volatile
 11339                           
 11340                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 11341  006182  809D               	bsf	3997,0,c	;volatile
 11342                           
 11343                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 11344  006184  0E44               	movlw	low _TMR1_DefaultInterruptHandler
 11345  006186  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
 11346  006188  0E64               	movlw	high _TMR1_DefaultInterruptHandler
 11347  00618A  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
 11348  00618C  EC0C  F032         	call	_TMR1_SetInterruptHandler	;wreg free
 11349                           
 11350                           ;tmr1.c: 92: TMR1_StartTimer();
 11351  006190  EC1C  F032         	call	_TMR1_StartTimer	;wreg free
 11352  006194  0012               	return		;funcret
 11353  006196                     __end_of_TMR1_Initialize:
 11354                           	opt stack 0
 11355                           tblptru	equ	0xFF8
 11356                           tblptrh	equ	0xFF7
 11357                           tblptrl	equ	0xFF6
 11358                           tablat	equ	0xFF5
 11359                           prodh	equ	0xFF4
 11360                           prodl	equ	0xFF3
 11361                           intcon	equ	0xFF2
 11362                           postinc0	equ	0xFEE
 11363                           wreg	equ	0xFE8
 11364                           postdec1	equ	0xFE5
 11365                           plusw1	equ	0xFE3
 11366                           fsr1l	equ	0xFE1
 11367                           plusw2	equ	0xFDB
 11368                           status	equ	0xFD8
 11369                           
 11370 ;; *************** function _TMR1_StartTimer *****************
 11371 ;; Defined at:
 11372 ;;		line 95 in file "mcc_generated_files/tmr1.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;		None
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		None
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;Total ram usage:        0 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; Hardware stack levels required when called:    3
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_TMR1_Initialize
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text28
 11401  006438                     __ptext28:
 11402                           	opt stack 0
 11403  006438                     _TMR1_StartTimer:
 11404                           	opt stack 25
 11405                           
 11406                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
 11407                           
 11408                           ;incstack = 0
 11409  006438  80CD               	bsf	4045,0,c	;volatile
 11410  00643A  0012               	return		;funcret
 11411  00643C                     __end_of_TMR1_StartTimer:
 11412                           	opt stack 0
 11413                           tblptru	equ	0xFF8
 11414                           tblptrh	equ	0xFF7
 11415                           tblptrl	equ	0xFF6
 11416                           tablat	equ	0xFF5
 11417                           prodh	equ	0xFF4
 11418                           prodl	equ	0xFF3
 11419                           intcon	equ	0xFF2
 11420                           postinc0	equ	0xFEE
 11421                           wreg	equ	0xFE8
 11422                           postdec1	equ	0xFE5
 11423                           plusw1	equ	0xFE3
 11424                           fsr1l	equ	0xFE1
 11425                           plusw2	equ	0xFDB
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function _TMR1_SetInterruptHandler *****************
 11429 ;; Defined at:
 11430 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 11433 ;;		 -> refresh(1), TMR1_DefaultInterruptHandler(1), 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;		None
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  1    wreg      void 
 11438 ;; Registers used:
 11439 ;;		wreg, status,2, status,0
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;Total ram usage:        2 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:    3
 11452 ;; This function calls:
 11453 ;;		Nothing
 11454 ;; This function is called by:
 11455 ;;		_TMR1_Initialize
 11456 ;;		_main
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text29
 11461  006418                     __ptext29:
 11462                           	opt stack 0
 11463  006418                     _TMR1_SetInterruptHandler:
 11464                           	opt stack 27
 11465                           
 11466                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
 11467                           
 11468                           ;incstack = 0
 11469  006418  C010  F046         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 11470  00641C  C011  F047         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 11471  006420  0012               	return		;funcret
 11472  006422                     __end_of_TMR1_SetInterruptHandler:
 11473                           	opt stack 0
 11474                           tblptru	equ	0xFF8
 11475                           tblptrh	equ	0xFF7
 11476                           tblptrl	equ	0xFF6
 11477                           tablat	equ	0xFF5
 11478                           prodh	equ	0xFF4
 11479                           prodl	equ	0xFF3
 11480                           intcon	equ	0xFF2
 11481                           postinc0	equ	0xFEE
 11482                           wreg	equ	0xFE8
 11483                           postdec1	equ	0xFE5
 11484                           plusw1	equ	0xFE3
 11485                           fsr1l	equ	0xFE1
 11486                           plusw2	equ	0xFDB
 11487                           status	equ	0xFD8
 11488                           
 11489 ;; *************** function _TMR0_Initialize *****************
 11490 ;; Defined at:
 11491 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;		None
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;		None
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  1    wreg      void 
 11498 ;; Registers used:
 11499 ;;		wreg, status,2, status,0, cstack
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11509 ;;Total ram usage:        2 bytes
 11510 ;; Hardware stack levels used:    1
 11511 ;; Hardware stack levels required when called:    4
 11512 ;; This function calls:
 11513 ;;		_TMR0_SetInterruptHandler
 11514 ;;		_TMR0_StartTimer
 11515 ;; This function is called by:
 11516 ;;		_SYSTEM_Initialize
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text30
 11521  006244                     __ptext30:
 11522                           	opt stack 0
 11523  006244                     _TMR0_Initialize:
 11524                           	opt stack 25
 11525                           
 11526                           ;tmr0.c: 71: T0CON = 0x15;
 11527                           
 11528                           ;incstack = 0
 11529  006244  0E15               	movlw	21
 11530  006246  6ED5               	movwf	4053,c	;volatile
 11531                           
 11532                           ;tmr0.c: 74: TMR0H = 0x9E;
 11533  006248  0E9E               	movlw	158
 11534  00624A  6ED7               	movwf	4055,c	;volatile
 11535                           
 11536                           ;tmr0.c: 77: TMR0L = 0x57;
 11537  00624C  0E57               	movlw	87
 11538  00624E  6ED6               	movwf	4054,c	;volatile
 11539                           
 11540                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
 11541  006250  50D6               	movf	4054,w,c	;volatile
 11542  006252  CFD7 F012          	movff	4055,??_TMR0_Initialize	;volatile
 11543  006256  6A13               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 11544  006258  C012  F013         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 11545  00625C  6A12               	clrf	??_TMR0_Initialize,c
 11546  00625E  1012               	iorwf	??_TMR0_Initialize,w,c
 11547  006260  6E42               	movwf	_timer0ReloadVal,c	;volatile
 11548  006262  5013               	movf	??_TMR0_Initialize+1,w,c
 11549  006264  6E43               	movwf	_timer0ReloadVal+1,c	;volatile
 11550                           
 11551                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
 11552  006266  94F2               	bcf	intcon,2,c	;volatile
 11553                           
 11554                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
 11555  006268  8AF2               	bsf	intcon,5,c	;volatile
 11556                           
 11557                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 11558  00626A  0E46               	movlw	low _TMR0_DefaultInterruptHandler
 11559  00626C  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
 11560  00626E  0E64               	movlw	high _TMR0_DefaultInterruptHandler
 11561  006270  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
 11562  006272  EC11  F032         	call	_TMR0_SetInterruptHandler	;wreg free
 11563                           
 11564                           ;tmr0.c: 92: TMR0_StartTimer();
 11565  006276  EC1E  F032         	call	_TMR0_StartTimer	;wreg free
 11566  00627A  0012               	return		;funcret
 11567  00627C                     __end_of_TMR0_Initialize:
 11568                           	opt stack 0
 11569                           tblptru	equ	0xFF8
 11570                           tblptrh	equ	0xFF7
 11571                           tblptrl	equ	0xFF6
 11572                           tablat	equ	0xFF5
 11573                           prodh	equ	0xFF4
 11574                           prodl	equ	0xFF3
 11575                           intcon	equ	0xFF2
 11576                           postinc0	equ	0xFEE
 11577                           wreg	equ	0xFE8
 11578                           postdec1	equ	0xFE5
 11579                           plusw1	equ	0xFE3
 11580                           fsr1l	equ	0xFE1
 11581                           plusw2	equ	0xFDB
 11582                           status	equ	0xFD8
 11583                           
 11584 ;; *************** function _TMR0_StartTimer *****************
 11585 ;; Defined at:
 11586 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;		None
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;		None
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  1    wreg      void 
 11593 ;; Registers used:
 11594 ;;		None
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;Total ram usage:        0 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:    3
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		_main
 11611 ;;		_TMR0_Initialize
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           	psect	text31
 11616  00643C                     __ptext31:
 11617                           	opt stack 0
 11618  00643C                     _TMR0_StartTimer:
 11619                           	opt stack 27
 11620                           
 11621                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
 11622                           
 11623                           ;incstack = 0
 11624  00643C  8ED5               	bsf	4053,7,c	;volatile
 11625  00643E  0012               	return		;funcret
 11626  006440                     __end_of_TMR0_StartTimer:
 11627                           	opt stack 0
 11628                           tblptru	equ	0xFF8
 11629                           tblptrh	equ	0xFF7
 11630                           tblptrl	equ	0xFF6
 11631                           tablat	equ	0xFF5
 11632                           prodh	equ	0xFF4
 11633                           prodl	equ	0xFF3
 11634                           intcon	equ	0xFF2
 11635                           postinc0	equ	0xFEE
 11636                           wreg	equ	0xFE8
 11637                           postdec1	equ	0xFE5
 11638                           plusw1	equ	0xFE3
 11639                           fsr1l	equ	0xFE1
 11640                           plusw2	equ	0xFDB
 11641                           status	equ	0xFD8
 11642                           
 11643 ;; *************** function _TMR0_SetInterruptHandler *****************
 11644 ;; Defined at:
 11645 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 11648 ;;		 -> TMR0_DefaultInterruptHandler(1), LED_blink(1), 
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;		None
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      void 
 11653 ;; Registers used:
 11654 ;;		wreg, status,2, status,0
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11664 ;;Total ram usage:        2 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; Hardware stack levels required when called:    3
 11667 ;; This function calls:
 11668 ;;		Nothing
 11669 ;; This function is called by:
 11670 ;;		_main
 11671 ;;		_TMR0_Initialize
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text32
 11676  006422                     __ptext32:
 11677                           	opt stack 0
 11678  006422                     _TMR0_SetInterruptHandler:
 11679                           	opt stack 27
 11680                           
 11681                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
 11682                           
 11683                           ;incstack = 0
 11684  006422  C010  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 11685  006426  C011  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 11686  00642A  0012               	return		;funcret
 11687  00642C                     __end_of_TMR0_SetInterruptHandler:
 11688                           	opt stack 0
 11689                           tblptru	equ	0xFF8
 11690                           tblptrh	equ	0xFF7
 11691                           tblptrl	equ	0xFF6
 11692                           tablat	equ	0xFF5
 11693                           prodh	equ	0xFF4
 11694                           prodl	equ	0xFF3
 11695                           intcon	equ	0xFF2
 11696                           postinc0	equ	0xFEE
 11697                           wreg	equ	0xFE8
 11698                           postdec1	equ	0xFE5
 11699                           plusw1	equ	0xFE3
 11700                           fsr1l	equ	0xFE1
 11701                           plusw2	equ	0xFDB
 11702                           status	equ	0xFD8
 11703                           
 11704 ;; *************** function _SPI_Initialize *****************
 11705 ;; Defined at:
 11706 ;;		line 63 in file "mcc_generated_files/spi.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;		None
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;		None
 11711 ;; Return value:  Size  Location     Type
 11712 ;;                  1    wreg      void 
 11713 ;; Registers used:
 11714 ;;		wreg, status,2
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11724 ;;Total ram usage:        0 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; Hardware stack levels required when called:    3
 11727 ;; This function calls:
 11728 ;;		Nothing
 11729 ;; This function is called by:
 11730 ;;		_SYSTEM_Initialize
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           	psect	text33
 11735  006400                     __ptext33:
 11736                           	opt stack 0
 11737  006400                     _SPI_Initialize:
 11738                           	opt stack 26
 11739                           
 11740                           ;spi.c: 68: SSPSTAT = 0x00;
 11741                           
 11742                           ;incstack = 0
 11743  006400  0E00               	movlw	0
 11744  006402  6EC7               	movwf	4039,c	;volatile
 11745                           
 11746                           ;spi.c: 71: SSPCON1 = 0x20;
 11747  006404  0E20               	movlw	32
 11748  006406  6EC6               	movwf	4038,c	;volatile
 11749                           
 11750                           ;spi.c: 74: SSPADD = 0x00;
 11751  006408  0E00               	movlw	0
 11752  00640A  6EC8               	movwf	4040,c	;volatile
 11753  00640C  0012               	return		;funcret
 11754  00640E                     __end_of_SPI_Initialize:
 11755                           	opt stack 0
 11756                           tblptru	equ	0xFF8
 11757                           tblptrh	equ	0xFF7
 11758                           tblptrl	equ	0xFF6
 11759                           tablat	equ	0xFF5
 11760                           prodh	equ	0xFF4
 11761                           prodl	equ	0xFF3
 11762                           intcon	equ	0xFF2
 11763                           postinc0	equ	0xFEE
 11764                           wreg	equ	0xFE8
 11765                           postdec1	equ	0xFE5
 11766                           plusw1	equ	0xFE3
 11767                           fsr1l	equ	0xFE1
 11768                           plusw2	equ	0xFDB
 11769                           status	equ	0xFD8
 11770                           
 11771 ;; *************** function _PIN_MANAGER_Initialize *****************
 11772 ;; Defined at:
 11773 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11791 ;;Total ram usage:        0 bytes
 11792 ;; Hardware stack levels used:    1
 11793 ;; Hardware stack levels required when called:    3
 11794 ;; This function calls:
 11795 ;;		Nothing
 11796 ;; This function is called by:
 11797 ;;		_SYSTEM_Initialize
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text34
 11802  0061D2                     __ptext34:
 11803                           	opt stack 0
 11804  0061D2                     _PIN_MANAGER_Initialize:
 11805                           	opt stack 26
 11806                           
 11807                           ;pin_manager.c: 57: LATE = 0x00;
 11808                           
 11809                           ;incstack = 0
 11810  0061D2  0E00               	movlw	0
 11811  0061D4  6E8D               	movwf	3981,c	;volatile
 11812                           
 11813                           ;pin_manager.c: 58: LATD = 0x00;
 11814  0061D6  0E00               	movlw	0
 11815  0061D8  6E8C               	movwf	3980,c	;volatile
 11816                           
 11817                           ;pin_manager.c: 59: LATA = 0x00;
 11818  0061DA  0E00               	movlw	0
 11819  0061DC  6E89               	movwf	3977,c	;volatile
 11820                           
 11821                           ;pin_manager.c: 60: LATB = 0x00;
 11822  0061DE  0E00               	movlw	0
 11823  0061E0  6E8A               	movwf	3978,c	;volatile
 11824                           
 11825                           ;pin_manager.c: 61: LATC = 0x00;
 11826  0061E2  0E00               	movlw	0
 11827  0061E4  6E8B               	movwf	3979,c	;volatile
 11828                           
 11829                           ;pin_manager.c: 66: TRISE = 0x07;
 11830  0061E6  0E07               	movlw	7
 11831  0061E8  6E96               	movwf	3990,c	;volatile
 11832                           
 11833                           ;pin_manager.c: 67: TRISA = 0xEC;
 11834  0061EA  0EEC               	movlw	236
 11835  0061EC  6E92               	movwf	3986,c	;volatile
 11836                           
 11837                           ;pin_manager.c: 68: TRISB = 0xDB;
 11838  0061EE  0EDB               	movlw	219
 11839  0061F0  6E93               	movwf	3987,c	;volatile
 11840                           
 11841                           ;pin_manager.c: 69: TRISC = 0xD5;
 11842  0061F2  0ED5               	movlw	213
 11843  0061F4  6E94               	movwf	3988,c	;volatile
 11844                           
 11845                           ;pin_manager.c: 70: TRISD = 0xC2;
 11846  0061F6  0EC2               	movlw	194
 11847  0061F8  6E95               	movwf	3989,c	;volatile
 11848                           
 11849                           ;pin_manager.c: 75: ANCON0 = 0xFF;
 11850  0061FA  010F               	movlb	15	; () banked
 11851  0061FC  695D               	setf	93,b	;volatile
 11852                           
 11853                           ;pin_manager.c: 76: ANCON1 = 0x7D;
 11854  0061FE  0E7D               	movlw	125
 11855  006200  010F               	movlb	15	; () banked
 11856  006202  6F5C               	movwf	92,b	;volatile
 11857                           
 11858                           ;pin_manager.c: 81: WPUB = 0xCF;
 11859  006204  0ECF               	movlw	207
 11860  006206  010F               	movlb	15	; () banked
 11861  006208  6F5B               	movwf	91,b	;volatile
 11862                           
 11863                           ; BSR set to: 15
 11864  00620A  0012               	return		;funcret
 11865  00620C                     __end_of_PIN_MANAGER_Initialize:
 11866                           	opt stack 0
 11867                           tblptru	equ	0xFF8
 11868                           tblptrh	equ	0xFF7
 11869                           tblptrl	equ	0xFF6
 11870                           tablat	equ	0xFF5
 11871                           prodh	equ	0xFF4
 11872                           prodl	equ	0xFF3
 11873                           intcon	equ	0xFF2
 11874                           postinc0	equ	0xFEE
 11875                           wreg	equ	0xFE8
 11876                           postdec1	equ	0xFE5
 11877                           plusw1	equ	0xFE3
 11878                           fsr1l	equ	0xFE1
 11879                           plusw2	equ	0xFDB
 11880                           status	equ	0xFD8
 11881                           
 11882 ;; *************** function _OSCILLATOR_Initialize *****************
 11883 ;; Defined at:
 11884 ;;		line 123 in file "mcc_generated_files/mcc.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;		None
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg, status,2
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11902 ;;Total ram usage:        0 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    3
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_SYSTEM_Initialize
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text35
 11913  0063DE                     __ptext35:
 11914                           	opt stack 0
 11915  0063DE                     _OSCILLATOR_Initialize:
 11916                           	opt stack 26
 11917                           
 11918                           ;mcc.c: 126: OSCCON = 0x60;
 11919                           
 11920                           ; BSR set to: 15
 11921                           ;incstack = 0
 11922  0063DE  0E60               	movlw	96
 11923  0063E0  6ED3               	movwf	4051,c	;volatile
 11924                           
 11925                           ;mcc.c: 128: OSCCON2 = 0x00;
 11926  0063E2  0E00               	movlw	0
 11927  0063E4  6ED2               	movwf	4050,c	;volatile
 11928                           
 11929                           ;mcc.c: 130: OSCTUNE = 0x00;
 11930  0063E6  0E00               	movlw	0
 11931  0063E8  6E9B               	movwf	3995,c	;volatile
 11932                           
 11933                           ;mcc.c: 132: REFOCON = 0x00;
 11934  0063EA  0E00               	movlw	0
 11935  0063EC  6E9A               	movwf	3994,c	;volatile
 11936  0063EE  0012               	return		;funcret
 11937  0063F0                     __end_of_OSCILLATOR_Initialize:
 11938                           	opt stack 0
 11939                           tblptru	equ	0xFF8
 11940                           tblptrh	equ	0xFF7
 11941                           tblptrl	equ	0xFF6
 11942                           tablat	equ	0xFF5
 11943                           prodh	equ	0xFF4
 11944                           prodl	equ	0xFF3
 11945                           intcon	equ	0xFF2
 11946                           postinc0	equ	0xFEE
 11947                           wreg	equ	0xFE8
 11948                           postdec1	equ	0xFE5
 11949                           plusw1	equ	0xFE3
 11950                           fsr1l	equ	0xFE1
 11951                           plusw2	equ	0xFDB
 11952                           status	equ	0xFD8
 11953                           
 11954 ;; *************** function _INTERRUPT_Initialize *****************
 11955 ;; Defined at:
 11956 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  1    wreg      void 
 11963 ;; Registers used:
 11964 ;;		None
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;Total ram usage:        0 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    3
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_SYSTEM_Initialize
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           	psect	text36
 11985  006440                     __ptext36:
 11986                           	opt stack 0
 11987  006440                     _INTERRUPT_Initialize:
 11988                           	opt stack 26
 11989                           
 11990                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
 11991                           
 11992                           ;incstack = 0
 11993  006440  9ED0               	bcf	4048,7,c	;volatile
 11994  006442  0012               	return		;funcret
 11995  006444                     __end_of_INTERRUPT_Initialize:
 11996                           	opt stack 0
 11997                           tblptru	equ	0xFF8
 11998                           tblptrh	equ	0xFF7
 11999                           tblptrl	equ	0xFF6
 12000                           tablat	equ	0xFF5
 12001                           prodh	equ	0xFF4
 12002                           prodl	equ	0xFF3
 12003                           intcon	equ	0xFF2
 12004                           postinc0	equ	0xFEE
 12005                           wreg	equ	0xFE8
 12006                           postdec1	equ	0xFE5
 12007                           plusw1	equ	0xFE3
 12008                           fsr1l	equ	0xFE1
 12009                           plusw2	equ	0xFDB
 12010                           status	equ	0xFD8
 12011                           
 12012 ;; *************** function _ECAN_Initialize *****************
 12013 ;; Defined at:
 12014 ;;		line 63 in file "mcc_generated_files/ecan.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;		None
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, status,2, status,0
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12032 ;;Total ram usage:        1 bytes
 12033 ;; Hardware stack levels used:    1
 12034 ;; Hardware stack levels required when called:    3
 12035 ;; This function calls:
 12036 ;;		Nothing
 12037 ;; This function is called by:
 12038 ;;		_SYSTEM_Initialize
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           
 12042                           	psect	text37
 12043  0057A8                     __ptext37:
 12044                           	opt stack 0
 12045  0057A8                     _ECAN_Initialize:
 12046                           	opt stack 26
 12047                           
 12048                           ;ecan.c: 65: CANCON = 0x80;
 12049                           
 12050                           ;incstack = 0
 12051  0057A8  0E80               	movlw	128
 12052  0057AA  6E6F               	movwf	3951,c	;volatile
 12053  0057AC                     l3617:
 12054  0057AC  506E               	movf	3950,w,c	;volatile
 12055  0057AE  0BE0               	andlw	224
 12056  0057B0  0A80               	xorlw	128
 12057  0057B2  A4D8               	btfss	status,2,c
 12058  0057B4  D7FB               	goto	l3617
 12059                           
 12060                           ;ecan.c: 71: ECANCON = 0x00;
 12061  0057B6  0E00               	movlw	0
 12062  0057B8  6E72               	movwf	3954,c	;volatile
 12063                           
 12064                           ;ecan.c: 85: RXM0EIDH = 0xFF;
 12065  0057BA  010E               	movlb	14	; () banked
 12066  0057BC  69FA               	setf	250,b	;volatile
 12067                           
 12068                           ; BSR set to: 14
 12069                           ;ecan.c: 86: RXM0EIDL = 0xFF;
 12070  0057BE  010E               	movlb	14	; () banked
 12071  0057C0  69FB               	setf	251,b	;volatile
 12072                           
 12073                           ; BSR set to: 14
 12074                           ;ecan.c: 87: RXM0SIDH = 0xFF;
 12075  0057C2  010E               	movlb	14	; () banked
 12076  0057C4  69F8               	setf	248,b	;volatile
 12077                           
 12078                           ; BSR set to: 14
 12079                           ;ecan.c: 88: RXM0SIDL = 0xFF;
 12080  0057C6  010E               	movlb	14	; () banked
 12081  0057C8  69F9               	setf	249,b	;volatile
 12082                           
 12083                           ; BSR set to: 14
 12084                           ;ecan.c: 90: RXM1EIDH = 0xFF;
 12085  0057CA  010E               	movlb	14	; () banked
 12086  0057CC  69FE               	setf	254,b	;volatile
 12087                           
 12088                           ; BSR set to: 14
 12089                           ;ecan.c: 91: RXM1EIDL = 0xFF;
 12090  0057CE  010E               	movlb	14	; () banked
 12091  0057D0  69FF               	setf	255,b	;volatile
 12092                           
 12093                           ; BSR set to: 14
 12094                           ;ecan.c: 92: RXM1SIDH = 0xFF;
 12095  0057D2  010E               	movlb	14	; () banked
 12096  0057D4  69FC               	setf	252,b	;volatile
 12097                           
 12098                           ; BSR set to: 14
 12099                           ;ecan.c: 93: RXM1SIDL = 0xFF;
 12100  0057D6  010E               	movlb	14	; () banked
 12101  0057D8  69FD               	setf	253,b	;volatile
 12102                           
 12103                           ;ecan.c: 99: RXF0EIDH = 0x00;
 12104  0057DA  0E00               	movlw	0
 12105  0057DC  010E               	movlb	14	; () banked
 12106  0057DE  6FE2               	movwf	226,b	;volatile
 12107                           
 12108                           ;ecan.c: 100: RXF0EIDL = 0x00;
 12109  0057E0  0E00               	movlw	0
 12110  0057E2  010E               	movlb	14	; () banked
 12111  0057E4  6FE3               	movwf	227,b	;volatile
 12112                           
 12113                           ;ecan.c: 101: RXF0SIDH = 0x00;
 12114  0057E6  0E00               	movlw	0
 12115  0057E8  010E               	movlb	14	; () banked
 12116  0057EA  6FE0               	movwf	224,b	;volatile
 12117                           
 12118                           ;ecan.c: 102: RXF0SIDL = 0x00;
 12119  0057EC  0E00               	movlw	0
 12120  0057EE  010E               	movlb	14	; () banked
 12121  0057F0  6FE1               	movwf	225,b	;volatile
 12122                           
 12123                           ;ecan.c: 104: RXF1EIDH = 0x00;
 12124  0057F2  0E00               	movlw	0
 12125  0057F4  010E               	movlb	14	; () banked
 12126  0057F6  6FE6               	movwf	230,b	;volatile
 12127                           
 12128                           ;ecan.c: 105: RXF1EIDL = 0x00;
 12129  0057F8  0E00               	movlw	0
 12130  0057FA  010E               	movlb	14	; () banked
 12131  0057FC  6FE7               	movwf	231,b	;volatile
 12132                           
 12133                           ;ecan.c: 106: RXF1SIDH = 0x00;
 12134  0057FE  0E00               	movlw	0
 12135  005800  010E               	movlb	14	; () banked
 12136  005802  6FE4               	movwf	228,b	;volatile
 12137                           
 12138                           ;ecan.c: 107: RXF1SIDL = 0x00;
 12139  005804  0E00               	movlw	0
 12140  005806  010E               	movlb	14	; () banked
 12141  005808  6FE5               	movwf	229,b	;volatile
 12142                           
 12143                           ;ecan.c: 109: RXF2EIDH = 0x00;
 12144  00580A  0E00               	movlw	0
 12145  00580C  010E               	movlb	14	; () banked
 12146  00580E  6FEA               	movwf	234,b	;volatile
 12147                           
 12148                           ;ecan.c: 110: RXF2EIDL = 0x00;
 12149  005810  0E00               	movlw	0
 12150  005812  010E               	movlb	14	; () banked
 12151  005814  6FEB               	movwf	235,b	;volatile
 12152                           
 12153                           ;ecan.c: 111: RXF2SIDH = 0x00;
 12154  005816  0E00               	movlw	0
 12155  005818  010E               	movlb	14	; () banked
 12156  00581A  6FE8               	movwf	232,b	;volatile
 12157                           
 12158                           ;ecan.c: 112: RXF2SIDL = 0x00;
 12159  00581C  0E00               	movlw	0
 12160  00581E  010E               	movlb	14	; () banked
 12161  005820  6FE9               	movwf	233,b	;volatile
 12162                           
 12163                           ;ecan.c: 114: RXF3EIDH = 0x00;
 12164  005822  0E00               	movlw	0
 12165  005824  010E               	movlb	14	; () banked
 12166  005826  6FEE               	movwf	238,b	;volatile
 12167                           
 12168                           ;ecan.c: 115: RXF3EIDL = 0x00;
 12169  005828  0E00               	movlw	0
 12170  00582A  010E               	movlb	14	; () banked
 12171  00582C  6FEF               	movwf	239,b	;volatile
 12172                           
 12173                           ;ecan.c: 116: RXF3SIDH = 0x00;
 12174  00582E  0E00               	movlw	0
 12175  005830  010E               	movlb	14	; () banked
 12176  005832  6FEC               	movwf	236,b	;volatile
 12177                           
 12178                           ;ecan.c: 117: RXF3SIDL = 0x00;
 12179  005834  0E00               	movlw	0
 12180  005836  010E               	movlb	14	; () banked
 12181  005838  6FED               	movwf	237,b	;volatile
 12182                           
 12183                           ;ecan.c: 119: RXF4EIDH = 0x00;
 12184  00583A  0E00               	movlw	0
 12185  00583C  010E               	movlb	14	; () banked
 12186  00583E  6FF2               	movwf	242,b	;volatile
 12187                           
 12188                           ;ecan.c: 120: RXF4EIDL = 0x00;
 12189  005840  0E00               	movlw	0
 12190  005842  010E               	movlb	14	; () banked
 12191  005844  6FF3               	movwf	243,b	;volatile
 12192                           
 12193                           ;ecan.c: 121: RXF4SIDH = 0x00;
 12194  005846  0E00               	movlw	0
 12195  005848  010E               	movlb	14	; () banked
 12196  00584A  6FF0               	movwf	240,b	;volatile
 12197                           
 12198                           ;ecan.c: 122: RXF4SIDL = 0x00;
 12199  00584C  0E00               	movlw	0
 12200  00584E  010E               	movlb	14	; () banked
 12201  005850  6FF1               	movwf	241,b	;volatile
 12202                           
 12203                           ;ecan.c: 124: RXF5EIDH = 0x00;
 12204  005852  0E00               	movlw	0
 12205  005854  010E               	movlb	14	; () banked
 12206  005856  6FF6               	movwf	246,b	;volatile
 12207                           
 12208                           ;ecan.c: 125: RXF5EIDL = 0x00;
 12209  005858  0E00               	movlw	0
 12210  00585A  010E               	movlb	14	; () banked
 12211  00585C  6FF7               	movwf	247,b	;volatile
 12212                           
 12213                           ;ecan.c: 126: RXF5SIDH = 0x00;
 12214  00585E  0E00               	movlw	0
 12215  005860  010E               	movlb	14	; () banked
 12216  005862  6FF4               	movwf	244,b	;volatile
 12217                           
 12218                           ;ecan.c: 127: RXF5SIDL = 0x00;
 12219  005864  0E00               	movlw	0
 12220  005866  010E               	movlb	14	; () banked
 12221  005868  6FF5               	movwf	245,b	;volatile
 12222                           
 12223                           ;ecan.c: 142: BRGCON1 = 0x03;
 12224  00586A  0E03               	movlw	3
 12225  00586C  010E               	movlb	14	; () banked
 12226  00586E  6F43               	movwf	67,b	;volatile
 12227                           
 12228                           ;ecan.c: 143: BRGCON2 = 0x98;
 12229  005870  0E98               	movlw	152
 12230  005872  010E               	movlb	14	; () banked
 12231  005874  6F44               	movwf	68,b	;volatile
 12232                           
 12233                           ;ecan.c: 144: BRGCON3 = 0x01;
 12234  005876  0E01               	movlw	1
 12235  005878  010E               	movlb	14	; () banked
 12236  00587A  6F45               	movwf	69,b	;volatile
 12237                           
 12238                           ;ecan.c: 146: CANCON = 0x00;
 12239  00587C  0E00               	movlw	0
 12240  00587E  6E6F               	movwf	3951,c	;volatile
 12241  005880                     l3637:
 12242  005880  CF6E F010          	movff	3950,??_ECAN_Initialize	;volatile
 12243  005884  0EE0               	movlw	224
 12244  005886  1610               	andwf	??_ECAN_Initialize,f,c
 12245  005888  B4D8               	btfsc	status,2,c
 12246  00588A  0012               	return	
 12247  00588C  D7F9               	goto	l3637
 12248  00588E                     __end_of_ECAN_Initialize:
 12249                           	opt stack 0
 12250                           tblptru	equ	0xFF8
 12251                           tblptrh	equ	0xFF7
 12252                           tblptrl	equ	0xFF6
 12253                           tablat	equ	0xFF5
 12254                           prodh	equ	0xFF4
 12255                           prodl	equ	0xFF3
 12256                           intcon	equ	0xFF2
 12257                           postinc0	equ	0xFEE
 12258                           wreg	equ	0xFE8
 12259                           postdec1	equ	0xFE5
 12260                           plusw1	equ	0xFE3
 12261                           fsr1l	equ	0xFE1
 12262                           plusw2	equ	0xFDB
 12263                           status	equ	0xFD8
 12264                           
 12265 ;; *************** function _FT800_Init *****************
 12266 ;; Defined at:
 12267 ;;		line 143 in file "FT800.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;		None
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;		None
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  1    wreg      void 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0, cstack
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12285 ;;Total ram usage:        2 bytes
 12286 ;; Hardware stack levels used:    1
 12287 ;; Hardware stack levels required when called:    5
 12288 ;; This function calls:
 12289 ;;		_host_command
 12290 ;;		_rd16
 12291 ;;		_wr16
 12292 ;;		_wr32
 12293 ;;		_wr8
 12294 ;; This function is called by:
 12295 ;;		_main
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text38
 12300  004F46                     __ptext38:
 12301                           	opt stack 0
 12302  004F46                     _FT800_Init:
 12303                           	opt stack 25
 12304                           
 12305                           ;FT800.c: 145: LATCbits.LATC1 = 0;
 12306                           
 12307                           ;incstack = 0
 12308  004F46  928B               	bcf	3979,1,c	;volatile
 12309                           
 12310                           ;FT800.c: 146: _delay((unsigned long)((20)*(64000000/4000.0)));
 12311  004F48  0E02               	movlw	2
 12312  004F4A  6E1D               	movwf	(??_FT800_Init+1)& (0+255),c
 12313  004F4C  0EA0               	movlw	160
 12314  004F4E  6E1C               	movwf	??_FT800_Init& (0+255),c
 12315  004F50  0E92               	movlw	146
 12316  004F52                     u1377:
 12317  004F52  2EE8               	decfsz	wreg,f,c
 12318  004F54  D7FE               	bra	u1377
 12319  004F56  2E1C               	decfsz	??_FT800_Init& (0+255),f,c
 12320  004F58  D7FC               	bra	u1377
 12321  004F5A  2E1D               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 12322  004F5C  D7FA               	bra	u1377
 12323  004F5E  D000               	nop2	
 12324                           
 12325                           ;FT800.c: 147: LATCbits.LATC1 = 1;
 12326  004F60  828B               	bsf	3979,1,c	;volatile
 12327                           
 12328                           ;FT800.c: 148: _delay((unsigned long)((20)*(64000000/4000.0)));
 12329  004F62  0E02               	movlw	2
 12330  004F64  6E1D               	movwf	(??_FT800_Init+1)& (0+255),c
 12331  004F66  0EA0               	movlw	160
 12332  004F68  6E1C               	movwf	??_FT800_Init& (0+255),c
 12333  004F6A  0E92               	movlw	146
 12334  004F6C                     u1387:
 12335  004F6C  2EE8               	decfsz	wreg,f,c
 12336  004F6E  D7FE               	bra	u1387
 12337  004F70  2E1C               	decfsz	??_FT800_Init& (0+255),f,c
 12338  004F72  D7FC               	bra	u1387
 12339  004F74  2E1D               	decfsz	(??_FT800_Init+1)& (0+255),f,c
 12340  004F76  D7FA               	bra	u1387
 12341  004F78  D000               	nop2	
 12342                           
 12343                           ;FT800.c: 150: host_command(0x00);
 12344  004F7A  0E00               	movlw	0
 12345  004F7C  ECD7  F031         	call	_host_command
 12346                           
 12347                           ;FT800.c: 152: host_command(0x44);
 12348  004F80  0E44               	movlw	68
 12349  004F82  ECD7  F031         	call	_host_command
 12350                           
 12351                           ;FT800.c: 154: host_command(0x62);
 12352  004F86  0E62               	movlw	98
 12353  004F88  ECD7  F031         	call	_host_command
 12354                           
 12355                           ;FT800.c: 157: wr16(1057840UL, 480);
 12356  004F8C  0E30               	movlw	48
 12357  004F8E  6E11               	movwf	wr16@addr,c
 12358  004F90  0E24               	movlw	36
 12359  004F92  6E12               	movwf	wr16@addr+1,c
 12360  004F94  0E10               	movlw	16
 12361  004F96  6E13               	movwf	wr16@addr+2,c
 12362  004F98  0E01               	movlw	1
 12363  004F9A  6E15               	movwf	wr16@value+1,c
 12364  004F9C  0EE0               	movlw	224
 12365  004F9E  6E14               	movwf	wr16@value,c
 12366  004FA0  ECCB  F030         	call	_wr16	;wreg free
 12367                           
 12368                           ;FT800.c: 158: wr16(1057860UL, 272);
 12369  004FA4  0E44               	movlw	68
 12370  004FA6  6E11               	movwf	wr16@addr,c
 12371  004FA8  0E24               	movlw	36
 12372  004FAA  6E12               	movwf	wr16@addr+1,c
 12373  004FAC  0E10               	movlw	16
 12374  004FAE  6E13               	movwf	wr16@addr+2,c
 12375  004FB0  0E01               	movlw	1
 12376  004FB2  6E15               	movwf	wr16@value+1,c
 12377  004FB4  0E10               	movlw	16
 12378  004FB6  6E14               	movwf	wr16@value,c
 12379  004FB8  ECCB  F030         	call	_wr16	;wreg free
 12380                           
 12381                           ;FT800.c: 159: wr16(1057832UL, 525);
 12382  004FBC  0E28               	movlw	40
 12383  004FBE  6E11               	movwf	wr16@addr,c
 12384  004FC0  0E24               	movlw	36
 12385  004FC2  6E12               	movwf	wr16@addr+1,c
 12386  004FC4  0E10               	movlw	16
 12387  004FC6  6E13               	movwf	wr16@addr+2,c
 12388  004FC8  0E02               	movlw	2
 12389  004FCA  6E15               	movwf	wr16@value+1,c
 12390  004FCC  0E0D               	movlw	13
 12391  004FCE  6E14               	movwf	wr16@value,c
 12392  004FD0  ECCB  F030         	call	_wr16	;wreg free
 12393                           
 12394                           ;FT800.c: 160: wr16(1057844UL, 0);
 12395  004FD4  0E34               	movlw	52
 12396  004FD6  6E11               	movwf	wr16@addr,c
 12397  004FD8  0E24               	movlw	36
 12398  004FDA  6E12               	movwf	wr16@addr+1,c
 12399  004FDC  0E10               	movlw	16
 12400  004FDE  6E13               	movwf	wr16@addr+2,c
 12401  004FE0  0E00               	movlw	0
 12402  004FE2  6E15               	movwf	wr16@value+1,c
 12403  004FE4  0E00               	movlw	0
 12404  004FE6  6E14               	movwf	wr16@value,c
 12405  004FE8  ECCB  F030         	call	_wr16	;wreg free
 12406                           
 12407                           ;FT800.c: 161: wr16(1057848UL, 41);
 12408  004FEC  0E38               	movlw	56
 12409  004FEE  6E11               	movwf	wr16@addr,c
 12410  004FF0  0E24               	movlw	36
 12411  004FF2  6E12               	movwf	wr16@addr+1,c
 12412  004FF4  0E10               	movlw	16
 12413  004FF6  6E13               	movwf	wr16@addr+2,c
 12414  004FF8  0E00               	movlw	0
 12415  004FFA  6E15               	movwf	wr16@value+1,c
 12416  004FFC  0E29               	movlw	41
 12417  004FFE  6E14               	movwf	wr16@value,c
 12418  005000  ECCB  F030         	call	_wr16	;wreg free
 12419                           
 12420                           ;FT800.c: 162: wr16(1057836UL, 43);
 12421  005004  0E2C               	movlw	44
 12422  005006  6E11               	movwf	wr16@addr,c
 12423  005008  0E24               	movlw	36
 12424  00500A  6E12               	movwf	wr16@addr+1,c
 12425  00500C  0E10               	movlw	16
 12426  00500E  6E13               	movwf	wr16@addr+2,c
 12427  005010  0E00               	movlw	0
 12428  005012  6E15               	movwf	wr16@value+1,c
 12429  005014  0E2B               	movlw	43
 12430  005016  6E14               	movwf	wr16@value,c
 12431  005018  ECCB  F030         	call	_wr16	;wreg free
 12432                           
 12433                           ;FT800.c: 163: wr16(1057852UL, 286);
 12434  00501C  0E3C               	movlw	60
 12435  00501E  6E11               	movwf	wr16@addr,c
 12436  005020  0E24               	movlw	36
 12437  005022  6E12               	movwf	wr16@addr+1,c
 12438  005024  0E10               	movlw	16
 12439  005026  6E13               	movwf	wr16@addr+2,c
 12440  005028  0E01               	movlw	1
 12441  00502A  6E15               	movwf	wr16@value+1,c
 12442  00502C  0E1E               	movlw	30
 12443  00502E  6E14               	movwf	wr16@value,c
 12444  005030  ECCB  F030         	call	_wr16	;wreg free
 12445                           
 12446                           ;FT800.c: 164: wr16(1057864UL, 0);
 12447  005034  0E48               	movlw	72
 12448  005036  6E11               	movwf	wr16@addr,c
 12449  005038  0E24               	movlw	36
 12450  00503A  6E12               	movwf	wr16@addr+1,c
 12451  00503C  0E10               	movlw	16
 12452  00503E  6E13               	movwf	wr16@addr+2,c
 12453  005040  0E00               	movlw	0
 12454  005042  6E15               	movwf	wr16@value+1,c
 12455  005044  0E00               	movlw	0
 12456  005046  6E14               	movwf	wr16@value,c
 12457  005048  ECCB  F030         	call	_wr16	;wreg free
 12458                           
 12459                           ;FT800.c: 165: wr16(1057868UL, 10);
 12460  00504C  0E4C               	movlw	76
 12461  00504E  6E11               	movwf	wr16@addr,c
 12462  005050  0E24               	movlw	36
 12463  005052  6E12               	movwf	wr16@addr+1,c
 12464  005054  0E10               	movlw	16
 12465  005056  6E13               	movwf	wr16@addr+2,c
 12466  005058  0E00               	movlw	0
 12467  00505A  6E15               	movwf	wr16@value+1,c
 12468  00505C  0E0A               	movlw	10
 12469  00505E  6E14               	movwf	wr16@value,c
 12470  005060  ECCB  F030         	call	_wr16	;wreg free
 12471                           
 12472                           ;FT800.c: 166: wr16(1057856UL, 12);
 12473  005064  0E40               	movlw	64
 12474  005066  6E11               	movwf	wr16@addr,c
 12475  005068  0E24               	movlw	36
 12476  00506A  6E12               	movwf	wr16@addr+1,c
 12477  00506C  0E10               	movlw	16
 12478  00506E  6E13               	movwf	wr16@addr+2,c
 12479  005070  0E00               	movlw	0
 12480  005072  6E15               	movwf	wr16@value+1,c
 12481  005074  0E0C               	movlw	12
 12482  005076  6E14               	movwf	wr16@value,c
 12483  005078  ECCB  F030         	call	_wr16	;wreg free
 12484                           
 12485                           ;FT800.c: 167: wr8(1057892UL, 0);
 12486  00507C  0E64               	movlw	100
 12487  00507E  6E11               	movwf	wr8@addr,c
 12488  005080  0E24               	movlw	36
 12489  005082  6E12               	movwf	wr8@addr+1,c
 12490  005084  0E10               	movlw	16
 12491  005086  6E13               	movwf	wr8@addr+2,c
 12492  005088  0E00               	movlw	0
 12493  00508A  6E14               	movwf	wr8@value,c
 12494  00508C  EC3E  F031         	call	_wr8	;wreg free
 12495                           
 12496                           ;FT800.c: 168: wr8(1057884UL, 0);
 12497  005090  0E5C               	movlw	92
 12498  005092  6E11               	movwf	wr8@addr,c
 12499  005094  0E24               	movlw	36
 12500  005096  6E12               	movwf	wr8@addr+1,c
 12501  005098  0E10               	movlw	16
 12502  00509A  6E13               	movwf	wr8@addr+2,c
 12503  00509C  0E00               	movlw	0
 12504  00509E  6E14               	movwf	wr8@value,c
 12505  0050A0  EC3E  F031         	call	_wr8	;wreg free
 12506                           
 12507                           ;FT800.c: 169: wr16(1057880UL, 0x01B6);
 12508  0050A4  0E58               	movlw	88
 12509  0050A6  6E11               	movwf	wr16@addr,c
 12510  0050A8  0E24               	movlw	36
 12511  0050AA  6E12               	movwf	wr16@addr+1,c
 12512  0050AC  0E10               	movlw	16
 12513  0050AE  6E13               	movwf	wr16@addr+2,c
 12514  0050B0  0E01               	movlw	1
 12515  0050B2  6E15               	movwf	wr16@value+1,c
 12516  0050B4  0EB6               	movlw	182
 12517  0050B6  6E14               	movwf	wr16@value,c
 12518  0050B8  ECCB  F030         	call	_wr16	;wreg free
 12519                           
 12520                           ;FT800.c: 170: wr8(1057888UL, 0x0000);
 12521  0050BC  0E60               	movlw	96
 12522  0050BE  6E11               	movwf	wr8@addr,c
 12523  0050C0  0E24               	movlw	36
 12524  0050C2  6E12               	movwf	wr8@addr+1,c
 12525  0050C4  0E10               	movlw	16
 12526  0050C6  6E13               	movwf	wr8@addr+2,c
 12527  0050C8  0E00               	movlw	0
 12528  0050CA  6E14               	movwf	wr8@value,c
 12529  0050CC  EC3E  F031         	call	_wr8	;wreg free
 12530                           
 12531                           ;FT800.c: 173: wr8(1057896UL, 0);
 12532  0050D0  0E68               	movlw	104
 12533  0050D2  6E11               	movwf	wr8@addr,c
 12534  0050D4  0E24               	movlw	36
 12535  0050D6  6E12               	movwf	wr8@addr+1,c
 12536  0050D8  0E10               	movlw	16
 12537  0050DA  6E13               	movwf	wr8@addr+2,c
 12538  0050DC  0E00               	movlw	0
 12539  0050DE  6E14               	movwf	wr8@value,c
 12540  0050E0  EC3E  F031         	call	_wr8	;wreg free
 12541                           
 12542                           ;FT800.c: 175: wr8(1057876UL, 0);
 12543  0050E4  0E54               	movlw	84
 12544  0050E6  6E11               	movwf	wr8@addr,c
 12545  0050E8  0E24               	movlw	36
 12546  0050EA  6E12               	movwf	wr8@addr+1,c
 12547  0050EC  0E10               	movlw	16
 12548  0050EE  6E13               	movwf	wr8@addr+2,c
 12549  0050F0  0E00               	movlw	0
 12550  0050F2  6E14               	movwf	wr8@value,c
 12551  0050F4  EC3E  F031         	call	_wr8	;wreg free
 12552                           
 12553                           ;FT800.c: 182: wr32(1048576UL+0,((2UL<<24)|(((0)&255UL)<<16)|(((26)&255UL)<<8)|(((0)&255
      +                          UL)<<0)));
 12554  0050F8  0E00               	movlw	0
 12555  0050FA  6E11               	movwf	wr32@addr,c
 12556  0050FC  0E00               	movlw	0
 12557  0050FE  6E12               	movwf	wr32@addr+1,c
 12558  005100  0E10               	movlw	16
 12559  005102  6E13               	movwf	wr32@addr+2,c
 12560  005104  0E00               	movlw	0
 12561  005106  6E14               	movwf	wr32@value,c
 12562  005108  0E1A               	movlw	26
 12563  00510A  6E15               	movwf	wr32@value+1,c
 12564  00510C  0E00               	movlw	0
 12565  00510E  6E16               	movwf	wr32@value+2,c
 12566  005110  0E02               	movlw	2
 12567  005112  6E17               	movwf	wr32@value+3,c
 12568  005114  EC90  F02F         	call	_wr32	;wreg free
 12569                           
 12570                           ;FT800.c: 183: wr32(1048576UL+4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)
      +                          ));
 12571  005118  0E04               	movlw	4
 12572  00511A  6E11               	movwf	wr32@addr,c
 12573  00511C  0E00               	movlw	0
 12574  00511E  6E12               	movwf	wr32@addr+1,c
 12575  005120  0E10               	movlw	16
 12576  005122  6E13               	movwf	wr32@addr+2,c
 12577  005124  0E07               	movlw	7
 12578  005126  6E14               	movwf	wr32@value,c
 12579  005128  0E00               	movlw	0
 12580  00512A  6E15               	movwf	wr32@value+1,c
 12581  00512C  0E00               	movlw	0
 12582  00512E  6E16               	movwf	wr32@value+2,c
 12583  005130  0E26               	movlw	38
 12584  005132  6E17               	movwf	wr32@value+3,c
 12585  005134  EC90  F02F         	call	_wr32	;wreg free
 12586                           
 12587                           ;FT800.c: 184: wr32(1048576UL+8,((0UL<<24)));
 12588  005138  0E08               	movlw	8
 12589  00513A  6E11               	movwf	wr32@addr,c
 12590  00513C  0E00               	movlw	0
 12591  00513E  6E12               	movwf	wr32@addr+1,c
 12592  005140  0E10               	movlw	16
 12593  005142  6E13               	movwf	wr32@addr+2,c
 12594  005144  0E00               	movlw	0
 12595  005146  6E14               	movwf	wr32@value,c
 12596  005148  0E00               	movlw	0
 12597  00514A  6E15               	movwf	wr32@value+1,c
 12598  00514C  0E00               	movlw	0
 12599  00514E  6E16               	movwf	wr32@value+2,c
 12600  005150  0E00               	movlw	0
 12601  005152  6E17               	movwf	wr32@value+3,c
 12602  005154  EC90  F02F         	call	_wr32	;wreg free
 12603                           
 12604                           ;FT800.c: 186: wr8(1057872UL,2UL);
 12605  005158  0E50               	movlw	80
 12606  00515A  6E11               	movwf	wr8@addr,c
 12607  00515C  0E24               	movlw	36
 12608  00515E  6E12               	movwf	wr8@addr+1,c
 12609  005160  0E10               	movlw	16
 12610  005162  6E13               	movwf	wr8@addr+2,c
 12611  005164  0E02               	movlw	2
 12612  005166  6E14               	movwf	wr8@value,c
 12613  005168  EC3E  F031         	call	_wr8	;wreg free
 12614                           
 12615                           ;FT800.c: 191: wr8(1057932UL, 0xfc);
 12616  00516C  0E8C               	movlw	140
 12617  00516E  6E11               	movwf	wr8@addr,c
 12618  005170  0E24               	movlw	36
 12619  005172  6E12               	movwf	wr8@addr+1,c
 12620  005174  0E10               	movlw	16
 12621  005176  6E13               	movwf	wr8@addr+2,c
 12622  005178  0EFC               	movlw	252
 12623  00517A  6E14               	movwf	wr8@value,c
 12624  00517C  EC3E  F031         	call	_wr8	;wreg free
 12625                           
 12626                           ;FT800.c: 192: wr8(1057936UL, 0xff);
 12627  005180  0E90               	movlw	144
 12628  005182  6E11               	movwf	wr8@addr,c
 12629  005184  0E24               	movlw	36
 12630  005186  6E12               	movwf	wr8@addr+1,c
 12631  005188  0E10               	movlw	16
 12632  00518A  6E13               	movwf	wr8@addr+2,c
 12633  00518C  0EFF               	movlw	255
 12634  00518E  6E14               	movwf	wr8@value,c
 12635  005190  EC3E  F031         	call	_wr8	;wreg free
 12636                           
 12637                           ;FT800.c: 194: wr8(1057900UL,5);
 12638  005194  0E6C               	movlw	108
 12639  005196  6E11               	movwf	wr8@addr,c
 12640  005198  0E24               	movlw	36
 12641  00519A  6E12               	movwf	wr8@addr+1,c
 12642  00519C  0E10               	movlw	16
 12643  00519E  6E13               	movwf	wr8@addr+2,c
 12644  0051A0  0E05               	movlw	5
 12645  0051A2  6E14               	movwf	wr8@value,c
 12646  0051A4  EC3E  F031         	call	_wr8	;wreg free
 12647                           
 12648                           ;FT800.c: 196: cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
 12649  0051A8  0EE8               	movlw	232
 12650  0051AA  6E11               	movwf	rd16@addr,c
 12651  0051AC  0E24               	movlw	36
 12652  0051AE  6E12               	movwf	rd16@addr+1,c
 12653  0051B0  0E10               	movlw	16
 12654  0051B2  6E13               	movwf	rd16@addr+2,c
 12655  0051B4  EC04  F030         	call	_rd16	;wreg free
 12656  0051B8  C011  F04A         	movff	?_rd16,_cmd_offset
 12657  0051BC  C012  F04B         	movff	?_rd16+1,_cmd_offset+1
 12658  0051C0                     l4483:
 12659  0051C0  0EE4               	movlw	228
 12660  0051C2  6E11               	movwf	rd16@addr,c
 12661  0051C4  0E24               	movlw	36
 12662  0051C6  6E12               	movwf	rd16@addr+1,c
 12663  0051C8  0E10               	movlw	16
 12664  0051CA  6E13               	movwf	rd16@addr+2,c
 12665  0051CC  EC04  F030         	call	_rd16	;wreg free
 12666  0051D0  504A               	movf	_cmd_offset,w,c
 12667  0051D2  1811               	xorwf	?_rd16,w,c
 12668  0051D4  E1F5               	bnz	l4483
 12669  0051D6  504B               	movf	_cmd_offset+1,w,c
 12670  0051D8  1812               	xorwf	?_rd16+1,w,c
 12671  0051DA  B4D8               	btfsc	status,2,c
 12672  0051DC  0012               	return	
 12673  0051DE  D7F0               	goto	l4483
 12674  0051E0                     __end_of_FT800_Init:
 12675                           	opt stack 0
 12676                           tblptru	equ	0xFF8
 12677                           tblptrh	equ	0xFF7
 12678                           tblptrl	equ	0xFF6
 12679                           tablat	equ	0xFF5
 12680                           prodh	equ	0xFF4
 12681                           prodl	equ	0xFF3
 12682                           intcon	equ	0xFF2
 12683                           postinc0	equ	0xFEE
 12684                           wreg	equ	0xFE8
 12685                           postdec1	equ	0xFE5
 12686                           plusw1	equ	0xFE3
 12687                           fsr1l	equ	0xFE1
 12688                           plusw2	equ	0xFDB
 12689                           status	equ	0xFD8
 12690                           
 12691 ;; *************** function _wr8 *****************
 12692 ;; Defined at:
 12693 ;;		line 16 in file "FT800.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;  addr            3   16[COMRAM] unsigned um
 12696 ;;  value           1   19[COMRAM] unsigned char 
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;		None
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  1    wreg      void 
 12701 ;; Registers used:
 12702 ;;		wreg, status,2, status,0, cstack
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12710 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12711 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12712 ;;Total ram usage:        7 bytes
 12713 ;; Hardware stack levels used:    1
 12714 ;; Hardware stack levels required when called:    4
 12715 ;; This function calls:
 12716 ;;		_SPI_Exchange8bit
 12717 ;; This function is called by:
 12718 ;;		_FT800_Init
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text39
 12723  00627C                     __ptext39:
 12724                           	opt stack 0
 12725  00627C                     _wr8:
 12726                           	opt stack 25
 12727                           
 12728                           ;FT800.c: 17: LATDbits.LATD0 = 0;
 12729                           
 12730                           ;incstack = 0
 12731  00627C  908C               	bcf	3980,0,c	;volatile
 12732                           
 12733                           ;FT800.c: 18: SPI_Exchange8bit(0x80 | (addr >> 16));
 12734  00627E  5013               	movf	wr8@addr+2,w,c
 12735  006280  0980               	iorlw	128
 12736  006282  ECF8  F031         	call	_SPI_Exchange8bit
 12737                           
 12738                           ;FT800.c: 19: SPI_Exchange8bit(addr >> 8);
 12739  006286  C011  F015         	movff	wr8@addr,??_wr8
 12740  00628A  C012  F016         	movff	wr8@addr+1,??_wr8+1
 12741  00628E  C013  F017         	movff	wr8@addr+2,??_wr8+2
 12742  006292  C016  F015         	movff	??_wr8+1,??_wr8
 12743  006296  C017  F016         	movff	??_wr8+2,??_wr8+1
 12744  00629A  6A17               	clrf	??_wr8+2,c
 12745  00629C  5015               	movf	??_wr8,w,c
 12746  00629E  ECF8  F031         	call	_SPI_Exchange8bit
 12747                           
 12748                           ;FT800.c: 20: SPI_Exchange8bit(addr);
 12749  0062A2  5011               	movf	wr8@addr,w,c
 12750  0062A4  ECF8  F031         	call	_SPI_Exchange8bit
 12751                           
 12752                           ;FT800.c: 21: SPI_Exchange8bit(value);
 12753  0062A8  5014               	movf	wr8@value,w,c
 12754  0062AA  ECF8  F031         	call	_SPI_Exchange8bit
 12755                           
 12756                           ;FT800.c: 22: LATDbits.LATD0 = 1;
 12757  0062AE  808C               	bsf	3980,0,c	;volatile
 12758  0062B0  0012               	return		;funcret
 12759  0062B2                     __end_of_wr8:
 12760                           	opt stack 0
 12761                           tblptru	equ	0xFF8
 12762                           tblptrh	equ	0xFF7
 12763                           tblptrl	equ	0xFF6
 12764                           tablat	equ	0xFF5
 12765                           prodh	equ	0xFF4
 12766                           prodl	equ	0xFF3
 12767                           intcon	equ	0xFF2
 12768                           postinc0	equ	0xFEE
 12769                           wreg	equ	0xFE8
 12770                           postdec1	equ	0xFE5
 12771                           plusw1	equ	0xFE3
 12772                           fsr1l	equ	0xFE1
 12773                           plusw2	equ	0xFDB
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function _wr32 *****************
 12777 ;; Defined at:
 12778 ;;		line 34 in file "FT800.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  addr            3   16[COMRAM] unsigned um
 12781 ;;  value           4   19[COMRAM] unsigned long 
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;		None
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		wreg, status,2, status,0, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12793 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12795 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12796 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12797 ;;Total ram usage:       11 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:    4
 12800 ;; This function calls:
 12801 ;;		_SPI_Exchange8bit
 12802 ;; This function is called by:
 12803 ;;		_cmd
 12804 ;;		_FT800_Init
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           	psect	text40
 12809  005F20                     __ptext40:
 12810                           	opt stack 0
 12811  005F20                     _wr32:
 12812                           	opt stack 24
 12813                           
 12814                           ;FT800.c: 35: LATDbits.LATD0 = 0;
 12815                           
 12816                           ;incstack = 0
 12817  005F20  908C               	bcf	3980,0,c	;volatile
 12818                           
 12819                           ;FT800.c: 36: SPI_Exchange8bit(0x80 | (addr >> 16));
 12820  005F22  5013               	movf	wr32@addr+2,w,c
 12821  005F24  0980               	iorlw	128
 12822  005F26  ECF8  F031         	call	_SPI_Exchange8bit
 12823                           
 12824                           ;FT800.c: 37: SPI_Exchange8bit(addr >> 8);
 12825  005F2A  C011  F018         	movff	wr32@addr,??_wr32
 12826  005F2E  C012  F019         	movff	wr32@addr+1,??_wr32+1
 12827  005F32  C013  F01A         	movff	wr32@addr+2,??_wr32+2
 12828  005F36  C019  F018         	movff	??_wr32+1,??_wr32
 12829  005F3A  C01A  F019         	movff	??_wr32+2,??_wr32+1
 12830  005F3E  6A1A               	clrf	??_wr32+2,c
 12831  005F40  5018               	movf	??_wr32,w,c
 12832  005F42  ECF8  F031         	call	_SPI_Exchange8bit
 12833                           
 12834                           ;FT800.c: 38: SPI_Exchange8bit(addr);
 12835  005F46  5011               	movf	wr32@addr,w,c
 12836  005F48  ECF8  F031         	call	_SPI_Exchange8bit
 12837                           
 12838                           ;FT800.c: 39: SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value) & 0
      +                          xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchange8bi
      +                          t(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
 12839  005F4C  5014               	movf	wr32@value,w,c
 12840  005F4E  ECF8  F031         	call	_SPI_Exchange8bit
 12841  005F52  5015               	movf	wr32@value+1,w,c
 12842  005F54  ECF8  F031         	call	_SPI_Exchange8bit
 12843  005F58  5016               	movf	wr32@value+2,w,c
 12844  005F5A  ECF8  F031         	call	_SPI_Exchange8bit
 12845  005F5E  C014  F018         	movff	wr32@value,??_wr32
 12846  005F62  C015  F019         	movff	wr32@value+1,??_wr32+1
 12847  005F66  C016  F01A         	movff	wr32@value+2,??_wr32+2
 12848  005F6A  C017  F01B         	movff	wr32@value+3,??_wr32+3
 12849  005F6E  0E11               	movlw	17
 12850  005F70  D005               	goto	u730
 12851  005F72                     u735:
 12852  005F72  90D8               	bcf	status,0,c
 12853  005F74  321B               	rrcf	??_wr32+3,f,c
 12854  005F76  321A               	rrcf	??_wr32+2,f,c
 12855  005F78  3219               	rrcf	??_wr32+1,f,c
 12856  005F7A  3218               	rrcf	??_wr32,f,c
 12857  005F7C                     u730:
 12858  005F7C  2EE8               	decfsz	wreg,f,c
 12859  005F7E  D7F9               	goto	u735
 12860  005F80  C019  F018         	movff	??_wr32+1,??_wr32
 12861  005F84  C01A  F019         	movff	??_wr32+2,??_wr32+1
 12862  005F88  C01B  F01A         	movff	??_wr32+3,??_wr32+2
 12863  005F8C  6A1B               	clrf	??_wr32+3,c
 12864  005F8E  5018               	movf	??_wr32,w,c
 12865  005F90  ECF8  F031         	call	_SPI_Exchange8bit
 12866                           
 12867                           ;FT800.c: 40: LATDbits.LATD0 = 1;
 12868  005F94  808C               	bsf	3980,0,c	;volatile
 12869  005F96  0012               	return		;funcret
 12870  005F98                     __end_of_wr32:
 12871                           	opt stack 0
 12872                           tblptru	equ	0xFF8
 12873                           tblptrh	equ	0xFF7
 12874                           tblptrl	equ	0xFF6
 12875                           tablat	equ	0xFF5
 12876                           prodh	equ	0xFF4
 12877                           prodl	equ	0xFF3
 12878                           intcon	equ	0xFF2
 12879                           postinc0	equ	0xFEE
 12880                           wreg	equ	0xFE8
 12881                           postdec1	equ	0xFE5
 12882                           plusw1	equ	0xFE3
 12883                           fsr1l	equ	0xFE1
 12884                           plusw2	equ	0xFDB
 12885                           status	equ	0xFD8
 12886                           
 12887 ;; *************** function _wr16 *****************
 12888 ;; Defined at:
 12889 ;;		line 25 in file "FT800.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  addr            3   16[COMRAM] unsigned um
 12892 ;;  value           2   19[COMRAM] unsigned int 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0, cstack
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12904 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12906 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12907 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;Total ram usage:        8 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    4
 12911 ;; This function calls:
 12912 ;;		_SPI_Exchange8bit
 12913 ;; This function is called by:
 12914 ;;		_FT800_Init
 12915 ;;		_display_end
 12916 ;;		_display_labels
 12917 ;;		_display_message
 12918 ;;		_display_laptime
 12919 ;;		_display_waterTemp
 12920 ;;		_display_oilTemp
 12921 ;;		_display_fuel
 12922 ;;		_display_battery
 12923 ;;		_display_oilPress
 12924 ;;		_display_tp
 12925 ;;		_display_speed
 12926 ;;		_display_rpm
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text41
 12931  006196                     __ptext41:
 12932                           	opt stack 0
 12933  006196                     _wr16:
 12934                           	opt stack 25
 12935                           
 12936                           ;FT800.c: 26: LATDbits.LATD0 = 0;
 12937                           
 12938                           ;incstack = 0
 12939  006196  908C               	bcf	3980,0,c	;volatile
 12940                           
 12941                           ;FT800.c: 27: SPI_Exchange8bit(0x80 | (addr >> 16));
 12942  006198  5013               	movf	wr16@addr+2,w,c
 12943  00619A  0980               	iorlw	128
 12944  00619C  ECF8  F031         	call	_SPI_Exchange8bit
 12945                           
 12946                           ;FT800.c: 28: SPI_Exchange8bit(addr >> 8);
 12947  0061A0  C011  F016         	movff	wr16@addr,??_wr16
 12948  0061A4  C012  F017         	movff	wr16@addr+1,??_wr16+1
 12949  0061A8  C013  F018         	movff	wr16@addr+2,??_wr16+2
 12950  0061AC  C017  F016         	movff	??_wr16+1,??_wr16
 12951  0061B0  C018  F017         	movff	??_wr16+2,??_wr16+1
 12952  0061B4  6A18               	clrf	??_wr16+2,c
 12953  0061B6  5016               	movf	??_wr16,w,c
 12954  0061B8  ECF8  F031         	call	_SPI_Exchange8bit
 12955                           
 12956                           ;FT800.c: 29: SPI_Exchange8bit(addr);
 12957  0061BC  5011               	movf	wr16@addr,w,c
 12958  0061BE  ECF8  F031         	call	_SPI_Exchange8bit
 12959                           
 12960                           ;FT800.c: 30: SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xFF);
 12961  0061C2  5014               	movf	wr16@value,w,c
 12962  0061C4  ECF8  F031         	call	_SPI_Exchange8bit
 12963  0061C8  5015               	movf	wr16@value+1,w,c
 12964  0061CA  ECF8  F031         	call	_SPI_Exchange8bit
 12965                           
 12966                           ;FT800.c: 31: LATDbits.LATD0 = 1;
 12967  0061CE  808C               	bsf	3980,0,c	;volatile
 12968  0061D0  0012               	return		;funcret
 12969  0061D2                     __end_of_wr16:
 12970                           	opt stack 0
 12971                           tblptru	equ	0xFF8
 12972                           tblptrh	equ	0xFF7
 12973                           tblptrl	equ	0xFF6
 12974                           tablat	equ	0xFF5
 12975                           prodh	equ	0xFF4
 12976                           prodl	equ	0xFF3
 12977                           intcon	equ	0xFF2
 12978                           postinc0	equ	0xFEE
 12979                           wreg	equ	0xFE8
 12980                           postdec1	equ	0xFE5
 12981                           plusw1	equ	0xFE3
 12982                           fsr1l	equ	0xFE1
 12983                           plusw2	equ	0xFDB
 12984                           status	equ	0xFD8
 12985                           
 12986 ;; *************** function _rd16 *****************
 12987 ;; Defined at:
 12988 ;;		line 72 in file "FT800.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;  addr            3   16[COMRAM] unsigned um
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;  temp            1   22[COMRAM] unsigned char 
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  2   16[COMRAM] unsigned int 
 12995 ;; Registers used:
 12996 ;;		wreg, status,2, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13002 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13005 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13006 ;;Total ram usage:        7 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:    4
 13009 ;; This function calls:
 13010 ;;		_SPI_Exchange8bit
 13011 ;; This function is called by:
 13012 ;;		_FT800_Init
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           	psect	text42
 13017  006008                     __ptext42:
 13018                           	opt stack 0
 13019  006008                     _rd16:
 13020                           	opt stack 25
 13021                           
 13022                           ;FT800.c: 73: LATDbits.LATD0 = 0;
 13023                           
 13024                           ;incstack = 0
 13025  006008  908C               	bcf	3980,0,c	;volatile
 13026                           
 13027                           ;FT800.c: 74: SPI_Exchange8bit(addr >> 16);
 13028  00600A  5013               	movf	rd16@addr+2,w,c
 13029  00600C  ECF8  F031         	call	_SPI_Exchange8bit
 13030                           
 13031                           ;FT800.c: 75: SPI_Exchange8bit(addr >> 8);
 13032  006010  C011  F014         	movff	rd16@addr,??_rd16
 13033  006014  C012  F015         	movff	rd16@addr+1,??_rd16+1
 13034  006018  C013  F016         	movff	rd16@addr+2,??_rd16+2
 13035  00601C  C015  F014         	movff	??_rd16+1,??_rd16
 13036  006020  C016  F015         	movff	??_rd16+2,??_rd16+1
 13037  006024  6A16               	clrf	??_rd16+2,c
 13038  006026  5014               	movf	??_rd16,w,c
 13039  006028  ECF8  F031         	call	_SPI_Exchange8bit
 13040                           
 13041                           ;FT800.c: 76: SPI_Exchange8bit(addr);
 13042  00602C  5011               	movf	rd16@addr,w,c
 13043  00602E  ECF8  F031         	call	_SPI_Exchange8bit
 13044                           
 13045                           ;FT800.c: 77: SPI_Exchange8bit(0);
 13046  006032  0E00               	movlw	0
 13047  006034  ECF8  F031         	call	_SPI_Exchange8bit
 13048                           
 13049                           ;FT800.c: 78: SPI_Exchange8bit(0);
 13050  006038  0E00               	movlw	0
 13051  00603A  ECF8  F031         	call	_SPI_Exchange8bit
 13052                           
 13053                           ;FT800.c: 79: ft_uint8_t temp = SSPBUF;
 13054  00603E  CFC9 F017          	movff	4041,rd16@temp	;volatile
 13055                           
 13056                           ;FT800.c: 80: SPI_Exchange8bit(0);
 13057  006042  0E00               	movlw	0
 13058  006044  ECF8  F031         	call	_SPI_Exchange8bit
 13059                           
 13060                           ;FT800.c: 81: LATDbits.LATD0 = 1;
 13061  006048  808C               	bsf	3980,0,c	;volatile
 13062                           
 13063                           ;FT800.c: 82: return ((ft_uint16_t)SSPBUF << 8) | temp;
 13064  00604A  50C9               	movf	4041,w,c	;volatile
 13065  00604C  6E14               	movwf	??_rd16& (0+255),c
 13066  00604E  5017               	movf	rd16@temp,w,c
 13067  006050  6E11               	movwf	?_rd16,c
 13068  006052  C014  F012         	movff	??_rd16,?_rd16+1
 13069  006056  0012               	return	
 13070  006058                     __end_of_rd16:
 13071                           	opt stack 0
 13072                           tblptru	equ	0xFF8
 13073                           tblptrh	equ	0xFF7
 13074                           tblptrl	equ	0xFF6
 13075                           tablat	equ	0xFF5
 13076                           prodh	equ	0xFF4
 13077                           prodl	equ	0xFF3
 13078                           intcon	equ	0xFF2
 13079                           postinc0	equ	0xFEE
 13080                           wreg	equ	0xFE8
 13081                           postdec1	equ	0xFE5
 13082                           plusw1	equ	0xFE3
 13083                           fsr1l	equ	0xFE1
 13084                           plusw2	equ	0xFDB
 13085                           status	equ	0xFD8
 13086                           
 13087 ;; *************** function _host_command *****************
 13088 ;; Defined at:
 13089 ;;		line 8 in file "FT800.c"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;  command         1    wreg     unsigned char 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  command         1   16[COMRAM] unsigned char 
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  1    wreg      void 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, cstack
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13107 ;;Total ram usage:        1 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    4
 13110 ;; This function calls:
 13111 ;;		_SPI_Exchange8bit
 13112 ;; This function is called by:
 13113 ;;		_FT800_Init
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text43
 13118  0063AE                     __ptext43:
 13119                           	opt stack 0
 13120  0063AE                     _host_command:
 13121                           	opt stack 25
 13122                           
 13123                           ;incstack = 0
 13124                           ;host_command@command stored from wreg
 13125  0063AE  6E11               	movwf	host_command@command,c
 13126                           
 13127                           ;FT800.c: 9: LATDbits.LATD0 = 0;
 13128  0063B0  908C               	bcf	3980,0,c	;volatile
 13129                           
 13130                           ;FT800.c: 10: SPI_Exchange8bit(command);
 13131  0063B2  5011               	movf	host_command@command,w,c
 13132  0063B4  ECF8  F031         	call	_SPI_Exchange8bit
 13133                           
 13134                           ;FT800.c: 11: SPI_Exchange8bit(0);
 13135  0063B8  0E00               	movlw	0
 13136  0063BA  ECF8  F031         	call	_SPI_Exchange8bit
 13137                           
 13138                           ;FT800.c: 12: SPI_Exchange8bit(0);
 13139  0063BE  0E00               	movlw	0
 13140  0063C0  ECF8  F031         	call	_SPI_Exchange8bit
 13141                           
 13142                           ;FT800.c: 13: LATDbits.LATD0 = 1;
 13143  0063C4  808C               	bsf	3980,0,c	;volatile
 13144  0063C6  0012               	return		;funcret
 13145  0063C8                     __end_of_host_command:
 13146                           	opt stack 0
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           postinc0	equ	0xFEE
 13155                           wreg	equ	0xFE8
 13156                           postdec1	equ	0xFE5
 13157                           plusw1	equ	0xFE3
 13158                           fsr1l	equ	0xFE1
 13159                           plusw2	equ	0xFDB
 13160                           status	equ	0xFD8
 13161                           
 13162 ;; *************** function _SPI_Exchange8bit *****************
 13163 ;; Defined at:
 13164 ;;		line 77 in file "mcc_generated_files/spi.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  data            1    wreg     unsigned char 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  data            1   15[COMRAM] unsigned char 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      unsigned char 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13182 ;;Total ram usage:        1 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:    3
 13185 ;; This function calls:
 13186 ;;		Nothing
 13187 ;; This function is called by:
 13188 ;;		_host_command
 13189 ;;		_wr8
 13190 ;;		_wr16
 13191 ;;		_wr32
 13192 ;;		_wr8s
 13193 ;;		_rd16
 13194 ;;		_rd8
 13195 ;;		_rd32
 13196 ;;		_SPI_Exchange8bitBuffer
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text44
 13201  0063F0                     __ptext44:
 13202                           	opt stack 0
 13203  0063F0                     _SPI_Exchange8bit:
 13204                           	opt stack 25
 13205                           
 13206                           ;incstack = 0
 13207                           ;SPI_Exchange8bit@data stored from wreg
 13208  0063F0  6E10               	movwf	SPI_Exchange8bit@data,c
 13209                           
 13210                           ;spi.c: 80: SSPCON1bits.WCOL = 0;
 13211  0063F2  9EC6               	bcf	4038,7,c	;volatile
 13212                           
 13213                           ;spi.c: 82: SSPBUF = data;
 13214  0063F4  C010  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 13215  0063F8                     l175:
 13216  0063F8  A0C7               	btfss	4039,0,c	;volatile
 13217  0063FA  D7FE               	goto	l175
 13218                           
 13219                           ;spi.c: 86: }
 13220                           ;spi.c: 88: return (SSPBUF);
 13221  0063FC  50C9               	movf	4041,w,c	;volatile
 13222  0063FE  0012               	return		;funcret
 13223  006400                     __end_of_SPI_Exchange8bit:
 13224                           	opt stack 0
 13225                           tblptru	equ	0xFF8
 13226                           tblptrh	equ	0xFF7
 13227                           tblptrl	equ	0xFF6
 13228                           tablat	equ	0xFF5
 13229                           prodh	equ	0xFF4
 13230                           prodl	equ	0xFF3
 13231                           intcon	equ	0xFF2
 13232                           postinc0	equ	0xFEE
 13233                           wreg	equ	0xFE8
 13234                           postdec1	equ	0xFE5
 13235                           plusw1	equ	0xFE3
 13236                           fsr1l	equ	0xFE1
 13237                           plusw2	equ	0xFDB
 13238                           status	equ	0xFD8
 13239                           
 13240 ;; *************** function _CAN_receive *****************
 13241 ;; Defined at:
 13242 ;;		line 239 in file "mcc_generated_files/ecan.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;  tempCanMsg      2   34[COMRAM] PTR struct .
 13245 ;;		 -> canMessage(14), 
 13246 ;; Auto vars:     Size  Location     Type
 13247 ;;  returnValue     1   36[COMRAM] unsigned char 
 13248 ;; Return value:  Size  Location     Type
 13249 ;;                  1    wreg      unsigned char 
 13250 ;; Registers used:
 13251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13252 ;; Tracked objects:
 13253 ;;		On entry : 0/0
 13254 ;;		On exit  : 0/0
 13255 ;;		Unchanged: 0/0
 13256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13260 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13261 ;;Total ram usage:        3 bytes
 13262 ;; Hardware stack levels used:    1
 13263 ;; Hardware stack levels required when called:    4
 13264 ;; This function calls:
 13265 ;;		_convertReg2ExtendedCANid
 13266 ;;		_convertReg2StandardCANid
 13267 ;; This function is called by:
 13268 ;;		_main
 13269 ;; This function uses a non-reentrant model
 13270 ;;
 13271                           
 13272                           	psect	text45
 13273  0051E0                     __ptext45:
 13274                           	opt stack 0
 13275  0051E0                     _CAN_receive:
 13276                           	opt stack 26
 13277                           
 13278                           ;ecan.c: 240: unsigned char returnValue = 0;
 13279                           
 13280                           ;incstack = 0
 13281  0051E0  0E00               	movlw	0
 13282  0051E2  6E25               	movwf	CAN_receive@returnValue,c
 13283                           
 13284                           ;ecan.c: 244: {
 13285                           ;ecan.c: 247: if (RXB0CONbits.RXFUL != 0)
 13286  0051E4  AE60               	btfss	3936,7,c	;volatile
 13287  0051E6  D083               	goto	l456
 13288                           
 13289                           ;ecan.c: 248: {
 13290                           ;ecan.c: 249: if ((RXB0SIDL & 0x08) == 0x08)
 13291  0051E8  A662               	btfss	3938,3,c	;volatile
 13292  0051EA  D01E               	goto	l4509
 13293                           
 13294                           ;ecan.c: 250: {
 13295                           ;ecan.c: 252: tempCanMsg->frame.idType = (unsigned char) 2;
 13296  0051EC  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13297  0051F0  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13298  0051F4  0E02               	movlw	2
 13299  0051F6  6EDF               	movwf	indf2,c
 13300                           
 13301                           ;ecan.c: 253: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
 13302  0051F8  CF64 F010          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 13303  0051FC  CF61 F011          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 13304  005200  CF62 F012          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 13305  005204  5063               	movf	3939,w,c	;volatile
 13306  005206  ECB4  F02A         	call	_convertReg2ExtendedCANid
 13307  00520A  EE20 F001          	lfsr	2,1
 13308  00520E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13309  005210  26D9               	addwf	fsr2l,f,c
 13310  005212  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13311  005214  22DA               	addwfc	fsr2h,f,c
 13312  005216  C010  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 13313  00521A  C011  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 13314  00521E  C012  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 13315  005222  C013  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 13316                           
 13317                           ;ecan.c: 254: } else {
 13318  005226  D019               	goto	l4513
 13319  005228                     l4509:
 13320                           
 13321                           ;ecan.c: 256: tempCanMsg->frame.idType = (unsigned char) 1;
 13322  005228  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13323  00522C  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13324  005230  0E01               	movlw	1
 13325  005232  6EDF               	movwf	indf2,c
 13326                           
 13327                           ;ecan.c: 257: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
 13328  005234  CF62 F010          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 13329  005238  5061               	movf	3937,w,c	;volatile
 13330  00523A  EC0B  F02F         	call	_convertReg2StandardCANid
 13331  00523E  EE20 F001          	lfsr	2,1
 13332  005242  5023               	movf	CAN_receive@tempCanMsg,w,c
 13333  005244  26D9               	addwf	fsr2l,f,c
 13334  005246  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13335  005248  22DA               	addwfc	fsr2h,f,c
 13336  00524A  C010  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 13337  00524E  C011  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 13338  005252  C012  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 13339  005256  C013  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 13340  00525A                     l4513:
 13341                           
 13342                           ;ecan.c: 258: }
 13343                           ;ecan.c: 260: tempCanMsg->frame.dlc = RXB0DLC;
 13344  00525A  EE20 F005          	lfsr	2,5
 13345  00525E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13346  005260  26D9               	addwf	fsr2l,f,c
 13347  005262  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13348  005264  22DA               	addwfc	fsr2h,f,c
 13349  005266  CF65 FFDF          	movff	3941,indf2	;volatile
 13350                           
 13351                           ;ecan.c: 261: tempCanMsg->frame.data0 = RXB0D0;
 13352  00526A  EE20 F006          	lfsr	2,6
 13353  00526E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13354  005270  26D9               	addwf	fsr2l,f,c
 13355  005272  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13356  005274  22DA               	addwfc	fsr2h,f,c
 13357  005276  CF66 FFDF          	movff	3942,indf2	;volatile
 13358                           
 13359                           ;ecan.c: 262: tempCanMsg->frame.data1 = RXB0D1;
 13360  00527A  EE20 F007          	lfsr	2,7
 13361  00527E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13362  005280  26D9               	addwf	fsr2l,f,c
 13363  005282  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13364  005284  22DA               	addwfc	fsr2h,f,c
 13365  005286  CF67 FFDF          	movff	3943,indf2	;volatile
 13366                           
 13367                           ;ecan.c: 263: tempCanMsg->frame.data2 = RXB0D2;
 13368  00528A  EE20 F008          	lfsr	2,8
 13369  00528E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13370  005290  26D9               	addwf	fsr2l,f,c
 13371  005292  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13372  005294  22DA               	addwfc	fsr2h,f,c
 13373  005296  CF68 FFDF          	movff	3944,indf2	;volatile
 13374                           
 13375                           ;ecan.c: 264: tempCanMsg->frame.data3 = RXB0D3;
 13376  00529A  EE20 F009          	lfsr	2,9
 13377  00529E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13378  0052A0  26D9               	addwf	fsr2l,f,c
 13379  0052A2  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13380  0052A4  22DA               	addwfc	fsr2h,f,c
 13381  0052A6  CF69 FFDF          	movff	3945,indf2	;volatile
 13382                           
 13383                           ;ecan.c: 265: tempCanMsg->frame.data4 = RXB0D4;
 13384  0052AA  EE20 F00A          	lfsr	2,10
 13385  0052AE  5023               	movf	CAN_receive@tempCanMsg,w,c
 13386  0052B0  26D9               	addwf	fsr2l,f,c
 13387  0052B2  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13388  0052B4  22DA               	addwfc	fsr2h,f,c
 13389  0052B6  CF6A FFDF          	movff	3946,indf2	;volatile
 13390                           
 13391                           ;ecan.c: 266: tempCanMsg->frame.data5 = RXB0D5;
 13392  0052BA  EE20 F00B          	lfsr	2,11
 13393  0052BE  5023               	movf	CAN_receive@tempCanMsg,w,c
 13394  0052C0  26D9               	addwf	fsr2l,f,c
 13395  0052C2  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13396  0052C4  22DA               	addwfc	fsr2h,f,c
 13397  0052C6  CF6B FFDF          	movff	3947,indf2	;volatile
 13398                           
 13399                           ;ecan.c: 267: tempCanMsg->frame.data6 = RXB0D6;
 13400  0052CA  EE20 F00C          	lfsr	2,12
 13401  0052CE  5023               	movf	CAN_receive@tempCanMsg,w,c
 13402  0052D0  26D9               	addwf	fsr2l,f,c
 13403  0052D2  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13404  0052D4  22DA               	addwfc	fsr2h,f,c
 13405  0052D6  CF6C FFDF          	movff	3948,indf2	;volatile
 13406                           
 13407                           ;ecan.c: 268: tempCanMsg->frame.data7 = RXB0D7;
 13408  0052DA  EE20 F00D          	lfsr	2,13
 13409  0052DE  5023               	movf	CAN_receive@tempCanMsg,w,c
 13410  0052E0  26D9               	addwf	fsr2l,f,c
 13411  0052E2  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13412  0052E4  22DA               	addwfc	fsr2h,f,c
 13413  0052E6  CF6D FFDF          	movff	3949,indf2	;volatile
 13414                           
 13415                           ;ecan.c: 269: RXB0CONbits.RXFUL = 0;
 13416  0052EA  9E60               	bcf	3936,7,c	;volatile
 13417  0052EC  D089               	goto	l4565
 13418  0052EE                     l456:
 13419  0052EE  010F               	movlb	15	; () banked
 13420  0052F0  AF30               	btfss	48,7,b	;volatile
 13421  0052F2  D088               	goto	l4567
 13422                           
 13423                           ; BSR set to: 15
 13424                           ;ecan.c: 272: {
 13425                           ;ecan.c: 273: if ((RXB1SIDL & 0x08) == 0x08)
 13426  0052F4  010F               	movlb	15	; () banked
 13427  0052F6  A732               	btfss	50,3,b	;volatile
 13428  0052F8  D01F               	goto	l4541
 13429                           
 13430                           ; BSR set to: 15
 13431                           ;ecan.c: 274: {
 13432                           ;ecan.c: 276: tempCanMsg->frame.idType = (unsigned char) 2;
 13433  0052FA  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13434  0052FE  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13435  005302  0E02               	movlw	2
 13436  005304  6EDF               	movwf	indf2,c
 13437                           
 13438                           ; BSR set to: 15
 13439                           ;ecan.c: 277: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
 13440  005306  CF34 F010          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
 13441  00530A  CF31 F011          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
 13442  00530E  CF32 F012          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
 13443  005312  010F               	movlb	15	; () banked
 13444  005314  5133               	movf	51,w,b	;volatile
 13445  005316  ECB4  F02A         	call	_convertReg2ExtendedCANid
 13446  00531A  EE20 F001          	lfsr	2,1
 13447  00531E  5023               	movf	CAN_receive@tempCanMsg,w,c
 13448  005320  26D9               	addwf	fsr2l,f,c
 13449  005322  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13450  005324  22DA               	addwfc	fsr2h,f,c
 13451  005326  C010  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
 13452  00532A  C011  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
 13453  00532E  C012  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
 13454  005332  C013  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
 13455                           
 13456                           ;ecan.c: 278: }
 13457  005336  D01A               	goto	l4545
 13458  005338                     l4541:
 13459                           
 13460                           ;ecan.c: 279: else
 13461                           ;ecan.c: 280: {
 13462                           ;ecan.c: 282: tempCanMsg->frame.idType = (unsigned char) 1;
 13463  005338  C023  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
 13464  00533C  C024  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
 13465  005340  0E01               	movlw	1
 13466  005342  6EDF               	movwf	indf2,c
 13467                           
 13468                           ;ecan.c: 283: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
 13469  005344  CF32 F010          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
 13470  005348  010F               	movlb	15	; () banked
 13471  00534A  5131               	movf	49,w,b	;volatile
 13472  00534C  EC0B  F02F         	call	_convertReg2StandardCANid
 13473  005350  EE20 F001          	lfsr	2,1
 13474  005354  5023               	movf	CAN_receive@tempCanMsg,w,c
 13475  005356  26D9               	addwf	fsr2l,f,c
 13476  005358  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13477  00535A  22DA               	addwfc	fsr2h,f,c
 13478  00535C  C010  FFDE         	movff	?_convertReg2StandardCANid,postinc2
 13479  005360  C011  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
 13480  005364  C012  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
 13481  005368  C013  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
 13482  00536C                     l4545:
 13483                           
 13484                           ;ecan.c: 284: }
 13485                           ;ecan.c: 286: tempCanMsg->frame.dlc = RXB1DLC;
 13486  00536C  EE20 F005          	lfsr	2,5
 13487  005370  5023               	movf	CAN_receive@tempCanMsg,w,c
 13488  005372  26D9               	addwf	fsr2l,f,c
 13489  005374  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13490  005376  22DA               	addwfc	fsr2h,f,c
 13491  005378  CF35 FFDF          	movff	3893,indf2	;volatile
 13492                           
 13493                           ;ecan.c: 287: tempCanMsg->frame.data0 = RXB1D0;
 13494  00537C  EE20 F006          	lfsr	2,6
 13495  005380  5023               	movf	CAN_receive@tempCanMsg,w,c
 13496  005382  26D9               	addwf	fsr2l,f,c
 13497  005384  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13498  005386  22DA               	addwfc	fsr2h,f,c
 13499  005388  CF36 FFDF          	movff	3894,indf2	;volatile
 13500                           
 13501                           ;ecan.c: 288: tempCanMsg->frame.data1 = RXB1D1;
 13502  00538C  EE20 F007          	lfsr	2,7
 13503  005390  5023               	movf	CAN_receive@tempCanMsg,w,c
 13504  005392  26D9               	addwf	fsr2l,f,c
 13505  005394  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13506  005396  22DA               	addwfc	fsr2h,f,c
 13507  005398  CF37 FFDF          	movff	3895,indf2	;volatile
 13508                           
 13509                           ;ecan.c: 289: tempCanMsg->frame.data2 = RXB1D2;
 13510  00539C  EE20 F008          	lfsr	2,8
 13511  0053A0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13512  0053A2  26D9               	addwf	fsr2l,f,c
 13513  0053A4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13514  0053A6  22DA               	addwfc	fsr2h,f,c
 13515  0053A8  CF38 FFDF          	movff	3896,indf2	;volatile
 13516                           
 13517                           ;ecan.c: 290: tempCanMsg->frame.data3 = RXB1D3;
 13518  0053AC  EE20 F009          	lfsr	2,9
 13519  0053B0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13520  0053B2  26D9               	addwf	fsr2l,f,c
 13521  0053B4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13522  0053B6  22DA               	addwfc	fsr2h,f,c
 13523  0053B8  CF39 FFDF          	movff	3897,indf2	;volatile
 13524                           
 13525                           ;ecan.c: 291: tempCanMsg->frame.data4 = RXB1D4;
 13526  0053BC  EE20 F00A          	lfsr	2,10
 13527  0053C0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13528  0053C2  26D9               	addwf	fsr2l,f,c
 13529  0053C4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13530  0053C6  22DA               	addwfc	fsr2h,f,c
 13531  0053C8  CF3A FFDF          	movff	3898,indf2	;volatile
 13532                           
 13533                           ;ecan.c: 292: tempCanMsg->frame.data5 = RXB1D5;
 13534  0053CC  EE20 F00B          	lfsr	2,11
 13535  0053D0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13536  0053D2  26D9               	addwf	fsr2l,f,c
 13537  0053D4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13538  0053D6  22DA               	addwfc	fsr2h,f,c
 13539  0053D8  CF3B FFDF          	movff	3899,indf2	;volatile
 13540                           
 13541                           ;ecan.c: 293: tempCanMsg->frame.data6 = RXB1D6;
 13542  0053DC  EE20 F00C          	lfsr	2,12
 13543  0053E0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13544  0053E2  26D9               	addwf	fsr2l,f,c
 13545  0053E4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13546  0053E6  22DA               	addwfc	fsr2h,f,c
 13547  0053E8  CF3C FFDF          	movff	3900,indf2	;volatile
 13548                           
 13549                           ;ecan.c: 294: tempCanMsg->frame.data7 = RXB1D7;
 13550  0053EC  EE20 F00D          	lfsr	2,13
 13551  0053F0  5023               	movf	CAN_receive@tempCanMsg,w,c
 13552  0053F2  26D9               	addwf	fsr2l,f,c
 13553  0053F4  5024               	movf	CAN_receive@tempCanMsg+1,w,c
 13554  0053F6  22DA               	addwfc	fsr2h,f,c
 13555  0053F8  CF3D FFDF          	movff	3901,indf2	;volatile
 13556                           
 13557                           ;ecan.c: 295: RXB1CONbits.RXFUL = 0;
 13558  0053FC  010F               	movlb	15	; () banked
 13559  0053FE  9F30               	bcf	48,7,b	;volatile
 13560  005400                     l4565:
 13561                           
 13562                           ; BSR set to: 15
 13563                           ;ecan.c: 296: returnValue = 1;
 13564  005400  0E01               	movlw	1
 13565  005402  6E25               	movwf	CAN_receive@returnValue,c
 13566  005404                     l4567:
 13567                           
 13568                           ;ecan.c: 297: }
 13569                           ;ecan.c: 300: PIR5bits.RXB1IF = 0;
 13570  005404  9277               	bcf	3959,1,c	;volatile
 13571                           
 13572                           ;ecan.c: 301: }
 13573                           ;ecan.c: 304: return (returnValue);
 13574  005406  5025               	movf	CAN_receive@returnValue,w,c
 13575  005408  0012               	return	
 13576  00540A                     __end_of_CAN_receive:
 13577                           	opt stack 0
 13578                           tblptru	equ	0xFF8
 13579                           tblptrh	equ	0xFF7
 13580                           tblptrl	equ	0xFF6
 13581                           tablat	equ	0xFF5
 13582                           prodh	equ	0xFF4
 13583                           prodl	equ	0xFF3
 13584                           intcon	equ	0xFF2
 13585                           postinc0	equ	0xFEE
 13586                           wreg	equ	0xFE8
 13587                           postdec1	equ	0xFE5
 13588                           plusw1	equ	0xFE3
 13589                           fsr1l	equ	0xFE1
 13590                           indf2	equ	0xFDF
 13591                           postinc2	equ	0xFDE
 13592                           plusw2	equ	0xFDB
 13593                           fsr2h	equ	0xFDA
 13594                           fsr2l	equ	0xFD9
 13595                           status	equ	0xFD8
 13596                           
 13597 ;; *************** function _convertReg2StandardCANid *****************
 13598 ;; Defined at:
 13599 ;;		line 385 in file "mcc_generated_files/ecan.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;  tempRXBn_SID    1    wreg     unsigned char 
 13602 ;;  tempRXBn_SID    1   15[COMRAM] unsigned char 
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;  tempRXBn_SID    1   21[COMRAM] unsigned char 
 13605 ;;  ConvertedID     4   26[COMRAM] unsigned long 
 13606 ;;  returnValue     4   22[COMRAM] unsigned long 
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  4   15[COMRAM] unsigned long 
 13609 ;; Registers used:
 13610 ;;		wreg, status,2, status,0
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13617 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13619 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13620 ;;Total ram usage:       15 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:    3
 13623 ;; This function calls:
 13624 ;;		Nothing
 13625 ;; This function is called by:
 13626 ;;		_CAN_receive
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           
 13630                           	psect	text46
 13631  005E16                     __ptext46:
 13632                           	opt stack 0
 13633  005E16                     _convertReg2StandardCANid:
 13634                           	opt stack 26
 13635                           
 13636                           ;incstack = 0
 13637                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
 13638  005E16  6E16               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
 13639                           
 13640                           ;ecan.c: 386: unsigned long returnValue = 0;
 13641  005E18  0E00               	movlw	0
 13642  005E1A  6E17               	movwf	convertReg2StandardCANid@returnValue,c
 13643  005E1C  0E00               	movlw	0
 13644  005E1E  6E18               	movwf	convertReg2StandardCANid@returnValue+1,c
 13645  005E20  0E00               	movlw	0
 13646  005E22  6E19               	movwf	convertReg2StandardCANid@returnValue+2,c
 13647  005E24  0E00               	movlw	0
 13648  005E26  6E1A               	movwf	convertReg2StandardCANid@returnValue+3,c
 13649                           
 13650                           ;ecan.c: 387: unsigned long ConvertedID;
 13651                           ;ecan.c: 391: ConvertedID = (tempRXBn_SIDH << 3);
 13652  005E28  5016               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
 13653  005E2A  6E14               	movwf	??_convertReg2StandardCANid& (0+255),c
 13654  005E2C  6A15               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
 13655  005E2E  90D8               	bcf	status,0,c
 13656  005E30  3614               	rlcf	??_convertReg2StandardCANid,f,c
 13657  005E32  3615               	rlcf	??_convertReg2StandardCANid+1,f,c
 13658  005E34  90D8               	bcf	status,0,c
 13659  005E36  3614               	rlcf	??_convertReg2StandardCANid,f,c
 13660  005E38  3615               	rlcf	??_convertReg2StandardCANid+1,f,c
 13661  005E3A  90D8               	bcf	status,0,c
 13662  005E3C  3614               	rlcf	??_convertReg2StandardCANid,f,c
 13663  005E3E  3615               	rlcf	??_convertReg2StandardCANid+1,f,c
 13664  005E40  C014  F01B         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
 13665  005E44  C015  F01C         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
 13666  005E48  0E00               	movlw	0
 13667  005E4A  BE1C               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
 13668  005E4C  0EFF               	movlw	-1
 13669  005E4E  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 13670  005E50  6E1E               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 13671                           
 13672                           ;ecan.c: 392: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
 13673  005E52  C010  F014         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
 13674  005E56  0E05               	movlw	5
 13675  005E58  6E15               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
 13676  005E5A                     u925:
 13677  005E5A  90D8               	bcf	status,0,c
 13678  005E5C  3214               	rrcf	??_convertReg2StandardCANid,f,c
 13679  005E5E  2E15               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
 13680  005E60  D7FC               	goto	u925
 13681  005E62  5014               	movf	??_convertReg2StandardCANid,w,c
 13682  005E64  241B               	addwf	convertReg2StandardCANid@ConvertedID,w,c
 13683  005E66  6E1B               	movwf	convertReg2StandardCANid@ConvertedID,c
 13684  005E68  0E00               	movlw	0
 13685  005E6A  201C               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
 13686  005E6C  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+1,c
 13687  005E6E  0E00               	movlw	0
 13688  005E70  201D               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
 13689  005E72  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+2,c
 13690  005E74  0E00               	movlw	0
 13691  005E76  201E               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
 13692  005E78  6E1E               	movwf	convertReg2StandardCANid@ConvertedID+3,c
 13693                           
 13694                           ;ecan.c: 393: returnValue = ConvertedID;
 13695  005E7A  C01B  F017         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
 13696  005E7E  C01C  F018         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
 13697  005E82  C01D  F019         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
 13698  005E86  C01E  F01A         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
 13699                           
 13700                           ;ecan.c: 394: return (returnValue);
 13701  005E8A  C017  F010         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
 13702  005E8E  C018  F011         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
 13703  005E92  C019  F012         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
 13704  005E96  C01A  F013         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
 13705  005E9A  0012               	return	
 13706  005E9C                     __end_of_convertReg2StandardCANid:
 13707                           	opt stack 0
 13708                           tblptru	equ	0xFF8
 13709                           tblptrh	equ	0xFF7
 13710                           tblptrl	equ	0xFF6
 13711                           tablat	equ	0xFF5
 13712                           prodh	equ	0xFF4
 13713                           prodl	equ	0xFF3
 13714                           intcon	equ	0xFF2
 13715                           postinc0	equ	0xFEE
 13716                           wreg	equ	0xFE8
 13717                           postdec1	equ	0xFE5
 13718                           plusw1	equ	0xFE3
 13719                           fsr1l	equ	0xFE1
 13720                           indf2	equ	0xFDF
 13721                           postinc2	equ	0xFDE
 13722                           plusw2	equ	0xFDB
 13723                           fsr2h	equ	0xFDA
 13724                           fsr2l	equ	0xFD9
 13725                           status	equ	0xFD8
 13726                           
 13727 ;; *************** function _convertReg2ExtendedCANid *****************
 13728 ;; Defined at:
 13729 ;;		line 365 in file "mcc_generated_files/ecan.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;  tempRXBn_EID    1    wreg     unsigned char 
 13732 ;;  tempRXBn_EID    1   15[COMRAM] unsigned char 
 13733 ;;  tempRXBn_SID    1   16[COMRAM] unsigned char 
 13734 ;;  tempRXBn_SID    1   17[COMRAM] unsigned char 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  tempRXBn_EID    1   23[COMRAM] unsigned char 
 13737 ;;  ConvertedID     4   30[COMRAM] unsigned long 
 13738 ;;  returnValue     4   24[COMRAM] unsigned long 
 13739 ;;  CAN_standard    1   29[COMRAM] unsigned char 
 13740 ;;  CAN_standard    1   28[COMRAM] unsigned char 
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  4   15[COMRAM] unsigned long 
 13743 ;; Registers used:
 13744 ;;		wreg, status,2, status,0
 13745 ;; Tracked objects:
 13746 ;;		On entry : 0/0
 13747 ;;		On exit  : 0/0
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13751 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13753 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13754 ;;Total ram usage:       19 bytes
 13755 ;; Hardware stack levels used:    1
 13756 ;; Hardware stack levels required when called:    3
 13757 ;; This function calls:
 13758 ;;		Nothing
 13759 ;; This function is called by:
 13760 ;;		_CAN_receive
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764                           	psect	text47
 13765  005568                     __ptext47:
 13766                           	opt stack 0
 13767  005568                     _convertReg2ExtendedCANid:
 13768                           	opt stack 26
 13769                           
 13770                           ;incstack = 0
 13771                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
 13772  005568  6E18               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
 13773                           
 13774                           ;ecan.c: 366: unsigned long returnValue = 0;
 13775  00556A  0E00               	movlw	0
 13776  00556C  6E19               	movwf	convertReg2ExtendedCANid@returnValue,c
 13777  00556E  0E00               	movlw	0
 13778  005570  6E1A               	movwf	convertReg2ExtendedCANid@returnValue+1,c
 13779  005572  0E00               	movlw	0
 13780  005574  6E1B               	movwf	convertReg2ExtendedCANid@returnValue+2,c
 13781  005576  0E00               	movlw	0
 13782  005578  6E1C               	movwf	convertReg2ExtendedCANid@returnValue+3,c
 13783                           
 13784                           ;ecan.c: 367: unsigned long ConvertedID = 0;
 13785  00557A  0E00               	movlw	0
 13786  00557C  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13787  00557E  0E00               	movlw	0
 13788  005580  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13789  005582  0E00               	movlw	0
 13790  005584  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13791  005586  0E00               	movlw	0
 13792  005588  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13793                           
 13794                           ;ecan.c: 368: unsigned char CAN_standardLo_ID_lo2bits;
 13795                           ;ecan.c: 369: unsigned char CAN_standardLo_ID_hi3bits;
 13796                           ;ecan.c: 371: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
 13797  00558A  5012               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 13798  00558C  0B03               	andlw	3
 13799  00558E  6E1D               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
 13800                           
 13801                           ;ecan.c: 372: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
 13802  005590  3812               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
 13803  005592  42E8               	rrncf	wreg,f,c
 13804  005594  0B07               	andlw	7
 13805  005596  6E1E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
 13806                           
 13807                           ;ecan.c: 373: ConvertedID = (tempRXBn_SIDH << 3);
 13808  005598  5011               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
 13809  00559A  6E14               	movwf	??_convertReg2ExtendedCANid& (0+255),c
 13810  00559C  6A15               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
 13811  00559E  90D8               	bcf	status,0,c
 13812  0055A0  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13813  0055A2  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13814  0055A4  90D8               	bcf	status,0,c
 13815  0055A6  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13816  0055A8  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13817  0055AA  90D8               	bcf	status,0,c
 13818  0055AC  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13819  0055AE  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13820  0055B0  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13821  0055B4  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13822  0055B8  0E00               	movlw	0
 13823  0055BA  BE20               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
 13824  0055BC  0EFF               	movlw	-1
 13825  0055BE  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13826  0055C0  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13827                           
 13828                           ;ecan.c: 374: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
 13829  0055C2  501E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
 13830  0055C4  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13831  0055C6  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13832  0055C8  0E00               	movlw	0
 13833  0055CA  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13834  0055CC  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13835  0055CE  0E00               	movlw	0
 13836  0055D0  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13837  0055D2  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13838  0055D4  0E00               	movlw	0
 13839  0055D6  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13840  0055D8  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13841                           
 13842                           ;ecan.c: 375: ConvertedID = (ConvertedID << 2);
 13843  0055DA  C01F  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
 13844  0055DE  C020  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
 13845  0055E2  C021  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
 13846  0055E6  C022  F017         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
 13847  0055EA  0E02               	movlw	2
 13848  0055EC                     u915:
 13849  0055EC  90D8               	bcf	status,0,c
 13850  0055EE  3614               	rlcf	??_convertReg2ExtendedCANid,f,c
 13851  0055F0  3615               	rlcf	??_convertReg2ExtendedCANid+1,f,c
 13852  0055F2  3616               	rlcf	??_convertReg2ExtendedCANid+2,f,c
 13853  0055F4  3617               	rlcf	??_convertReg2ExtendedCANid+3,f,c
 13854  0055F6  2EE8               	decfsz	wreg,f,c
 13855  0055F8  D7F9               	goto	u915
 13856  0055FA  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13857  0055FE  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13858  005602  C016  F021         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 13859  005606  C017  F022         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 13860                           
 13861                           ;ecan.c: 376: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
 13862  00560A  501D               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
 13863  00560C  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13864  00560E  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13865  005610  0E00               	movlw	0
 13866  005612  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13867  005614  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13868  005616  0E00               	movlw	0
 13869  005618  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13870  00561A  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13871  00561C  0E00               	movlw	0
 13872  00561E  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13873  005620  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13874                           
 13875                           ;ecan.c: 377: ConvertedID = (ConvertedID << 8);
 13876  005622  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 13877  005626  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 13878  00562A  C021  F017         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 13879  00562E  6A14               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 13880  005630  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13881  005634  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13882  005638  C016  F021         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 13883  00563C  C017  F022         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 13884                           
 13885                           ;ecan.c: 378: ConvertedID = ConvertedID + tempRXBn_EIDH;
 13886  005640  5018               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
 13887  005642  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13888  005644  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13889  005646  0E00               	movlw	0
 13890  005648  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13891  00564A  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13892  00564C  0E00               	movlw	0
 13893  00564E  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13894  005650  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13895  005652  0E00               	movlw	0
 13896  005654  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13897  005656  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13898                           
 13899                           ;ecan.c: 379: ConvertedID = (ConvertedID << 8);
 13900  005658  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
 13901  00565C  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
 13902  005660  C021  F017         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
 13903  005664  6A14               	clrf	??_convertReg2ExtendedCANid& (0+255),c
 13904  005666  C014  F01F         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
 13905  00566A  C015  F020         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
 13906  00566E  C016  F021         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
 13907  005672  C017  F022         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
 13908                           
 13909                           ;ecan.c: 380: ConvertedID = ConvertedID + tempRXBn_EIDL;
 13910  005676  5010               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
 13911  005678  241F               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
 13912  00567A  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID,c
 13913  00567C  0E00               	movlw	0
 13914  00567E  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
 13915  005680  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
 13916  005682  0E00               	movlw	0
 13917  005684  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
 13918  005686  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
 13919  005688  0E00               	movlw	0
 13920  00568A  2022               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
 13921  00568C  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
 13922                           
 13923                           ;ecan.c: 381: returnValue = ConvertedID;
 13924  00568E  C01F  F019         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
 13925  005692  C020  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
 13926  005696  C021  F01B         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
 13927  00569A  C022  F01C         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
 13928                           
 13929                           ;ecan.c: 382: return (returnValue);
 13930  00569E  C019  F010         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
 13931  0056A2  C01A  F011         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
 13932  0056A6  C01B  F012         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
 13933  0056AA  C01C  F013         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
 13934  0056AE  0012               	return	
 13935  0056B0                     __end_of_convertReg2ExtendedCANid:
 13936                           	opt stack 0
 13937                           tblptru	equ	0xFF8
 13938                           tblptrh	equ	0xFF7
 13939                           tblptrl	equ	0xFF6
 13940                           tablat	equ	0xFF5
 13941                           prodh	equ	0xFF4
 13942                           prodl	equ	0xFF3
 13943                           intcon	equ	0xFF2
 13944                           postinc0	equ	0xFEE
 13945                           wreg	equ	0xFE8
 13946                           postdec1	equ	0xFE5
 13947                           plusw1	equ	0xFE3
 13948                           fsr1l	equ	0xFE1
 13949                           indf2	equ	0xFDF
 13950                           postinc2	equ	0xFDE
 13951                           plusw2	equ	0xFDB
 13952                           fsr2h	equ	0xFDA
 13953                           fsr2l	equ	0xFD9
 13954                           status	equ	0xFD8
 13955                           
 13956 ;; *************** function _INTERRUPT_InterruptManager *****************
 13957 ;; Defined at:
 13958 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1    wreg      void 
 13965 ;; Registers used:
 13966 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13974 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13975 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13976 ;;Total ram usage:       14 bytes
 13977 ;; Hardware stack levels used:    1
 13978 ;; Hardware stack levels required when called:    2
 13979 ;; This function calls:
 13980 ;;		_TMR0_ISR
 13981 ;;		_TMR1_ISR
 13982 ;; This function is called by:
 13983 ;;		Interrupt level 2
 13984 ;; This function uses a non-reentrant model
 13985 ;;
 13986                           
 13987                           	psect	intcode
 13988  000008                     __pintcode:
 13989                           	opt stack 0
 13990  000008                     _INTERRUPT_InterruptManager:
 13991                           	opt stack 23
 13992                           
 13993                           ;incstack = 0
 13994  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13995  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 13996  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13997  000012  CFE9 F004          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13998  000016  CFEA F005          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13999  00001A  CFE1 F006          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 14000  00001E  CFE2 F007          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 14001  000022  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 14002  000026  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 14003  00002A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 14004  00002E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 14005  000032  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 14006  000036  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 14007  00003A  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 14008  00003E  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 14009                           
 14010                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 14011  000042  BAF2               	btfsc	intcon,5,c	;volatile
 14012  000044  A4F2               	btfss	intcon,2,c	;volatile
 14013  000046  D003               	goto	i2l511
 14014                           
 14015                           ;interrupt_manager.c: 61: {
 14016                           ;interrupt_manager.c: 62: TMR0_ISR();
 14017  000048  EC86  F031         	call	_TMR0_ISR	;wreg free
 14018                           
 14019                           ;interrupt_manager.c: 63: }
 14020  00004C  D006               	goto	i2l515
 14021  00004E                     i2l511:
 14022                           
 14023                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 14024  00004E  BCF2               	btfsc	intcon,6,c	;volatile
 14025  000050  A09D               	btfss	3997,0,c	;volatile
 14026  000052  D003               	goto	i2l515
 14027  000054  B09E               	btfsc	3998,0,c	;volatile
 14028                           
 14029                           ;interrupt_manager.c: 65: {
 14030                           ;interrupt_manager.c: 66: TMR1_ISR();
 14031  000056  EC72  F031         	call	_TMR1_ISR	;wreg free
 14032  00005A                     i2l515:
 14033  00005A  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 14034  00005E  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 14035  000062  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 14036  000066  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 14037  00006A  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 14038  00006E  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 14039  000072  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 14040  000076  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 14041  00007A  C007  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 14042  00007E  C006  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 14043  000082  C005  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 14044  000086  C004  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 14045  00008A  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14046  00008E  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14047  000092  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14048  000094  0011               	retfie		f
 14049  000096                     __end_of_INTERRUPT_InterruptManager:
 14050                           	opt stack 0
 14051                           pclatu	equ	0xFFB
 14052                           pclath	equ	0xFFA
 14053                           tblptru	equ	0xFF8
 14054                           tblptrh	equ	0xFF7
 14055                           tblptrl	equ	0xFF6
 14056                           tablat	equ	0xFF5
 14057                           prodh	equ	0xFF4
 14058                           prodl	equ	0xFF3
 14059                           intcon	equ	0xFF2
 14060                           postinc0	equ	0xFEE
 14061                           fsr0h	equ	0xFEA
 14062                           fsr0l	equ	0xFE9
 14063                           wreg	equ	0xFE8
 14064                           postdec1	equ	0xFE5
 14065                           plusw1	equ	0xFE3
 14066                           fsr1h	equ	0xFE2
 14067                           fsr1l	equ	0xFE1
 14068                           indf2	equ	0xFDF
 14069                           postinc2	equ	0xFDE
 14070                           plusw2	equ	0xFDB
 14071                           fsr2h	equ	0xFDA
 14072                           fsr2l	equ	0xFD9
 14073                           status	equ	0xFD8
 14074                           
 14075 ;; *************** function _TMR1_ISR *****************
 14076 ;; Defined at:
 14077 ;;		line 160 in file "mcc_generated_files/tmr1.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;		None
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;		None
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1    wreg      void 
 14084 ;; Registers used:
 14085 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14095 ;;Total ram usage:        0 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:    1
 14098 ;; This function calls:
 14099 ;;		Absolute function
 14100 ;;		_TMR1_DefaultInterruptHandler
 14101 ;;		_refresh
 14102 ;; This function is called by:
 14103 ;;		_INTERRUPT_InterruptManager
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           	psect	text49
 14108  0062E4                     __ptext49:
 14109                           	opt stack 0
 14110  0062E4                     _TMR1_ISR:
 14111                           	opt stack 23
 14112                           
 14113                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
 14114                           
 14115                           ;incstack = 0
 14116  0062E4  909E               	bcf	3998,0,c	;volatile
 14117                           
 14118                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 14119  0062E6  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 14120  0062E8  6ECF               	movwf	4047,c	;volatile
 14121                           
 14122                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
 14123  0062EA  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 14124                           
 14125                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
 14126  0062EE  5046               	movf	_TMR1_InterruptHandler,w,c
 14127  0062F0  1047               	iorwf	_TMR1_InterruptHandler+1,w,c
 14128  0062F2  B4D8               	btfsc	status,2,c
 14129  0062F4  0012               	return	
 14130                           
 14131                           ;tmr1.c: 170: {
 14132                           ;tmr1.c: 171: TMR1_InterruptHandler();
 14133  0062F6  D801               	call	i2u96_48
 14134  0062F8  0012               	return	
 14135  0062FA                     i2u96_48:
 14136  0062FA  0005               	push	
 14137  0062FC  6EFA               	movwf	pclath,c
 14138  0062FE  5046               	movf	_TMR1_InterruptHandler,w,c
 14139  006300  6EFD               	movwf	tosl,c
 14140  006302  5047               	movf	_TMR1_InterruptHandler+1,w,c
 14141  006304  6EFE               	movwf	tosh,c
 14142  006306  6AFF               	clrf	tosu,c
 14143  006308  50FA               	movf	pclath,w,c
 14144  00630A  0012               	return		;indir
 14145  00630C                     __end_of_TMR1_ISR:
 14146                           	opt stack 0
 14147                           tosu	equ	0xFFF
 14148                           tosh	equ	0xFFE
 14149                           tosl	equ	0xFFD
 14150                           pclatu	equ	0xFFB
 14151                           pclath	equ	0xFFA
 14152                           tblptru	equ	0xFF8
 14153                           tblptrh	equ	0xFF7
 14154                           tblptrl	equ	0xFF6
 14155                           tablat	equ	0xFF5
 14156                           prodh	equ	0xFF4
 14157                           prodl	equ	0xFF3
 14158                           intcon	equ	0xFF2
 14159                           postinc0	equ	0xFEE
 14160                           fsr0h	equ	0xFEA
 14161                           fsr0l	equ	0xFE9
 14162                           wreg	equ	0xFE8
 14163                           postdec1	equ	0xFE5
 14164                           plusw1	equ	0xFE3
 14165                           fsr1h	equ	0xFE2
 14166                           fsr1l	equ	0xFE1
 14167                           indf2	equ	0xFDF
 14168                           postinc2	equ	0xFDE
 14169                           plusw2	equ	0xFDB
 14170                           fsr2h	equ	0xFDA
 14171                           fsr2l	equ	0xFD9
 14172                           status	equ	0xFD8
 14173                           
 14174 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 14175 ;; Defined at:
 14176 ;;		line 180 in file "mcc_generated_files/tmr1.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;		None
 14179 ;; Auto vars:     Size  Location     Type
 14180 ;;		None
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  1    wreg      void 
 14183 ;; Registers used:
 14184 ;;		None
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14194 ;;Total ram usage:        0 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_TMR1_Initialize
 14200 ;;		_TMR1_ISR
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text50
 14205  006444                     __ptext50:
 14206                           	opt stack 0
 14207  006444                     _TMR1_DefaultInterruptHandler:
 14208                           	opt stack 23
 14209                           
 14210                           ;incstack = 0
 14211  006444  0012               	return		;funcret
 14212  006446                     __end_of_TMR1_DefaultInterruptHandler:
 14213                           	opt stack 0
 14214                           tosu	equ	0xFFF
 14215                           tosh	equ	0xFFE
 14216                           tosl	equ	0xFFD
 14217                           pclatu	equ	0xFFB
 14218                           pclath	equ	0xFFA
 14219                           tblptru	equ	0xFF8
 14220                           tblptrh	equ	0xFF7
 14221                           tblptrl	equ	0xFF6
 14222                           tablat	equ	0xFF5
 14223                           prodh	equ	0xFF4
 14224                           prodl	equ	0xFF3
 14225                           intcon	equ	0xFF2
 14226                           postinc0	equ	0xFEE
 14227                           fsr0h	equ	0xFEA
 14228                           fsr0l	equ	0xFE9
 14229                           wreg	equ	0xFE8
 14230                           postdec1	equ	0xFE5
 14231                           plusw1	equ	0xFE3
 14232                           fsr1h	equ	0xFE2
 14233                           fsr1l	equ	0xFE1
 14234                           indf2	equ	0xFDF
 14235                           postinc2	equ	0xFDE
 14236                           plusw2	equ	0xFDB
 14237                           fsr2h	equ	0xFDA
 14238                           fsr2l	equ	0xFD9
 14239                           status	equ	0xFD8
 14240                           
 14241 ;; *************** function _refresh *****************
 14242 ;; Defined at:
 14243 ;;		line 29 in file "main.c"
 14244 ;; Parameters:    Size  Location     Type
 14245 ;;		None
 14246 ;; Auto vars:     Size  Location     Type
 14247 ;;		None
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  1    wreg      void 
 14250 ;; Registers used:
 14251 ;;		wreg, status,2
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14261 ;;Total ram usage:        0 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; This function calls:
 14264 ;;		Nothing
 14265 ;; This function is called by:
 14266 ;;		_main
 14267 ;;		_TMR1_ISR
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text51
 14272  00642C                     __ptext51:
 14273                           	opt stack 0
 14274  00642C                     _refresh:
 14275                           	opt stack 23
 14276                           
 14277                           ;main.c: 30: refresh_screen = 1;
 14278                           
 14279                           ;incstack = 0
 14280  00642C  0E01               	movlw	1
 14281  00642E  0100               	movlb	0	; () banked
 14282  006430  6FA3               	movwf	_refresh_screen& (0+255),b
 14283                           
 14284                           ; BSR set to: 0
 14285  006432  0012               	return		;funcret
 14286  006434                     __end_of_refresh:
 14287                           	opt stack 0
 14288                           tosu	equ	0xFFF
 14289                           tosh	equ	0xFFE
 14290                           tosl	equ	0xFFD
 14291                           pclatu	equ	0xFFB
 14292                           pclath	equ	0xFFA
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           intcon	equ	0xFF2
 14300                           postinc0	equ	0xFEE
 14301                           fsr0h	equ	0xFEA
 14302                           fsr0l	equ	0xFE9
 14303                           wreg	equ	0xFE8
 14304                           postdec1	equ	0xFE5
 14305                           plusw1	equ	0xFE3
 14306                           fsr1h	equ	0xFE2
 14307                           fsr1l	equ	0xFE1
 14308                           indf2	equ	0xFDF
 14309                           postinc2	equ	0xFDE
 14310                           plusw2	equ	0xFDB
 14311                           fsr2h	equ	0xFDA
 14312                           fsr2l	equ	0xFD9
 14313                           status	equ	0xFD8
 14314                           
 14315 ;; *************** function _TMR0_ISR *****************
 14316 ;; Defined at:
 14317 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;		None
 14320 ;; Auto vars:     Size  Location     Type
 14321 ;;		None
 14322 ;; Return value:  Size  Location     Type
 14323 ;;                  1    wreg      void 
 14324 ;; Registers used:
 14325 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14326 ;; Tracked objects:
 14327 ;;		On entry : 0/0
 14328 ;;		On exit  : 0/0
 14329 ;;		Unchanged: 0/0
 14330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14335 ;;Total ram usage:        0 bytes
 14336 ;; Hardware stack levels used:    1
 14337 ;; Hardware stack levels required when called:    1
 14338 ;; This function calls:
 14339 ;;		Absolute function
 14340 ;;		_LED_blink
 14341 ;;		_TMR0_DefaultInterruptHandler
 14342 ;; This function is called by:
 14343 ;;		_INTERRUPT_InterruptManager
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347                           	psect	text52
 14348  00630C                     __ptext52:
 14349                           	opt stack 0
 14350  00630C                     _TMR0_ISR:
 14351                           	opt stack 23
 14352                           
 14353                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
 14354                           
 14355                           ; BSR set to: 0
 14356                           ;incstack = 0
 14357  00630C  94F2               	bcf	intcon,2,c	;volatile
 14358                           
 14359                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
 14360  00630E  5043               	movf	_timer0ReloadVal+1,w,c	;volatile
 14361  006310  6ED7               	movwf	4055,c	;volatile
 14362                           
 14363                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
 14364  006312  C042  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14365                           
 14366                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
 14367  006316  5044               	movf	_TMR0_InterruptHandler,w,c
 14368  006318  1045               	iorwf	_TMR0_InterruptHandler+1,w,c
 14369  00631A  B4D8               	btfsc	status,2,c
 14370  00631C  0012               	return	
 14371                           
 14372                           ;tmr0.c: 146: {
 14373                           ;tmr0.c: 147: TMR0_InterruptHandler();
 14374  00631E  D801               	call	i2u35_48
 14375  006320  0012               	return	
 14376  006322                     i2u35_48:
 14377  006322  0005               	push	
 14378  006324  6EFA               	movwf	pclath,c
 14379  006326  5044               	movf	_TMR0_InterruptHandler,w,c
 14380  006328  6EFD               	movwf	tosl,c
 14381  00632A  5045               	movf	_TMR0_InterruptHandler+1,w,c
 14382  00632C  6EFE               	movwf	tosh,c
 14383  00632E  6AFF               	clrf	tosu,c
 14384  006330  50FA               	movf	pclath,w,c
 14385  006332  0012               	return		;indir
 14386  006334                     __end_of_TMR0_ISR:
 14387                           	opt stack 0
 14388                           tosu	equ	0xFFF
 14389                           tosh	equ	0xFFE
 14390                           tosl	equ	0xFFD
 14391                           pclatu	equ	0xFFB
 14392                           pclath	equ	0xFFA
 14393                           tblptru	equ	0xFF8
 14394                           tblptrh	equ	0xFF7
 14395                           tblptrl	equ	0xFF6
 14396                           tablat	equ	0xFF5
 14397                           prodh	equ	0xFF4
 14398                           prodl	equ	0xFF3
 14399                           intcon	equ	0xFF2
 14400                           postinc0	equ	0xFEE
 14401                           fsr0h	equ	0xFEA
 14402                           fsr0l	equ	0xFE9
 14403                           wreg	equ	0xFE8
 14404                           postdec1	equ	0xFE5
 14405                           plusw1	equ	0xFE3
 14406                           fsr1h	equ	0xFE2
 14407                           fsr1l	equ	0xFE1
 14408                           indf2	equ	0xFDF
 14409                           postinc2	equ	0xFDE
 14410                           plusw2	equ	0xFDB
 14411                           fsr2h	equ	0xFDA
 14412                           fsr2l	equ	0xFD9
 14413                           status	equ	0xFD8
 14414                           
 14415 ;; *************** function _LED_blink *****************
 14416 ;; Defined at:
 14417 ;;		line 33 in file "main.c"
 14418 ;; Parameters:    Size  Location     Type
 14419 ;;		None
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;		None
 14422 ;; Return value:  Size  Location     Type
 14423 ;;                  1    wreg      void 
 14424 ;; Registers used:
 14425 ;;		wreg, status,2, status,0
 14426 ;; Tracked objects:
 14427 ;;		On entry : 0/0
 14428 ;;		On exit  : 0/0
 14429 ;;		Unchanged: 0/0
 14430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14435 ;;Total ram usage:        1 bytes
 14436 ;; Hardware stack levels used:    1
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_main
 14441 ;;		_TMR0_ISR
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445                           	psect	text53
 14446  0062B2                     __ptext53:
 14447                           	opt stack 0
 14448  0062B2                     _LED_blink:
 14449                           	opt stack 23
 14450                           
 14451                           ;main.c: 34: LATAbits.LATA1 = !PORTAbits.RA1;
 14452                           
 14453                           ;incstack = 0
 14454  0062B2  B280               	btfsc	3968,1,c	;volatile
 14455  0062B4  D003               	goto	i2u23_40
 14456  0062B6  6A01               	clrf	??_LED_blink& (0+255),c
 14457  0062B8  2A01               	incf	??_LED_blink& (0+255),f,c
 14458  0062BA  D001               	goto	i2u24_48
 14459  0062BC                     i2u23_40:
 14460  0062BC  6A01               	clrf	??_LED_blink& (0+255),c
 14461  0062BE                     i2u24_48:
 14462  0062BE  4601               	rlncf	??_LED_blink,f,c
 14463  0062C0  5089               	movf	3977,w,c	;volatile
 14464  0062C2  1801               	xorwf	??_LED_blink,w,c
 14465  0062C4  0BFD               	andlw	-3
 14466  0062C6  1801               	xorwf	??_LED_blink,w,c
 14467  0062C8  6E89               	movwf	3977,c	;volatile
 14468                           
 14469                           ;main.c: 35: LATDbits.LATD4 = !PORTDbits.RD4;
 14470  0062CA  B883               	btfsc	3971,4,c	;volatile
 14471  0062CC  D003               	goto	i2u25_40
 14472  0062CE  6A01               	clrf	??_LED_blink& (0+255),c
 14473  0062D0  2A01               	incf	??_LED_blink& (0+255),f,c
 14474  0062D2  D001               	goto	i2u26_48
 14475  0062D4                     i2u25_40:
 14476  0062D4  6A01               	clrf	??_LED_blink& (0+255),c
 14477  0062D6                     i2u26_48:
 14478  0062D6  3A01               	swapf	??_LED_blink,f,c
 14479  0062D8  508C               	movf	3980,w,c	;volatile
 14480  0062DA  1801               	xorwf	??_LED_blink,w,c
 14481  0062DC  0BEF               	andlw	-17
 14482  0062DE  1801               	xorwf	??_LED_blink,w,c
 14483  0062E0  6E8C               	movwf	3980,c	;volatile
 14484  0062E2  0012               	return		;funcret
 14485  0062E4                     __end_of_LED_blink:
 14486                           	opt stack 0
 14487                           tosu	equ	0xFFF
 14488                           tosh	equ	0xFFE
 14489                           tosl	equ	0xFFD
 14490                           pclatu	equ	0xFFB
 14491                           pclath	equ	0xFFA
 14492                           tblptru	equ	0xFF8
 14493                           tblptrh	equ	0xFF7
 14494                           tblptrl	equ	0xFF6
 14495                           tablat	equ	0xFF5
 14496                           prodh	equ	0xFF4
 14497                           prodl	equ	0xFF3
 14498                           intcon	equ	0xFF2
 14499                           postinc0	equ	0xFEE
 14500                           fsr0h	equ	0xFEA
 14501                           fsr0l	equ	0xFE9
 14502                           wreg	equ	0xFE8
 14503                           postdec1	equ	0xFE5
 14504                           plusw1	equ	0xFE3
 14505                           fsr1h	equ	0xFE2
 14506                           fsr1l	equ	0xFE1
 14507                           indf2	equ	0xFDF
 14508                           postinc2	equ	0xFDE
 14509                           plusw2	equ	0xFDB
 14510                           fsr2h	equ	0xFDA
 14511                           fsr2l	equ	0xFD9
 14512                           status	equ	0xFD8
 14513                           
 14514 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14515 ;; Defined at:
 14516 ;;		line 158 in file "mcc_generated_files/tmr0.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;		None
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;		None
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  1    wreg      void 
 14523 ;; Registers used:
 14524 ;;		None
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14534 ;;Total ram usage:        0 bytes
 14535 ;; Hardware stack levels used:    1
 14536 ;; This function calls:
 14537 ;;		Nothing
 14538 ;; This function is called by:
 14539 ;;		_TMR0_Initialize
 14540 ;;		_TMR0_ISR
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text54
 14545  006446                     __ptext54:
 14546                           	opt stack 0
 14547  006446                     _TMR0_DefaultInterruptHandler:
 14548                           	opt stack 23
 14549                           
 14550                           ;incstack = 0
 14551  006446  0012               	return		;funcret
 14552  006448                     __end_of_TMR0_DefaultInterruptHandler:
 14553                           	opt stack 0
 14554                           tosu	equ	0xFFF
 14555                           tosh	equ	0xFFE
 14556                           tosl	equ	0xFFD
 14557                           pclatu	equ	0xFFB
 14558                           pclath	equ	0xFFA
 14559                           tblptru	equ	0xFF8
 14560                           tblptrh	equ	0xFF7
 14561                           tblptrl	equ	0xFF6
 14562                           tablat	equ	0xFF5
 14563                           prodh	equ	0xFF4
 14564                           prodl	equ	0xFF3
 14565                           intcon	equ	0xFF2
 14566                           postinc0	equ	0xFEE
 14567                           fsr0h	equ	0xFEA
 14568                           fsr0l	equ	0xFE9
 14569                           wreg	equ	0xFE8
 14570                           postdec1	equ	0xFE5
 14571                           plusw1	equ	0xFE3
 14572                           fsr1h	equ	0xFE2
 14573                           fsr1l	equ	0xFE1
 14574                           indf2	equ	0xFDF
 14575                           postinc2	equ	0xFDE
 14576                           plusw2	equ	0xFDB
 14577                           fsr2h	equ	0xFDA
 14578                           fsr2l	equ	0xFD9
 14579                           status	equ	0xFD8
 14580                           tosu	equ	0xFFF
 14581                           tosh	equ	0xFFE
 14582                           tosl	equ	0xFFD
 14583                           pclatu	equ	0xFFB
 14584                           pclath	equ	0xFFA
 14585                           tblptru	equ	0xFF8
 14586                           tblptrh	equ	0xFF7
 14587                           tblptrl	equ	0xFF6
 14588                           tablat	equ	0xFF5
 14589                           prodh	equ	0xFF4
 14590                           prodl	equ	0xFF3
 14591                           intcon	equ	0xFF2
 14592                           postinc0	equ	0xFEE
 14593                           fsr0h	equ	0xFEA
 14594                           fsr0l	equ	0xFE9
 14595                           wreg	equ	0xFE8
 14596                           postdec1	equ	0xFE5
 14597                           plusw1	equ	0xFE3
 14598                           fsr1h	equ	0xFE2
 14599                           fsr1l	equ	0xFE1
 14600                           indf2	equ	0xFDF
 14601                           postinc2	equ	0xFDE
 14602                           plusw2	equ	0xFDB
 14603                           fsr2h	equ	0xFDA
 14604                           fsr2l	equ	0xFD9
 14605                           status	equ	0xFD8
 14606                           
 14607                           	psect	text55
 14608  000000                     __ptext55:
 14609                           	opt stack 0
 14610                           tosu	equ	0xFFF
 14611                           tosh	equ	0xFFE
 14612                           tosl	equ	0xFFD
 14613                           pclatu	equ	0xFFB
 14614                           pclath	equ	0xFFA
 14615                           tblptru	equ	0xFF8
 14616                           tblptrh	equ	0xFF7
 14617                           tblptrl	equ	0xFF6
 14618                           tablat	equ	0xFF5
 14619                           prodh	equ	0xFF4
 14620                           prodl	equ	0xFF3
 14621                           intcon	equ	0xFF2
 14622                           postinc0	equ	0xFEE
 14623                           fsr0h	equ	0xFEA
 14624                           fsr0l	equ	0xFE9
 14625                           wreg	equ	0xFE8
 14626                           postdec1	equ	0xFE5
 14627                           plusw1	equ	0xFE3
 14628                           fsr1h	equ	0xFE2
 14629                           fsr1l	equ	0xFE1
 14630                           indf2	equ	0xFDF
 14631                           postinc2	equ	0xFDE
 14632                           plusw2	equ	0xFDB
 14633                           fsr2h	equ	0xFDA
 14634                           fsr2l	equ	0xFD9
 14635                           status	equ	0xFD8
 14636                           
 14637                           	psect	rparam
 14638  0000                     tosu	equ	0xFFF
 14639                           tosh	equ	0xFFE
 14640                           tosl	equ	0xFFD
 14641                           pclatu	equ	0xFFB
 14642                           pclath	equ	0xFFA
 14643                           tblptru	equ	0xFF8
 14644                           tblptrh	equ	0xFF7
 14645                           tblptrl	equ	0xFF6
 14646                           tablat	equ	0xFF5
 14647                           prodh	equ	0xFF4
 14648                           prodl	equ	0xFF3
 14649                           intcon	equ	0xFF2
 14650                           postinc0	equ	0xFEE
 14651                           fsr0h	equ	0xFEA
 14652                           fsr0l	equ	0xFE9
 14653                           wreg	equ	0xFE8
 14654                           postdec1	equ	0xFE5
 14655                           plusw1	equ	0xFE3
 14656                           fsr1h	equ	0xFE2
 14657                           fsr1l	equ	0xFE1
 14658                           indf2	equ	0xFDF
 14659                           postinc2	equ	0xFDE
 14660                           plusw2	equ	0xFDB
 14661                           fsr2h	equ	0xFDA
 14662                           fsr2l	equ	0xFD9
 14663                           status	equ	0xFD8
 14664                           
 14665                           	psect	temp
 14666  00004F                     btemp:
 14667                           	opt stack 0
 14668  00004F                     	ds	1
 14669  0000                     int$flags	set	btemp
 14670                           tosu	equ	0xFFF
 14671                           tosh	equ	0xFFE
 14672                           tosl	equ	0xFFD
 14673                           pclatu	equ	0xFFB
 14674                           pclath	equ	0xFFA
 14675                           tblptru	equ	0xFF8
 14676                           tblptrh	equ	0xFF7
 14677                           tblptrl	equ	0xFF6
 14678                           tablat	equ	0xFF5
 14679                           prodh	equ	0xFF4
 14680                           prodl	equ	0xFF3
 14681                           intcon	equ	0xFF2
 14682                           postinc0	equ	0xFEE
 14683                           fsr0h	equ	0xFEA
 14684                           fsr0l	equ	0xFE9
 14685                           wreg	equ	0xFE8
 14686                           postdec1	equ	0xFE5
 14687                           plusw1	equ	0xFE3
 14688                           fsr1h	equ	0xFE2
 14689                           fsr1l	equ	0xFE1
 14690                           indf2	equ	0xFDF
 14691                           postinc2	equ	0xFDE
 14692                           plusw2	equ	0xFDB
 14693                           fsr2h	equ	0xFDA
 14694                           fsr2l	equ	0xFD9
 14695                           status	equ	0xFD8


Data Sizes:
    Strings     138
    Constant    0
    Data        22
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      78
    BANK0           160     45      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_36(CODE[4]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[3]), 
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[4]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[2]), STR_14(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[4]), STR_9(CODE[6]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_36(CODE[4]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[3]), 
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[4]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[2]), STR_14(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[4]), STR_9(CODE[6]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[6]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LED_blink(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LED_blink(), Absolute function(), 

    display_message@message	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(BANK0[14]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> refresh(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    wr8s@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_36(CODE[4]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[3]), 
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[4]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[2]), STR_14(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[4]), STR_9(CODE[6]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display_laptime->_cmd
    _display->_display_rpm
    _display_waterTemp->_cmd
    _display_tp->_cmd
    _display_start->_cmd
    _display_speed->_cmd
    _display_rpm->_cmd
    _display_oilTemp->_cmd
    _display_oilPress->_cmd
    _display_message->_cmd
    _display_labels->_cmd
    _display_gear->_cmd
    _display_fuel->_cmd
    _display_end->_cmd
    _display_battery->_cmd
    _wr8s->_strlen
    _cmd->___awmod
    ___awmod->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _FT800_Init->_wr32
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->_SPI_Exchange8bit
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_LED_blink

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0 1403411
                                              0 BANK0     45    45      0
                        _CAN_receive
                         _FT800_Init
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                            ___awdiv
                            ___awmod
                            _display
                    _display_battery
                        _display_end
                       _display_fuel
                       _display_gear
                     _display_labels
                    _display_laptime
                    _display_message
                   _display_oilPress
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                         _display_tp
                  _display_waterTemp
                          _wait2secs
 ---------------------------------------------------------------------------------
 (1) _wait2secs                                            2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_laptime                                     19     3     16   60112
                                             36 COMRAM    19     3     16
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display                                             18     0     18  648041
                                             47 COMRAM    18     0     18
                    _display_battery
                        _display_end
                       _display_fuel
                       _display_gear
                     _display_labels
                    _display_message
                   _display_oilPress
                    _display_oilTemp
                        _display_rpm
                      _display_speed
                      _display_start
                         _display_tp
                  _display_waterTemp
 ---------------------------------------------------------------------------------
 (1) _display_waterTemp                                    5     3      2   53596
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_tp                                           5     3      2   53596
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_start                                        0     0      0   14356
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_speed                                        5     3      2   53596
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_rpm                                         11     9      2   62390
                                             36 COMRAM    11     9      2
                            ___awdiv
                            ___awmod
                             ___wmul
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_oilTemp                                      5     3      2   53596
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_oilPress                                     5     3      2   53596
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_message                                      5     3      2   59480
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_labels                                       5     5      0   59527
                                             36 COMRAM     5     5      0
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (1) _display_gear                                         4     2      2   14530
                                             36 COMRAM     4     2      2
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_fuel                                         5     3      2   53596
                                             36 COMRAM     5     3      2
                                _cmd
                     _cmd_incrementn
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_end                                          0     0      0   53400
                                _cmd
                               _wr16
 ---------------------------------------------------------------------------------
 (1) _display_battery                                      5     3      2   61922
                                             36 COMRAM     5     3      2
                            ___awdiv
                            ___awmod
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) _wr8s                                                10     5      5    5884
                                             21 COMRAM    10     5      5
                   _SPI_Exchange8bit
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  7     3      4   14356
                                             29 COMRAM     7     3      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                     _cmd_incrementn
                               _wr32
 ---------------------------------------------------------------------------------
 (2) _cmd_incrementn                                       3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1516
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             17 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           2     2      0   41613
                                             27 COMRAM     2     2      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  7     3      4    1478
                                             16 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _wr32                                                11     4      7     784
                                             16 COMRAM    11     4      7
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 8     3      5   39044
                                             16 COMRAM     8     3      5
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     4      3     263
                                             16 COMRAM     7     4      3
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      44
                                             16 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             34 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                             15 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                             15 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              1 COMRAM    14    14      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                            _refresh *
 ---------------------------------------------------------------------------------
 (8) _refresh                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
                          _LED_blink *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LED_blink                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR0_StopTimer
   _TMR1_Reload
   _TMR1_SetInterruptHandler
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _display
     _display_battery
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_end
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _wr16
         _SPI_Exchange8bit
     _display_fuel
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_gear
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_labels
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_message
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_oilPress
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_oilTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_rpm
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
       _wr8s
         _SPI_Exchange8bit
         _strlen
     _display_speed
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_start
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
     _display_tp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
     _display_waterTemp
       _cmd
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _cmd_incrementn (ARG)
         _wr32 (ARG)
           _SPI_Exchange8bit
       _cmd_incrementn
       _wr16
         _SPI_Exchange8bit
   _display_battery
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_end
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
   _display_fuel
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_gear
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_labels
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_laptime
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_message
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_oilPress
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_oilTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_rpm
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___wmul
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_speed
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_start
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
   _display_tp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _display_waterTemp
     _cmd
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _cmd_incrementn (ARG)
       _wr32 (ARG)
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
   _wait2secs

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _LED_blink *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _refresh *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      52       5       51.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      4E       1       83.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0       6        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jan 26 21:51:38 2018

                                   _SPI_Initialize 6400                                        _SSPSTATbits 000FC7  
                                     ?_display_end 0001                                       ?_display_rpm 0025  
                                     ___awdiv@sign 0015                           __size_of_ECAN_Initialize 00E6  
                              ___wmul@multiplicand 0012                                        __CFG_BORV$3 000000  
                                  _timer0ReloadVal 0042                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                             __end_of_display_labels 422A  
                                    ?_display_gear 0025                                                l175 63F8  
                                              l456 52EE                                      ?_display_fuel 0025  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                              u730 5F7C                                                u735 5F72  
                                              u915 55EC                                                u931 11BA  
                                              u925 5E5A                                    _timer1ReloadVal 0048  
                                              _cmd 620C                                                _dli 004C  
                                              _wr8 627C                                       ___awmod@sign 001D  
                                              tosl 000FFD                                                wreg 000FE8  
                          __end_of_display_battery 4F46                         ??_convertReg2StandardCANid 0014  
                              __size_of_FT800_Init 029A                                        main@engTemp 006F  
                                             ?_cmd 001E                                               l4031 4972  
                                             l4033 4A14                                               l4025 47B4  
                                             l4041 4C22                                               l4035 4A8E  
                                             l4027 482E                                               l4051 11BC  
                                             l3501 5EC0                                               l3421 60EA  
                                             l4037 4B58                                               l4029 48A8  
                                             l4053 1342                                               l3511 5EE2  
                                             l3507 5ED6                                               l3523 5F08  
                                             l3419 60E6                                               l5211 4460  
                                             l3509 5EDE                                               l3461 5D76  
                                             l3527 5F16                                               l3519 5EFE  
                                             l3551 5FD2                                               l3543 5FB8  
                                             l3455 5D44                                               l5215 4494  
                                             l5207 443C                                               l4513 525A  
                                             l3617 57AC                                               l3465 5D7E  
                                             l4089 1506                                               l5241 466A  
                                             l3563 5FFE                                               l3555 5FE6  
                                             l3547 5FC6                                               l3539 5FAC  
                                             l3459 5D6C                                               l5227 453C  
                                             l4541 5338                                               l4509 5228  
                                             l3637 5880                                               l3549 5FCE  
                                             l3495 5EB0                                               l3559 5FF0  
                                             l5271 475C                                               l4545 536C  
                                             l5193 4372                                               l4483 51C0  
                                             l4565 5400                                               l4567 5404  
                                             l5279 476A                                               ?_wr8 0011  
                                             STR_1 0F35                                               STR_2 0F23  
                                             STR_3 0F45                                               STR_4 0F5D  
                                             STR_5 0F45                                               STR_6 0F40  
                                             STR_7 0F29                                               STR_8 0F54  
                                             STR_9 0F2F                                               u1311 4554  
                                             u1305 44B8                                               u1241 4234  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               u1367 639E  
                                             u1377 4F52                                               u1387 4F6C  
                          __end_of_display_laptime 33A8                                display_oilTemp@temp 0025  
                          __end_of_display_oilTemp 5B3A                                               _WPUB 000F5B  
                                   ?_display_speed 0025                                        main@oilTemp 0071  
                          __end_of_display_message 5568                                     ?_display_start 0001  
                                      main@message 0062                                        display@gear 003A  
                                      display@oilP 0032                                               _rd16 6008  
                                             _wr32 5F20                                               _wr16 6196  
                                             _main 422A                                               _wr8s 5D02  
                                  _TMR0_StartTimer 643C                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               fsr2h 000FDA  
                                             fsr0l 000FE9                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 004F                                               prodh 000FF4  
                                             prodl 000FF3                                               start 0096  
                                    __CFG_IESO$OFF 000000                                      __CFG_FOSC$HS2 000000  
                           __end_of_SPI_Initialize 640E                         ??_TMR1_SetInterruptHandler 0012  
                                    __CFG_MCLRE$ON 000000                                 __size_of_LED_blink 0032  
                                     ___param_bank 000000                                              ??_cmd 0022  
                                            ??_wr8 0015                            __end_of_TMR0_Initialize 627C  
                   ??_TMR0_DefaultInterruptHandler 0001                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 63F0                                              ?_rd16 0011  
                                   ??_display_gear 0027                                     ??_display_fuel 0027  
                                            ?_wr32 0011                                              ?_wr16 0011  
                                            ?_main 0001                                    __end_of___awdiv 5F20  
                                            ?_wr8s 0016                                              STR_10 0F5D  
                                            STR_11 0F29                                              STR_20 0F87  
                                            STR_12 0F1D                                              STR_21 0F87  
                                            STR_13 0F59                                              STR_30 0F85  
                                            STR_22 0F77                                              STR_14 0F72  
                                            STR_23 0F70                                              STR_15 0F75  
                                            STR_31 0F69                                              STR_24 0F79  
                                            STR_32 0F6C                                              STR_16 0F4A  
                                            STR_25 0F7B                                              STR_33 0F6F  
                                            STR_17 0F4F                                              STR_34 0F77  
                                            STR_26 0F7D                                              STR_18 0F65  
                                  ?_display_labels 0001                                              STR_35 0F89  
                                            STR_19 0F87                                              STR_27 0F7F  
                                            STR_28 0F81                                              STR_36 0F61  
                                  __end_of___awmod 6008                                              STR_29 0F83  
                                            STR_37 0F14                                              STR_38 0F01  
                                            STR_39 0F3B                                    _TMR1_StartTimer 6438  
                                     main@lap_time 0077                                              _T0CON 000FD5  
                                  ___awdiv@divisor 0012                                              _T1CON 000FCD  
                                            i2l511 004E                                              i2l515 005A  
                                  ___awdiv@counter 0014                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR1L 000FCE                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                         __end_of_display_oilPress 5C1E                  __size_of_TMR0_SetInterruptHandler 000A  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                          ?_TMR0_SetInterruptHandler 0010  
                                    __CFG_WRT3$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                            CAN_receive@tempCanMsg 0023                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                       display@fuelP 0034  
                                 __end_of_TMR0_ISR 6334                                   __end_of_TMR1_ISR 630C  
                                    __CFG_WRTB$OFF 000000                                    __end_of_display 5E16  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                     display@speed 0038                                     __CFG_EBTRB$OFF 000000  
                          __size_of_cmd_incrementn 001C                                    __end_of_refresh 6434  
                          __end_of_TMR1_Initialize 6196                                              pclath 000FFA  
                                            wr8s@i 001F                                              wr8s@l 001E  
                                            wr8s@s 0019                                              tablat 000FF5  
                                            plusw1 000FE3                                              plusw2 000FDB  
                                     display_tp@tp 0025                convertReg2ExtendedCANid@ConvertedID 001F  
                                            status 000FD8                                    ?_SPI_Initialize 0001  
                                  __initialization 6058                               __size_of_CAN_receive 022A  
                                     __end_of_rd16 6058                                       __end_of_wr16 61D2  
                                     __end_of_wr32 5F98                                       __end_of_main 4776  
                                     __end_of_wr8s 5D90                                      main@battVolts 0073  
                      ?_INTERRUPT_InterruptManager 0001                                             ??_rd16 0014  
                                           ??_wr32 0018                                             ??_wr16 0016  
                                           ??_main 0060                                             ??_wr8s 001B  
                                    __activetblptr 000003                                     __CFG_PLLCFG$ON 000000  
                                   __CFG_RETEN$OFF 000000                                  ??_ECAN_Initialize 0010  
                                   _refresh_screen 00A3                           __end_of_SPI_Exchange8bit 6400  
                                __end_of_LED_blink 62E4                                   ?_display_battery 0025  
                          __end_of_TMR0_StartTimer 6440                                             _CANCON 000F6F  
                                  ??_display_speed 0027                                    ??_display_start 0025  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                 ___awdiv@dividend 0010                                             _T1GCON 000FAA  
                                  __CFG_BBSIZ$BB2K 000000                                   ?_display_laptime 0025  
                                   __CFG_WDTEN$OFF 000000                                   ?_display_oilTemp 0025  
                                           _OSCCON 000FD3                                   ?_display_message 0025  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                           _SSPADD 000FC8                                             _SSPBUF 000FC9  
                                   __CFG_XINST$OFF 000000                                       ??_FT800_Init 001C  
             __end_of_TMR1_DefaultInterruptHandler 6446              __size_of_TMR1_DefaultInterruptHandler 0002  
                     _TMR1_DefaultInterruptHandler 6444                            __end_of_TMR1_StartTimer 643C  
                                     ?_TMR1_Reload 0001                                             ___wmul 6334  
                                        ??___awdiv 0014                                     __CFG_STVREN$ON 000000  
                                        ??___awmod 001C                                   ?_TMR0_Initialize 0001  
                                           clear_0 607E                                             clear_1 608A  
                                 ___awdiv@quotient 0016                                    ___awmod@divisor 001A  
                                  ___awmod@counter 001C                               __size_of_display_end 0042  
                                           main@tp 0069                                             _strlen 60DC  
                                        ??_display 0042                               __size_of_display_rpm 14E4  
                            display_labels@y_start 0028                                          ??_refresh 0001  
                                     __mediumconst 0000                   __end_of_convertReg2StandardCANid 5E9C  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8           TMR0_SetInterruptHandler@InterruptHandler 0010  
         TMR1_SetInterruptHandler@InterruptHandler 0010                                 __end_of_FT800_Init 51E0  
                    __size_of_INTERRUPT_Initialize 0004                                   ?_TMR1_Initialize 0001  
                                _SYSTEM_Initialize 635A                                      ?_host_command 0001  
                                       __accesstop 0060                            __end_of__initialization 6090  
                             __end_of_display_gear 4C60                               __end_of_display_fuel 5D02  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid 5568  
                           CAN_receive@returnValue 0025                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                       __pidataBANK0 63C8  
                              ??_SYSTEM_Initialize 0014                                          ?_TMR0_ISR 0001  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                                       _canMessage 00A4                                    cmd_incrementn@n 0012  
                                   _cmd_incrementn 6378              convertReg2StandardCANid@tempRXBn_SIDH 0016  
            convertReg2StandardCANid@tempRXBn_SIDL 0010                              display_waterTemp@temp 0025  
                                 ?_TMR0_StartTimer 0001                          __end_of_SYSTEM_Initialize 6378  
                                       __pbssBANK0 00A3                                     ??_host_command 0011  
                                       _cmd_offset 004A                   __end_of_TMR0_SetInterruptHandler 642C  
                          __size_of_TMR0_StopTimer 0004                                            ?___wmul 0010  
                                 ??_display_labels 0025                                   ?_TMR1_StartTimer 0001  
                                       ??_TMR0_ISR 0002                                         ??_TMR1_ISR 0001  
                               __size_of_wait2secs 001A                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                         display_laptime@current_dec 0027  
                       display_laptime@current_int 0025                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                          ?_strlen 0010                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                             __end_of_cmd_incrementn 6394  
                                ?_display_oilPress 0025                                            _OSCCON2 000FD2  
                                          i2u23_40 62BC                                            i2u25_40 62D4  
                                          i2u24_48 62BE                                            _RXB0DLC 000F65  
                                          i2u26_48 62D6                                            _RXB1DLC 000F35  
                                          i2u35_48 6322                                            _OSCTUNE 000F9B  
                                          i2u96_48 62FA                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                             display_battery@volts 0025                                 ??_display_oilPress 0027  
                                          _SSPCON1 000FC6                                         _display_tp 588E  
                                          _SSPSTAT 000FC7                                         cmd@command 001E  
                                 ??_SPI_Initialize 0010                                    __CFG_PWRTEN$OFF 000000  
                                   display@engTemp 003C                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 0010                                     display@oilTemp 003E  
                                          ___awdiv 5E9C                                            ___awmod 5F98  
                                  __size_of___wmul 0026                                    _ECAN_Initialize 57A8  
                                     __psmallconst 0F00                               __size_of_TMR1_Reload 000A  
                                          __pcinit 6058                                            __ramtop 0F00  
                                          __ptext0 422A                                            __ptext1 6394  
                                          __ptext2 2470                                            __ptext3 5D90  
                                          __ptext4 56B0                                            __ptext5 588E  
                                          __ptext6 611C                                            __ptext7 5972  
                                          __ptext8 0F8C                                            __ptext9 6334  
                                          _display 5D90                                          _T0CONbits 000FD5  
                   ??_TMR1_DefaultInterruptHandler 0001                                    __size_of_strlen 0040  
                                        _T1CONbits 000FCD                              _OSCILLATOR_Initialize 63DE  
                                     __size_of_cmd 0038                                       __size_of_wr8 0036  
                                 ___awmod@dividend 0018                  __size_of_TMR1_SetInterruptHandler 000A  
                                          _refresh 642C                           ??_PIN_MANAGER_Initialize 0010  
                                  ?_cmd_incrementn 0001                          ?_TMR1_SetInterruptHandler 0010  
                                __CFG_MSSPMSK$MSK7 000000                                  ?_SPI_Exchange8bit 0001  
                       __size_of_SYSTEM_Initialize 001E                              __size_of_display_gear 04EA  
                                          main@rpm 0075                              __size_of_display_fuel 00E4  
                             end_of_initialization 6090                                            wr8@addr 0011  
                               ??_SPI_Exchange8bit 0010                               SPI_Exchange8bit@data 0010  
                                __end_of_wait2secs 63AE                                          _LED_blink 62B2  
                                    ??_CAN_receive 0025                            display_rpm@second_digit 002C  
                                          postdec1 000FE5                                            postinc0 000FEE  
                                          postinc2 000FDE                                         main@F15312 008D  
                                   display_rpm@val 002A                                     display_rpm@rpm 0025  
                                          strlen@s 0010                               __end_of_host_command 63C8  
                         _TMR0_SetInterruptHandler 6422                                          _PORTAbits 000F80  
                                        _PORTDbits 000F83                                       _display_gear 4776  
                               display_laptime@lap 0031                                       _display_fuel 5C1E  
                       ??_convertReg2ExtendedCANid 0014                                        ?_display_tp 0025  
                            __end_of_display_speed 5A56                                         ?_LED_blink 0001  
                            __end_of_display_start 615A                           __size_of_display_battery 02E6  
                                       display@rpm 0030                            __end_of_ECAN_Initialize 588E  
                         __size_of_display_laptime 0F38                                     _TMR0_StopTimer 6434  
                         __size_of_display_oilTemp 00E4                           __size_of_display_message 015E  
                     __end_of_INTERRUPT_Initialize 6444                                __end_of_CAN_receive 540A  
                                    ??_display_end 0025                                      ??_display_rpm 0027  
                                   __end_of___wmul 635A                                  __size_of_TMR0_ISR 0028  
                                __size_of_TMR1_ISR 0028                             ?_OSCILLATOR_Initialize 0001  
                                   __end_of_strlen 611C                                start_initialization 6058  
                         __size_of_TMR0_Initialize 0038                    __size_of_PIN_MANAGER_Initialize 003A  
                                      __end_of_cmd 6244                                        __end_of_wr8 62B2  
                                 display@battVolts 0040                convertReg2StandardCANid@returnValue 0017  
                           __end_of_TMR0_StopTimer 6438                           __size_of_TMR1_Initialize 003C  
                                         ??___wmul 0014                                __size_of_display_tp 00E4  
                                      __pdataBANK0 008D                                           ??_strlen 0012  
                           display_rpm@first_digit 002E                                  main@timer_started 0066  
                              __end_of_display_end 60DC                                __end_of_display_rpm 2470  
                                      __pbssCOMRAM 0042                                      __pcstackBANK0 0060  
                               display_speed@speed 0025                             display_message@message 0025  
                                      ??_LED_blink 0001                              _TMR0_InterruptHandler 0044  
                         __size_of_TMR0_StartTimer 0004                                        _CAN_receive 51E0  
                                 ?_ECAN_Initialize 0001                                    ?_TMR0_StopTimer 0001  
                        __size_of_display_oilPress 00E4                             _PIN_MANAGER_Initialize 61D2  
                            __size_of_host_command 001A                                          __pintcode 0008  
                 __end_of_TMR1_SetInterruptHandler 6422                                           ?___awdiv 0010  
                                         ?___awmod 0018                                  ??_display_battery 0027  
                          display_laptime@best_dec 002B                            display_laptime@best_lap 0033  
                          display_laptime@best_int 0029                                   ??_cmd_incrementn 0010  
                     ??_INTERRUPT_InterruptManager 0002                                  ??_display_laptime 0035  
                                ??_display_oilTemp 0027                                  ??_display_message 0027  
                                         ?_display 0030                                        __smallconst 0F00  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                          display_laptime@last_dec 002F                            display_laptime@last_int 002D  
                                         ?_refresh 0001                   __end_of_convertReg2ExtendedCANid 56B0  
                             _INTERRUPT_Initialize 6440                                  ??_TMR0_Initialize 0012  
                                     _host_command 63AE                                     ___wmul@product 0014  
                                         _LATAbits 000F89                                           _LATBbits 000F8A  
                                         _LATCbits 000F8B                                           _LATDbits 000F8C  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
                                        _wait2secs 6394                                  display_fuel@level 0025  
              __size_of_INTERRUPT_InterruptManager 008E                         ??_TMR0_SetInterruptHandler 0012  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                        __size_of_SPI_Exchange8bit 0010                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                    ??_TMR1_Reload 0010                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _TMR0_ISR 630C  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 62E4                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                          wr32@value 0014  
                                        wr16@value 0014                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                        _display_end 609A  
                                      _display_rpm 0F8C                                  ??_TMR1_Initialize 0012  
                                ___wmul@multiplier 0010                                   __CFG_SOSCSEL$DIG 000000  
                                _display_waterTemp 56B0                                          main@fuelP 0064  
                                        display@tp 0036                                 ?_display_waterTemp 0025  
                                        main@speed 006B                            __size_of_display_labels 0E82  
                                     ??_display_tp 0027                                          copy_data0 606C  
                            ?_INTERRUPT_Initialize 0001                                ??_display_waterTemp 0027  
                         _convertReg2StandardCANid 5E16              convertReg2ExtendedCANid@tempRXBn_EIDH 0018  
            convertReg2ExtendedCANid@tempRXBn_EIDL 0010              convertReg2ExtendedCANid@tempRXBn_SIDH 0011  
                                       ?_wait2secs 0001              convertReg2ExtendedCANid@tempRXBn_SIDL 0012  
                                         __Hrparam 0000                                         _FT800_Init 4F46  
                                         __Lrparam 0000                                 __CFG_BOREN$SBORDIS 000000  
                          __size_of_SPI_Initialize 000E                            ??_OSCILLATOR_Initialize 0010  
                                ??_TMR0_StartTimer 0010                                   __size_of___awdiv 0084  
                                       _CIOCONbits 000F70                                   __size_of___awmod 0070  
                        __end_of_display_waterTemp 57A8                                 __end_of_display_tp 5972  
                                         rd16@addr 0011                           _TMR1_SetInterruptHandler 6418  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 001E                                           rd16@temp 0017  
                              __end_of_TMR1_Reload 6418                              _TMR1_InterruptHandler 0046  
                                 __size_of_display 0086  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 001D  
                                 display_gear@gear 0025                                   __size_of_refresh 0008  
                                         __ptext10 5A56                                           __ptext11 5B3A  
                                         __ptext20 620C                                           __ptext12 540A  
                                         __ptext21 6378                                           __ptext13 33A8  
                                       _T1GCONbits 000FAA                                           __ptext30 6244  
                                         __ptext22 5F98                                           __ptext14 4776  
                                         __ptext31 643C                                           __ptext23 5E9C  
                                         __ptext15 5C1E                                           __ptext40 5F20  
                                         __ptext32 6422                                           __ptext24 640E  
                                         __ptext16 609A                                           __ptext41 6196  
                                         __ptext33 6400                                           __ptext25 6434  
                                         __ptext17 4C60                                           __ptext50 6444  
                                         __ptext42 6008                                           __ptext34 61D2  
                                         __ptext26 635A                                           __ptext18 5D02  
                                         __ptext51 642C                                           __ptext43 63AE  
                                         __ptext35 63DE                                           __ptext27 615A  
                                         __ptext19 60DC                                           __ptext52 630C  
                                         __ptext44 63F0                                           __ptext36 6440  
                                         __ptext28 6438                                           __ptext53 62B2  
                                         __ptext45 51E0                                           __ptext37 57A8  
                                         __ptext29 6418                                           __ptext54 6446  
                                         __ptext46 5E16                                           __ptext38 4F46  
                                         __ptext55 0000                                           __ptext47 5568  
                                         __ptext39 627C                                           __ptext49 62E4  
                                ??_TMR1_StartTimer 0010                convertReg2StandardCANid@ConvertedID 001B  
                                    __size_of_rd16 0050                                      __size_of_wr16 003C  
                                    __size_of_wr32 0078                                      __size_of_main 054C  
                                    __size_of_wr8s 008E               __end_of_TMR0_DefaultInterruptHandler 6448  
            __size_of_TMR0_DefaultInterruptHandler 0002                       _TMR0_DefaultInterruptHandler 6446  
              convertReg2ExtendedCANid@returnValue 0019                                   _display_oilPress 5B3A  
                         display_oilPress@pressure 0025                  __size_of_convertReg2ExtendedCANid 0148  
                                         wr32@addr 0011                                           wr16@addr 0011  
                        ?_convertReg2ExtendedCANid 0010                                           _up_blink 004E  
                                         int$flags 004F                 __end_of_INTERRUPT_InterruptManager 0096  
                       _INTERRUPT_InterruptManager 0008                                           main@gear 006D  
                                         main@oilP 0067                                __CFG_INTOSCSEL$HIGH 000000  
                           __size_of_display_speed 00E4                             __size_of_display_start 003E  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                                           wr8@value 0014  
                           ??_INTERRUPT_Initialize 0010                                           wr8s@addr 0016  
                                         intlevel2 0000                                   ??_TMR0_StopTimer 0010  
                                  _display_battery 4C60                            ?_PIN_MANAGER_Initialize 0001  
                                      _TXB0CONbits 000F20                                       ?_CAN_receive 0023  
                                      _TXB1CONbits 000F10                                        ??_wait2secs 0010  
                                  _display_laptime 2470                                        _TXB2CONbits 000F00  
                                  _display_oilTemp 5A56                                    _display_message 540A  
                                      ?_FT800_Init 0001                      ?_TMR0_DefaultInterruptHandler 0001  
                                 _SPI_Exchange8bit 63F0                                        _TMR1_Reload 640E  
                               __CFG_WDTPS$1048576 000000                                host_command@command 0011  
                       __size_of_display_waterTemp 00F8                                    _TMR0_Initialize 6244  
                                   _display_labels 33A8                                           strlen@cp 0014  
                                      _SSPCON1bits 000FC6                     __end_of_PIN_MANAGER_Initialize 620C  
                                    _display_speed 5972                                __CFG_BORPWR$ZPBORMV 000000  
                                    _display_start 611C                                    _TMR1_Initialize 615A  
